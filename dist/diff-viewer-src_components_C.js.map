{"version":3,"file":"diff-viewer-src_components_C.js","mappings":"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","sources":["webpack://diff-files/./src/components/ChunkManager.js","webpack://diff-files/./src/components/DiffNavigator.js","webpack://diff-files/./src/components/DiffViewer.js","webpack://diff-files/./src/components/MergeHandler.js","webpack://diff-files/./src/components/SyntaxHighlighter.js","webpack://diff-files/./src/components/ThemeManager.js","webpack://diff-files/./src/components/ThemeSelector.js","webpack://diff-files/./src/components/ThemeToggle.js"],"sourcesContent":["// ChunkManager.js - Manages diff chunks and coordinates chunk components\nimport { Debug } from '../utils/Debug';\nimport { ChunkUtils } from '../utils/ChunkUtils';\nimport Selectors from '../constants/Selectors';\n\nimport { ChunkRenderer } from './chunks/ChunkRenderer';\nimport { ChunkSelectionHandler } from './chunks/ChunkSelectionHandler';\nimport { MergeContentGenerator } from './chunks/MergeContentGenerator';\n\n/**\n * Manages diff chunks and coordinates chunk components\n */\nexport class ChunkManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.chunks = [];\n        this.oldContent = [];\n        this.newContent = [];\n        this.chunkElements = [];\n\n        // Create sub-components\n        this.renderer = new ChunkRenderer(this);\n        this.selectionHandler = new ChunkSelectionHandler(this);\n        this.contentGenerator = new MergeContentGenerator(this);\n\n        // Define selection state constants\n        this.SELECTED_STATE = Selectors.DIFF.CHUNK_SELECTED.name();\n        this.UNSELECTED_STATE = Selectors.DIFF.CHUNK_UNSELECTED.name();\n\n        // Performance tracking\n        this._performanceMetrics = {\n            initTime: 0,\n            renderTime: 0,\n            chunkCount: 0\n        };\n\n        Debug.log('ChunkManager: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize chunks from diff data\n     * @param {Object} diffData - Diff data\n     */\n    initChunks(diffData) {\n        const startTime = performance.now();\n        Debug.log('ChunkManager: Initializing chunks from diff data', null, 2);\n\n        // Clear previous cache state\n        ChunkUtils.clearCache();\n\n        // Save chunks data\n        this.chunks = diffData.chunks || [];\n        this.oldContent = diffData.old || [];\n        this.newContent = diffData.new || [];\n\n        // Track chunk count for performance metrics\n        this._performanceMetrics.chunkCount = this.chunks.length;\n\n        // Mark chunks with type 'replace' as conflicts for navigation\n        this.chunks.forEach(chunk => {\n            chunk.conflict = true;\n        });\n\n        Debug.log(`ChunkManager: ${this.chunks.length} chunks initialized`, null, 3);\n\n        // Update navigation counter if available\n        if (this.diffViewer.diffNavigator) {\n            this.diffViewer.diffNavigator.updateCounter();\n        }\n\n        const endTime = performance.now();\n        this._performanceMetrics.initTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Initialization completed in ${this._performanceMetrics.initTime.toFixed(2)}ms`, null, 2);\n\n        // Validate chunk structure\n        this.validateChunkStructure();\n\n        return this.chunks;\n    }\n\n    /**\n     * Render chunks to container\n     */\n    renderChunks() {\n        const startTime = performance.now();\n\n        // Delegate to renderer component\n        this.renderer.renderChunks();\n\n        // Initialize the visual state manager\n        if (this.selectionHandler.visualStateManager.initialize) {\n            this.selectionHandler.visualStateManager.initialize();\n        }\n\n        // Setup chunk selection after rendering\n        this.setupChunkSelection();\n\n        // Initialize chunk elements for navigation\n        this.initChunkElements();\n\n        const endTime = performance.now();\n        this._performanceMetrics.renderTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Rendering completed in ${this._performanceMetrics.renderTime.toFixed(2)}ms`,\n            {\n                chunkCount: this._performanceMetrics.chunkCount,\n                msPerChunk: (this._performanceMetrics.renderTime / Math.max(1, this._performanceMetrics.chunkCount)).toFixed(2)\n            }, 2);\n\n        return true;\n    }\n\n    /**\n     * Setup chunk selection handlers\n     */\n    setupChunkSelection() {\n        // Delegate to selection handler\n        this.selectionHandler.setupChunkSelection();\n    }\n\n    /**\n     * Toggle selection state of a chunk\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - Selection state (this.SELECTED_STATE or this.UNSELECTED_STATE)\n     */\n    toggleChunkSelection(chunkId, side, state) {\n        this.selectionHandler.toggleChunkSelection(chunkId, side, state);\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    generateMergedContent() {\n        const selections = this.selectionHandler.getSelections();\n        return this.contentGenerator.generateMergedContent(selections);\n    }\n\n    /**\n     * Generate content from lines array\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated file content\n     */\n    generateFileFromLines(lines) {\n        return this.contentGenerator.generateFileFromLines(lines);\n    }\n\n    /**\n     * Initialize chunk elements array for navigation\n     */\n    initChunkElements() {\n        // Create array to hold chunk elements\n        this.chunkElements = [];\n\n        // Debug total available chunks\n        Debug.log(`ChunkManager: Looking for ${this.chunks.length} chunks in DOM`, null, 2);\n\n        this.chunks.forEach((chunk, index) => {\n            // Find elements for this chunk ID (using optimized cache query)\n            const elements = ChunkUtils.getChunkElements(chunk.id);\n            Debug.log(`ChunkManager: Chunk ID ${chunk.id}: Found ${elements.length} elements`, null, 3);\n\n            if (elements.length > 0) {\n                // Sort by line number to get the first element\n                const sortedElements = ChunkUtils.sortElementsByLineNumber(elements);\n\n                // Store the first element for this chunk\n                this.chunkElements[index] = sortedElements[0];\n            } else {\n                Debug.warn(`ChunkManager: No DOM elements found for chunk ID: ${chunk.id}`, null, 2);\n            }\n        });\n\n        const initializedCount = this.chunkElements.filter(Boolean).length;\n        Debug.log(`ChunkManager: Initialized ${initializedCount}/${this.chunks.length} chunk elements for navigation`, null, 2);\n\n        // Log warning if no elements were found\n        if (initializedCount === 0 && this.chunks.length > 0) {\n            Debug.error('ChunkManager: No chunk elements found in DOM. Navigation will not work properly.', null, 1);\n\n            // Check if elements with the expected selector exist at all\n            const anyChunkElements = document.querySelectorAll(Selectors.DIFF.CHUNK);\n            Debug.warn(`ChunkManager: ${anyChunkElements.length} elements match the chunk selector ${Selectors.DIFF.CHUNK}`, null, 2);\n\n            // Check if any elements have data-chunk-id attribute\n            const anyChunkIdElements = document.querySelectorAll('[data-chunk-id]');\n            Debug.warn(`ChunkManager: ${anyChunkIdElements.length} elements have data-chunk-id attribute`, null, 2);\n        }\n    }\n\n    /**\n     * Validate chunk data structure for proper merge operations\n     */\n    validateChunkStructure() {\n        let validChunks = 0;\n        let invalidChunks = 0;\n\n        this.chunks.forEach(chunk => {\n            // Check if chunk has proper old/new content arrays\n            if (!chunk.old && !chunk.new) {\n                Debug.warn(`ChunkManager: Chunk ${chunk.id} missing content arrays`, chunk, 2);\n                invalidChunks++;\n            } else if (chunk.type === 'replace' && (!chunk.old || !chunk.new)) {\n                Debug.warn(`ChunkManager: Replace chunk ${chunk.id} missing old or new content`, chunk, 2);\n                invalidChunks++;\n            } else {\n                validChunks++;\n            }\n        });\n\n        Debug.log(`ChunkManager: Chunk validation complete`, {\n            valid: validChunks,\n            invalid: invalidChunks,\n            total: this.chunks.length\n        }, 2);\n\n        return invalidChunks === 0;\n    }\n\n    /**\n     * Get performance metrics for this component\n     * @returns {Object} Performance metrics\n     */\n    getPerformanceMetrics() {\n        const metrics = {\n            ...this._performanceMetrics\n        };\n\n        // Add metrics from subcomponents\n        if (this.selectionHandler.visualStateManager.getMetrics) {\n            metrics.visualStateManager = this.selectionHandler.visualStateManager.getMetrics();\n        }\n\n        // Add cache stats\n        metrics.cacheStats = ChunkUtils.getCacheStats();\n\n        return metrics;\n    }\n\n    /**\n     * Get selections\n     * @returns {Object} Current selections\n     */\n    get selections() {\n        return this.selectionHandler.getSelections();\n    }\n\n    /**\n     * Handle selection change callback\n     * This maintains compatibility with external code expecting this function\n     */\n    onSelectionChange() {\n        // This can be overridden by DiffViewer\n    }\n}\n","import { Debug } from '../utils/Debug';\n\nimport { NavigationCounter } from './navigator/NavigationCounter';\nimport { NavigationUIBuilder } from './navigator/NavigationUIBuilder';\nimport { ConflictNavigator } from './navigator/ConflictNavigator';\n\n/**\n * DiffNavigator handles navigation between conflicting chunks\n */\nexport class DiffNavigator {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer component\n     * @param {boolean} initializeImmediately - Whether to initialize navigation immediately\n     */\n    constructor(diffViewer, initializeImmediately = true) {\n        this.diffViewer = diffViewer;\n        this.currentChunkIndex = -1;\n\n        // Validate that the diffViewer has a valid configuration\n        if (!this.diffViewer || !this.diffViewer.chunkManager) {\n            Debug.error('DiffNavigator: Failed to initialize - diffViewer or chunkManager is missing', null, 1);\n            return;\n        }\n\n        // Create subcomponents\n        this.navigationCounter = new NavigationCounter(this);\n        this.uiBuilder = new NavigationUIBuilder(this);\n        this.conflictNavigator = new ConflictNavigator(this);\n\n        // Initialize navigation only if requested\n        if (initializeImmediately) {\n            this.initNavigation();\n        }\n\n        Debug.log('DiffNavigator: Component created', null, 2);\n    }\n\n    /**\n     * Initialize navigation\n     */\n    initNavigation() {\n        Debug.log('DiffNavigator: Initializing', null, 2);\n\n        // Validate that we have chunks before proceeding\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: No diff chunks found in configuration', {\n                configChunks: this.diffViewer.chunkManager.chunks,\n                diffConfig: this.diffViewer.diffConfig\n            }, 1);\n\n            // Add navigation UI anyway for better UX, but disable buttons\n            this.addNavigationButtons(true);\n            return;\n        }\n\n        // Add navigation UI\n        this.addNavigationButtons();\n\n        // Add keyboard shortcuts\n        this.setupKeyboardShortcuts();\n\n        // Navigate to first conflict if any\n        this.navigateToFirstConflict();\n\n        Debug.log('DiffNavigator: Initialized with chunk navigation',\n            { chunks: this.diffViewer.chunkManager.chunks?.length || 0 }, 2);\n    }\n\n    /**\n     * Add navigation buttons to the interface\n     * @param {boolean} disableButtons - Whether to disable navigation buttons\n     */\n    addNavigationButtons(disableButtons = false) {\n        // Create UI elements\n        const ui = this.uiBuilder.createNavigationUI();\n\n        if (!ui) return;\n\n        // Save references to counter and buttons\n        this.navigationCounter.setCounterElement(ui.counter);\n        this.navigationCounter.setButtons(ui.prevButton, ui.nextButton);\n\n        // Disable buttons if requested\n        if (disableButtons) {\n            ui.prevButton.disabled = true;\n            ui.nextButton.disabled = true;\n            ui.counter.textContent = 'No diff data';\n        } else {\n            // Update counter with current count\n            this.updateCounter();\n        }\n    }\n\n    /**\n     * Set up keyboard shortcuts for navigation\n     */\n    setupKeyboardShortcuts() {\n        document.addEventListener('keydown', (event) => {\n            // Only handle if not in input or textarea\n            if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\n                return;\n            }\n\n            // Check for navigation keys\n            switch (event.key) {\n                case 'ArrowDown':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToNextConflict();\n                    }\n                    break;\n\n                case 'ArrowUp':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToPrevConflict();\n                    }\n                    break;\n            }\n        });\n    }\n\n    /**\n     * Update navigation counter\n     * @returns {Array} Active conflicts\n     */\n    updateCounter() {\n        return this.navigationCounter.updateCounter();\n    }\n\n    /**\n     * Navigate to the first conflict\n     */\n    navigateToFirstConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToFirstConflict();\n    }\n\n    /**\n     * Navigate to the next conflict\n     */\n    navigateToNextConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToNextConflict();\n    }\n\n    /**\n     * Navigate to the previous conflict\n     */\n    navigateToPrevConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToPrevConflict();\n    }\n\n    /**\n     * Navigate to a specific chunk\n     * @param {number} index - Chunk index\n     * @returns {boolean} Success status\n     */\n    navigateToChunk(index) {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToChunk(index);\n    }\n\n    /**\n     * Destroy component and clean up event handlers\n     */\n    destroy() {\n        this.uiBuilder.destroy();\n        Debug.log('DiffNavigator: Destroyed', null, 2);\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { ConfigUtils } from '../utils/ConfigUtils';\nimport { EndpointDiscovery } from '../utils/EndpointDiscovery';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport Selectors from '../constants/Selectors';\n\nimport { ThemeManager } from './ThemeManager';\nimport { ThemeSelector } from './ThemeSelector';\nimport { SyntaxHighlighter } from './SyntaxHighlighter';\nimport { ChunkManager } from './ChunkManager';\nimport { ThemeToggle } from './ThemeToggle';\nimport { MergeHandler } from './MergeHandler';\nimport { DiffNavigator } from './DiffNavigator';\nimport { ScrollSynchronizer } from './viewer/ScrollSynchronizer';\nimport { IconMarkerManager } from './viewer/IconMarkerManager';\nimport { LayoutManager } from './viewer/LayoutManager';\nimport { ModalManager } from './modal/ModalManager';\n\n/**\n * Main diff viewer component\n */\nexport class DiffViewer {\n    /**\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        // Default configuration matching PHP javascript section structure\n        const defaultOptions = {\n            // Basic configuration\n            lang: 'en',\n            debug: false,\n            logLevel: 2,\n\n            // Theme settings\n            theme: {\n                defaultFamily: 'atom-one',\n                defaultMode: 'dark',\n                showSelector: true\n            },\n\n            // API endpoint\n            apiEndpoint: null\n\n            // We've removed default translations from here as they'll be handled by TranslationManager\n        };\n\n        // Merge options in priority order\n        // Configuration comes from: defaults < window.diffConfig < constructor options\n        this.config = ConfigUtils.mergeConfigurations(defaultOptions, window.diffConfig || {}, options);\n\n        // Create separate internal runtime properties\n        this.runtimeProps = {\n            diffData: options.diffData || window.diffConfig?.diffData || null,\n            serverSaveEnabled: options.serverSaveEnabled || window.diffConfig?.serverSaveEnabled || false,\n            // SECURITY: Remove server paths and use only secure fileRefIds\n            fileRefId: options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            // Keep safe filename properties (not paths)\n            newFileName: options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: options.filepath || window.diffConfig?.filepath || null,\n            demoEnabled: options.demoEnabled || window.diffConfig?.demoEnabled || false\n        };\n\n        // Store the main loader ID if provided from window.enableDiffViewer\n        this.mainLoaderId = options.mainLoaderId || null;\n\n        // Set debug values early\n        Debug.initialize(this.config.debug, '[DiffViewer]', this.config.logLevel || 2);\n\n        // Initialize TranslationManager with the translations from the config\n        const translationManager = TranslationManager.getInstance();\n        if (!translationManager.isInitialized() && this.config.translations) {\n            Debug.log('DiffViewer: Initializing TranslationManager', {\n                lang: this.config.lang || 'en',\n                translations: this.config.translations\n            }, 2);\n            translationManager.initialize(this.config.lang || 'en', this.config.translations);\n        } else {\n            Debug.log('DiffViewer: TranslationManager already initialized', null, 2);\n        }\n\n        // Get container element - now always using Selectors.DIFF.VIEWER\n        this.container = document.querySelector(Selectors.DIFF.VIEWER);\n\n        if (!this.container) {\n            Debug.error('DiffViewer: Container element not found', null, 2);\n            throw new Error('Container element not found');\n        }\n\n        // Verify diff data\n        if (!this.runtimeProps.diffData) {\n            Debug.error('DiffViewer: No diff data provided', null, 2);\n            throw new Error('No diff data provided');\n        }\n\n        Debug.log('DiffViewer: Initializing component', null, 2);\n\n        // Initialize services (singletons)\n        this._initializeServices();\n\n        // Create components\n        this._createComponents();\n\n        Debug.log('DiffViewer: Component created', null, 2);\n    }\n\n    /**\n     * Initialize service singletons\n     * @private\n     */\n    _initializeServices() {\n        // Get service singletons\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.themeSelector = ThemeSelector.getInstance(this);\n        this.modalManager = ModalManager.getInstance({\n            debug: this.config.debug,\n            translations: this.config.translations\n        });\n\n        // Initialize ThemeManager with config and ResourceLoader\n        this.themeManager.initialize({\n            theme: this.config.theme\n        }, this.resourceLoader);\n    }\n\n    /**\n     * Create component instances\n     * @private\n     */\n    _createComponents() {\n        // Create core components\n        this.syntaxHighlighter = new SyntaxHighlighter(this);\n        this.chunkManager = new ChunkManager(this);\n\n        // Create UI components - pass browserUIManager to ThemeToggle if available\n        this.themeToggle = new ThemeToggle(\n            this.browserUIManager,\n            Selectors.THEME.TOGGLE.name(),\n            Selectors.CONTAINER.WRAPPER.name()\n        );\n        this.mergeHandler = new MergeHandler(this);\n\n        // Create DiffNavigator but don't initialize it yet - it will be initialized after chunks are loaded\n        this.diffNavigator = new DiffNavigator(this, false);\n\n        // Create layout components\n        this.scrollSynchronizer = new ScrollSynchronizer(this);\n        this.iconMarkerManager = new IconMarkerManager(this);\n        this.layoutManager = new LayoutManager(this);\n    }\n\n    /**\n     * Initialize the diff viewer and render content\n     */\n    async initialize() {\n        Debug.log('DiffViewer: Beginning initialization', null, 2);\n\n        try {\n            // PHASE 1: DATA INITIALIZATION\n            await this._initializeData();\n\n            // PHASE 2: RESOURCE LOADING\n            await this._loadResources();\n\n            // PHASE 3: UI RENDERING\n            await this._renderUI();\n\n            // PHASE 4: UI ENHANCEMENT\n            await this._setupUIFeatures();\n\n            // Display demo mode warning if enabled\n            if (this.runtimeProps.demoEnabled) {\n                this._showDemoModeWarning();\n            }\n\n            // Initialize ModalManager early\n            this.modalManager.initModals();\n\n            Debug.log('DiffViewer: Initialization complete', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('DiffViewer: Error during initialization:', error, 2);\n            this._handleInitializationError(error);\n            throw error;\n        }\n    }\n\n    /**\n     * Handle initialization error\n     * @private\n     */\n    _handleInitializationError(error) {\n        Debug.error('DiffViewer: Error handling initialization failure', error, 2);\n\n        // Get translation manager for error display\n        const translationManager = TranslationManager.getInstance();\n        const errorText = translationManager.get('errorLoadingDiff') || 'Error Loading Diff Viewer';\n\n        // Display error message in container\n        const errorMessage = document.createElement('div');\n        errorMessage.className = `${Selectors.UTILITY.ALERT_DANGER.name()} vdm-m-3`;\n        errorMessage.innerHTML = `\n            <h4>${errorText}</h4>\n            <p>${error.message || 'An unexpected error occurred.'}</p>\n        `;\n\n        // Add error to container\n        if (this.container) {\n            // Keep existing content, just append the error\n            this.container.appendChild(errorMessage);\n\n            // Make sure container is visible\n            this.container.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Initialize data structures\n     * @private\n     */\n    async _initializeData() {\n        // Initialize chunks from diff data\n        this.chunkManager.initChunks(this.runtimeProps.diffData);\n\n        Debug.log(`DiffViewer: Loaded ${this.runtimeProps.diffData.chunks?.length || 0} chunks and content arrays: old=${this.runtimeProps.diffData.old?.length || 0}, new=${this.runtimeProps.diffData.new?.length || 0}`, null, 2);\n    }\n\n    /**\n     * Load required resources\n     * @private\n     */\n    async _loadResources() {\n        // Load syntax highlighter if not already loaded\n        if (!this.syntaxHighlighter.highlightJsLoaded) {\n            await this.syntaxHighlighter.initialize();\n            await this.syntaxHighlighter.loadHighlightJs();\n        }\n\n        // Load theme through ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        await this.themeManager.applyTheme(currentTheme.family, currentTheme.mode);\n    }\n\n    /**\n     * Render UI components\n     * @private\n     */\n    async _renderUI() {\n        // Make sure container is visible\n        if (this.container) {\n            this.container.style.display = 'flex';\n        }\n\n        // Render the diff chunks\n        Debug.log(`DiffViewer: Rendering ${this.runtimeProps.diffData.chunks?.length || 0} chunks`, null, 2);\n        this.chunkManager.renderChunks();\n\n        // Apply syntax highlighting\n        this.syntaxHighlighter.highlightAll(this.container);\n\n        // Initialize theme based on preference\n        this.themeToggle.initialize();\n\n        // Initialize theme selector if enabled\n        if (this.config.theme.showSelector) {\n            this.themeSelector.initialize();\n        }\n\n        // Mark container as loaded using DOMUtils\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', true);\n\n        // Show the content wrapper if needed\n        const containerWrapper = document.querySelector(Selectors.CONTAINER.WRAPPER);\n        if (containerWrapper?.classList.contains('vdm-d-none')) {\n            containerWrapper.classList.remove('vdm-d-none');\n        }\n\n        // Fix theme switcher position - move it above the diff container\n        const themeSwitcher = document.querySelector(Selectors.THEME.SWITCHER);\n        const diffContainer = document.querySelector(Selectors.DIFF.CONTAINER);\n        diffContainer?.parentNode?.insertBefore?.(themeSwitcher, diffContainer);\n        if (themeSwitcher && diffContainer) {\n            Debug.log('DiffViewer: Repositioned theme switcher above diff container', null, 2);\n        }\n    }\n\n    /**\n     * Set up UI features and enhancements\n     * @private\n     */\n    async _setupUIFeatures() {\n        // Set up scroll synchronization\n        this.scrollSynchronizer.setupSynchronizedScrolling();\n\n        // Initialize layout manager\n        this.layoutManager.initialize();\n\n        // Set up icon markers\n        this.iconMarkerManager.initializeIconMarkers();\n\n        // Initialize the DiffNavigator AFTER chunks are loaded and rendered\n        if (this.diffNavigator) {\n            Debug.log('DiffViewer: Initializing navigation with loaded chunks', null, 2);\n            this.diffNavigator.initNavigation();\n        }\n\n        // Dispatch a custom event to notify that the diff viewer has finished loading\n        // This allows other components to know when the diff viewer is ready\n        const diffLoadedEvent = new CustomEvent('vdm-diff-loaded', {\n            detail: {\n                timestamp: new Date(),\n                viewer: this\n            }\n        });\n        document.dispatchEvent(diffLoadedEvent);\n        Debug.log('DiffViewer: Dispatched vdm-diff-loaded event', null, 2);\n\n        Debug.log('DiffViewer: UI features and enhancements set up', null, 2);\n    }\n\n    /**\n     * Display a warning message for demo mode\n     * @private\n     */\n    _showDemoModeWarning() {\n        Debug.log('DiffViewer: Showing demo mode warning', null, 2);\n\n        // Use the AlertManager to show the warning\n        const AlertManager = window.AlertManager || (this.browserUIManager?.AlertManager);\n\n        if (AlertManager) {\n            const alertManager = AlertManager.getInstance();\n\n            // Find the form element to place the alert before\n            const comparisonForm = document.querySelector('#vdm-file-comparison-form');\n\n            // Show warning about demo mode\n            alertManager.showAlert(\n                `<strong>Demo Mode Active</strong> - Merging is disabled on this server and will be simulated.\n                To use the file browser with actual file modifications, please install Visual Diff Merge on your own server.`,\n                'warning',\n                {\n                    dismissable: true,\n                    className: 'vdm-mb-3',\n                    translate: false, // Disable translation\n                    targetElement: comparisonForm, // Place before the form\n                    placement: 'before',\n                    timeout: 0 // Prevent auto-dismiss\n                }\n            );\n\n            Debug.log('DiffViewer: Demo mode warning displayed via AlertManager', null, 2);\n        }\n    }\n\n    /**\n     * Updates configuration with new values\n     * @param {Object} newConfig - New configuration values to apply\n     */\n    updateConfig(newConfig) {\n        if (!newConfig) return;\n\n        // Merge new config with current config\n        this.config = ConfigUtils.mergeConfigurations(this.config, newConfig);\n\n        Debug.log('DiffViewer: Configuration updated', newConfig, 3);\n    }\n\n    /**\n     * Updates runtime properties\n     * @param {Object} props - New runtime properties to apply\n     */\n    updateRuntimeProps(props) {\n        if (!props) return;\n\n        // Merge new runtime properties with current ones\n        this.runtimeProps = {...this.runtimeProps, ...props};\n\n        Debug.log('DiffViewer: Runtime properties updated', props, 3);\n    }\n\n    /**\n     * Get the current configuration\n     * @returns {Object} Current configuration\n     */\n    getConfig() {\n        return {...this.config};\n    }\n\n    /**\n     * Get the current runtime properties\n     * @returns {Object} Current runtime properties\n     */\n    getRuntimeProps() {\n        // DEBUG: Add logging to identify when this method is called and what it returns\n        Debug.log('DiffViewer.getRuntimeProps called', {\n            fileRefId: this.runtimeProps.fileRefId || '(none)',\n            oldFileRefId: this.runtimeProps.oldFileRefId || '(none)',\n            newFileName: this.runtimeProps.newFileName || '(none)',\n            oldFileName: this.runtimeProps.oldFileName || '(none)',\n            // Also check if these properties are in window.diffConfig\n            windowDiffConfig: {\n                hasFileRefId: window.diffConfig && 'fileRefId' in window.diffConfig,\n                fileRefId: window.diffConfig?.fileRefId || '(none)',\n                hasOldFileRefId: window.diffConfig && 'oldFileRefId' in window.diffConfig,\n                oldFileRefId: window.diffConfig?.oldFileRefId || '(none)',\n                hasNewFileName: window.diffConfig && 'newFileName' in window.diffConfig,\n                newFileName: window.diffConfig?.newFileName || '(none)',\n                hasOldFileName: window.diffConfig && 'oldFileName' in window.diffConfig,\n                oldFileName: window.diffConfig?.oldFileName || '(none)'\n            }\n        }, 3);\n\n        return {...this.runtimeProps};\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        // Destroy layout manager\n        if (this.layoutManager) {\n            this.layoutManager.destroy();\n        }\n\n        // Clean up diffNavigator\n        if (this.diffNavigator) {\n            this.diffNavigator.destroy();\n        }\n\n        // Remove loaded class from container\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', false);\n\n        // Additional cleanup as needed\n        Debug.log('DiffViewer: Component destroyed', null, 2);\n    }\n\n    /**\n     * Initialize runtime properties\n     */\n    initializeRuntimeProps() {\n        // Common runtime properties\n        this.runtimeProps = {\n            diffData: this.options.diffData || {},\n            serverSaveEnabled: this.options.serverSaveEnabled || false,\n            // SECURITY: Use only secure fileRefIds and filenames, not server paths\n            fileRefId: this.options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: this.options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            newFileName: this.options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: this.options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: this.options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: this.options.filepath || window.diffConfig?.filepath || ''\n        };\n\n        Debug.log('DiffViewer: Runtime properties initialized', this.runtimeProps, 3);\n    }\n\n    /**\n     * Check if the content has been beautified\n     * @returns {boolean} True if content has been beautified\n     */\n    isContentBeautified() {\n        // Check if the beautified flag exists in runtime properties\n        // If not defined, default to false\n        return this.runtimeProps.isBeautified || false;\n    }\n\n    /**\n     * Get API endpoint by name\n     * @param {string} endpointName - Name of the endpoint to get\n     * @returns {Promise<string>} The endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        Debug.log(`DiffViewer: Getting endpoint for ${endpointName}`, null, 2);\n\n        try {\n            // Use EndpointDiscovery if available\n            const endpointDiscovery = EndpointDiscovery.getInstance();\n            const endpoint = await endpointDiscovery.getEndpoint(endpointName);\n\n            Debug.log(`DiffViewer: Found endpoint for ${endpointName}`, endpoint, 2);\n            return endpoint;\n        } catch (error) {\n            // Fall back to config or default endpoints\n            Debug.warn(`DiffViewer: Error getting endpoint for ${endpointName}, using fallback`, error, 1);\n\n            // Check if we have endpoints in the config\n            if (this.config?.apiEndpoints[endpointName]) {\n                return this.config.apiEndpoints[endpointName];\n            }\n\n            // Default endpoints as a last resort\n            const defaultEndpoints = {\n                'ajaxDiffMerge': '../api/ajax-diff-merge.php',\n                'diffProcessor': '../api/diff-processor.php'\n            };\n\n            return defaultEndpoints[endpointName] || '../api/' + endpointName + '.php';\n        }\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {DiffViewer} This instance for method chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n\n        // Update references in components that need the BrowserUIManager\n        if (this.themeToggle) {\n            this.themeToggle.setBrowserUIManager(browserUIManager);\n        }\n\n        if (this.themeSelector) {\n            this.themeSelector.setBrowserUIManager(browserUIManager);\n        }\n\n        Debug.log('DiffViewer: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n}\n","// MergeHandler.js - Handles merging of selected lines\nimport { Debug } from '../utils/Debug';\nimport AlertManager from '../utils/AlertManager';\n\nimport { MergePreviewManager } from './merge/MergePreviewManager';\nimport { MergeUIController } from './merge/MergeUIController';\nimport { MergeOperationHandler } from './merge/MergeOperationHandler';\n\n\n/**\n * Main coordinator for merge operations\n */\nexport class MergeHandler {\n    /**\n     * Initialize merge handler\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n\n        // Use the shared modalManager instance\n        this.modalManager = this.diffViewer.modalManager;\n\n        // Create subcomponents using composition\n        this.previewManager = new MergePreviewManager(this);\n        this.uiController = new MergeUIController(this);\n        this.operationHandler = new MergeOperationHandler(this);\n\n        // Initialize components\n        this.initialize();\n\n        Debug.log('MergeHandler: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize all subcomponents\n     */\n    initialize() {\n        // Check if we should use server or local controls\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n        const serverSaveEnabled = runtimeProps && runtimeProps.serverSaveEnabled;\n\n        Debug.log(`MergeHandler: Initializing with serverSaveEnabled=${serverSaveEnabled}`, null, 2);\n\n        // Initialize UI controller first\n        this.uiController.initialize();\n\n        // If server save is disabled, set up local-only controls\n        if (serverSaveEnabled === false) {\n            Debug.log('MergeHandler: Server save is disabled, using local-only controls', null, 2);\n            this.uiController.setupLocalOnlyControls();\n        }\n\n        // Then initialize preview manager\n        this.previewManager.initialize();\n\n        Debug.log('MergeHandler: All subcomponents initialized', null, 2);\n    }\n\n    /**\n     * Preview the merged file\n     * Delegates to preview manager\n     */\n    previewMerge() {\n        this.previewManager.handlePreviewClick();\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    getMergedContent() {\n        return this.diffViewer.chunkManager.generateMergedContent();\n    }\n\n    /**\n     * Proceed with merge operation\n     * Delegates to operation handler\n     * @param {string} mergeType - Type of merge ('original' or 'new')\n     * @returns {Promise} Promise resolving when merge completes\n     */\n    proceedWithMerge(mergeType) {\n        return this.operationHandler.proceedWithMerge(mergeType);\n    }\n\n    /**\n     * Count unresolved conflicts\n     * Delegates to UI controller\n     * @returns {number} Number of unresolved conflicts\n     */\n    countUnresolvedConflicts() {\n        return this.uiController.countUnresolvedConflicts();\n    }\n\n    /**\n     * Show conflict resolution modal\n     * Delegates to UI controller\n     * @param {number} unresolvedCount - Number of unresolved conflicts\n     */\n    showConflictModal(unresolvedCount) {\n        this.uiController.showConflictModal(unresolvedCount);\n    }\n\n    /**\n     * Highlight unresolved chunks\n     * Delegates to UI controller\n     */\n    highlightUnresolvedChunks() {\n        return this.uiController.highlightUnresolvedChunks();\n    }\n\n    /**\n     * Create alert element with proper BEM classes\n     * @param {boolean} resolved - Whether the conflict is resolved\n     * @param {string} success_message - Success message to display\n     * @param {string} message - Warning message to display\n     * @returns {HTMLElement} Alert element\n     */\n    createAlertElement(resolved, success_message, message) {\n        const alertManager = AlertManager.getInstance();\n\n        if (resolved) {\n            return alertManager.showSuccess(success_message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        } else {\n            return alertManager.showWarning(message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        }\n    }\n}\n","// SyntaxHighlighter.js - Handles syntax highlighting for code\nimport { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { MergeContentFormatter } from '../utils/MergeContentFormatter';\nimport languageMap from '../data/highlightjs-languages.json';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport Selectors from '../constants/Selectors';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport { LoaderManager } from '../utils/LoaderManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Manages syntax highlighting functionality\n */\nexport class SyntaxHighlighter {\n    /**\n     * @param {DiffViewer} diffViewer - Parent DiffViewer component\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.highlightJsLoaded = false;\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.language = 'plaintext'; // Default language\n\n        // Get theme from ThemeManager instead of localStorage directly\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.theme = currentTheme.mode || 'light';\n\n        Debug.log('SyntaxHighlighter: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize the highlighter with the language\n     */\n    async initialize() {\n        // First, load highlight.js core\n        await this.loadHighlightJs();\n\n        // Only proceed with language setup if highlight.js loaded successfully\n        if (this.highlightJsLoaded) {\n            // Get filepath from runtimeProps\n            const filepath = this.diffViewer.getRuntimeProps().filepath || '';\n\n            // Set initial language using the prioritized logic\n            await this.setLanguage(filepath);\n\n            Debug.log('SyntaxHighlighter: Initialized with language:', this.language, 2);\n        } else {\n            Debug.warn('SyntaxHighlighter: Initialization incomplete - highlight.js failed to load', null, 2);\n        }\n    }\n\n    /**\n     * Load highlightjs and required language components\n     */\n    async loadHighlightJs() {\n        try {\n            Debug.log('SyntaxHighlighter: Loading highlight.js core', null, 2);\n\n            // Use resource loader to load syntax highlighter core\n            await this.diffViewer.resourceLoader.loadSyntaxHighlighterCore();\n\n            this.highlightJsLoaded = true;\n            Debug.log('SyntaxHighlighter: highlight.js loaded successfully', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Failed to load highlight.js:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Highlight all code elements in batches\n     * @param {Element|Document} container - Container with code elements\n     */\n    highlightAll(container = document) {\n        if (!this.highlightJsLoaded || !window.hljs) {\n            Debug.warn('SyntaxHighlighter: Cannot highlight code - highlight.js not loaded', null, 2);\n            return;\n        }\n\n        // Use DOMUtils.getElements for consistent element selection with error handling\n        const elements = DOMUtils.getElements(\n            `${Selectors.DIFF.LINE_CONTENT}:not(${Selectors.DIFF.LINE_CONTENT_EMPTY}):not(${Selectors.DIFF.LINE_PLACEHOLDER})`,\n            container\n        );\n\n        if (!elements) {\n            Debug.log('SyntaxHighlighter: No code elements found to highlight', null, 2);\n            return;\n        }\n\n        const codeElements = Array.from(elements).filter(el => el.textContent.trim());\n        Debug.log(`SyntaxHighlighter: Found ${codeElements.length} code elements to highlight`, null, 2);\n\n        // Only show loader for large files (more than 100 elements)\n        let loaderId = null;\n        if (codeElements.length > 100) {\n            // Get translation manager for loading message\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const loadingMessage = translationManager.get('applyingSyntaxHighlighting', 'Applying syntax highlighting...');\n\n            // Show loading indicator\n            loaderId = loaderManager.showLoader(loadingMessage, {\n                fullscreen: true,\n                zIndex: 1000\n            });\n\n            Debug.log('SyntaxHighlighter: Showing loader for large file highlighting', null, 2);\n        }\n\n        // Small batch size for smoother UI updates\n        const batchSize = 30;\n        let index = 0;\n\n        // Performance tracking\n        const startTime = performance.now();\n\n        // Function to process a batch\n        const processBatch = () => {\n            if (index >= codeElements.length) {\n                // Hide loader if shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n\n                    // Log performance metrics\n                    const endTime = performance.now();\n                    const duration = endTime - startTime;\n                    Debug.log(`SyntaxHighlighter: Highlighting complete for ${codeElements.length} elements in ${duration.toFixed(2)}ms`, null, 2);\n                } else {\n                    Debug.log('SyntaxHighlighter: Highlighting complete', null, 2);\n                }\n                return;\n            }\n\n            // Process next batch\n            const end = Math.min(index + batchSize, codeElements.length);\n            for (let i = index; i < end; i++) {\n                this.highlightElement(codeElements[i]);\n            }\n\n            // Update loader message with progress if shown\n            if (loaderId && index % (batchSize * 5) === 0) { // Update every 5 batches\n                const loaderManager = LoaderManager.getInstance();\n                const translationManager = TranslationManager.getInstance();\n                const progress = Math.round((index / codeElements.length) * 100);\n                const progressMessage = translationManager.get('applyingSyntaxHighlightingProgress',\n                    'Applying syntax highlighting ({0}%)').replace('{0}', progress);\n\n                loaderManager.updateLoaderMessage(loaderId, progressMessage);\n            }\n\n            // Move to next batch\n            index = end;\n\n            // Schedule next batch - use requestAnimationFrame for better performance\n            requestAnimationFrame(() => {\n                setTimeout(processBatch, 0);\n            });\n        };\n\n        // Start batch processing\n        processBatch();\n    }\n\n    /**\n     * Apply syntax highlighting to a single element\n     * @param {Element} element - Element to highlight\n     * @param {boolean} withLineNumbers - Whether to add line numbers\n     */\n    highlightElement(element, withLineNumbers = false) {\n        if (!this.highlightJsLoaded || !window.hljs || !element) return;\n\n        try {\n            // Use DOMUtils.toggleClass for consistent class manipulation\n            if (!element.classList.contains(this.language)) {\n                // Remove existing language classes first\n                const languageClasses = element.className.split(' ')\n                    .filter(cls => cls.startsWith('language-'));\n\n                languageClasses.forEach(cls => {\n                    element.classList.remove(cls);\n                });\n\n                // Add the correct language class\n                element.classList.add(this.language);\n            }\n\n            // Use the MergeContentFormatter utility\n            MergeContentFormatter.resetHighlighting(element);\n\n            // Apply highlighting\n            window.hljs.highlightElement(element);\n\n            // Add line numbers if needed\n            if (withLineNumbers && window.hljs.lineNumbersBlock) {\n                window.hljs.lineNumbersBlock(element);\n            }\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Error highlighting element:', error, 2);\n        }\n    }\n\n    /**\n     * Set the language for syntax highlighting\n     * @param {string} filepath - File path to derive language from\n     */\n    async setLanguage(filepath) {\n        // Get runtime properties\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Try to determine language using the prioritized logic\n        let newLanguage = 'plaintext';\n        let sourceUsed = 'default';\n\n        // 1. Try to guess language from filepath if provided\n        if (filepath && typeof filepath === 'string' && filepath.includes('.')) {\n            const extension = filepath.split('.').pop().toLowerCase();\n            if (extension) {\n                newLanguage = languageMap[extension] || extension;\n                sourceUsed = 'filepath';\n                Debug.log(`SyntaxHighlighter: Language determined from filepath extension: ${extension}`, null, 2);\n            }\n        }\n\n        // 2. If no language determined from filepath, try diffData.language\n        if (newLanguage === 'plaintext' && sourceUsed === 'default' && runtimeProps.diffData?.language) {\n            newLanguage = runtimeProps.diffData.language;\n            sourceUsed = 'diffData';\n            Debug.log(`SyntaxHighlighter: Language determined from diffData: ${newLanguage}`, null, 2);\n        }\n\n        // 3. If still no language, use plaintext as fallback\n        if (newLanguage === 'plaintext' && sourceUsed === 'default') {\n            Debug.log('SyntaxHighlighter: No language could be determined, using plaintext as fallback', null, 2);\n        }\n\n        // Only load if different from current language\n        if (this.language !== newLanguage) {\n            this.language = newLanguage;\n\n            Debug.log(`SyntaxHighlighter: Setting language to ${newLanguage} (source: ${sourceUsed})`, null, 2);\n\n            // Only load if needed and not already loaded\n            if (this.highlightJsLoaded && !this.resourceLoader.loadedLanguages.has(newLanguage)) {\n                Debug.log(`SyntaxHighlighter: Loading language ${newLanguage}`, null, 2);\n\n                // Get translation manager for loading message\n                const translationManager = TranslationManager.getInstance();\n                const loaderManager = LoaderManager.getInstance();\n                const loadingMessage = translationManager.get('loadingLanguage', 'Loading language: {0}')\n                    .replace('{0}', newLanguage);\n\n                // Try to use the main loader ID from diffViewer\n                const mainLoaderId = this.diffViewer.mainLoaderId;\n\n                if (!mainLoaderId) {\n                    Debug.warn('SyntaxHighlighter: No main loader ID available from DiffViewer for language loading', null, 2);\n                }\n\n                try {\n                    // Update the main loader message if available\n                    if (mainLoaderId) {\n                        loaderManager.updateLoaderMessage(mainLoaderId, loadingMessage);\n                    }\n\n                    // Use dynamic import to load the language on demand\n                    await this.resourceLoader.loadLanguage(newLanguage);\n\n                    // No need to hide the main loader as it's managed elsewhere\n                } catch (error) {\n                    Debug.error(`SyntaxHighlighter: Error loading language ${newLanguage}:`, error, 2);\n                }\n            } else {\n                Debug.log(`SyntaxHighlighter: Language ${newLanguage} already loaded`, null, 3);\n            }\n\n            Debug.log(`SyntaxHighlighter: Language set to ${this.language}`, null, 2);\n        } else {\n            Debug.log(`SyntaxHighlighter: Language already set to ${this.language}`, null, 3);\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport Selectors from '../constants/Selectors';\n\n// Module-level singleton instance\nlet instance = null;\n\nexport class ThemeManager extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @returns {ThemeManager} The singleton instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new ThemeManager();\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     */\n    constructor() {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        // Initialize instance\n        this.initialized = false;\n        this.availableThemes = null;\n        this.currentTheme = { family: null, mode: null };\n        this.defaultTheme = { family: 'atom-one', mode: 'dark' };\n        this.listeners = [];\n        this.resourceLoader = null;\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize with config and ResourceLoader\n     * @param {Object} config - Configuration object with theme settings\n     * @param {ResourceLoader} resourceLoader - ResourceLoader instance\n     * @returns {boolean} Success status\n     */\n    initialize(config, resourceLoader) {\n        Debug.log('ThemeManager: Initializing', { config }, 2);\n\n        if (this.initialized) return true;\n\n        // Get theme configuration (accepts both legacy and new format)\n        this.config = config?.theme || {};\n        this.resourceLoader = resourceLoader;\n\n        // Get the availableThemes from ResourceLoader\n        this.availableThemes = resourceLoader.config.availableThemes;\n\n        // Set defaults from config or use hardcoded defaults\n        this.defaultTheme.family = this.config.defaultFamily || this.defaultTheme.family;\n        this.defaultTheme.mode = this.config.defaultMode || this.defaultTheme.mode;\n\n        // Get saved preferences\n        const savedFamily = localStorage.getItem('diffViewerThemeFamily') || this.defaultTheme.family;\n        const savedMode = localStorage.getItem('diffViewerTheme') || this.defaultTheme.mode;\n\n        this.currentTheme = {\n            family: savedFamily,\n            mode: savedMode\n        };\n\n        Debug.log(`ThemeManager: Initialized with ${savedFamily} (${savedMode})`, null, 2);\n        this.initialized = true;\n\n        Debug.log('ThemeManager: Successfully initialized', null, 2);\n        return true;\n    }\n\n    /**\n     * Get theme URL for a specific family and mode\n     * @param {string} family - The theme family (e.g., 'atom-one')\n     * @param {string} mode - The theme mode ('light' or 'dark')\n     * @param {boolean} fallbackToDefaults - Whether to fall back to defaults if not found\n     * @returns {string} The theme URL\n     */\n    getThemeUrl(family, mode, fallbackToDefaults = true) {\n        // First check if the requested theme exists\n        if (this.availableThemes?.[family]?.[mode]) {\n            return this.availableThemes[family][mode];\n        }\n\n        // Don't proceed with fallbacks if requested\n        if (!fallbackToDefaults) {\n            return null;\n        }\n\n        // Check if the opposite mode exists for this family\n        const alternateMode = mode === 'dark' ? 'light' : 'dark';\n        if (this.availableThemes?.[family]?.[alternateMode]) {\n            Debug.log(`ThemeManager: Theme ${family} doesn't have ${mode} mode, using ${alternateMode} instead`, null, 2);\n            return this.availableThemes[family][alternateMode];\n        }\n\n        // Fall back to default theme\n        Debug.log(`ThemeManager: Falling back to default theme: ${this.defaultTheme.family} (${mode})`, null, 2);\n        return this.availableThemes[this.defaultTheme.family][mode] ||\n               this.availableThemes[this.defaultTheme.family][alternateMode];\n    }\n\n    /**\n     * Check if a theme exists\n     * @param {string} family - The theme family\n     * @param {string} mode - The theme mode\n     * @returns {boolean} Whether the theme exists\n     */\n    themeExists(family, mode) {\n        return !!this.availableThemes?.[family]?.[mode];\n    }\n\n    /**\n     * Get all available theme families\n     * @returns {string[]} Array of theme family names\n     */\n    getAvailableThemeFamilies() {\n        return Object.keys(this.availableThemes || {});\n    }\n\n    /**\n     * Get available modes for a theme family\n     * @param {string} family - The theme family\n     * @returns {string[]} Available modes ('light', 'dark', or both)\n     */\n    getAvailableModesForFamily(family) {\n        if (!this.availableThemes?.[family]) {\n            return [];\n        }\n        return Object.keys(this.availableThemes[family]);\n    }\n\n    /**\n     * Get theme CDN version - useful for consistent versioning\n     * @returns {string} The CDN version\n     */\n    getThemeCdnVersion() {\n        return '11.11.1'; // Could be made configurable in the future\n    }\n\n    /**\n     * Get theme CDN base URL\n     * @returns {string} The CDN base URL\n     */\n    getThemeCdnBase() {\n        return 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js';\n    }\n\n    /**\n     * Get standard theme URL pattern (for direct generation)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {string} Standard theme URL\n     */\n    getStandardThemeUrl(family, mode) {\n        return `${this.getThemeCdnBase()}/${this.getThemeCdnVersion()}/styles/base16/${family}-${mode}.min.css`;\n    }\n\n    /**\n     * Apply theme (load CSS and update UI)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {Promise<boolean>} Success status\n     */\n    async applyTheme(family, mode) {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Use our centralized method to get the URL\n        const themeUrl = this.getThemeUrl(family, mode);\n        if (!themeUrl) {\n            Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n            return false;\n        }\n\n        Debug.log(`ThemeManager: Applying theme ${family}/${mode}`, null, 2);\n\n        // Skip if theme is already active\n        const activeTheme = document.querySelector(\n            'link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])'\n        );\n\n        if (activeTheme && activeTheme.getAttribute('href') === themeUrl) {\n            Debug.log(`ThemeManager: Theme ${family}/${mode} already active`, null, 2);\n            return true;\n        }\n\n        try {\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during theme operation:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Update container theme class based on mode\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     */\n    updateContainerThemeClass(mode) {\n        const container = document.getElementById(Selectors.CONTAINER.WRAPPER.name());\n        if (container) {\n            container.classList.remove(Selectors.THEME.DARK.name(), Selectors.THEME.LIGHT.name());\n            container.classList.add(Selectors.THEME.MODE_PREFIX.name() + '--' + mode);\n        }\n    }\n\n    /**\n     * Set theme mode only (light/dark)\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeMode(mode) {\n        Debug.log(`ThemeManager: Setting theme mode to ${mode}`, null, 2);\n        return this.applyTheme(this.currentTheme.family, mode);\n    }\n\n    /**\n     * Set theme family only (keeps current mode)\n     * @param {string} family - Theme family\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeFamily(family) {\n        Debug.log(`ThemeManager: Setting theme family to ${family}`, null, 2);\n        return this.applyTheme(family, this.currentTheme.mode);\n    }\n\n    /**\n     * Add a listener to be notified of theme changes\n     * @param {Function} listener - Listener function\n     */\n    addListener(listener) {\n        if (typeof listener === 'function') {\n            this.listeners.push(listener);\n        }\n    }\n\n    /**\n     * Notify all listeners of theme changes\n     */\n    notifyListeners() {\n        this.listeners.forEach(listener => {\n            try {\n                listener(this.currentTheme);\n            } catch (error) {\n                Debug.error('ThemeManager: Error in theme listener:', error, 2);\n            }\n        });\n    }\n\n    /**\n     * Get current theme information\n     * @returns {Object} Current theme information\n     */\n    getCurrentTheme() {\n        return { ...this.currentTheme };\n    }\n\n    /**\n     * Load initial theme based on current settings\n     * @returns {Promise<boolean>} Success status\n     */\n    async loadInitialTheme() {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Get theme from current settings\n        const family = this.currentTheme.family || this.defaultTheme.family;\n        const mode = this.currentTheme.mode || this.defaultTheme.mode;\n\n        Debug.log(`ThemeManager: Loading initial theme ${family}/${mode}`, null, 2);\n\n        try {\n            // Apply the theme\n            const themeUrl = this.getThemeUrl(family, mode);\n            if (!themeUrl) {\n                Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n                return false;\n            }\n\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Initial theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during initial theme loading:', error, 2);\n            return false;\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n// Module-level variables\nlet instance = null;\n\n/**\n * Manages theme family selection dropdown\n */\nexport class ThemeSelector extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance (only used during first initialization)\n     * @returns {ThemeSelector} The singleton instance\n     */\n    static getInstance(diffViewer = null) {\n        Debug.log('ThemeSelector: Retrieving or creating instance', null, 3);\n        if (!instance) {\n            instance = new ThemeSelector(diffViewer);\n        } else if (diffViewer && !instance.diffViewer) {\n            // Update diffViewer if it was null previously\n            instance.diffViewer = diffViewer;\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    constructor(diffViewer) {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        Debug.log('ThemeSelector: Instance created', null, 3);\n\n        // Initialize instance\n        this.diffViewer = diffViewer;\n        this.container = null;\n        this.selectElement = null;\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = null;\n        this.boundHandleThemeChange = this.handleThemeChange.bind(this); // Store bound function\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize the theme selector\n     */\n    initialize() {\n        // Check if theme selector should be enabled using the new config structure\n        if (!this._isThemeSelectorEnabled()) {\n            Debug.log('ThemeSelector: Theme selector disabled in configuration', null, 2);\n            return false;\n        }\n\n        Debug.log('ThemeSelector: Initializing', null, 2);\n\n        // Check if selector already exists in DOM and reuse it\n        const existingSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        if (existingSelector) {\n            Debug.log('ThemeSelector: Reusing existing selector in DOM', null, 2);\n            this.selectElement = existingSelector;\n            this.container = existingSelector.parentNode;\n\n            // Update selector to reflect current theme\n            this.updateSelector();\n\n            // Ensure event listener is attached (remove old one first to avoid duplicates)\n            this.selectElement.removeEventListener('change', this.boundHandleThemeChange);\n            this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n\n            Debug.log('ThemeSelector: Reused existing selector successfully', null, 2);\n            return true;\n        }\n\n        // If BrowserUIManager is available, let it create the selector\n        if (this.browserUIManager) {\n            const selectorElements = this.browserUIManager.generateThemeSelector();\n            if (selectorElements) {\n                Debug.log('ThemeSelector: Using selector created by BrowserUIManager', null, 2);\n                this.container = selectorElements.container;\n                this.selectElement = selectorElements.selectElement;\n\n                // Populate options and set up event handlers\n                const populated = this.populateSelectorOptions();\n                if (!populated) {\n                    // If population failed, try again after a short delay (themes might not be loaded yet)\n                    Debug.log('ThemeSelector: Initial population failed, retrying after delay', null, 2);\n                    setTimeout(() => {\n                        this.populateSelectorOptions();\n                        this.updateSelector();\n                    }, 100);\n                }\n\n                this.updateSelector();\n                this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n\n                Debug.log('ThemeSelector: Initialized with BrowserUIManager selector successfully', null, 2);\n                return true;\n            }\n        }\n\n        // Fallback: Create container for the theme selector (only if doesn't exist)\n        this.createSelectorElement();\n\n        // Add the selector to the DOM\n        this.addSelectorToDOM();\n\n        // Update selector to reflect current theme\n        this.updateSelector();\n\n        // Add listener to ThemeManager to update selector when theme changes\n        this.themeManager.addListener(this.updateSelector.bind(this));\n\n        // Also add a listener to repopulate options if themes become available later\n        this.themeManager.addListener(() => {\n            if (this.selectElement && this.selectElement.options.length === 0) {\n                Debug.log('ThemeSelector: Themes became available, repopulating options', null, 2);\n                this.populateSelectorOptions();\n            }\n        });\n\n        Debug.log('ThemeSelector: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Check if theme selector should be enabled\n     * @private\n     * @returns {boolean} Whether the theme selector should be enabled\n     */\n    _isThemeSelectorEnabled() {\n        // First try the new config structure\n        if (this.diffViewer?.getConfig()?.theme?.selector !== undefined) {\n            return !!this.diffViewer.getConfig().theme.selector;\n        }\n\n        // Then try the old options structure\n        if (this.diffViewer?.options?.themeSelector !== undefined) {\n            return !!this.diffViewer.options.themeSelector;\n        }\n\n        // Finally try the global diffConfig\n        if (window.diffConfig?.theme?.selector !== undefined) {\n            return !!window.diffConfig.theme.selector;\n        }\n\n        // Default to true - always show selector unless explicitly disabled\n        return true;\n    }\n\n    /**\n     * Populate selector options with available themes\n     */\n    populateSelectorOptions() {\n        Debug.log('ThemeSelector: Starting to populate selector options', null, 2);\n\n        if (!this.selectElement) {\n            Debug.warn('ThemeSelector: No select element available for population', null, 2);\n            return false;\n        }\n\n        if (!this.themeManager) {\n            Debug.warn('ThemeSelector: No theme manager available for population', null, 2);\n            return false;\n        }\n\n        const currentTheme = this.themeManager.getCurrentTheme();\n        Debug.log('ThemeSelector: Current theme', currentTheme, 2);\n\n        // Clear existing options first\n        this.selectElement.innerHTML = '';\n\n        // Add options from available themes\n        const availableThemes = this.themeManager.getAvailableThemeFamilies();\n        Debug.log('ThemeSelector: Available themes', { availableThemes, count: availableThemes?.length || 0 }, 2);\n\n        if (!availableThemes || availableThemes.length === 0) {\n            Debug.warn('ThemeSelector: No available themes found', null, 2);\n            return false;\n        }\n\n        availableThemes.forEach(themeKey => {\n            DOMUtils.createAndAppendElement('option', this.selectElement, {\n                attributes: {\n                    value: themeKey,\n                    selected: themeKey === currentTheme.family\n                },\n                content: this.formatThemeName(themeKey)\n            });\n        });\n\n        Debug.log('ThemeSelector: Populated selector with options',\n                  { count: availableThemes.length }, 2);\n        return true;\n    }\n\n    /**\n     * Create the theme selector dropdown\n     */\n    createSelectorElement() {\n        Debug.log('ThemeSelector: Creating new selector element', null, 2);\n\n        // Create the container using DOMUtils with proper array of classes\n        this.container = DOMUtils.createElement('div', null, [Selectors.THEME_SELECTOR.WRAPPER.name(), Selectors.UTILITY.MARGIN_END_3.name()]);\n\n        // Create select element using DOMUtils\n        this.selectElement = DOMUtils.createAndAppendElement('select', this.container, {\n            id: Selectors.THEME.SELECTOR.name(),\n            classes: [Selectors.UTILITY.FORM_SELECT.name(), Selectors.UTILITY.FORM_SELECT.name()]\n        });\n\n        // Populate options using the separate method\n        this.populateSelectorOptions();\n\n        // Add change event handler using stored bound function\n        this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n    }\n\n    /**\n     * Format theme name for display (e.g., \"atom-one\" to \"Atom One\")\n     * @param {string} themeName - Theme name in kebab-case\n     * @returns {string} Formatted theme name\n     */\n    formatThemeName(themeName) {\n        return themeName\n            .split('-')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    /**\n     * Add the selector to the DOM\n     */\n    addSelectorToDOM() {\n        // Find theme switcher container using DOMUtils\n        const themeSwitcherContainer = DOMUtils.getElement(Selectors.THEME.SWITCHER.name());\n        if (!themeSwitcherContainer) {\n            Debug.warn('ThemeSelector: No theme switcher container found', null, 2);\n            return false;\n        }\n\n        // Insert the selector before any existing elements\n        themeSwitcherContainer.insertBefore(this.container, themeSwitcherContainer.firstChild);\n\n        Debug.log('ThemeSelector: Selector added to DOM', null, 2);\n        return true;\n    }\n\n    /**\n     * Update selector to match current theme\n     * @param {Object} theme - Theme object\n     */\n    updateSelector(theme) {\n        if (!this.selectElement) return;\n\n        // If the selector has no options, try to populate them\n        if (this.selectElement.options.length === 0) {\n            Debug.log('ThemeSelector: Selector has no options, attempting to populate', null, 2);\n            this.populateSelectorOptions();\n        }\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        if (this.selectElement.options.length > 0) {\n            this.selectElement.value = currentTheme.family;\n        }\n\n        Debug.log(`ThemeSelector: Selector updated to ${theme?.family || currentTheme.family}`,\n                 { optionsCount: this.selectElement.options.length }, 3);\n    }\n\n    /**\n     * Handle theme change event\n     * @param {Event} event - Change event\n     */\n    handleThemeChange(event) {\n        const selectedTheme = event.target.value;\n\n        // Try to get the BrowserUIManager instance if not already set\n        if (!this.browserUIManager && this.diffViewer?.browserUIManager) {\n            this.browserUIManager = this.diffViewer.browserUIManager;\n        }\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeFamily(selectedTheme)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeSelector: Theme changed to ${selectedTheme}`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeSelector: Error changing theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeSelector: Error changing theme:', error, 2);\n        }\n    }\n\n    /**\n     * Set the BrowserUIManager reference\n     * @param {BrowserUIManager} browserUIManager - The BrowserUIManager instance\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n        Debug.log('ThemeSelector: BrowserUIManager reference set', null, 3);\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Handles theme light/dark toggle functionality\n */\nexport class ThemeToggle {\n    /**\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @param {string} toggleElementId - Toggle element ID\n     * @param {string} containerId - Container element ID\n     */\n    constructor(browserUIManager = null, toggleElementId = Selectors.THEME.TOGGLE.name(), containerId = Selectors.CONTAINER.WRAPPER.name()) {\n        this.toggleElementId = toggleElementId;\n        this.containerId = containerId;\n\n        // Use DOMUtils for element retrieval with consistent error handling\n        this.toggleElement = DOMUtils.getElement(toggleElementId);\n        this.container = DOMUtils.getElement(containerId);\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = browserUIManager;\n\n        Debug.log('ThemeToggle: Component created', null, 2);\n    }\n\n    /**\n     * Initialize toggle with event handlers\n     */\n    initialize() {\n        Debug.log('ThemeToggle: Initializing', null, 2);\n\n        if (!this.toggleElement || !this.container) {\n            Debug.warn(`ThemeToggle: Elements not found for initialization - toggle: ${!!this.toggleElement}, container: ${!!this.container}`, null, 2);\n            return false;\n        }\n\n        // Get current theme from ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Apply initial theme class to container using ThemeManager's method\n        this.themeManager.updateContainerThemeClass(currentTheme.mode);\n\n        // Add event listener to toggle element\n        this.toggleElement.addEventListener('change', this.handleToggle.bind(this));\n\n        // Add listener to ThemeManager to update toggle when theme changes from elsewhere\n        this.themeManager.addListener(this.updateToggle.bind(this));\n\n        // Log whether we have a BrowserUIManager instance\n        Debug.log(`ThemeToggle: BrowserUIManager reference ${this.browserUIManager ? 'is available' : 'is not available'}`, null, 2);\n\n        Debug.log('ThemeToggle: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {ThemeToggle} - This instance for chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n        Debug.log('ThemeToggle: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n\n    /**\n     * Handle toggle event\n     * @param {Event} event - Change event\n     */\n    handleToggle(event) {\n        const isDark = event.target.checked;\n        const newMode = isDark ? 'dark' : 'light';\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        } else {\n            Debug.log('ThemeToggle: BrowserUIManager not available, no loading indicator will be shown', null, 2);\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeMode(newMode)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeToggle: Theme toggled to ${newMode} mode`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n        }\n    }\n\n    /**\n     * Update toggle state based on theme\n     * @param {Object} theme - Theme object\n     */\n    updateToggle(theme) {\n        if (!this.toggleElement) return;\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Instead of using our own updateContainerClass method,\n        // leverage the centralized method from ThemeManager\n        if (this.container) {\n            this.themeManager.updateContainerThemeClass(currentTheme.mode);\n        }\n    }\n}\n"],"names":["Debug","ChunkUtils","Selectors","ChunkRenderer","ChunkSelectionHandler","MergeContentGenerator","ChunkManager","diffViewer","_classCallCheck","chunks","oldContent","newContent","chunkElements","renderer","selectionHandler","contentGenerator","SELECTED_STATE","DIFF","CHUNK_SELECTED","name","UNSELECTED_STATE","CHUNK_UNSELECTED","_performanceMetrics","initTime","renderTime","chunkCount","log","_createClass","key","value","initChunks","diffData","startTime","performance","now","clearCache","old","length","forEach","chunk","conflict","concat","diffNavigator","updateCounter","endTime","toFixed","validateChunkStructure","renderChunks","visualStateManager","initialize","setupChunkSelection","initChunkElements","msPerChunk","Math","max","toggleChunkSelection","chunkId","side","state","generateMergedContent","selections","getSelections","generateFileFromLines","lines","_this","index","elements","getChunkElements","id","sortedElements","sortElementsByLineNumber","warn","initializedCount","filter","Boolean","error","anyChunkElements","document","querySelectorAll","CHUNK","anyChunkIdElements","validChunks","invalidChunks","type","valid","invalid","total","getPerformanceMetrics","metrics","_objectSpread","getMetrics","cacheStats","getCacheStats","get","onSelectionChange","NavigationCounter","NavigationUIBuilder","ConflictNavigator","DiffNavigator","initializeImmediately","arguments","undefined","currentChunkIndex","chunkManager","navigationCounter","uiBuilder","conflictNavigator","initNavigation","_this$diffViewer$chun","configChunks","diffConfig","addNavigationButtons","setupKeyboardShortcuts","navigateToFirstConflict","disableButtons","ui","createNavigationUI","setCounterElement","counter","setButtons","prevButton","nextButton","disabled","textContent","addEventListener","event","target","tagName","ctrlKey","metaKey","preventDefault","navigateToNextConflict","navigateToPrevConflict","navigateToChunk","destroy","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","_defineProperties","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","ResourceLoader","DOMUtils","ConfigUtils","EndpointDiscovery","TranslationManager","ThemeManager","ThemeSelector","SyntaxHighlighter","ThemeToggle","MergeHandler","ScrollSynchronizer","IconMarkerManager","LayoutManager","ModalManager","DiffViewer","_window$diffConfig","_window$diffConfig2","_window$diffConfig3","_window$diffConfig4","_window$diffConfig5","_window$diffConfig6","_window$diffConfig7","_window$diffConfig8","_window$diffConfig9","options","defaultOptions","lang","debug","logLevel","theme","defaultFamily","defaultMode","showSelector","apiEndpoint","config","mergeConfigurations","window","runtimeProps","serverSaveEnabled","fileRefId","oldFileRefId","newFileName","oldFileName","isIdentical","filepath","demoEnabled","mainLoaderId","translationManager","getInstance","isInitialized","translations","container","querySelector","VIEWER","_initializeServices","_createComponents","resourceLoader","themeManager","themeSelector","modalManager","syntaxHighlighter","themeToggle","browserUIManager","THEME","TOGGLE","CONTAINER","WRAPPER","mergeHandler","scrollSynchronizer","iconMarkerManager","layoutManager","_initialize","_callee","_callee$","_context","_initializeData","_loadResources","_renderUI","_setupUIFeatures","_showDemoModeWarning","initModals","t0","_handleInitializationError","errorText","errorMessage","createElement","className","UTILITY","ALERT_DANGER","innerHTML","message","appendChild","style","display","_initializeData2","_callee2","_this$runtimeProps$di","_this$runtimeProps$di2","_this$runtimeProps$di3","_callee2$","_context2","_loadResources2","_callee3","currentTheme","_callee3$","_context3","highlightJsLoaded","loadHighlightJs","getCurrentTheme","applyTheme","family","mode","_renderUI2","_callee4","_this$runtimeProps$di4","_diffContainer$parent","_diffContainer$parent2","containerWrapper","themeSwitcher","diffContainer","_callee4$","_context4","highlightAll","toggleClass","classList","contains","remove","SWITCHER","parentNode","insertBefore","_setupUIFeatures2","_callee5","diffLoadedEvent","_callee5$","_context5","setupSynchronizedScrolling","initializeIconMarkers","CustomEvent","detail","timestamp","Date","viewer","dispatchEvent","_this$browserUIManage","AlertManager","alertManager","comparisonForm","showAlert","dismissable","translate","targetElement","placement","timeout","updateConfig","newConfig","updateRuntimeProps","props","getConfig","getRuntimeProps","_window$diffConfig10","_window$diffConfig11","_window$diffConfig12","_window$diffConfig13","windowDiffConfig","hasFileRefId","hasOldFileRefId","hasNewFileName","hasOldFileName","initializeRuntimeProps","_window$diffConfig14","_window$diffConfig15","_window$diffConfig16","_window$diffConfig17","_window$diffConfig18","_window$diffConfig19","isContentBeautified","isBeautified","_getEndpoint","_callee6","endpointName","endpointDiscovery","endpoint","_this$config","defaultEndpoints","_callee6$","_context6","getEndpoint","apiEndpoints","_x","setBrowserUIManager","MergePreviewManager","MergeUIController","MergeOperationHandler","previewManager","uiController","operationHandler","setupLocalOnlyControls","previewMerge","handlePreviewClick","getMergedContent","proceedWithMerge","mergeType","countUnresolvedConflicts","showConflictModal","unresolvedCount","highlightUnresolvedChunks","createAlertElement","resolved","success_message","showSuccess","showWarning","MergeContentFormatter","languageMap","LoaderManager","language","setLanguage","_loadHighlightJs","loadSyntaxHighlighterCore","hljs","getElements","LINE_CONTENT","LINE_CONTENT_EMPTY","LINE_PLACEHOLDER","codeElements","Array","from","el","trim","loaderId","loaderManager","loadingMessage","showLoader","fullscreen","zIndex","batchSize","processBatch","hideLoader","duration","end","min","highlightElement","progress","round","progressMessage","replace","updateLoaderMessage","requestAnimationFrame","setTimeout","element","withLineNumbers","languageClasses","split","cls","startsWith","add","resetHighlighting","lineNumbersBlock","_setLanguage","_runtimeProps$diffDat","newLanguage","sourceUsed","extension","includes","toLowerCase","loadedLanguages","has","loadLanguage","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","bind","_inherits","_setPrototypeOf","BaseSingleton","instance","_BaseSingleton","_isFirstInstance","initialized","availableThemes","defaultTheme","listeners","savedFamily","localStorage","getItem","savedMode","getThemeUrl","_this$availableThemes","_this$availableThemes2","fallbackToDefaults","alternateMode","themeExists","_this$availableThemes3","getAvailableThemeFamilies","getAvailableModesForFamily","_this$availableThemes4","getThemeCdnVersion","getThemeCdnBase","getStandardThemeUrl","_applyTheme","themeUrl","activeTheme","themeLink","getAttribute","loadCSS","link","updateContainerThemeClass","setItem","notifyListeners","_x2","getElementById","DARK","LIGHT","MODE_PREFIX","_setThemeMode","setThemeMode","_x3","_setThemeFamily","setThemeFamily","_x4","addListener","listener","_this2","_loadInitialTheme","loadInitialTheme","selectElement","boundHandleThemeChange","handleThemeChange","_isThemeSelectorEnabled","existingSelector","SELECTOR","updateSelector","removeEventListener","selectorElements","generateThemeSelector","populated","populateSelectorOptions","createSelectorElement","addSelectorToDOM","_this$diffViewer","_this$diffViewer2","selector","_this3","count","themeKey","createAndAppendElement","attributes","selected","content","formatThemeName","THEME_SELECTOR","MARGIN_END_3","classes","FORM_SELECT","themeName","map","word","toUpperCase","join","themeSwitcherContainer","getElement","firstChild","optionsCount","_this$diffViewer3","_this4","selectedTheme","showThemeLoading","hideThemeLoading","toggleElementId","containerId","toggleElement","checked","handleToggle","updateToggle","isDark","newMode"],"sourceRoot":""}