{"version":3,"file":"text-compare.min.js","mappings":"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","sources":["webpack://diff-files/webpack/universalModuleDefinition","webpack://diff-files/./src/components/browser/TextCompareManager.js","webpack://diff-files/./src/constants/Selectors.js","webpack://diff-files/./src/utils/AlertManager.js","webpack://diff-files/./src/utils/BaseSingleton.js","webpack://diff-files/./src/utils/Debug.js","webpack://diff-files/./src/utils/DiffConfigManager.js","webpack://diff-files/./src/utils/EndpointDiscovery.js","webpack://diff-files/./src/utils/LoaderManager.js","webpack://diff-files/./src/utils/TranslationManager.js","webpack://diff-files/webpack/bootstrap","webpack://diff-files/webpack/runtime/define property getters","webpack://diff-files/webpack/runtime/hasOwnProperty shorthand","webpack://diff-files/webpack/runtime/make namespace object","webpack://diff-files/./src/text-compare.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","/**\n * Text Compare Manager\n * Handles text comparison and diff visualization\n *\n * This component is responsible for the text comparison UI in diff-viewer/text-compare.html\n */\n\nimport Selectors from '../../constants/Selectors';\nimport { Debug } from '../../utils/Debug';\nimport { EndpointDiscovery } from '../../utils/EndpointDiscovery';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport AlertManager from '../../utils/AlertManager';\nimport { DiffConfigManager } from '../../utils/DiffConfigManager';\n\n/**\n * Manages the text comparison UI and functionality\n */\nexport class TextCompareManager {\n    /**\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        // Initialize the DiffConfigManager with options\n        const configManager = DiffConfigManager.getInstance();\n        configManager.initialize({\n            debug: true,\n            logLevel: 3,\n            ...options\n        });\n\n        // Initialize Debug with configuration settings from the manager\n        Debug.initialize(window.diffConfig.debug, '[DiffViewer]', window.diffConfig.logLevel);\n        Debug.log('TextCompareManager: Constructor called', null, 2);\n\n        // DOM Elements\n        this.form = document.getElementById('text-comparison-form');\n        this.oldTextInput = document.getElementById('old-text');\n        this.newTextInput = document.getElementById('new-text');\n        this.loadingMessage = document.getElementById('loading-message');\n        this.errorMessage = document.getElementById('error-message');\n        this.containerWrapper = document.getElementById('vdm-container__wrapper');\n\n        // Initialize endpoint discovery\n        this.endpointDiscovery = EndpointDiscovery.getInstance();\n\n        // Initialize translation manager\n        this.translationManager = TranslationManager.getInstance();\n\n        // Note: Async initialization is moved to the initialize() method\n        // DO NOT call this.init() here directly\n    }\n\n    /**\n     * Initialize the TextCompareManager\n     * This method should be called after creating an instance\n     * @returns {Promise<TextCompareManager>} The initialized instance\n     */\n    async initialize() {\n        Debug.log('TextCompareManager: Starting initialization', null, 2);\n\n        // Call the init method to set up event listeners and load language settings\n        await this.init();\n\n        // Return this instance for method chaining\n        return this;\n    }\n\n    /**\n     * Initialize event listeners\n     * @returns {Promise<void>}\n     */\n    async init() {\n        Debug.log('TextCompareManager: Initializing', null, 2);\n\n        if (this.form) {\n            this.form.addEventListener('submit', (event) => this.handleFormSubmit(event));\n        } else {\n            Debug.warn('TextCompareManager: Form element not found', null, 1);\n        }\n\n        // Load language settings on initialization and await it to complete\n        await this.loadLanguageSettings();\n\n        // Add a debug log to confirm language settings after initialization\n        Debug.log(`TextCompareManager: Initialized with language: ${this.translationManager.getLanguage()}`, null, 2);\n\n        Debug.log('TextCompareManager: Initialization complete', null, 2);\n    }\n\n    /**\n     * Load language settings from the API\n     * @returns {Promise} A promise that resolves when language settings are loaded\n     */\n    async loadLanguageSettings() {\n        // Replace console logs with Debug utility\n        Debug.log('TextCompareManager: Loading language settings - START', null, 2);\n\n        try {\n            // Try to get config endpoint from discovery service\n            const configEndpoint = await this.endpointDiscovery.getEndpoint('endpointsConfig');\n            Debug.log('TextCompareManager: Config endpoint', configEndpoint, 3);\n\n            // Fetch configuration including languages\n            Debug.log('TextCompareManager: Fetching from endpoint', configEndpoint, 3);\n            const response = await fetch(configEndpoint);\n\n            if (!response.ok) {\n                Debug.error(`Failed to fetch config: ${response.status} ${response.statusText}`);\n                throw new Error(`Failed to fetch config: ${response.statusText}`);\n            }\n\n            const configData = await response.json();\n            Debug.log('TextCompareManager: Received config data', configData, 3);\n\n            // If we have language settings, apply them to translation manager\n            if (configData.lang && configData.translations) {\n                Debug.log(`TextCompareManager: Found language settings (${configData.lang})`, null, 2);\n\n                // Log translation manager before initialization\n                Debug.log('TranslationManager before initialization', {\n                    lang: this.translationManager.getLanguage(),\n                    initialized: this.translationManager.isInitialized()\n                }, 3);\n\n                this.translationManager.initialize(configData.lang, configData.translations);\n\n                // Log translation manager after initialization\n                Debug.log('TranslationManager after initialization', {\n                    lang: this.translationManager.getLanguage(),\n                    initialized: this.translationManager.isInitialized()\n                }, 3);\n\n                // Update diffConfig with the new translations\n                const configManager = DiffConfigManager.getInstance();\n                configManager.update({\n                    lang: configData.lang,\n                    translations: configData.translations\n                });\n\n                Debug.log('Global diffConfig updated', { lang: window.diffConfig.lang }, 2);\n            } else {\n                Debug.warn('Language settings not found in config response', configData, 1);\n            }\n\n            Debug.log('TextCompareManager: Loading language settings - END', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('TextCompareManager: Error loading language settings', error, 1);\n            // Continue without language settings - will use defaults\n            return false;\n        }\n    }\n\n    /**\n     * Handle form submission\n     * @param {Event} event - Form submit event\n     */\n    async handleFormSubmit(event) {\n        // Prevent default form submission\n        event.preventDefault();\n\n        Debug.log('TextCompareManager: Handling text comparison submission', null, 2);\n\n        // Get the LoaderManager instance\n        const loaderManager = LoaderManager.getInstance();\n        // Get the TranslationManager instance\n        const translationManager = TranslationManager.getInstance();\n        // Get the AlertManager instance\n        const alertManager = AlertManager.getInstance();\n\n        // Clear any existing alerts\n        alertManager.hideAlert();\n\n        // Show an early loader before starting the process\n        const loaderId = loaderManager.showEarlyLoader(translationManager.get('loadingContent', 'Loading text comparison...'));\n\n        try {\n            // Make sure language settings are loaded before proceeding\n            await this.loadLanguageSettings();\n\n            // Reset diffConfig\n            this.resetConfig();\n\n            // Get text data\n            const textData = this.getTextData();\n\n            // Configure diff parameters\n            this.configureDiff(textData);\n\n            // Update loader message for processing diff\n            loaderManager.updateLoaderMessage(loaderId, translationManager.get('processingText', 'Processing text content...'));\n\n            // Process diff with API\n            const result = await this.processDiff();\n\n            // If contents are identical, stop here - we've already shown the message\n            if (result._identicalContent) {\n                Debug.log('TextCompareManager: Skipping diff viewer for identical content', null, 2);\n                // Hide the loader since we're not continuing\n                loaderManager.hideMainLoader(loaderId);\n                return;\n            }\n\n            // Update diffConfig with API response using the centralized manager\n            DiffConfigManager.getInstance().setDiffConfig(result);\n\n            // Update loader message before initializing diff viewer\n            loaderManager.updateLoaderMessage(loaderId, translationManager.get('renderingDiff', 'Initializing diff viewer...'));\n\n            // Initialize diff viewer\n            await this.initializeDiffViewer();\n\n            // Note: We don't hide the loader here because the DiffViewer will adopt it\n        } catch (error) {\n            Debug.error('TextCompareManager: Error processing diff', error, 1);\n            this.handleError(error);\n\n            // Hide the loader if there's an error\n            loaderManager.hideMainLoader(loaderId);\n        }\n    }\n\n    /**\n     * Reset configuration\n     */\n    resetConfig() {\n        Debug.log('TextCompareManager: Resetting configuration', null, 3);\n\n        // Get the current configuration\n        const currentConfig = window.diffConfig;\n\n        // Keep language settings when resetting\n        const lang = currentConfig.lang;\n        const translations = currentConfig.translations;\n\n        // Reset the configuration\n        const configManager = DiffConfigManager.getInstance();\n        configManager.reset({\n            debug: true,\n            logLevel: 3,\n            old: {},\n            new: {},\n            lang,\n            translations\n        });\n\n        // Clean up previous instances\n        this.cleanupPreviousInstance();\n    }\n\n    /**\n     * Clean up previous instances\n     */\n    cleanupPreviousInstance() {\n        // Clean up previous instances if they exist\n        if (window.diffViewer) {\n            try {\n                Debug.log('TextCompareManager: Cleaning up previous DiffViewer instance', null, 2);\n                window.diffViewer.destroy();\n                window.diffViewer = null;\n            } catch (e) {\n                Debug.warn('TextCompareManager: Error destroying previous diffViewer', e, 1);\n            }\n        }\n\n        if (window.vdmBrowserUIManager) {\n            try {\n                Debug.log('TextCompareManager: Cleaning up previous BrowserUIManager instance', null, 2);\n                window.vdmBrowserUIManager.destroy();\n                window.vdmBrowserUIManager = null;\n            } catch (e) {\n                Debug.warn('TextCompareManager: Error destroying previous BrowserUIManager', e, 1);\n            }\n        }\n    }\n\n    /**\n     * Get text data from textareas\n     * @returns {Object} Text data object\n     */\n    getTextData() {\n        Debug.log('TextCompareManager: Getting text data from inputs', null, 3);\n\n        const oldText = this.oldTextInput.value;\n        const newText = this.newTextInput.value;\n\n        if (!oldText || !newText) {\n            throw new Error('Please enter both old and new text');\n        }\n\n        return {\n            old: {\n                content: oldText\n            },\n            new: {\n                content: newText\n            }\n        };\n    }\n\n    /**\n     * Configure diff parameters\n     * @param {Object} textData - Text data object\n     */\n    configureDiff(textData) {\n        Debug.log('TextCompareManager: Configuring diff parameters', textData, 3);\n\n        const configManager = DiffConfigManager.getInstance();\n\n        // Update the configuration with text data\n        configManager.update({\n            old: {\n                type: 'text',\n                content: textData.old.content\n            },\n            new: {\n                type: 'text',\n                content: textData.new.content\n            }\n        });\n\n        // Set language if provided\n        if (textData.language) {\n            configManager.set('language', textData.language);\n        }\n    }\n\n    /**\n     * Process diff with API\n     * @returns {Promise<Object>} API response\n     */\n    async processDiff() {\n        Debug.log('TextCompareManager: Processing diff with API', null, 2);\n\n        try {\n            // Check if contents are identical before sending to API\n            if (window.diffConfig.old.content === window.diffConfig.new.content) {\n                // Get translation manager\n                const translationManager = TranslationManager.getInstance();\n\n                // Use the generic identicalContentMessage translation key\n                const message = translationManager.get('identicalContentMessage', 'The contents are identical. There\\'s nothing to merge.');\n\n                this.handleIdenticalContent(message);\n                return {\n                    _identicalContent: true,\n                    success: true,\n                    message: message\n                };\n            }\n\n            // Get API endpoint with endpoint discovery or fallback\n            let apiEndpoint = null;\n\n            // Try to get endpoint from discovery service\n            try {\n                apiEndpoint = await this.endpointDiscovery.getEndpoint('diffProcessor');\n                Debug.log('TextCompareManager: Using discovered endpoint', apiEndpoint, 2);\n            } catch (error) {\n                // We'll handle this with the fallback below\n                Debug.warn('TextCompareManager: Endpoint discovery failed', error, 1);\n            }\n\n            // Use fallback if endpoint discovery failed\n            if (!apiEndpoint) {\n                apiEndpoint = window.diffConfig?.apiEndpoint || '../api/diff-processor.php';\n                Debug.warn('TextCompareManager: Using fallback endpoint', apiEndpoint, 1);\n            }\n\n            // Get CSRF token if present in the page\n            const csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content');\n\n            // Prepare request headers\n            const headers = {\n                'Content-Type': 'application/json'\n            };\n\n            // Add CSRF token if available\n            if (csrfToken) {\n                headers['X-CSRF-Token'] = csrfToken;\n                DiffConfigManager.getInstance().set('csrfToken', csrfToken);\n            }\n\n            // Send data to API\n            const response = await fetch(apiEndpoint, {\n                method: 'POST',\n                headers,\n                body: JSON.stringify(window.diffConfig)\n            });\n\n            if (!response.ok) {\n                throw new Error(`API request failed: ${response.status} ${response.statusText}`);\n            }\n\n            const result = await response.json();\n\n            if (result.error) {\n                throw new Error(result.error);\n            }\n\n            // Check if contents are identical\n            if (result.identical === true) {\n                // Handle identical content case\n                this.handleIdenticalContent(result.message || \"The texts contain identical content.\");\n                // Mark the result with a special flag to indicate identical content\n                result._identicalContent = true;\n                return result;\n            }\n\n            // Comprehensive Fix: Move all important properties from config to root level\n            if (result.config) {\n                const importantProps = [\n                    'diffData',\n                    'serverSaveEnabled',\n                    'fileRefId',\n                    'oldFileRefId',\n                    'newFileName',\n                    'oldFileName',\n                    'filepath',\n                    'demoEnabled'\n                ];\n\n                for (const prop of importantProps) {\n                    if (result.config[prop] !== undefined &&\n                        (result[prop] === undefined ||\n                         (prop === 'diffData' && (!result[prop].chunks || result[prop].chunks.length === 0)))) {\n                        Debug.log(`TextCompareManager: Moving ${prop} from config to root level`, null, 2);\n                        result[prop] = result.config[prop];\n                    }\n                }\n            }\n\n            return result;\n        } catch (error) {\n            Debug.error('TextCompareManager: API processing failed', error, 1);\n            throw error;\n        }\n    }\n\n    /**\n     * Initialize diff viewer\n     * @returns {Promise<boolean>} Success status\n     */\n    async initializeDiffViewer() {\n        Debug.log('TextCompareManager: Initializing diff viewer', null, 2);\n\n        try {\n            // Check if enableDiffViewer function is available\n            if (typeof window.enableDiffViewer === 'function') {\n                Debug.log('TextCompareManager: Using enableDiffViewer function', null, 2);\n\n                // Call the enableDiffViewer function\n                const result = await window.enableDiffViewer();\n                return result;\n            } else {\n                Debug.error('TextCompareManager: enableDiffViewer function not available', null, 1);\n                throw new Error('enableDiffViewer function not available. Check that diff-viewer.min.js is properly loaded.');\n            }\n        } catch (error) {\n            Debug.error('TextCompareManager: Error initializing diff viewer', error, 1);\n            throw error;\n        }\n    }\n\n    /**\n     * Handle identical content case\n     * @param {string} message - Message to display\n     */\n    handleIdenticalContent(message) {\n        Debug.log('TextCompareManager: Texts contain identical content', message, 2);\n\n        // Get translation manager\n        const translationManager = TranslationManager.getInstance();\n\n        // Get loader manager to hide any active loaders\n        const loaderManager = LoaderManager.getInstance();\n\n        // Get the localized message\n        const localizedMessage = translationManager.get('filesIdenticalMessage', '<strong>Contents are identical</strong><br>The text snippets you are comparing are identical. No differences found.');\n        Debug.log('Final message being displayed', localizedMessage, 2);\n\n        // Hide any active loaders\n        loaderManager.hideMainLoader();\n\n        // Use AlertManager to create the alert\n        const alertManager = AlertManager.getInstance();\n\n        // Find the container wrapper\n        const containerWrapper = document.querySelector(Selectors.CONTAINER.WRAPPER);\n        if (!containerWrapper) {\n            Debug.error('TextCompareManager: Container wrapper not found for alert display');\n            // If no container wrapper, use the default alert mechanism as a fallback\n            alertManager.showInfo(localizedMessage, {\n                timeout: 0,\n                translate: false\n            });\n            return;\n        }\n\n        // Make sure the container wrapper is visible\n        containerWrapper.classList.remove('vdm-d-none');\n\n        // Create alert container if it doesn't exist\n        let alertContainer = containerWrapper.querySelector('.vdm-alert-container');\n        if (!alertContainer) {\n            alertContainer = document.createElement('div');\n            alertContainer.className = 'vdm-alert-container';\n\n            // Find .vdm-user-content if it exists, otherwise prepend to containerWrapper\n            const userContent = containerWrapper.querySelector('.vdm-user-content');\n            if (userContent) {\n                userContent.after(alertContainer);\n            } else {\n                containerWrapper.prepend(alertContainer);\n            }\n        }\n\n        // Set alert container as the container for the alert\n        alertManager.container = alertContainer;\n\n        // Show the alert in the proper container\n        alertManager.showInfo(localizedMessage, {\n            timeout: 0, // Don't auto-dismiss\n            translate: false, // Message is already translated\n            className: 'vdm-mb-3', // Add margin bottom for spacing\n            container: alertContainer\n        });\n\n        // Hide the diff viewer elements but keep our alert visible\n        if (this.containerWrapper) {\n            // Get any existing diffViewer content inside the container and hide it\n            const diffContainer = this.containerWrapper.querySelector(Selectors.DIFF.CONTAINER);\n            if (diffContainer) {\n                diffContainer.style.display = 'none';\n            }\n\n            Debug.log('TextCompareManager: Hidden diff container for identical content', null, 2);\n        }\n\n        // Make sure any existing diff viewer instances are destroyed\n        this.cleanupPreviousInstance();\n\n        // Set a flag indicating we've handled identical content\n        this._identicalContentHandled = true;\n    }\n\n    /**\n     * Handle error\n     * @param {Error} error - Error object\n     */\n    handleError(error) {\n        Debug.error('TextCompareManager: Error processing diff', error, 1);\n\n        // Get translation manager\n        const translationManager = TranslationManager.getInstance();\n\n        // Get loader manager to hide any active loaders\n        const loaderManager = LoaderManager.getInstance();\n\n        // Hide any active loaders\n        loaderManager.hideMainLoader();\n\n        // Get translated error message\n        const errorMessage = translationManager.get('errorProcessingText', 'Error processing content. Please check your input and try again.');\n\n        // Use AlertManager to create the alert\n        const alertManager = AlertManager.getInstance();\n\n        // Find the container wrapper\n        const containerWrapper = document.querySelector(Selectors.CONTAINER.WRAPPER);\n        if (!containerWrapper) {\n            Debug.error('TextCompareManager: Container wrapper not found for error display');\n            // If no container wrapper, use the default alert mechanism as a fallback\n            alertManager.showError(errorMessage, {\n                timeout: 0,\n                translate: false\n            });\n            return;\n        }\n\n        // Make sure the container wrapper is visible\n        containerWrapper.classList.remove('vdm-d-none');\n\n        // Create alert container if it doesn't exist\n        let alertContainer = containerWrapper.querySelector('.vdm-alert-container');\n        if (!alertContainer) {\n            alertContainer = document.createElement('div');\n            alertContainer.className = 'vdm-alert-container';\n\n            // Find .vdm-user-content if it exists, otherwise prepend to containerWrapper\n            const userContent = containerWrapper.querySelector('.vdm-user-content');\n            if (userContent) {\n                userContent.after(alertContainer);\n            } else {\n                containerWrapper.prepend(alertContainer);\n            }\n        }\n\n        // Set alert container as the container for the alert\n        alertManager.container = alertContainer;\n\n        // Show the alert in the proper container\n        alertManager.showError(errorMessage, {\n            timeout: 0, // Don't auto-dismiss\n            translate: false, // Message is already translated\n            className: 'vdm-mb-3', // Add margin bottom for spacing\n            container: alertContainer\n        });\n\n        // Hide the diff viewer elements but keep our alert visible\n        if (this.containerWrapper) {\n            // Get any existing diffViewer content inside the container and hide it\n            const diffContainer = this.containerWrapper.querySelector(Selectors.DIFF.CONTAINER);\n            if (diffContainer) {\n                diffContainer.style.display = 'none';\n            }\n\n            Debug.log('TextCompareManager: Hidden diff container due to error', null, 2);\n        }\n\n        // Make sure any existing diff viewer instances are destroyed\n        this.cleanupPreviousInstance();\n    }\n}\n\n// Export the class\nexport default TextCompareManager;\n","/**\n * Centralized selectors for DOM elements\n * Using this object allows for easier maintenance and refactoring\n * All selectors include their prefix (# for IDs, . for classes)\n */\n\n// Import Debug for warning messages\nimport { Debug } from '../utils/Debug';\n\n// Create a proxy handler to intercept property access\nconst selectorHandler = {\n  get(target, prop) {\n    // Handle the name() method\n    if (prop === 'name') {\n      return function() {\n        if (target.startsWith('#') || target.startsWith('.')) {\n          return target.substring(1);\n        } else {\n          Debug.warn(`Selector '${target}' doesn't start with '.' or '#' but name() was called on it`);\n          return target;\n        }\n      };\n    }\n\n    // Add toString method to allow direct usage in DOM methods\n    if (prop === 'toString' || prop === Symbol.toPrimitive) {\n      return function() {\n        return String(target);\n      };\n    }\n\n    // Return the original property\n    return target[prop];\n  }\n};\n\n// Function to process all selectors with the proxy\nconst processSelectors = (obj) => {\n  const result = {};\n\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      result[key] = processSelectors(obj[key]);\n    } else if (typeof obj[key] === 'string') {\n      // Apply the proxy to each selector string\n      result[key] = new Proxy(Object(String(obj[key])), selectorHandler);\n    } else {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\n// Override utility selectors with values from window.diffConfig.ui if available\nconst getUtilitySelectors = () => {\n  // Default utility selectors\n  const defaultUtilitySelectors = {\n    BUTTON: '.vdm-btn',\n    BUTTON_PRIMARY: '.vdm-btn--primary',\n    BUTTON_SECONDARY: '.vdm-btn--secondary',\n    BUTTON_INFO: '.vdm-btn--info',\n    BUTTON_SUCCESS: '.vdm-btn--success',\n    BUTTON_WARNING: '.vdm-btn--warning',\n    BUTTON_DANGER: '.vdm-btn--danger',\n    BUTTON_FLAT: '.vdm-btn--flat',\n    BUTTON_SMALL: '.vdm-btn-sm',\n    BUTTON_EXTRA_SMALL: '.vdm-btn-xs',\n    BUTTON_LARGE: '.vdm-btn-lg',\n    ALERT: '.vdm-alert',\n    ALERT_PREFIX: '.vdm-alert--',\n    ALERT_INFO: '.vdm-alert--info',\n    ALERT_SUCCESS: '.vdm-alert--success',\n    ALERT_WARNING: '.vdm-alert--warning',\n    ALERT_DANGER: '.vdm-alert--danger',\n    FORM_SELECT: '.vdm-select',\n    FORM_SELECT_SM: '.vdm-select-sm',\n    FLEX: '.vdm-d-flex',\n    FLEX_COLUMN: '.vdm-flex-column',\n    JUSTIFY_CONTENT_BETWEEN: '.vdm-justify-content-between',\n    JUSTIFY_CONTENT_CENTER: '.vdm-justify-content-center',\n    ALIGN_ITEMS_CENTER: '.vdm-align-items-center',\n    ALIGN_ITEMS_STRETCH: '.vdm-align-items-stretch',\n    PADDING_2: '.vdm-p-2',\n    PADDING_3: '.vdm-p-3',\n    MARGIN_2: '.vdm-m-2',\n    MARGIN_TOP_2: '.vdm-mt-2',\n    MARGIN_BOTTOM_2: '.vdm-mb-2',\n    MARGIN_START_1: '.vdm-ms-1',\n    MARGIN_START_2: '.vdm-ms-2',\n    MARGIN_END_2: '.vdm-me-2',\n    MARGIN_END_3: '.vdm-me-3',\n    MARGIN_X_1: '.vdm-mx-1',\n    MARGIN_Y_2: '.vdm-my-2',\n    MARGIN_END_1: '.vdm-me-1'\n  };\n\n  // If window.diffConfig exists and has UI settings, override with those\n  if (window.diffConfig && window.diffConfig.ui) {\n    try {\n      // Map PHP ui settings to our selector format\n      if (window.diffConfig.ui.button) {\n        defaultUtilitySelectors.BUTTON = '.' + window.diffConfig.ui.button;\n      }\n      if (window.diffConfig.ui.buttonPrimary) {\n        defaultUtilitySelectors.BUTTON_PRIMARY = '.' + window.diffConfig.ui.buttonPrimary;\n      }\n      if (window.diffConfig.ui.buttonSecondary) {\n        defaultUtilitySelectors.BUTTON_SECONDARY = '.' + window.diffConfig.ui.buttonSecondary;\n      }\n      if (window.diffConfig.ui.buttonInfo) {\n        defaultUtilitySelectors.BUTTON_INFO = '.' + window.diffConfig.ui.buttonInfo;\n      }\n      if (window.diffConfig.ui.buttonSuccess) {\n        defaultUtilitySelectors.BUTTON_SUCCESS = '.' + window.diffConfig.ui.buttonSuccess;\n      }\n      if (window.diffConfig.ui.buttonWarning) {\n        defaultUtilitySelectors.BUTTON_WARNING = '.' + window.diffConfig.ui.buttonWarning;\n      }\n      if (window.diffConfig.ui.buttonDanger) {\n        defaultUtilitySelectors.BUTTON_DANGER = '.' + window.diffConfig.ui.buttonDanger;\n      }\n      if (window.diffConfig.ui.buttonFlat) {\n        defaultUtilitySelectors.BUTTON_FLAT = '.' + window.diffConfig.ui.buttonFlat;\n      }\n      if (window.diffConfig.ui.alert) {\n        defaultUtilitySelectors.ALERT = '.' + window.diffConfig.ui.alert;\n      }\n      if (window.diffConfig.ui.alertInfo) {\n        defaultUtilitySelectors.ALERT_INFO = '.' + window.diffConfig.ui.alertInfo;\n      }\n      if (window.diffConfig.ui.alertSuccess) {\n        defaultUtilitySelectors.ALERT_SUCCESS = '.' + window.diffConfig.ui.alertSuccess;\n      }\n      if (window.diffConfig.ui.alertWarning) {\n        defaultUtilitySelectors.ALERT_WARNING = '.' + window.diffConfig.ui.alertWarning;\n      }\n      if (window.diffConfig.ui.alertDanger) {\n        defaultUtilitySelectors.ALERT_DANGER = '.' + window.diffConfig.ui.alertDanger;\n      }\n\n      Debug.log('Overriding UI selectors with config values', window.diffConfig.ui, 2);\n    } catch (e) {\n      Debug.error('Error applying UI selector overrides from config', e, 1);\n    }\n  }\n\n  return defaultUtilitySelectors;\n};\n\nconst baseSelectors = {\n    // Code display\n    CODE: {\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_EMPTY: '.vdm-code__line--empty',\n        LINE_NUMBER: '.vdm-code__line-number',\n        TABLE: '.vdm-code__table'\n    },\n\n    // Container elements\n    CONTAINER: {\n        ROOT: '#vdm-container',\n        WRAPPER: '#vdm-container__wrapper'\n    },\n\n    // Copy functionality\n    COPY: {\n        BUTTON: '.vdm-code__copy-btn',\n        COPIED: '.vdm-code__copy--copied',\n        ICON: '.vdm-code__copy-icon',\n        MODAL: {\n            ACTIONS: '.vdm-modal__copy-actions',\n            BUTTON: '.vdm-modal__copy-btn',\n            DIALOG: '.vdm-modal__copy-dialog',\n            INSTRUCTIONS: '.vdm-modal__copy-instructions',\n            TEXTAREA: '.vdm-modal__copy-textarea-container',\n            TEXTAREA_ELEM: '.vdm-modal__copy-textarea'\n        },\n        PROCESSING: '.vdm-code__copy--processing',\n        TEXT: '.vdm-code__copy-text'\n    },\n\n    // Diff viewer elements\n    DIFF: {\n        CHECK_ALL_BTN: '.vdm-check-all-btn',\n        CHUNK: '.vdm-diff__chunk',\n        CHUNK_SELECTED: '.vdm-diff__chunk--selected',\n        CHUNK_UNSELECTED: '.vdm-diff__chunk--unselected',\n        CONTAINER: '#vdm-diff__container',\n        CONTENT_WRAPPER: '#vdm-diff__content-wrapper',\n        LINE_ADD: '.vdm-diff__line--add',\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_CONTENT_EMPTY: '.vdm-code__line-content--empty',\n        LINE_DELETE: '.vdm-diff__line--delete',\n        LINE_PLACEHOLDER: '.vdm-diff__line--placeholder',\n        LINE_REPLACE_LEFT: '.vdm-diff__line--replace-left',\n        LINE_REPLACE_RIGHT: '.vdm-diff__line--replace-right',\n        // LOADING selector removed - use Selectors.LOADER.MAIN instead\n        PANE: '.vdm-diff__pane',\n        PANE_CONTENT: '.vdm-diff__pane-content',\n        PANE_HEADER: '.vdm-pane-header',\n        PANE_LEFT: '#vdm-diff__pane--left',\n        PANE_RIGHT: '#vdm-diff__pane--right',\n        PANES_CONTAINER: '.vdm-diff__panes-container',\n        PLACEHOLDER: '.vdm-diff__placeholder',\n        TABLE_WRAPPER: '.vdm-diff__table-wrapper',\n        VIEWER: '#vdm-diff__viewer'\n    },\n\n    // Icon markers\n    ICONS: {\n        COLUMN: '.vdm-icon__column',\n        MARKER: '.vdm-icon__marker',\n        MARKER_PLACEHOLDER: '.vdm-icon__marker--placeholder',\n        SELECT: '.vdm-icon__select',\n        SELECT_LEFT: '.vdm-icon__select--left',\n        SELECT_RIGHT: '.vdm-icon__select--right'\n    },\n\n    // Loader elements\n    LOADER: {\n        ACTIVE: '.vdm-loader--active',\n        CONTAINER: '.vdm-loader__container',\n        FULLSCREEN: '.vdm-loader--fullscreen',\n        INDICATOR: '#vdm-loader__indicator',\n        INLINE: '.vdm-loader--inline',\n        MAIN: '#vdm-diff__loading', // Main application loader (previously DIFF.LOADING)\n        SPINNER: '.vdm-loader__spinner',\n        TEXT: '.vdm-loader__text',\n        WRAPPER: '.vdm-loader__wrapper'\n    },\n\n    // Merge controls\n    MERGE: {\n        BUTTON_APPLY: '#vdm-merge__button--apply',\n        BUTTON_PREVIEW: '#vdm-merge__button--preview',\n        CONFLICT_MODAL: '#vdm-merge__conflict-modal',\n        CONTROLS_ACTIONS: '.vdm-merge-controls__actions',\n        DESTINATION_DROPDOWN: '#vdm-merge__destination-dropdown',\n        DESTINATION_TOGGLE: '#vdm-merge__destination-toggle',\n        GET_MERGED_RESULT_BTN: '#vdm-merge__get-merged-result-btn',\n        MODAL: '#vdm-merge__modal',\n        PREVIEW_CONTENT: '#vdm-merge__preview-content',\n        PREVIEW_MODAL: '#vdm-merge__preview-modal',\n        TOGGLE_ICON: '#vdm-merge-controls__toggle-icon',\n        TOGGLE_TEXT: '#vdm-merge-controls__toggle-text'\n    },\n\n    // Modal dialogs\n    MODAL: {\n        BACKDROP: '#vdm-modal-backdrop',\n        CLOSE: '.vdm-modal__close',\n        CLOSE_BTN: '.vdm-modal__close', // Changed from ID to class\n        CODE_COPY: '#vdm-modal--code-copy',\n        CONFIRM: '#vdm-modal--confirm',\n        CONFIRMATION_CONTENT: '#vdm-modal__confirmation-content',\n        CONTAINER: '.vdm-modal',\n        CONTENT: '.vdm-modal__content',\n        CONTINUE_BTN: '#vdm-modal__continue-btn',\n        COPY_CONTENT: '#vdm-modal__copy-content',\n        FIXED_FOOTER: '.vdm-modal--fixed-footer',\n        FOOTER: '.vdm-modal__footer',\n        FULLSCREEN: '.vdm-modal--fullscreen',\n        HEADER: '.vdm-modal__header',\n        HEADER_FIXED: '.vdm-modal__header--fixed',\n        MERGE_BTN: '#vdm-modal__merge-btn',\n        MESSAGE: '#vdm-modal__message',\n        PREVIEW: '#vdm-modal--preview',\n        PREVIEW_CONTENT: '.vdm-modal__preview-content',\n        PREVIEW_CONTENT_ID: '#vdm-merge__preview-content',\n        PREVIEW_FILENAME: '#vdm-modal__preview-filename',\n        TITLE: '.vdm-modal__title'\n    },\n\n    // Navigation\n    NAVIGATION: {\n        CONTAINER: '.vdm-nav__controls',\n        COUNTER: '#vdm-nav__counter',\n        COUNTER_ELEMENT: '.vdm-navigator__counter',\n        HIGHLIGHT: '.vdm-highlight',\n        NAV_CHUNK: '.vdm-nav__chunk',\n        NEXT_BUTTON: '#vdm-nav__button--next',\n        PREV_BUTTON: '#vdm-nav__button--prev'\n    },\n\n    // Status indicators\n    STATUS: {\n        LOADED: '.vdm-status__loaded',\n        RESOLVED: '.vdm-status__resolved',\n        SCROLLED: '.vdm-status__scrolled-horizontally',\n        UNRESOLVED: '.vdm-status__unresolved'\n    },\n\n    // Theme and appearance\n    THEME: {\n        DARK: '.vdm-theme--dark',\n        LIGHT: '.vdm-theme--light',\n        LOADING_INDICATOR: '#vdm-theme__loading-indicator',\n        MODE_PREFIX: '.vdm-theme',\n        SELECTOR: '#vdm-theme__selector',\n        SWITCHER: '#vdm-theme-switcher',\n        TOGGLE: '#vdm-theme__toggle'\n    },\n\n    // Theme switcher components\n    THEME_SWITCHER: {\n        CONTROL: '.vdm-theme-switcher__control',\n        LABEL: '.vdm-theme-switcher__label',\n        SLIDER: '.vdm-theme-switcher__slider',\n        SLIDER_ROUND: '.vdm-theme-switcher__slider--round',\n        WRAPPER: '.vdm-theme-switcher__wrapper'\n    },\n\n    // Theme selector components\n    THEME_SELECTOR: {\n        WRAPPER: '.vdm-theme-selector__wrapper'\n    },\n\n    // Tooltips\n    TOOLTIP: {\n        ARROW: '.vdm-tooltip__arrow',\n        CONTAINER: '.vdm-tooltip',\n        CONTENT: '.vdm-tooltip__content'\n    },\n\n    // Utility classes - these can be overridden from PHP config\n    UTILITY: getUtilitySelectors()\n};\n\n// Process the selectors to add the name functionality\nconst Selectors = processSelectors(baseSelectors);\n\nexport default Selectors;\n","import Selectors from '../constants/Selectors';\n\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * AlertManager - Centralized utility for managing alert messages\n *\n * This singleton class provides methods to display and hide alert messages\n * throughout the application in a consistent manner. It supports different types\n * of alerts including info, success, warning, and danger.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * AlertManager class\n *\n * Provides methods to display and hide alert messages throughout the application\n */\nexport class AlertManager extends BaseSingleton {\n    /**\n     * Initialize the AlertManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.containerId = 'vdm-alert-container';\n        this.activeAlert = null;\n        this.timeoutId = null;\n\n        // Ensure the alert container exists and store it in this.container\n        this.container = this._ensureContainer();\n\n        // Mark as initialized\n        this.initialized = true;\n\n        Debug.log('AlertManager: Initialized', null, 2);\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {AlertManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new AlertManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Ensure the alert container exists in the DOM\n     * @private\n     */\n    _ensureContainer() {\n        let container = document.getElementById(this.containerId);\n\n        if (!container) {\n            container = document.createElement('div');\n            container.id = this.containerId;\n            container.className = 'vdm-alert-container';\n            container.style.position = 'fixed';\n            container.style.top = '20px';\n            container.style.left = '50%';\n            container.style.transform = 'translateX(-50%)';\n            container.style.zIndex = '9999';\n            container.style.width = 'auto';\n            container.style.maxWidth = '90%';\n\n            document.body.appendChild(container);\n            Debug.log('AlertManager: Created alert container', null, 2);\n        }\n\n        return container;\n    }\n\n    /**\n     * Create and show an alert\n     * @param {string} message - The alert message\n     * @param {string} type - The alert type: 'success', 'info', 'warning', 'error'\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} - The alert element\n     */\n    showAlert(message, type, options = {}) {\n        Debug.log('AlertManager.showAlert called with type', type, 2);\n        Debug.log('AlertManager.showAlert message', message, 3);\n\n        // Default options\n        const defaultOptions = {\n            timeout: 5000,      // Auto-dismiss after 5 seconds (0 = no auto-dismiss)\n            dismissable: true,  // Show close button\n            translate: true,    // Translate message if TranslationManager is available\n            className: '',      // Additional CSS classes\n            container: null,    // Container element (defaults to this.container)\n            targetElement: null, // Target element to place alert relative to\n            placement: 'before' // Placement relative to targetElement ('before' or 'after')\n        };\n\n        const mergedOptions = { ...defaultOptions, ...options };\n\n        // Only use the container if we're not placing relative to a target element\n        const useContainer = !mergedOptions.targetElement && (mergedOptions.container || this.container);\n\n        Debug.log('AlertManager placement options', {\n            hasTargetElement: !!mergedOptions.targetElement,\n            placement: mergedOptions.placement,\n            useContainer: !!useContainer\n        }, 3);\n\n        // Create alert element\n        const alertElement = document.createElement('div');\n\n        // Get the base alert class from Selectors if available\n        const baseAlertClass = Selectors.UTILITY.ALERT ?\n            Selectors.UTILITY.ALERT.toString().substring(1) : // Remove leading '.'\n            'vdm-alert';\n\n        // Start with base class\n        let alertClass = baseAlertClass;\n\n        // Type-specific class - use the proper format with double hyphens\n        if (type) {\n            // Use proper format from Selectors if available\n            const typeClass = type === 'info' && Selectors.UTILITY.ALERT_INFO ?\n                Selectors.UTILITY.ALERT_INFO.toString().substring(1) : // Remove leading '.'\n                `${baseAlertClass}--${type}`; // Use the proper double-hyphen format\n\n            alertClass += ` ${typeClass}`;\n        }\n\n        // Add any custom classes\n        if (mergedOptions.className) {\n            alertClass += ` ${mergedOptions.className}`;\n        }\n\n        alertElement.className = alertClass;\n        Debug.log('Alert classnames', alertElement.className, 3);\n        Debug.log('Alert selector values', {\n            selectorBase: Selectors.UTILITY.ALERT ? Selectors.UTILITY.ALERT.toString() : 'vdm-alert',\n            selectorType: type ? `${baseAlertClass}--${type}` : 'none'\n        }, 3);\n\n        // Translate message if needed\n        let finalMessage = message;\n        if (mergedOptions.translate && typeof TranslationManager !== 'undefined') {\n            const translationManager = TranslationManager.getInstance();\n            if (translationManager && typeof translationManager.get === 'function') {\n                finalMessage = translationManager.get(message, message);\n            }\n        }\n\n        // Set content\n        alertElement.innerHTML = finalMessage;\n\n        // Add close button if dismissable\n        if (mergedOptions.dismissable) {\n            const closeButton = document.createElement('button');\n            // Fix the close button class to match the CSS definition\n            closeButton.className = 'vdm-alert__close';\n            closeButton.innerHTML = '&times;';\n            closeButton.setAttribute('aria-label', 'Close');\n            closeButton.setAttribute('type', 'button');\n            alertElement.appendChild(closeButton);\n\n            // Add click event for close button\n            closeButton.addEventListener('click', () => this.hideAlert(alertElement));\n            Debug.log('Close button', closeButton ? 'found' : 'not found', 3);\n        }\n\n        // Add to container or place relative to target element\n        if (mergedOptions.targetElement) {\n            Debug.log('AlertManager: Placing alert relative to target element', {\n                target: mergedOptions.targetElement,\n                placement: mergedOptions.placement\n            }, 3);\n\n            if (mergedOptions.placement === 'before') {\n                // Insert before the target element\n                mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement);\n            } else if (mergedOptions.placement === 'after') {\n                // Insert after the target element\n                if (mergedOptions.targetElement.nextSibling) {\n                    mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement.nextSibling);\n                } else {\n                    mergedOptions.targetElement.parentNode.appendChild(alertElement);\n                }\n            }\n        } else if (useContainer) {\n            // Regular container append if no target element is specified\n            useContainer.appendChild(alertElement);\n            Debug.log('Alert appended to container', null, 3);\n        } else {\n            // Fallback to body if no container and no target element\n            document.body.appendChild(alertElement);\n            Debug.log('Alert appended to body', null, 3);\n        }\n\n        // Store reference to the active alert\n        this.activeAlert = alertElement;\n\n        // Set up auto-dismiss\n        if (mergedOptions.timeout > 0) {\n            this.timeoutId = setTimeout(() => {\n                this.hideAlert(alertElement);\n            }, mergedOptions.timeout);\n        }\n\n        Debug.log('Returning alert element', alertElement, 3);\n        return alertElement;\n    }\n\n    /**\n     * Hide the current alert if one exists\n     * @param {HTMLElement} alertElement - Optional specific alert element to hide\n     */\n    hideAlert(alertElement = null) {\n        // Clear any existing timeout\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n\n        // If a specific alert element is provided, remove it\n        if (alertElement?.parentNode) {\n            alertElement.parentNode.removeChild(alertElement);\n            Debug.log('AlertManager: Hiding specific alert', null, 3);\n\n            // If this was the active alert, clear the reference\n            if (this.activeAlert === alertElement) {\n                this.activeAlert = null;\n            }\n            return;\n        }\n\n        // Otherwise, remove the active alert if it exists\n        if (this.activeAlert?.parentNode) {\n            this.activeAlert.parentNode.removeChild(this.activeAlert);\n            this.activeAlert = null;\n            Debug.log('AlertManager: Hiding active alert', null, 3);\n        }\n    }\n\n    /**\n     * Show an info alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showInfo(message, options = {}) {\n        return this.showAlert(message, 'info', options);\n    }\n\n    /**\n     * Show a success alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showSuccess(message, options = {}) {\n        return this.showAlert(message, 'success', options);\n    }\n\n    /**\n     * Show a warning alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showWarning(message, options = {}) {\n        return this.showAlert(message, 'warning', options);\n    }\n\n    /**\n     * Show a danger/error alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showError(message, options = {}) {\n        return this.showAlert(message, 'danger', options);\n    }\n}\n\nexport default AlertManager;\n","/**\n * Base singleton implementation to standardize pattern across components\n */\nexport class BaseSingleton {\n    /**\n     * Get the singleton instance - must be implemented by subclasses\n     * @returns {BaseSingleton} The singleton instance\n     */\n    static getInstance() {\n        throw new Error('getInstance() must be implemented by subclass');\n    }\n\n    /**\n     * Check if this instance is already instantiated\n     * @protected\n     * @param {Object} instanceVar - The module-level instance variable\n     * @returns {boolean} True if this is the first initialization\n     */\n    _isFirstInstance(instanceVar) {\n        return !instanceVar;\n    }\n}\n","/**\n * Debug utility for the diff viewer\n * Provides centralized logging with configuration options\n */\n\n/* eslint-disable no-console */\n// Disable console warnings for this file only since this is the official logging utility\n\nclass DebugUtility {\n    constructor() {\n        this.enabled = false;\n        this.logHistory = [];\n        this.maxLogHistory = 100;\n        this.prefix = '[DiffViewer]';\n        this.logLevel = 1; // Default to only high-level logs\n    }\n\n    /**\n     * Initialize debug settings\n     * @param {boolean} enabled - Enable debug output\n     * @param {string} prefix - Prefix for all log messages\n     * @param {number} logLevel - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    initialize (enabled = false, prefix = '[DiffViewer]', logLevel = 1) {\n        // Prevent reinitialization with weaker settings if already properly configured\n        if (this.enabled && this.logLevel > 1 && !enabled) {\n            console.warn(`${this.prefix} Preventing debug reinitialization with weaker settings`, {\n                current: { enabled: this.enabled, level: this.logLevel },\n                attempted: { enabled, level: logLevel }\n            });\n            return;\n        }\n\n        this.enabled = enabled;\n        this.prefix = prefix;\n        this.logLevel = logLevel; // Don't tie logLevel to enabled state\n\n        console.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n        this.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n    }\n\n    /**\n     * Check if a message should be logged at the given level\n     * @param {number} level - The log level of the message\n     * @returns {boolean} - Whether the message should be logged\n     */\n    shouldLog(level = 1) {\n        // Use instance state as primary source of truth\n        // Only fall back to window.diffConfig if not explicitly initialized\n        const debugEnabled = this.enabled || (this.enabled === false && window.diffConfig?.debug);\n        return debugEnabled && level <= this.logLevel;\n    }\n\n    /**\n     * Log an informational message\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    log(message, data = null, level = 1) {\n        if (!this.shouldLog(level)) return;\n\n        if (data !== null) {\n            console.log(`${this.prefix} ${message}`, data);\n            this._addToHistory('log', [message, data], level);\n        } else {\n            console.log(`${this.prefix} ${message}`);\n            this._addToHistory('log', [message], level);\n        }\n    }\n\n    /**\n     * Log a warning message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    warn (message, data = null, level = 1) {\n        // Warnings are always shown regardless of debug setting\n        if (data !== null) {\n            console.warn(`${this.prefix} ${message}`, data);\n            this._addToHistory('warn', [message, data], level);\n        } else {\n            console.warn(`${this.prefix} ${message}`);\n            this._addToHistory('warn', [message], level);\n        }\n    }\n\n    /**\n     * Log an error message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    error(message, data = null, level = 1) {\n        // Errors are always shown regardless of debug setting\n        if (data !== null) {\n            console.error(`${this.prefix} ${message}`, data);\n            this._addToHistory('error', [message, data], level);\n        } else {\n            console.error(`${this.prefix} ${message}`);\n            this._addToHistory('error', [message], level);\n        }\n    }\n\n    /**\n     * Get debug log history\n     * @param {number} maxLevel - Maximum level to include (1=high-level only, 3=all)\n     * @returns {Array} Log history filtered by level\n     */\n    getLogHistory(maxLevel = this.logLevel) {\n        if (maxLevel >= this.logLevel) {\n            return [...this.logHistory];\n        }\n        return this.logHistory.filter(entry => entry.level <= maxLevel);\n    }\n\n    /**\n     * Clear debug log history\n     */\n    clearLogHistory() {\n        this.logHistory = [];\n        this.log('Log history cleared');\n    }\n\n    /**\n     * Add entry to log history\n     * @private\n     * @param {string} type - Log type (log, warn, error)\n     * @param {Array} args - Message arguments\n     * @param {number} level - Log level\n     */\n    _addToHistory(type, args, level) {\n        this.logHistory.push({\n            timestamp: new Date(),\n            type,\n            message: args,\n            level\n        });\n\n        // Prevent excessive memory usage\n        if (this.logHistory.length > this.maxLogHistory) {\n            this.logHistory.shift();\n        }\n    }\n}\n\n// Create singleton instance\nconst Debug = new DebugUtility();\n\n// Export the singleton\nexport { Debug };\n","/**\n * DiffConfigManager.js\n *\n * Singleton utility to centralize management of the diffConfig configuration object.\n * This provides a single source of truth for the diffConfig settings used throughout the application.\n */\n\nimport { Debug } from './Debug';\n\n/**\n * Manages the diffConfig configuration settings as a singleton\n */\nexport class DiffConfigManager {\n    /**\n     * Private instance - follows singleton pattern\n     * @type {DiffConfigManager}\n     * @private\n     */\n    static #instance = null;\n\n    /**\n     * Private constructor - use getInstance() instead\n     * @private\n     */\n    constructor() {\n        // Track if server config has been loaded to avoid multiple loads\n        this._serverConfigLoaded = false;\n\n        // Initialize window.diffConfig if it doesn't exist\n        if (typeof window !== 'undefined' && !window.diffConfig) {\n            Debug.log('DiffConfigManager: Initializing empty window.diffConfig', null, 2);\n            window.diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {}\n            };\n        } else if (typeof window !== 'undefined' && window.diffConfig) {\n            Debug.log('DiffConfigManager: Using existing window.diffConfig', window.diffConfig, 2);\n        }\n    }\n\n    /**\n     * Load configuration from server if needed\n     * @returns {Promise<void>}\n     */\n    async ensureServerConfigLoaded() {\n        // Only load server config once to avoid overriding runtime values\n        if (this._serverConfigLoaded) {\n            Debug.log('DiffConfigManager: Server config already loaded, skipping', null, 2);\n            return;\n        }\n\n        // Check if we already have a server-provided apiBaseUrl\n        if (typeof window !== 'undefined' && window.diffConfig?.apiBaseUrl) {\n            Debug.log('DiffConfigManager: Server config already loaded with apiBaseUrl', window.diffConfig.apiBaseUrl, 2);\n            this._serverConfigLoaded = true;\n            return;\n        }\n\n        try {\n            Debug.log('DiffConfigManager: Loading server configuration...', null, 2);\n\n            // Try to determine the API base URL from script location\n            let apiBaseUrl = '';\n            const scripts = document.querySelectorAll('script[src*=\"visual-diff-merge\"]');\n            if (scripts.length > 0) {\n                const scriptSrc = scripts[0].src;\n                const match = scriptSrc.match(/^(.+\\/visual-diff-merge[^\\/]*)\\//);\n                if (match) {\n                    apiBaseUrl = match[1] + '/api/';\n                }\n            }\n\n            if (!apiBaseUrl) {\n                Debug.log('DiffConfigManager: Could not determine API base URL from script location', null, 2);\n                return;\n            }\n\n            // Fetch configuration from server\n            const configResponse = await fetch(apiBaseUrl + 'endpoint-config.php');\n            if (configResponse.ok) {\n                const serverConfig = await configResponse.json();\n\n                // The endpoint returns the config directly, not nested in a 'javascript' property\n                if (serverConfig && typeof serverConfig === 'object') {\n                    Debug.log('DiffConfigManager: Loaded server configuration', serverConfig, 2);\n                    if (typeof window !== 'undefined') {\n                        // Preserve existing serverSaveEnabled if it's already set\n                        const existingServerSaveEnabled = window.diffConfig?.serverSaveEnabled;\n                        window.diffConfig = { ...(window.diffConfig || {}), ...serverConfig };\n\n                        // Don't override serverSaveEnabled if it was already explicitly set\n                        if (existingServerSaveEnabled !== undefined && !serverConfig.hasOwnProperty('serverSaveEnabled')) {\n                            window.diffConfig.serverSaveEnabled = existingServerSaveEnabled;\n                            Debug.log('DiffConfigManager: Preserved existing serverSaveEnabled', existingServerSaveEnabled, 2);\n                        }\n\n                        // Mark as loaded to prevent future loads\n                        this._serverConfigLoaded = true;\n                    }\n                }\n            } else {\n                Debug.warn('DiffConfigManager: Failed to load server configuration', configResponse.status, 1);\n            }\n        } catch (error) {\n            Debug.warn('DiffConfigManager: Error loading server configuration', error, 1);\n        } finally {\n            // Mark as loaded even if there was an error to prevent retries\n            this._serverConfigLoaded = true;\n        }\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {DiffConfigManager} The singleton instance\n     */\n    static getInstance() {\n        if (!DiffConfigManager.#instance) {\n            DiffConfigManager.#instance = new DiffConfigManager();\n        }\n        return DiffConfigManager.#instance;\n    }\n\n    /**\n     * Initialize with configuration\n     * @param {Object} config - The initial configuration\n     */\n    async initialize(config = {}) {\n        Debug.log('DiffConfigManager: Initializing with config', config, 2);\n\n        // Check if serverSaveEnabled is already set in window.diffConfig\n        const hasRuntimeServerSaveEnabled = typeof window !== 'undefined' &&\n            window.diffConfig &&\n            window.diffConfig.hasOwnProperty('serverSaveEnabled');\n\n        // Only load server config if we don't have runtime values already set\n        if (!hasRuntimeServerSaveEnabled) {\n            await this.ensureServerConfigLoaded();\n        } else {\n            Debug.log('DiffConfigManager: Skipping server config load - serverSaveEnabled already set',\n                window.diffConfig.serverSaveEnabled, 2);\n        }\n\n        // Then apply the provided config\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...(window.diffConfig || {}), ...config };\n        } else {\n            Debug.error('DiffConfigManager: Cannot initialize, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Get the current diffConfig (reference to window.diffConfig)\n     * @returns {Object} The current diffConfig\n     */\n    getDiffConfig() {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn('DiffConfigManager: window.diffConfig is not available', null, 1);\n            return {};\n        }\n        return window.diffConfig;\n    }\n\n    /**\n     * Set a new diffConfig, completely replacing the current one\n     * @param {Object} config - The new configuration to use\n     */\n    setDiffConfig(config = {}) {\n        Debug.log('DiffConfigManager: Setting new diffConfig', config, 2);\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...config };\n        } else {\n            Debug.error('DiffConfigManager: Cannot set config, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Reset the diffConfig to default values, possibly with new overrides\n     * @param {Object} overrides - Optional configuration overrides to apply after reset\n     */\n    reset(overrides = {}) {\n        Debug.log('DiffConfigManager: Resetting diffConfig with overrides', overrides, 2);\n        if (typeof window !== 'undefined') {\n            window.diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {},\n                ...overrides\n            };\n        } else {\n            Debug.error('DiffConfigManager: Cannot reset config, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Update part of the configuration\n     * @param {Object} partialConfig - The partial configuration to update\n     */\n    update(partialConfig = {}) {\n        Debug.log('DiffConfigManager: Updating diffConfig with', partialConfig, 3);\n\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn('DiffConfigManager: window.diffConfig not available for update', null, 1);\n            return;\n        }\n\n        // Check if the partialConfig has a nested 'config' property\n        if (partialConfig && partialConfig.config && typeof partialConfig.config === 'object') {\n            Debug.log('DiffConfigManager: Extracting nested config property', partialConfig.config, 3);\n            // Use the nested config object instead of the wrapper\n            window.diffConfig = this.#mergeDeep(window.diffConfig, partialConfig.config);\n        } else {\n            // Use the original object if no nested config property\n            window.diffConfig = this.#mergeDeep(window.diffConfig, partialConfig);\n        }\n    }\n\n    /**\n     * Set a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} value - The value to set\n     */\n    set(key, value) {\n        Debug.log(`DiffConfigManager: Setting ${key}`, value, 3);\n        if (typeof window !== 'undefined' && window.diffConfig) {\n            window.diffConfig[key] = value;\n        } else {\n            Debug.error(`DiffConfigManager: Cannot set ${key}, window.diffConfig not available`, null, 1);\n        }\n    }\n\n    /**\n     * Get a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} defaultValue - Default value if the key doesn't exist\n     * @returns {*} The configuration value\n     */\n    get(key, defaultValue = null) {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn(`DiffConfigManager: Cannot get ${key}, window.diffConfig not available`, null, 1);\n            return defaultValue;\n        }\n        return key in window.diffConfig ? window.diffConfig[key] : defaultValue;\n    }\n\n    /**\n     * Check if a configuration key exists\n     * @param {string} key - The configuration key to check\n     * @returns {boolean} True if the key exists\n     */\n    has(key) {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn(`DiffConfigManager: Cannot check ${key}, window.diffConfig not available`, null, 1);\n            return false;\n        }\n        return key in window.diffConfig;\n    }\n\n    /**\n     * Remove a specific configuration key\n     * @param {string} key - The configuration key to remove\n     */\n    remove(key) {\n        if (typeof window !== 'undefined' && window.diffConfig && key in window.diffConfig) {\n            Debug.log(`DiffConfigManager: Removing ${key}`, null, 3);\n            delete window.diffConfig[key];\n        } else {\n            Debug.warn(`DiffConfigManager: Cannot remove ${key}, not found or window.diffConfig not available`, null, 1);\n        }\n    }\n\n    /**\n     * Deep merge two objects recursively\n     * @param {Object} target - Target object\n     * @param {Object} source - Source object to merge\n     * @returns {Object} The merged object\n     * @private\n     */\n    #mergeDeep(target, source) {\n        const output = { ...target };\n\n        if (this.#isObject(target) && this.#isObject(source)) {\n            Object.keys(source).forEach(key => {\n                if (this.#isObject(source[key])) {\n                    if (!(key in target)) {\n                        output[key] = source[key];\n                    } else {\n                        output[key] = this.#mergeDeep(target[key], source[key]);\n                    }\n                } else {\n                    output[key] = source[key];\n                }\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * Check if a value is an object\n     * @param {*} item - The value to check\n     * @returns {boolean} True if the value is an object\n     * @private\n     */\n    #isObject(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item));\n    }\n}\n\nexport default DiffConfigManager;\n","import { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\n\n/**\n * Utility for discovering API endpoints\n * Provides centralized access to API endpoints\n */\nexport class EndpointDiscovery extends BaseSingleton {\n    // Singleton instance\n    static #instance = null;\n\n    // Cached endpoint URL\n    #apiEndpoint = null;\n\n    // Promise for ongoing discovery\n    #discoveryPromise = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {EndpointDiscovery} The singleton instance\n     */\n    static getInstance() {\n        if (!EndpointDiscovery.#instance) {\n            EndpointDiscovery.#instance = new EndpointDiscovery();\n        }\n        return EndpointDiscovery.#instance;\n    }\n\n    /**\n     * Discover the API endpoint URL\n     * @returns {Promise<string>} Base API endpoint URL\n     */\n    async discoverEndpoint() {\n        // Return cached endpoint if available\n        if (this.#apiEndpoint) {\n            Debug.log('EndpointDiscovery: Using cached API endpoint', this.#apiEndpoint, 2);\n            return this.#apiEndpoint;\n        }\n\n        try {\n            // First check window.diffConfig.apiEndpoint\n            if (window.diffConfig?.apiEndpoint) {\n                Debug.log('EndpointDiscovery: Using configured API endpoint', window.diffConfig.apiEndpoint, 2);\n                this.#apiEndpoint = window.diffConfig.apiEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Try to determine endpoint based on script location\n            const scriptEndpoint = this.#determineEndpointFromScript();\n            if (scriptEndpoint) {\n                Debug.log('EndpointDiscovery: Determined API endpoint from script location', scriptEndpoint, 2);\n                this.#apiEndpoint = scriptEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Fall back to endpoint-config.php discovery\n            Debug.log('EndpointDiscovery: Discovering API endpoint from endpoint-config.php', null, 2);\n\n            // Generate URL to endpoint-config.php\n            const configUrl = this.#getEndpointConfigUrl();\n\n            Debug.log('EndpointDiscovery: Fetching from', configUrl, 2);\n\n            // Fetch endpoint configuration\n            const response = await fetch(configUrl);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch endpoint config: ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            Debug.log('EndpointDiscovery: Endpoint discovery response', data, 2);\n\n            // Check if we have a valid apiEndpoint in the response\n            if (data?.apiEndpoint !== undefined) {\n                this.#apiEndpoint = data.apiEndpoint;\n                Debug.log('EndpointDiscovery: Successfully discovered API endpoint', this.#apiEndpoint, 1);\n                return this.#apiEndpoint;\n            } else {\n                throw new Error('Invalid endpoint config response: apiEndpoint not found');\n            }\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error discovering endpoint', error, 1);\n\n            // Fall back to relative endpoint as a last resort\n            this.#apiEndpoint = './api/';\n            Debug.log('EndpointDiscovery: Using fallback endpoint', this.#apiEndpoint, 1);\n            return this.#apiEndpoint;\n        }\n    }\n\n    /**\n     * Get endpoint URL with efficient caching\n     * @param {string} [endpointName] Optional specific endpoint name (e.g., 'ajaxDiffMerge')\n     * @returns {Promise<string>} API endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        // First get the base endpoint URL\n        if (!this.#apiEndpoint) {\n            // If a discovery is already in progress, return that promise\n            if (this.#discoveryPromise) {\n                await this.#discoveryPromise;\n            } else {\n                // Start a new discovery and cache the promise\n                this.#discoveryPromise = this.discoverEndpoint();\n\n                try {\n                    // Wait for discovery to complete\n                    await this.#discoveryPromise;\n                } finally {\n                    // Clear the discovery promise regardless of outcome\n                    this.#discoveryPromise = null;\n                }\n            }\n        }\n\n        // Now we should have the base endpoint URL\n        if (!endpointName) {\n            // Return the base URL if no specific endpoint requested\n            return this.#apiEndpoint;\n        }\n\n        // For specific endpoints, map the name to the appropriate file\n        const endpointMap = {\n            'ajaxDiffMerge': 'ajax-diff-merge.php',\n            'diffProcessor': 'diff-processor.php',\n            'getFileContent': 'get-file-content.php',\n            'endpointsConfig': 'endpoint-config.php',  // <-- Changed to endpoint-config.php (singular)\n            'endpoints': 'endpoints-config.php'        // <-- Keep original endpoints-config.php mapping\n        };\n\n        // Get the file name for the requested endpoint\n        let fileName = endpointMap[endpointName];\n\n        // If no mapping exists, use a default pattern\n        if (!fileName) {\n            // Convert camelCase to kebab-case with .php extension\n            fileName = endpointName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase() + '.php';\n        }\n\n        // Ensure the base URL ends with a slash\n        const baseUrl = this.#apiEndpoint.endsWith('/') ? this.#apiEndpoint : this.#apiEndpoint + '/';\n\n        Debug.log(`EndpointDiscovery: Resolved ${endpointName} to endpoint`, baseUrl + fileName, 2);\n\n        return baseUrl + fileName;\n    }\n\n    /**\n     * Get a complete API URL for a specific endpoint file\n     * @param {string} endpointFile Filename to append to the base URL\n     * @returns {Promise<string>} Full API URL\n     */\n    async getApiUrl(endpointFile) {\n        const baseUrl = await this.getEndpoint();\n        return `${baseUrl}${endpointFile}`;\n    }\n\n    /**\n     * Attempt to determine API endpoint based on script location\n     * @private\n     * @returns {string|null} Determined endpoint or null\n     */\n    #determineEndpointFromScript() {\n        try {\n            // Find our script tag\n            const scripts = document.querySelectorAll('script');\n            let scriptUrl = null;\n\n            for (const script of scripts) {\n                if (script.src && (\n                    script.src.includes('diff-viewer.js') ||\n                    script.src.includes('diff-viewer.min.js')\n                )) {\n                    scriptUrl = script.src;\n                    break;\n                }\n            }\n\n            if (!scriptUrl) {\n                return null;\n            }\n\n            // Get the directory path by removing the filename\n            let basePath = scriptUrl.substring(0, scriptUrl.lastIndexOf('/') + 1);\n\n            // If it's in a /dist/ directory, adjust to parent\n            if (basePath.endsWith('/dist/')) {\n                basePath = basePath.substring(0, basePath.length - 5);\n            }\n\n            // Append 'api/' to the base path\n            return `${basePath}api/`;\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error determining endpoint from script', error, 2);\n            return null;\n        }\n    }\n\n    /**\n     * Generate URL to endpoint-config.php\n     * @private\n     * @returns {string} URL to endpoint-config.php\n     */\n    #getEndpointConfigUrl() {\n        // Try to use the base URL of the current page\n        const baseUrl = window.location.href.substring(0, window.location.href.lastIndexOf('/') + 1);\n\n        // Assume endpoint-config.php is in the /api/ directory\n        if (baseUrl.includes('/diff-viewer/')) {\n            // If we're in diff-viewer, go up one level\n            return `${baseUrl.substring(0, baseUrl.lastIndexOf('/diff-viewer/'))}api/endpoint-config.php`;\n        } else {\n            // Default case - look for api in the current directory\n            return `${baseUrl}api/endpoint-config.php`;\n        }\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * LoaderManager - Centralized utility for managing loading indicators\n *\n * This singleton class provides methods to display and hide loading indicators\n * throughout the application in a consistent manner. It supports different styles\n * of loaders including fullscreen, inline, and element-specific indicators.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * LoaderManager class\n *\n * Provides methods to display and hide loading indicators throughout the application\n */\nexport class LoaderManager extends BaseSingleton {\n    /**\n     * Initialize the LoaderManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.activeLoaders = new Map();\n        this.loaderIdCounter = 0;\n        this.isMainLoaderActive = false; // Track if main loader is active\n        this.mainLoaderId = null; // Store the ID of the main loader for reference\n        this.recentlyRemovedLoaders = new Set(); // Track recently removed loaders to prevent errors\n\n        // Track loader operations for debugging\n        this.operationLog = [];\n        this.maxLogEntries = 20;\n\n        // Set flag to remember log level in debug mode\n        this.verboseLogging = Debug.isInitialized ? Debug.logLevel > 2 : false;\n\n        // Mark as initialized\n        this.initialized = true;\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {LoaderManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new LoaderManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Log an operation for debugging\n     * @private\n     */\n    _logOperation(operation, details) {\n        // Keep a short log history for debugging\n        if (this.operationLog.length >= this.maxLogEntries) {\n            this.operationLog.shift(); // Remove oldest entry\n        }\n\n        this.operationLog.push({\n            timestamp: new Date().toISOString(),\n            operation,\n            details\n        });\n    }\n\n    /**\n     * Create a loader element with the given message\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Options for the loader\n     * @returns {HTMLElement} The loader element\n     * @private\n     */\n    _createLoaderElement(message, options = {}) {\n        // Use an early translation if TranslationManager is available\n        if (message && typeof message === 'string' && message.startsWith('$') && TranslationManager.getInstance().isInitialized()) {\n            const translationKey = message.substring(1);\n            const translatedMessage = TranslationManager.getInstance().get(translationKey);\n            if (translatedMessage) {\n                message = translatedMessage;\n            }\n        }\n\n        const loader = document.createElement('div');\n        loader.className = 'vdm-loader';\n\n        if (options.fullscreen) {\n            loader.classList.add('vdm-loader--fullscreen');\n        }\n\n        if (options.inline) {\n            loader.classList.add('vdm-loader--inline');\n        }\n\n        if (options.small) {\n            loader.classList.add('vdm-loader--small');\n        }\n\n        if (options.container) {\n            loader.classList.add('vdm-loader--container');\n        }\n\n        if (options.className) {\n            loader.classList.add(options.className);\n        }\n\n        if (options.zIndex) {\n            loader.style.zIndex = options.zIndex;\n        }\n\n        // Create spinner\n        const spinner = document.createElement('div');\n        spinner.className = 'vdm-loader__spinner';\n        loader.appendChild(spinner);\n\n        // Add message if provided\n        if (message) {\n            const messageElement = document.createElement('div');\n            messageElement.className = 'vdm-loader__message';\n            messageElement.textContent = message;\n            loader.appendChild(messageElement);\n        }\n\n        return loader;\n    }\n\n    /**\n     * Show a loading indicator\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @param {boolean} options.fullscreen - Whether to show a fullscreen loader\n     * @param {boolean} options.inline - Whether to show an inline loader\n     * @param {boolean} options.small - Whether to show a small loader\n     * @param {string} options.className - Additional CSS class to add to the loader\n     * @param {HTMLElement} options.target - Target element to add the loader to\n     * @param {number} options.zIndex - Z-index for the loader\n     * @returns {string} ID of the loader (use this to hide the specific loader)\n     */\n    showLoader(message = 'Loading...', options = {}) {\n        // If main loader is active and we're showing a fullscreen loader,\n        // reuse the main loader with updated message\n        if (this.isMainLoaderActive && this.mainLoaderId && options.fullscreen) {\n            Debug.log('LoaderManager: Reusing main loader for fullscreen request', { message }, 3);\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        Debug.log('LoaderManager: Showing loader', { message, options }, 3);\n\n        const loaderId = `loader-${++this.loaderIdCounter}`;\n        const loaderElement = this._createLoaderElement(message, options);\n        loaderElement.setAttribute('data-loader-id', loaderId);\n\n        // Add loader to the correct target element\n        if (options.target && options.target instanceof HTMLElement) {\n            // If the target has position: static, change to relative for proper positioning\n            const targetPosition = window.getComputedStyle(options.target).getPropertyValue('position');\n            if (targetPosition === 'static') {\n                options.target.style.position = 'relative';\n            }\n            options.target.appendChild(loaderElement);\n        } else {\n            document.body.appendChild(loaderElement);\n        }\n\n        // Store reference to the loader\n        this.activeLoaders.set(loaderId, {\n            element: loaderElement,\n            target: options.target || document.body,\n            fullscreen: !!options.fullscreen,\n            timestamp: Date.now()\n        });\n\n        // Remove from recently removed list if it's there (unlikely but possible with ID reuse)\n        this.recentlyRemovedLoaders.delete(loaderId);\n\n        this._logOperation('show', { id: loaderId, message, type: 'regular' });\n\n        // Add showing class to trigger CSS transitions if any\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.classList.add('vdm-loader--showing');\n            }\n        }, 10);\n\n        return loaderId;\n    }\n\n    /**\n     * Show the main application loader and hide all other loaders\n     *\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Additional options for the loader\n     * @returns {string} ID of the loader\n     */\n    showMainLoader(message = 'Loading...', options = {}) {\n        Debug.log('LoaderManager: Showing main loader', { message }, 2);\n\n        // If main loader is already active, just update the message and return the existing ID\n        if (this.isMainLoaderActive && this.mainLoaderId && this.activeLoaders.has(this.mainLoaderId)) {\n            Debug.log('LoaderManager: Main loader already active, updating message', {\n                currentId: this.mainLoaderId,\n                message\n            }, 2);\n\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        // Hide all other loaders when showing the main one\n        this._hideAllInlineLoaders();\n\n        // Get the main loader element if it exists in the DOM\n        const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n\n        if (mainLoaderElement) {\n            // If the element already exists in the DOM, just show it\n            mainLoaderElement.style.display = 'flex';\n            mainLoaderElement.classList.add(Selectors.LOADER.ACTIVE.name());\n\n            // If it has a message element, update it\n            const messageElement = mainLoaderElement.querySelector('.vdm-loader__message');\n            if (messageElement) {\n                messageElement.textContent = message;\n            } else if (message) {\n                // Create message element if it doesn't exist but message is provided\n                const newMessageElement = document.createElement('div');\n                newMessageElement.className = 'vdm-loader__message';\n                newMessageElement.textContent = message;\n                mainLoaderElement.appendChild(newMessageElement);\n            }\n\n            // Generate an ID for this loader instance\n            const loaderId = `main-loader-${++this.loaderIdCounter}`;\n\n            // Store reference\n            this.activeLoaders.set(loaderId, {\n                element: mainLoaderElement,\n                target: document.body,\n                isMainLoader: true,\n                timestamp: Date.now()\n            });\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            // Remove from recently removed list if it's there\n            this.recentlyRemovedLoaders.delete(loaderId);\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-existing' });\n\n            return loaderId;\n        } else {\n            // If the element doesn't exist, create it using showLoader\n            const loaderId = this.showLoader(message, {\n                fullscreen: true,\n                className: Selectors.LOADER.MAIN.name(),\n                zIndex: 9999,\n                ...options\n            });\n\n            // Mark this as the main loader\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            if (loaderInfo) {\n                loaderInfo.isMainLoader = true;\n                loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n            }\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-new' });\n\n            return loaderId;\n        }\n    }\n\n    /**\n     * Show a loading indicator early in the page lifecycle before DiffViewer initialization\n     * This is specifically for components that need to show loaders before the main app initializes\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showEarlyLoader(message = 'Loading...', options = {}) {\n        // If debug is already initialized, use it, otherwise don't log\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Showing early loader', { message }, 2);\n        }\n\n        // Create a loader that will become the main loader\n        const loaderId = this.showLoader(message, {\n            fullscreen: true,\n            className: Selectors.LOADER.MAIN.name(),\n            zIndex: 9999,\n            ...options\n        });\n\n        // Mark this as the main loader\n        const loaderInfo = this.activeLoaders.get(loaderId);\n        if (loaderInfo) {\n            loaderInfo.isMainLoader = true;\n            loaderInfo.isEarlyLoader = true; // Mark as an early loader\n            loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n        }\n\n        // Update tracking\n        this.isMainLoaderActive = true;\n        this.mainLoaderId = loaderId;\n\n        this._logOperation('show', { id: loaderId, message, type: 'early-loader' });\n\n        return loaderId;\n    }\n\n    /**\n     * Convert an early loader to the main loader to ensure continuity\n     * Call this method from enableDiffViewer to take over an existing early loader\n     *\n     * @param {string} message - Optional new message to display\n     * @returns {string} ID of the main loader\n     */\n    adoptEarlyLoader(message = null) {\n        // If there's no active main loader, create one\n        if (!this.isMainLoaderActive || !this.mainLoaderId) {\n            if (Debug.isInitialized) {\n                Debug.log('LoaderManager: No early loader to adopt, creating new main loader', null, 2);\n            }\n            return this.showMainLoader(message);\n        }\n\n        // Update the message if provided\n        if (message) {\n            this.updateLoaderMessage(this.mainLoaderId, message);\n        }\n\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Adopted early loader as main loader', { id: this.mainLoaderId }, 2);\n        }\n\n        return this.mainLoaderId;\n    }\n\n    /**\n     * Hide the main loader\n     *\n     * @param {string} loaderId - Optional ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideMainLoader(loaderId = null) {\n        Debug.log('LoaderManager: Hiding main loader', { loaderId }, 2);\n\n        // Special handling: If this was recently removed, just return success\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Main loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // If main loader isn't active, silently succeed\n        if (!this.isMainLoaderActive) {\n            Debug.log('LoaderManager: Main loader not active, nothing to hide', null, 2);\n            return true;\n        }\n\n        // If loaderId is provided but doesn't match the main loader ID, verify it\n        if (loaderId && loaderId !== this.mainLoaderId) {\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            // If it's not found or not a main loader, use the stored main loader ID\n            if (!loaderInfo?.isMainLoader) {\n                Debug.log('LoaderManager: Using stored main loader ID',\n                    { providedId: loaderId, actualMainId: this.mainLoaderId }, 2);\n                loaderId = this.mainLoaderId;\n            }\n        } else if (!loaderId) {\n            // If no ID provided, use the stored main loader ID\n            loaderId = this.mainLoaderId;\n        }\n\n        // If we couldn't determine a loader ID or it doesn't exist anymore,\n        // try to clean up by element ID\n        if (!loaderId || !this.activeLoaders.has(loaderId)) {\n            const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n            if (mainLoaderElement) {\n                mainLoaderElement.style.display = 'none';\n                if (mainLoaderElement.parentNode) {\n                    mainLoaderElement.parentNode.removeChild(mainLoaderElement);\n                }\n                Debug.log('LoaderManager: Removed main loader by element ID', null, 2);\n            }\n\n            // Reset state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n            return true;\n        }\n\n        // Now hide the specific loader\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader so we don't try to hide it again\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            // Update state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            this._logOperation('hide', { id: loaderId, type: 'main' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Hide all inline loaders (internal method)\n     * @private\n     */\n    _hideAllInlineLoaders() {\n        Debug.log('LoaderManager: Hiding all inline loaders', null, 3);\n\n        // Find all inline loaders\n        const inlineLoaderIds = Array.from(this.activeLoaders.entries())\n            .filter(([_id, info]) => !info.isMainLoader && !info.fullscreen)\n            .map(([id]) => id);\n\n        // Hide each one\n        inlineLoaderIds.forEach(id => {\n            this._hideSpecificLoader(id);\n\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(id);\n\n            this._logOperation('hide', { id, type: 'inline-batch' });\n        });\n\n        // Also look for any inline loaders in the DOM that might not be tracked\n        document.querySelectorAll('.vdm-loader--inline').forEach(loader => {\n            this._removeLoaderElement(loader);\n            this._logOperation('hide', { element: 'untracked-inline', type: 'dom-query' });\n        });\n    }\n\n    /**\n     * Hide a specific loader by ID\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideLoader(loaderId) {\n        // If no loaderId specified, hide all loaders\n        if (!loaderId) {\n            Debug.log('LoaderManager: Hiding all loaders', null, 3);\n            const loaderIds = Array.from(this.activeLoaders.keys());\n            let success = true;\n\n            loaderIds.forEach(id => {\n                if (!this._hideSpecificLoader(id)) {\n                    success = false;\n                }\n\n                // Remember we removed this loader\n                this.recentlyRemovedLoaders.add(id);\n\n                this._logOperation('hide', { id, type: 'all-batch' });\n            });\n\n            // Reset main loader tracking\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            return success;\n        }\n\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // Case: this is the main loader\n        if (loaderId === this.mainLoaderId) {\n            return this.hideMainLoader(loaderId);\n        }\n\n        // Hide a specific loader\n        Debug.log('LoaderManager: Hiding loader', { loaderId }, 3);\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            this._logOperation('hide', { id: loaderId, type: 'specific' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Internal method to hide a specific loader\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     * @private\n     */\n    _hideSpecificLoader(loaderId) {\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed (in _hideSpecificLoader)', { loaderId }, 3);\n            return true;\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            Debug.log('LoaderManager: No loader found to hide', { loaderId }, 2);\n            return false;\n        }\n\n        // Update main loader status if this was a main loader\n        if (loader.isMainLoader) {\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n        }\n\n        // Check if the element still exists in DOM\n        if (!loader.element?.parentNode) {\n            // Element is already removed, just clean up our tracking\n            this.activeLoaders.delete(loaderId);\n            Debug.log('LoaderManager: Loader element was already removed from DOM', { loaderId }, 3);\n            return true;\n        }\n\n        // Remove the loader element with transition\n        this._removeLoaderElement(loader.element);\n        this.activeLoaders.delete(loaderId);\n\n        // Remember we removed this loader\n        this.recentlyRemovedLoaders.add(loaderId);\n\n        return true;\n    }\n\n    /**\n     * Remove a loader element with transition\n     *\n     * @param {HTMLElement} loaderElement - Loader element to remove\n     * @private\n     */\n    _removeLoaderElement(loaderElement) {\n        // First remove the showing class to trigger CSS transitions if any\n        loaderElement.classList.remove('vdm-loader--showing');\n\n        // Wait for transition to complete before removing the element\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.parentNode.removeChild(loaderElement);\n            }\n        }, 300); // Match this timing with CSS transition duration\n    }\n\n    /**\n     * Show a loader in a specific container (useful for buttons, etc.)\n     *\n     * @param {HTMLElement} container - Container element to add the loader to\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showLoaderInContainer(container, message = '', options = {}) {\n        const loaderId = this.showLoader(message, {\n            target: container,\n            container: true,\n            small: true,\n            ...options\n        });\n\n        this._logOperation('show', { id: loaderId, message, type: 'container' });\n\n        return loaderId;\n    }\n\n    /**\n     * Update an existing loader's message\n     *\n     * @param {string} loaderId - ID of the loader to update\n     * @param {string} message - New message to display\n     * @returns {boolean} Success status\n     */\n    updateLoaderMessage(loaderId, message) {\n        // Don't log anything when recently removed IDs are encountered\n        // This eliminates the spam in the console for removed loaders\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            return true; // Silently succeed\n        }\n\n        // If this is a falsy ID and main loader is active, use the main loader\n        if (!loaderId && this.isMainLoaderActive && this.mainLoaderId) {\n            loaderId = this.mainLoaderId;\n            Debug.log('LoaderManager: Using main loader ID for message update', { mainLoaderId: loaderId }, 3);\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            // Only log at level 2 if we're in verbose mode (reduces noise)\n            if (this.verboseLogging) {\n                Debug.log('LoaderManager: No loader found to update message', { loaderId }, 2);\n            }\n            return false;\n        }\n\n        // Check if element still exists in DOM\n        if (!loader.element?.parentNode) {\n            Debug.log('LoaderManager: Loader element was removed from DOM', { loaderId }, 3);\n            this.activeLoaders.delete(loaderId);\n            this.recentlyRemovedLoaders.add(loaderId);\n            return false;\n        }\n\n        const messageElement = loader.element.querySelector('.vdm-loader__message');\n\n        if (messageElement) {\n            messageElement.textContent = message;\n            this._logOperation('update', { id: loaderId, message, type: 'existing-element' });\n            return true;\n        } else if (message) {\n            // Create message element if it doesn't exist but a message is provided\n            const newMessageElement = document.createElement('div');\n            newMessageElement.className = 'vdm-loader__message';\n            newMessageElement.textContent = message;\n            loader.element.appendChild(newMessageElement);\n            this._logOperation('update', { id: loaderId, message, type: 'new-element' });\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a loader with the given ID exists\n     * @param {string} loaderId - Loader ID to check\n     * @returns {boolean} - Whether the loader exists\n     */\n    hasLoader(loaderId) {\n        return this.activeLoaders.has(loaderId) &&\n               !this.recentlyRemovedLoaders.has(loaderId);\n    }\n\n    /**\n     * Clean up old entries in the recentlyRemovedLoaders set to prevent memory leaks\n     * Called periodically by the system\n     */\n    _cleanupOldRemovedLoaders() {\n        // If the set gets too large, clean up old entries\n        if (this.recentlyRemovedLoaders.size > 20) {\n            // Just reset the whole set for simplicity\n            this.recentlyRemovedLoaders.clear();\n        }\n    }\n\n    /**\n     * Get debug information about a specific loader\n     * @param {string} loaderId - Loader ID to check\n     * @returns {Object|null} Loader information\n     */\n    getLoaderInfo(loaderId) {\n        if (!loaderId) return null;\n\n        const loader = this.activeLoaders.get(loaderId);\n        if (!loader) {\n            return {\n                exists: false,\n                wasRemoved: this.recentlyRemovedLoaders.has(loaderId)\n            };\n        }\n\n        return {\n            exists: true,\n            isMain: !!loader.isMainLoader,\n            fullscreen: !!loader.fullscreen,\n            message: loader.element.querySelector('.vdm-loader__message')?.textContent,\n            age: Date.now() - (loader.timestamp || 0), // milliseconds since creation\n            inDom: !!loader.element.parentNode\n        };\n    }\n\n    /**\n     * Debug method to get active loader information\n     * @returns {Object} Information about current loaders\n     */\n    getLoaderStatus() {\n        // Clean up the recently removed list to keep it tidy\n        this._cleanupOldRemovedLoaders();\n\n        return {\n            activeCount: this.activeLoaders.size,\n            recentlyRemovedCount: this.recentlyRemovedLoaders.size,\n            mainLoaderActive: this.isMainLoaderActive,\n            mainLoaderId: this.mainLoaderId,\n            operations: [...this.operationLog],\n            loaders: Array.from(this.activeLoaders.entries()).map(([id, info]) => ({\n                id,\n                isMain: !!info.isMainLoader,\n                fullscreen: !!info.fullscreen,\n                message: info.element.querySelector('.vdm-loader__message')?.textContent,\n                age: Date.now() - (info.timestamp || 0), // milliseconds since creation\n                inDom: !!info.element.parentNode\n            }))\n        };\n    }\n}\n\nexport default LoaderManager;\n","/**\n * Translation Manager\n * Provides centralized access to translations throughout the application\n */\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\n\n/**\n * Singleton class that manages translations across the application\n */\nexport class TranslationManager extends BaseSingleton {\n    /**\n     * @private\n     * Singleton instance\n     */\n    static _instance = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {TranslationManager} The singleton instance\n     */\n    static getInstance() {\n        if (!TranslationManager._instance) {\n            TranslationManager._instance = new TranslationManager();\n            Debug.log('TranslationManager: Instance created', null, 2);\n        }\n        return TranslationManager._instance;\n    }\n\n    /**\n     * Constructor - private, use getInstance()\n     */\n    constructor() {\n        super();\n        this.translations = {};\n        this.lang = 'en';\n        this.initialized = false;\n\n        // IMPORTANT: Initialize immediately with window.diffConfig if available\n        this._initializeFromGlobalConfig();\n    }\n\n    /**\n     * Try to initialize from global config immediately\n     * @private\n     */\n    _initializeFromGlobalConfig() {\n        if (window.diffConfig && window.diffConfig.translations) {\n            Debug.log('TranslationManager: Auto-initializing from window.diffConfig', window.diffConfig.translations, 2);\n            this.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Initialize with language and translations\n     * @param {string} lang - The language code\n     * @param {Object} translations - Translation key-value pairs\n     */\n    initialize(lang = 'en', translations = {}) {\n        this.lang = lang;\n        this.translations = translations;\n        this.initialized = true;\n        Debug.log(`TranslationManager: Initialized with \"${lang}\" language`, this.translations, 2);\n    }\n\n    /**\n     * Get a translation by key\n     * @param {string} key - The translation key\n     * @param {string} defaultValue - Default value if key not found (defaults to key itself)\n     * @returns {string} The translated text or default value\n     */\n    get(key, defaultValue = null) {\n        // If not initialized and window.diffConfig exists, try to initialize from there\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n\n        // Check if we have translations for the current language\n        if (this.translations[this.lang] && this.translations[this.lang][key]) {\n            return this.translations[this.lang][key];\n        }\n\n        // Fallback to English if the key exists there\n        if (this.translations['en'] && this.translations['en'][key]) {\n            Debug.log(`TranslationManager: Key \"${key}\" not found in \"${this.lang}\", using English fallback`, null, 2);\n            return this.translations['en'][key];\n        }\n\n        // Use provided default or key itself\n        return defaultValue !== null ? defaultValue : key;\n    }\n\n    /**\n     * Check if initialization has been completed\n     * @returns {boolean} True if initialized\n     */\n    isInitialized() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.initialized;\n    }\n\n    /**\n     * Get the current language\n     * @returns {string} The current language code\n     */\n    getLanguage() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.lang;\n    }\n\n    /**\n     * Get all translations\n     * @returns {Object} All translations\n     */\n    getAllTranslations() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return {...this.translations};\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Text Comparison Entry Point\n * Entry point for text-compare.html example\n */\n\nimport { TextCompareManager } from './components/browser/TextCompareManager';\nimport { EndpointDiscovery } from './utils/EndpointDiscovery';\n\n// Initialize endpoint discovery as a global instance for reuse\nwindow.vdmEndpointDiscovery = EndpointDiscovery.getInstance();\n\n// Export TextCompareManager to global scope\nwindow.TextCompareManager = TextCompareManager;\n\n// Initialize when DOM is ready\ndocument.addEventListener('DOMContentLoaded', async function() {\n    // Create the manager instance\n    const manager = new TextCompareManager();\n\n    // Initialize the manager (async operation)\n    await manager.initialize();\n\n    // Store in global window object after initialization is complete\n    window.textCompareManager = manager;\n});\n"],"names":["root","factory","exports","module","define","amd","a","i","this","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","_toPropertyKey","_defineProperties","key","toPrimitive","String","Number","_toPrimitive","TextCompareManager","options","undefined","_classCallCheck","DiffConfigManager","getInstance","initialize","getOwnPropertyDescriptors","defineProperties","_objectSpread","debug","logLevel","Debug","window","diffConfig","log","form","document","getElementById","oldTextInput","newTextInput","loadingMessage","errorMessage","containerWrapper","endpointDiscovery","EndpointDiscovery","translationManager","TranslationManager","_initialize","_callee","_context","init","_init","_callee2","_this","_context2","addEventListener","event","handleFormSubmit","warn","loadLanguageSettings","concat","getLanguage","_loadLanguageSettings","_callee3","configEndpoint","response","configData","_context3","getEndpoint","fetch","ok","error","status","statusText","json","lang","translations","initialized","isInitialized","update","t0","_handleFormSubmit","_callee4","loaderManager","loaderId","textData","result","_context4","preventDefault","LoaderManager","AlertManager","hideAlert","showEarlyLoader","get","resetConfig","getTextData","configureDiff","updateLoaderMessage","processDiff","_identicalContent","hideMainLoader","setDiffConfig","initializeDiffViewer","handleError","_x","currentConfig","old","new","cleanupPreviousInstance","diffViewer","destroy","vdmBrowserUIManager","oldText","newText","content","configManager","language","set","_processDiff","_callee5","_document$querySelect","message","apiEndpoint","_window$diffConfig","csrfToken","headers","_i","_importantProps","prop","_context5","handleIdenticalContent","success","querySelector","getAttribute","body","JSON","stringify","identical","config","chunks","t1","_initializeDiffViewer","_callee6","_context6","enableDiffViewer","localizedMessage","alertManager","Selectors","CONTAINER","WRAPPER","showInfo","timeout","translate","classList","remove","alertContainer","createElement","className","userContent","after","prepend","container","diffContainer","DIFF","style","display","_identicalContentHandled","showError","selectorHandler","target","startsWith","substring","processSelectors","obj","Proxy","baseSelectors","CODE","LINE_CONTENT","LINE_EMPTY","LINE_NUMBER","TABLE","ROOT","COPY","BUTTON","COPIED","ICON","MODAL","ACTIONS","DIALOG","INSTRUCTIONS","TEXTAREA","TEXTAREA_ELEM","PROCESSING","TEXT","CHECK_ALL_BTN","CHUNK","CHUNK_SELECTED","CHUNK_UNSELECTED","CONTENT_WRAPPER","LINE_ADD","LINE_CONTENT_EMPTY","LINE_DELETE","LINE_PLACEHOLDER","LINE_REPLACE_LEFT","LINE_REPLACE_RIGHT","PANE","PANE_CONTENT","PANE_HEADER","PANE_LEFT","PANE_RIGHT","PANES_CONTAINER","PLACEHOLDER","TABLE_WRAPPER","VIEWER","ICONS","COLUMN","MARKER","MARKER_PLACEHOLDER","SELECT","SELECT_LEFT","SELECT_RIGHT","LOADER","ACTIVE","FULLSCREEN","INDICATOR","INLINE","MAIN","SPINNER","MERGE","BUTTON_APPLY","BUTTON_PREVIEW","CONFLICT_MODAL","CONTROLS_ACTIONS","DESTINATION_DROPDOWN","DESTINATION_TOGGLE","GET_MERGED_RESULT_BTN","PREVIEW_CONTENT","PREVIEW_MODAL","TOGGLE_ICON","TOGGLE_TEXT","BACKDROP","CLOSE","CLOSE_BTN","CODE_COPY","CONFIRM","CONFIRMATION_CONTENT","CONTENT","CONTINUE_BTN","COPY_CONTENT","FIXED_FOOTER","FOOTER","HEADER","HEADER_FIXED","MERGE_BTN","MESSAGE","PREVIEW","PREVIEW_CONTENT_ID","PREVIEW_FILENAME","TITLE","NAVIGATION","COUNTER","COUNTER_ELEMENT","HIGHLIGHT","NAV_CHUNK","NEXT_BUTTON","PREV_BUTTON","STATUS","LOADED","RESOLVED","SCROLLED","UNRESOLVED","THEME","DARK","LIGHT","LOADING_INDICATOR","MODE_PREFIX","SELECTOR","SWITCHER","TOGGLE","THEME_SWITCHER","CONTROL","LABEL","SLIDER","SLIDER_ROUND","THEME_SELECTOR","TOOLTIP","ARROW","UTILITY","defaultUtilitySelectors","BUTTON_PRIMARY","BUTTON_SECONDARY","BUTTON_INFO","BUTTON_SUCCESS","BUTTON_WARNING","BUTTON_DANGER","BUTTON_FLAT","BUTTON_SMALL","BUTTON_EXTRA_SMALL","BUTTON_LARGE","ALERT","ALERT_PREFIX","ALERT_INFO","ALERT_SUCCESS","ALERT_WARNING","ALERT_DANGER","FORM_SELECT","FORM_SELECT_SM","FLEX","FLEX_COLUMN","JUSTIFY_CONTENT_BETWEEN","JUSTIFY_CONTENT_CENTER","ALIGN_ITEMS_CENTER","ALIGN_ITEMS_STRETCH","PADDING_2","PADDING_3","MARGIN_2","MARGIN_TOP_2","MARGIN_BOTTOM_2","MARGIN_START_1","MARGIN_START_2","MARGIN_END_2","MARGIN_END_3","MARGIN_X_1","MARGIN_Y_2","MARGIN_END_1","ui","button","buttonPrimary","buttonSecondary","buttonInfo","buttonSuccess","buttonWarning","buttonDanger","buttonFlat","alert","alertInfo","alertSuccess","alertWarning","alertDanger","getUtilitySelectors","instance","_BaseSingleton","_callSuper","_inherits","containerId","activeAlert","timeoutId","_ensureContainer","id","position","top","left","transform","zIndex","width","maxWidth","appendChild","mergedOptions","dismissable","targetElement","placement","useContainer","hasTargetElement","alertElement","baseAlertClass","toString","alertClass","typeClass","selectorBase","selectorType","finalMessage","innerHTML","closeButton","setAttribute","parentNode","insertBefore","nextSibling","setTimeout","_this$activeAlert","clearTimeout","removeChild","showAlert","BaseSingleton","instanceVar","DebugUtility","enabled","logHistory","maxLogHistory","prefix","console","current","level","attempted","data","shouldLog","_addToHistory","maxLevel","_toConsumableArray","entry","args","timestamp","Date","shift","_classPrivateMethodInitSpec","has","_checkPrivateRedeclaration","add","_assertClassBrand","_DiffConfigManager_brand","WeakSet","_serverConfigLoaded","_ensureServerConfigLoaded","apiBaseUrl","scripts","scriptSrc","match","configResponse","serverConfig","_window$diffConfig2","existingServerSaveEnabled","querySelectorAll","src","serverSaveEnabled","_args2","ensureServerConfigLoaded","overrides","partialConfig","_mergeDeep","defaultValue","_instance","_","source","output","_isObject","item","Array","isArray","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","bind","_setPrototypeOf","_classPrivateFieldInitSpec","_classPrivateFieldSet","_classPrivateFieldGet","_apiEndpoint","WeakMap","_discoveryPromise","_EndpointDiscovery_brand","_len","_key","_discoverEndpoint","scriptEndpoint","configUrl","_determineEndpointFromScript","_getEndpointConfigUrl","_getEndpoint","endpointName","fileName","baseUrl","discoverEndpoint","replace","toLowerCase","endsWith","_getApiUrl","endpointFile","_x2","_step","scriptUrl","_iterator","_createForOfIteratorHelper","script","includes","err","basePath","lastIndexOf","location","href","activeLoaders","Map","loaderIdCounter","isMainLoaderActive","mainLoaderId","recentlyRemovedLoaders","Set","operationLog","maxLogEntries","verboseLogging","operation","details","toISOString","translationKey","translatedMessage","loader","fullscreen","inline","small","spinner","messageElement","textContent","loaderElement","_createLoaderElement","HTMLElement","getComputedStyle","getPropertyValue","element","now","_logOperation","currentId","_hideAllInlineLoaders","mainLoaderElement","newMessageElement","isMainLoader","showLoader","loaderInfo","isEarlyLoader","showMainLoader","providedId","actualMainId","_hideSpecificLoader","from","entries","_ref","_ref2","_slicedToArray","info","map","_ref3","_removeLoaderElement","_this2","loaderIds","_loader$element","_loader$element2","size","clear","_loader$element$query","exists","isMain","age","inDom","wasRemoved","_cleanupOldRemovedLoaders","activeCount","recentlyRemovedCount","mainLoaderActive","operations","loaders","_ref5","_info$element$querySe","_ref6","_initializeFromGlobalConfig","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","vdmEndpointDiscovery","manager","textCompareManager"],"sourceRoot":""}