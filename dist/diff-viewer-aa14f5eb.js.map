{"version":3,"file":"diff-viewer-aa14f5eb.js","mappings":"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","sources":["webpack://diff-files/./src/components/viewer/ScrollSynchronizer.js","webpack://diff-files/./src/components/viewer/IconMarkerManager.js","webpack://diff-files/./src/components/syntax/CopyButton.js","webpack://diff-files/./src/components/viewer/BrowserUIManager.js","webpack://diff-files/./src/components/viewer/LayoutManager.js"],"sourcesContent":["import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Handles scroll synchronization between panes\n */\nexport class ScrollSynchronizer {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.isSyncing = false;\n    }\n\n    /**\n     * Set up synchronized scrolling between panes\n     */\n    setupSynchronizedScrolling() {\n        // Find panes\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        if (panes.length !== 2) {\n            Debug.log(`ScrollSynchronizer: Could not find both diff panes. Found: ${panes.length}`, null, 2);\n            return;\n        }\n\n        const leftPane = panes[0];\n        const rightPane = panes[1];\n\n        // Get content elements\n        const leftContent = leftPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        const rightContent = rightPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n\n        if (!leftContent || !rightContent) {\n            Debug.log('ScrollSynchronizer: Could not find all required scrolling elements', null, 2);\n            return;\n        }\n\n        // Store references\n        this.leftContent = leftContent;\n        this.rightContent = rightContent;\n\n        // Sync both vertical AND horizontal scrolling between panes\n        leftContent.addEventListener('scroll', () => this._handleScroll(leftContent, rightContent), { passive: true });\n        rightContent.addEventListener('scroll', () => this._handleScroll(rightContent, leftContent), { passive: true });\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this._updateScrollState(leftContent);\n            this._updateScrollState(rightContent);\n        });\n\n        Debug.log('ScrollSynchronizer: Horizontal and vertical scroll synchronization set up', null, 2);\n    }\n\n    /**\n     * Handle scroll events\n     * @private\n     */\n    _handleScroll(sourceElement, targetElement) {\n        // Only update if not already syncing to avoid loops\n        if (!this.isSyncing) {\n            this.isSyncing = true;\n\n            // Sync vertical scrolling (top position)\n            targetElement.scrollTop = sourceElement.scrollTop;\n\n            // IMPORTANT: Also sync horizontal scrolling\n            targetElement.scrollLeft = sourceElement.scrollLeft;\n\n            this._updateScrollState(sourceElement);\n\n            // Reset syncing flag after a short delay\n            setTimeout(() => {\n                this.isSyncing = false;\n            }, 10);\n        }\n    }\n\n    /**\n     * Update CSS class based on scroll state\n     * @private\n     */\n    _updateScrollState(contentElement) {\n        const wasScrolled = contentElement.classList.contains(Selectors.STATUS.SCROLLED.name());\n        const isScrolled = contentElement.scrollLeft > 0;\n\n        // Only update if the state changed\n        if (wasScrolled !== isScrolled) {\n            if (isScrolled) {\n                contentElement.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                contentElement.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Manages icon marker creation and positioning\n */\nexport class IconMarkerManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n    }\n\n    /**\n     * Initialize icon markers with proper scroll synchronization\n     */\n    initializeIconMarkers() {\n        // Measure actual cell height for accurate positioning\n        const cellHeight = this._calculateCellHeight();\n        document.documentElement.style.setProperty('--cell-height', `${cellHeight}px`);\n\n        // Process each diff pane\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        panes.forEach(pane => {\n            this._setupIconColumn(pane);\n        });\n\n        // Use a dedicated method to handle all height updates\n        this._updateIconColumnHeights();\n\n        // Set up future height updates for window resizing\n        this._setupIconHeightUpdater();\n    }\n\n    /**\n     * Set up icon column for a pane\n     * @private\n     */\n    _setupIconColumn(pane) {\n        // Get the content container (scrollable area)\n        const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        if (!content) return;\n\n        // Get code table wrapper to match height\n        const codeTableWrapper = content.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n        if (!codeTableWrapper) {\n            Debug.warn('IconMarkerManager: Code table wrapper not found', null, 2);\n            return;\n        }\n\n        // Create or get icon column\n        let iconColumn = pane.querySelector(`:scope > ${Selectors.ICONS.COLUMN}`);\n        if (!iconColumn) {\n            iconColumn = document.createElement('div');\n            iconColumn.className = Selectors.ICONS.COLUMN.name();\n            pane.appendChild(iconColumn);\n        }\n\n        // Get all cells with chunk IDs\n        const chunkCells = content.querySelectorAll(\n            `${Selectors.DIFF.LINE_CONTENT}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_PLACEHOLDER}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_CONTENT_EMPTY}[data-chunk-id]:not([data-chunk-id=\"\"])`\n        );\n\n        // Organize cells by chunk ID\n        const chunkGroups = {};\n        chunkCells.forEach(cell => {\n            const chunkId = cell.dataset.chunkId;\n            if (!chunkGroups[chunkId]) {\n                chunkGroups[chunkId] = [];\n            }\n            chunkGroups[chunkId].push(cell);\n        });\n\n        // Process only the first cell of each chunk\n        Object.keys(chunkGroups).forEach(chunkId => {\n            // Sort by line number\n            chunkGroups[chunkId].sort((a, b) => {\n                const aLineNum = parseInt(a.dataset.lineId.split('-').pop(), 10);\n                const bLineNum = parseInt(b.dataset.lineId.split('-').pop(), 10);\n                return aLineNum - bLineNum;\n            });\n\n            // Get the first cell in the sorted group\n            const firstCell = chunkGroups[chunkId][0];\n\n            if (firstCell) {\n                this._createIconMarker(firstCell, iconColumn);\n            }\n        });\n\n        // Store table height for later use\n        if (codeTableWrapper) {\n            const tableHeight = codeTableWrapper.scrollHeight;\n            pane.dataset.tableHeight = tableHeight;\n        }\n\n        // Set up scroll synchronization\n        content.addEventListener('scroll', () => {\n            // Sync vertical scroll position with requestAnimationFrame\n            requestAnimationFrame(() => {\n                iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n            });\n\n            // Handle horizontal scroll state\n            if (content.scrollLeft > 0) {\n                pane.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                pane.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }, { passive: true });\n\n        // Initial position\n        iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n    }\n\n    /**\n     * Create a single icon marker for a cell\n     * @private\n     */\n    _createIconMarker(cell, iconColumn) {\n        const lineId = cell.dataset.lineId;\n        if (!lineId) return;\n\n        // Check if marker already exists\n        let marker = iconColumn.querySelector(`${Selectors.ICONS.MARKER}[data-line-id=\"${lineId}\"]`);\n\n        // Create new marker only if it doesn't exist\n        if (!marker) {\n            marker = document.createElement('div');\n            marker.className = Selectors.ICONS.MARKER.name();\n\n            // Add class for placeholder lines\n            if (cell.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name())) {\n                marker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n            }\n\n            // Use line ID for matching\n            marker.dataset.lineId = lineId;\n\n            // Set position index\n            const lineNumber = lineId.split('-').pop();\n            marker.dataset.iconIndex = lineNumber;\n            marker.style.setProperty('--icon-index', lineNumber);\n\n            // DO NOT transfer selection state classes - they will be managed by ChunkVisualStateManager\n            // Selection state and placeholder status are orthogonal concepts and should be managed separately\n\n            // Add to icon column\n            iconColumn.appendChild(marker);\n        }\n    }\n\n    /**\n     * Calculate cell height with maximum precision\n     * @private\n     * @returns {number} Precise cell height in pixels\n     */\n    _calculateCellHeight() {\n        // Get multiple line number cells for better accuracy\n        const lineNumberCells = this.diffViewer.container.querySelectorAll(Selectors.CODE.LINE_NUMBER);\n\n        if (!lineNumberCells || lineNumberCells.length === 0) {\n            Debug.log('IconMarkerManager: No line number cells found, using default height', null, 2);\n            return 20.5; // Fallback height\n        }\n\n        // Take the median height from first few cells (more reliable than just the first)\n        const heights = [];\n        const sampleSize = Math.min(5, lineNumberCells.length);\n\n        for (let i = 0; i < sampleSize; i++) {\n            heights.push(lineNumberCells[i].getBoundingClientRect().height);\n        }\n\n        // Sort heights and take the median (middle) value\n        heights.sort((a, b) => a - b);\n        const medianHeight = heights[Math.floor(heights.length / 2)];\n\n        Debug.log(`IconMarkerManager: Sampled heights: ${heights.join(', ')}, using median: ${medianHeight}px`, null, 3);\n\n        return medianHeight;\n    }\n\n    /**\n     * Set up height updater for window resizing\n     * @private\n     */\n    _setupIconHeightUpdater() {\n        // Debounce to avoid excessive updates\n        let resizeTimer;\n\n        // Add window resize listener\n        window.addEventListener('resize', () => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(() => {\n                this._updateIconColumnHeights();\n            }, 100);\n        });\n\n        // Initial update\n        this._updateIconColumnHeights();\n    }\n\n    /**\n     * Update all icon column heights\n     * @private\n     */\n    _updateIconColumnHeights() {\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n        const heights = {}; // Track heights for logging\n\n        panes.forEach(pane => {\n            const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n            const iconColumn = pane.querySelector(Selectors.ICONS.COLUMN);\n            const codeTableWrapper = content?.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n\n            if (iconColumn && codeTableWrapper) {\n                const tableHeight = codeTableWrapper.scrollHeight;\n                const currentHeight = parseInt(iconColumn.style.height) || 0;\n\n                // Only update if height changed significantly\n                if (Math.abs(currentHeight - tableHeight) > 5) {\n                    iconColumn.style.height = `${tableHeight}px`;\n                    heights[pane.dataset.side || 'pane'] = tableHeight;\n                }\n            }\n        });\n\n        // Log all height updates in one message\n        if (Object.keys(heights).length > 0) {\n            Debug.log('IconMarkerManager: Updated icon column heights:', heights, 3);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { ModalManager } from '../modal/ModalManager';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Adds copy buttons to code blocks in the preview modal\n * This implementation uses a fallback strategy for maximum browser compatibility\n */\nexport class CopyButton {\n    /**\n     * Initialize copy buttons for code blocks\n     * @param {string} containerId - ID of the container element\n     * @returns {boolean} Success status\n     */\n    static addCopyButtonsToPreview(containerId = Selectors.MODAL.PREVIEW_CONTENT_ID.name()) {\n        // Get instance of TranslationManager\n        const translationManager = TranslationManager.getInstance();\n\n        const container = DOMUtils.getElement(containerId);\n\n        if (!container) {\n            // Try direct DOM methods too\n            const directElement = document.getElementById(containerId);\n            const querySelectorElement = document.querySelector('#' + containerId);\n\n            Debug.log('CopyButton: Alternative container lookup results', {\n                getElementById: !!directElement,\n                querySelector: !!querySelectorElement\n            }, 2);\n\n            Debug.warn('CopyButton: Preview container not found', null, 2);\n            return false;\n        }\n\n        // Find all code blocks within the container\n        const preElements = container.querySelectorAll('pre');\n\n        if (!preElements || preElements.length === 0) {\n            Debug.log('CopyButton: No code blocks found in preview', null, 3);\n            return false;\n        }\n\n        // Add copy button to each pre element\n        preElements.forEach(pre => {\n            // Check if button already exists\n            if (pre.querySelector(Selectors.COPY.BUTTON)) {\n                return;\n            }\n\n            // Create copy button\n            const button = DOMUtils.createElement('button', null, Selectors.COPY.BUTTON.name(), {\n                type: 'button',\n                title: translationManager.get('copyCode')\n            });\n\n            // Add copy button content\n            button.innerHTML = `<span class=\"${Selectors.COPY.ICON.name()}\"></span><span class=\"${Selectors.COPY.TEXT.name()}\">${translationManager.get('copy')}</span>`;\n\n            // Position the button within the pre element\n            pre.style.position = 'relative';\n\n            // Find code element and insert button before it\n            const codeEl = pre.querySelector('code');\n            if (codeEl) {\n                pre.insertBefore(button, codeEl);\n            } else {\n                // Fallback to appending if no code element found\n                pre.appendChild(button);\n            }\n\n            // Add click event with progressive fallback\n            button.addEventListener('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                const codeEl = pre.querySelector('code');\n                if (!codeEl) return;\n\n                // Store reference to the code element for later use\n                // This is important to maintain context during asynchronous operations\n                CopyButton._sourceCodeElement = codeEl;\n\n                // Get text content - use most reliable method\n                let textToCopy;\n                if (codeEl.hasAttribute('data-original-code')) {\n                    textToCopy = CopyButton._decodeHTMLEntities(codeEl.getAttribute('data-original-code'));\n                    Debug.log('CopyButton: Using original code from attribute', null, 3);\n                } else {\n                    textToCopy = codeEl.textContent || '';\n                    textToCopy = textToCopy.replace(/\\n\\n+/g, '\\n');\n                    Debug.log('CopyButton: Using text content from code element', null, 3);\n                }\n\n                Debug.log('CopyButton: Text length: ' + textToCopy.length, null, 3);\n\n                // Go straight to the most reliable method - manual copy\n                // This ensures consistent behavior across all browsers\n                CopyButton._showManualCopyModal(textToCopy);\n\n                // Show visual feedback that copy operation was initiated\n                CopyButton._showProcessingState(button);\n            });\n        });\n\n        Debug.log(`CopyButton: Added copy buttons to ${preElements.length} code blocks`, null, 2);\n        return true;\n    }\n\n    /**\n     * Show processing state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showProcessingState(button) {\n        button.classList.add(Selectors.COPY.PROCESSING.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Open Copy Dialog...';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.PROCESSING.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 1000);\n    }\n\n    /**\n     * Show copied state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopiedState(button) {\n        button.classList.add(Selectors.COPY.COPIED.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Copied!';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.COPIED.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 2000);\n    }\n\n    /**\n     * Show a modal dialog with text for manual copying using ModalManager\n     * @param {string} text - Text to copy\n     * @private\n     */\n    static _showManualCopyModal(text) {\n        // Get singleton instance of ModalManager\n        const modalManager = ModalManager.getInstance();\n\n        // Create the copy modal and get its ID\n        const modalId = modalManager.createCopyModal(text);\n\n        // Open the modal\n        modalManager.open(modalId);\n\n        Debug.log('CopyButton: Showing manual copy modal', null, 2);\n    }\n\n    /**\n     * Show copy failure on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopyFailure(button) {\n        button.innerHTML = DOMUtils.getIconHtml('exclamation-triangle', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Copy Failed';\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name(), Selectors.UTILITY.BUTTON_SUCCESS.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_DANGER.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Try Again';\n            button.classList.remove(Selectors.UTILITY.BUTTON_DANGER.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Decode HTML entities in a string\n     * @param {string} html - String with HTML entities\n     * @returns {string} Decoded string\n     * @private\n     */\n    static _decodeHTMLEntities(html) {\n        if (!html) return '';\n\n        const textarea = document.createElement('textarea');\n        textarea.innerHTML = html;\n        return textarea.value;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n/**\n * Manages browser UI generation for file-browser.php\n * This component handles the dynamic generation of UI elements that were previously\n * hardcoded in the PHP file, ensuring proper use of selectors and translations.\n */\nexport class BrowserUIManager {\n    /**\n     * @param {DiffViewer|Object} diffViewer - Parent diff viewer instance or options object\n     */\n    constructor (diffViewer) {\n        // Handle both DiffViewer instance or options object\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n        } else {\n            this.diffViewer = null;\n            this.options = diffViewer || {};\n        }\n\n        this.container = null;\n        this.elements = {\n            themeSwitcher: null,\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Get the translation manager instance\n        this.translationManager = TranslationManager.getInstance();\n\n        // Log translation state for debugging\n        let translationsSource;\n\n        // Extract nested ternary operations into separate statements\n        const hasWindowConfig = !!window.diffConfig?.translations;\n        const hasOptionsTranslations = !!this.options?.translations;\n\n        if (this.translationManager.isInitialized()) {\n            translationsSource = 'TranslationManager';\n        } else if (hasWindowConfig) {\n            translationsSource = 'window.diffConfig';\n        } else if (hasOptionsTranslations) {\n            translationsSource = 'options';\n        } else {\n            translationsSource = 'none';\n        }\n\n        const lang = this.translationManager.getLanguage();\n\n        Debug.log(`BrowserUIManager: Created with \"${lang}\" translations from ${translationsSource}`,\n                 this.translationManager.getAllTranslations(), 2);\n    }\n\n    /**\n     * Set the DiffViewer instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    setDiffViewer(diffViewer) {\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n            Debug.log('BrowserUIManager: Updated DiffViewer reference', null, 3);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Get translations from options\n     * @returns {Object} Translations object\n     */\n    getTranslations() {\n        // First, try to get translations from the TranslationManager\n        if (this.translationManager && this.translationManager.isInitialized()) {\n            Debug.log('BrowserUIManager: Using translations from TranslationManager', this.translationManager.getAllTranslations(), 3);\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Second, try to auto-initialize TranslationManager with window.diffConfig\n        if (window.diffConfig?.translations && typeof window.diffConfig.translations === 'object') {\n            Debug.log('BrowserUIManager: Auto-initializing TranslationManager from window.diffConfig', window.diffConfig.translations, 3);\n            this.translationManager.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Fall back to local options if nothing else works\n        if (this.options?.translations && typeof this.options.translations === 'object') {\n            Debug.log('BrowserUIManager: Using translations from local options', this.options.translations, 3);\n            return this.options.translations;\n        }\n\n        Debug.log('BrowserUIManager: No translations found, using empty object', null, 3);\n        return {};\n    }\n\n    /**\n     * Initialize UI components\n     * @param {string} containerSelector - Container element selector\n     */\n    initialize(containerSelector = Selectors.CONTAINER.WRAPPER) {\n        Debug.log('BrowserUIManager: Initializing UI components', null, 2);\n\n        this.container = document.querySelector(containerSelector);\n\n        if (!this.container) {\n            Debug.error('BrowserUIManager: Container element not found', null, 2);\n            return false;\n        }\n\n        // Change the order of generation - create diff container first\n        this.generateDiffContainer();\n        this.generateThemeSwitcher();\n        this.generateMergeControls();\n\n        Debug.log('BrowserUIManager: UI components generated', null, 2);\n        return true;\n    }\n\n    /**\n     * Generate theme switcher UI\n     */\n    generateThemeSwitcher() {\n        Debug.log('BrowserUIManager: Generating theme switcher', null, 3);\n\n        // Get the ID without the # prefix for createElement\n        const themeSwitcherId = Selectors.THEME.SWITCHER.name();\n        const themeLoadingId = Selectors.THEME.LOADING_INDICATOR.name();\n        const themeToggleId = Selectors.THEME.TOGGLE.name();\n\n        // Create theme switcher element\n        const themeSwitcher = document.createElement('div');\n        themeSwitcher.id = themeSwitcherId;\n        themeSwitcher.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n        themeSwitcher.style.cssText = 'display: none !important; position: relative;';\n\n        // Create theme switcher wrapper\n        const switcherWrapper = document.createElement('div');\n        switcherWrapper.className = Selectors.THEME_SWITCHER.WRAPPER.name();\n\n        // Get SVG icons for light/dark mode\n        const sunIcon = DOMUtils.getIconHtml('sun', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n        const moonIcon = DOMUtils.getIconHtml('moon', { classes: Selectors.UTILITY.MARGIN_START_2.name() });\n\n        // Create theme switcher content with toggle\n        switcherWrapper.innerHTML = `\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_END_2.name()}\">${sunIcon}</span>\n            <label class=\"${Selectors.THEME_SWITCHER.CONTROL.name()}\" for=\"${themeToggleId}\">\n                <input type=\"checkbox\" id=\"${themeToggleId}\" checked>\n                <span class=\"${Selectors.THEME_SWITCHER.SLIDER.name()} ${Selectors.THEME_SWITCHER.SLIDER_ROUND.name()}\"></span>\n            </label>\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_START_2.name()} \">${moonIcon}</span>\n        `;\n\n        // Append elements to theme switcher\n        themeSwitcher.appendChild(switcherWrapper);\n\n        // Create a separate container for the loader outside the theme switcher hierarchy\n        const loadingContainer = document.createElement('div');\n        loadingContainer.id = themeLoadingId;\n        loadingContainer.style.display = 'none';\n        loadingContainer.style.position = 'absolute';\n        loadingContainer.style.zIndex = '1000';\n\n        // Append theme switcher to container\n        this.container.appendChild(themeSwitcher);\n\n        // Append loading container to body for proper positioning\n        document.body.appendChild(loadingContainer);\n\n        // Store reference\n        this.elements.themeSwitcher = themeSwitcher;\n        this.elements.themeLoadingContainer = loadingContainer;\n\n        // Watch for the vdm-diff__container to have 'loaded' class\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach(() => {\n                const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n                if (diffContainer && diffContainer.classList.contains('loaded')) {\n                    // If the container is loaded, make the theme switcher visible\n                    if (themeSwitcher) {\n                        themeSwitcher.style.cssText = 'display: flex !important; position: relative;';\n                    }\n                    // Disconnect the observer once we've made the change\n                    observer.disconnect();\n                }\n            });\n        });\n\n        // Start observing the container's parent element for child changes\n        const containerParent = this.container || document.body;\n        observer.observe(containerParent, {\n            subtree: true,\n            childList: true,\n            attributes: true,\n            attributeFilter: ['class']\n        });\n    }\n\n    /**\n     * Generate diff container UI\n     */\n    generateDiffContainer() {\n        Debug.log('BrowserUIManager: Generating diff container', null, 3);\n\n        // Get IDs without the # prefix for createElement\n        const diffContainerId = Selectors.DIFF.CONTAINER.name();\n        const viewerId = Selectors.DIFF.VIEWER.name();\n\n        // Create diff container\n        const diffContainer = document.createElement('div');\n        diffContainer.id = diffContainerId;\n\n        // Create viewer element\n        const viewerElement = document.createElement('div');\n        viewerElement.id = viewerId;\n        viewerElement.className = Selectors.UTILITY.MARGIN_TOP_2.name();\n        viewerElement.style.display = 'none';\n\n        // Set up a mutation observer to watch for display changes on the viewer element\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.type === 'attributes' &&\n                    mutation.attributeName === 'style' &&\n                    viewerElement.style.display !== 'none') {\n                    // If viewer becomes visible, show the theme switcher\n                    if (this.elements.themeSwitcher) {\n                        this.elements.themeSwitcher.style.display = 'flex';\n                    }\n                }\n            });\n        });\n\n        // Start observing the viewer element for style changes\n        observer.observe(viewerElement, { attributes: true });\n\n        // Append elements to diff container\n        diffContainer.appendChild(viewerElement);\n\n        // Append diff container to container\n        this.container.appendChild(diffContainer);\n\n        // Store reference and log creation\n        this.elements.diffContainer = diffContainer;\n\n        // Verify the element was created\n        const createdViewer = document.getElementById(viewerId);\n        Debug.log(`BrowserUIManager: Viewer element (${viewerId}) created successfully: ${!!createdViewer}`, null, 3);\n    }\n\n    /**\n     * Generate merge controls UI using translations from DiffViewer\n     */\n    generateMergeControls() {\n        Debug.log('BrowserUIManager: Generating merge controls structure only', null, 3);\n\n        // Get translations from options\n        const translations = this.getTranslations();\n\n        // Get IDs without the # prefix for createElement\n        const previewButtonId = Selectors.MERGE.BUTTON_PREVIEW.name();\n        const toggleButtonId = Selectors.MERGE.DESTINATION_TOGGLE.name();\n        const toggleIconId = Selectors.MERGE.TOGGLE_ICON.name();\n        const toggleTextId = Selectors.MERGE.TOGGLE_TEXT.name();\n        const dropdownId = Selectors.MERGE.DESTINATION_DROPDOWN.name();\n        const applyButtonId = Selectors.MERGE.BUTTON_APPLY.name();\n\n        // Create merge controls container\n        const mergeControls = document.createElement('div');\n        mergeControls.className = `${Selectors.MERGE.CONTROLS_ACTIONS.name()} ${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.MARGIN_Y_2.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n\n        // Create preview button section\n        const previewSection = document.createElement('div');\n\n        const previewButton = document.createElement('button');\n        previewButton.id = previewButtonId;\n        previewButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_INFO.name()}`;\n        previewButton.type = 'button';\n        previewButton.innerHTML = `${DOMUtils.getIconHtml('eye', { classes: Selectors.UTILITY.MARGIN_END_2.name() })}${translations.preview || 'Preview'}`;\n\n        previewSection.appendChild(previewButton);\n\n        // Create merge controls section\n        const mergeSection = document.createElement('div');\n        mergeSection.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()}`;\n\n        // Create a group for toggle button and dropdown - using input-group styling approach\n        const toggleGroup = document.createElement('div');\n        toggleGroup.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_STRETCH.name()} ${Selectors.UTILITY.MARGIN_END_3.name()}`;\n        // Add class for styling instead of inline style\n        toggleGroup.classList.add('vdm-input-group');\n\n        // Create destination toggle button\n        const toggleButton = document.createElement('button');\n        toggleButton.id = toggleButtonId;\n        toggleButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_FLAT.name()} vdm-input-group__prepend`;\n        toggleButton.type = 'button'; // Explicitly set type to button\n\n        const toggleIcon = document.createElement('span');\n        toggleIcon.id = toggleIconId;\n        toggleIcon.innerHTML = DOMUtils.getIconHtml('plus-circle', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n\n        const toggleText = document.createElement('span');\n        toggleText.id = toggleTextId;\n        toggleText.setAttribute('title', translations.saveToOriginalTooltip || 'Replace the current file with merged content');\n        toggleText.textContent = translations.saveToOriginal || 'Save to original';\n\n        toggleButton.appendChild(toggleIcon);\n        toggleButton.appendChild(toggleText);\n\n        // Create empty destination dropdown - IMPORTANT CHANGE: No options added\n        const dropdown = document.createElement('select');\n        dropdown.id = dropdownId;\n        dropdown.className = `${Selectors.UTILITY.FORM_SELECT.name()} vdm-input-group__append vdm-select-auto-width`;\n        // No options are added here - This will be handled by MergeUIController\n\n        // Add toggle button and dropdown to the toggle group with no spacing between them\n        toggleGroup.appendChild(toggleButton);\n        toggleGroup.appendChild(dropdown);\n\n        // Create apply merge button\n        const applyButton = document.createElement('button');\n        applyButton.id = applyButtonId;\n        applyButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()} vdm-nowrap`;\n        applyButton.type = 'button';\n        applyButton.innerHTML = (translations.applyMerge || 'Apply Merge') + ` ${DOMUtils.getIconHtml('file-circle-plus', { classes: Selectors.UTILITY.MARGIN_START_2.name() })}`;\n        applyButton.style.whiteSpace = 'nowrap';\n        applyButton.style.display = 'inline-flex';\n        applyButton.style.alignItems = 'center';\n\n        // Append toggle group and apply button to merge section\n        mergeSection.appendChild(toggleGroup);\n        mergeSection.appendChild(applyButton);\n\n        // Append sections to merge controls\n        mergeControls.appendChild(previewSection);\n        mergeControls.appendChild(mergeSection);\n\n        // Append merge controls to container\n        this.container.appendChild(mergeControls);\n\n        // Store reference\n        this.elements.mergeControls = mergeControls;\n\n        Debug.log('BrowserUIManager: Created empty merge controls structure (options will be populated by MergeUIController)', null, 2);\n    }\n\n    /**\n     * Show theme loading indicator using the LoaderManager\n     */\n    showThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        const themeSwitcher = this.elements.themeSwitcher;\n\n        if (loadingContainer && themeSwitcher) {\n            // Get the translated message\n            const message = TranslationManager.getInstance().get('loadingTheme', 'Loading theme...');\n\n            // Use proper CSS classes for styling\n            loadingContainer.innerHTML = `\n                <div class=\"vdm-theme__loading-spinner\"></div>\n                <span>${message}</span>\n            `;\n\n            // Add styling for the translucid background and rounded corners\n            loadingContainer.className = 'vdm-theme__loading-indicator';\n\n            // Get the position of the theme switcher\n            const rect = themeSwitcher.getBoundingClientRect();\n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n            // Position the loader just above the theme switcher\n            loadingContainer.style.top = (rect.top + scrollTop - 40) + 'px';\n\n            // Make the loader visible\n            loadingContainer.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Hide theme loading indicator\n     */\n    hideThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        if (loadingContainer) {\n            loadingContainer.style.display = 'none';\n        }\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        Debug.log('BrowserUIManager: Destroying UI components', null, 2);\n\n        // Hide any active theme loader\n        this.hideThemeLoading();\n\n        // Remove generated elements\n        if (this.elements.themeSwitcher && this.elements.themeSwitcher.parentNode) {\n            this.elements.themeSwitcher.parentNode.removeChild(this.elements.themeSwitcher);\n        }\n\n        if (this.elements.diffContainer && this.elements.diffContainer.parentNode) {\n            this.elements.diffContainer.parentNode.removeChild(this.elements.diffContainer);\n        }\n\n        if (this.elements.mergeControls && this.elements.mergeControls.parentNode) {\n            this.elements.mergeControls.parentNode.removeChild(this.elements.mergeControls);\n        }\n\n        // Reset references\n        this.elements = {\n            themeSwitcher: null,\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Clear DiffViewer reference\n        this.diffViewer = null;\n\n        Debug.log('BrowserUIManager: UI components destroyed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors'; // Add this import\n\n/**\n * Manages layout dimensions and responsive behavior\n */\nexport class LayoutManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.paneWidth = 0;\n    }\n\n    /**\n     * Initialize layout manager\n     */\n    initialize() {\n        // Initial pane width update\n        this.updatePaneWidth();\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this.updatePaneWidth();\n        });\n\n        // Set up mutation observer for content changes\n        this.setupWidthObserver();\n\n        Debug.log('LayoutManager: Initialized', null, 2);\n    }\n\n    /**\n     * Update pane width and CSS variables\n     */\n    updatePaneWidth() {\n        // Use DOMUtils.getElements for consistent element selection\n        const panes = DOMUtils.getElements(Selectors.DIFF.PANE, this.diffViewer.container);\n        if (!panes || panes.length === 0) return;\n\n        const pane = panes[0];\n        const newWidth = pane.clientWidth;\n\n        if (newWidth !== this.paneWidth) {\n            this.paneWidth = newWidth;\n\n            // Instead of direct DOM manipulation, use a helper method to set CSS variables\n            this.setCSSVariable('--diff-pane-width', `${this.paneWidth}px`);\n\n            Debug.log(`LayoutManager: Updated pane width: ${this.paneWidth}px`, null, 3);\n        }\n    }\n\n    /**\n     * Set CSS variable consistently\n     * @param {string} name - Variable name\n     * @param {string} value - Variable value\n     */\n    setCSSVariable(name, value) {\n        document.documentElement.style.setProperty(name, value);\n    }\n\n    /**\n     * Set up observer for content changes affecting width\n     */\n    setupWidthObserver() {\n        // Create mutation observer\n        const observer = new MutationObserver((mutations) => {\n            let shouldUpdate = false;\n\n            for (const mutation of mutations) {\n                if (mutation.type === 'childList' ||\n                    (mutation.type === 'attributes' &&\n                     (mutation.attributeName === 'style' || mutation.attributeName === 'class'))) {\n                    shouldUpdate = true;\n                    break;\n                }\n            }\n\n            if (shouldUpdate) {\n                this.updatePaneWidth();\n            }\n        });\n\n        // Start observing the container\n        observer.observe(this.diffViewer.container, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['style', 'class']\n        });\n\n        // Store for potential cleanup\n        this.observer = observer;\n\n        Debug.log('LayoutManager: Width observer setup complete', null, 2);\n    }\n\n    /**\n     * Clean up event handlers and observers\n     */\n    destroy() {\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = null;\n        }\n\n        Debug.log('LayoutManager: Destroyed', null, 2);\n    }\n}\n"],"names":["Debug","Selectors","ScrollSynchronizer","diffViewer","_classCallCheck","isSyncing","_createClass","key","value","setupSynchronizedScrolling","_this","panes","container","querySelectorAll","DIFF","PANE","length","log","concat","leftPane","rightPane","leftContent","querySelector","PANE_CONTENT","rightContent","addEventListener","_handleScroll","passive","window","_updateScrollState","sourceElement","targetElement","_this2","scrollTop","scrollLeft","setTimeout","contentElement","wasScrolled","classList","contains","STATUS","SCROLLED","name","isScrolled","add","remove","IconMarkerManager","initializeIconMarkers","cellHeight","_calculateCellHeight","document","documentElement","style","setProperty","forEach","pane","_setupIconColumn","_updateIconColumnHeights","_setupIconHeightUpdater","content","codeTableWrapper","TABLE_WRAPPER","warn","iconColumn","ICONS","COLUMN","createElement","className","appendChild","chunkCells","LINE_CONTENT","LINE_PLACEHOLDER","LINE_CONTENT_EMPTY","chunkGroups","cell","chunkId","dataset","push","Object","keys","sort","a","b","aLineNum","parseInt","lineId","split","pop","bLineNum","firstCell","_createIconMarker","tableHeight","scrollHeight","requestAnimationFrame","transform","marker","MARKER","MARKER_PLACEHOLDER","lineNumber","iconIndex","lineNumberCells","CODE","LINE_NUMBER","heights","sampleSize","Math","min","i","getBoundingClientRect","height","medianHeight","floor","join","_this3","resizeTimer","clearTimeout","currentHeight","abs","side","DOMUtils","ModalManager","TranslationManager","CopyButton","addCopyButtonsToPreview","containerId","arguments","undefined","MODAL","PREVIEW_CONTENT_ID","translationManager","getInstance","getElement","directElement","getElementById","querySelectorElement","preElements","pre","COPY","BUTTON","button","type","title","get","innerHTML","ICON","TEXT","position","codeEl","insertBefore","e","preventDefault","stopPropagation","_sourceCodeElement","textToCopy","hasAttribute","_decodeHTMLEntities","getAttribute","textContent","replace","_showManualCopyModal","_showProcessingState","PROCESSING","textSpan","_showCopiedState","COPIED","text","modalManager","modalId","createCopyModal","open","_showCopyFailure","getIconHtml","classes","UTILITY","MARGIN_END_2","BUTTON_PRIMARY","BUTTON_SUCCESS","BUTTON_DANGER","html","textarea","BrowserUIManager","_window$diffConfig","_this$options","options","elements","themeSwitcher","diffContainer","mergeControls","translationsSource","hasWindowConfig","diffConfig","translations","hasOptionsTranslations","isInitialized","lang","getLanguage","getAllTranslations","setDiffViewer","getTranslations","_window$diffConfig2","_this$options2","_typeof","initialize","containerSelector","CONTAINER","WRAPPER","error","generateDiffContainer","generateThemeSwitcher","generateMergeControls","themeSwitcherId","THEME","SWITCHER","themeLoadingId","LOADING_INDICATOR","themeToggleId","TOGGLE","id","FLEX","JUSTIFY_CONTENT_BETWEEN","PADDING_2","cssText","switcherWrapper","THEME_SWITCHER","sunIcon","moonIcon","MARGIN_START_2","LABEL","CONTROL","SLIDER","SLIDER_ROUND","loadingContainer","display","zIndex","body","themeLoadingContainer","observer","MutationObserver","mutations","disconnect","containerParent","observe","subtree","childList","attributes","attributeFilter","diffContainerId","viewerId","VIEWER","viewerElement","MARGIN_TOP_2","mutation","attributeName","createdViewer","previewButtonId","MERGE","BUTTON_PREVIEW","toggleButtonId","DESTINATION_TOGGLE","toggleIconId","TOGGLE_ICON","toggleTextId","TOGGLE_TEXT","dropdownId","DESTINATION_DROPDOWN","applyButtonId","BUTTON_APPLY","CONTROLS_ACTIONS","ALIGN_ITEMS_CENTER","MARGIN_Y_2","previewSection","previewButton","BUTTON_INFO","preview","mergeSection","toggleGroup","ALIGN_ITEMS_STRETCH","MARGIN_END_3","toggleButton","BUTTON_FLAT","toggleIcon","toggleText","setAttribute","saveToOriginalTooltip","saveToOriginal","dropdown","FORM_SELECT","applyButton","applyMerge","whiteSpace","alignItems","showThemeLoading","message","rect","pageYOffset","top","hideThemeLoading","destroy","parentNode","removeChild","LayoutManager","paneWidth","updatePaneWidth","setupWidthObserver","getElements","newWidth","clientWidth","setCSSVariable","shouldUpdate","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","f"],"sourceRoot":""}