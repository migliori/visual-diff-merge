{"version":3,"file":"diff-viewer.min.js","mappings":"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","sources":["webpack://diff-files/webpack/universalModuleDefinition","webpack://diff-files/./src/components/ChunkManager.js","webpack://diff-files/./src/components/DiffNavigator.js","webpack://diff-files/./src/components/DiffViewer.js","webpack://diff-files/./src/components/MergeHandler.js","webpack://diff-files/./src/components/SyntaxHighlighter.js","webpack://diff-files/./src/components/ThemeManager.js","webpack://diff-files/./src/components/ThemeSelector.js","webpack://diff-files/./src/components/ThemeToggle.js","webpack://diff-files/./src/components/chunks/ChunkRenderer.js","webpack://diff-files/./src/components/chunks/ChunkSelectionHandler.js","webpack://diff-files/./src/components/chunks/ChunkVisualStateManager.js","webpack://diff-files/./src/components/chunks/MergeContentGenerator.js","webpack://diff-files/./src/components/merge/MergeOperationHandler.js","webpack://diff-files/./src/components/merge/MergePreviewManager.js","webpack://diff-files/./src/components/merge/MergeUIController.js","webpack://diff-files/./src/components/modal/ModalManager.js","webpack://diff-files/./src/components/navigator/ConflictNavigator.js","webpack://diff-files/./src/components/navigator/NavigationCounter.js","webpack://diff-files/./src/components/navigator/NavigationUIBuilder.js","webpack://diff-files/./src/components/syntax/CopyButton.js","webpack://diff-files/./src/components/viewer/BrowserUIManager.js","webpack://diff-files/./src/components/viewer/IconMarkerManager.js","webpack://diff-files/./src/components/viewer/LayoutManager.js","webpack://diff-files/./src/components/viewer/ScrollSynchronizer.js","webpack://diff-files/./src/constants/Selectors.js","webpack://diff-files/./src/utils/AlertManager.js","webpack://diff-files/./src/utils/BaseSingleton.js","webpack://diff-files/./src/utils/ChunkUtils.js","webpack://diff-files/./src/utils/ConfigUtils.js","webpack://diff-files/./src/utils/DOMUtils.js","webpack://diff-files/./src/utils/Debug.js","webpack://diff-files/./src/utils/DiffConfigManager.js","webpack://diff-files/./src/utils/EndpointDiscovery.js","webpack://diff-files/./src/utils/IconRegistry.js","webpack://diff-files/./src/utils/LoaderManager.js","webpack://diff-files/./src/utils/MergeContentFormatter.js","webpack://diff-files/./src/utils/NavigationUtils.js","webpack://diff-files/./src/utils/ResourceLoader.js","webpack://diff-files/./src/utils/StringUtils.js","webpack://diff-files/./src/utils/TranslationManager.js","webpack://diff-files/webpack/bootstrap","webpack://diff-files/webpack/runtime/define property getters","webpack://diff-files/webpack/runtime/hasOwnProperty shorthand","webpack://diff-files/webpack/runtime/make namespace object","webpack://diff-files/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","// ChunkManager.js - Manages diff chunks and coordinates chunk components\nimport { Debug } from '../utils/Debug';\nimport { ChunkUtils } from '../utils/ChunkUtils';\nimport Selectors from '../constants/Selectors';\n\nimport { ChunkRenderer } from './chunks/ChunkRenderer';\nimport { ChunkSelectionHandler } from './chunks/ChunkSelectionHandler';\nimport { MergeContentGenerator } from './chunks/MergeContentGenerator';\n\n/**\n * Manages diff chunks and coordinates chunk components\n */\nexport class ChunkManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.chunks = [];\n        this.oldContent = [];\n        this.newContent = [];\n        this.chunkElements = [];\n\n        // Create sub-components\n        this.renderer = new ChunkRenderer(this);\n        this.selectionHandler = new ChunkSelectionHandler(this);\n        this.contentGenerator = new MergeContentGenerator(this);\n\n        // Define selection state constants\n        this.SELECTED_STATE = Selectors.DIFF.CHUNK_SELECTED.name();\n        this.UNSELECTED_STATE = Selectors.DIFF.CHUNK_UNSELECTED.name();\n\n        // Performance tracking\n        this._performanceMetrics = {\n            initTime: 0,\n            renderTime: 0,\n            chunkCount: 0\n        };\n\n        Debug.log('ChunkManager: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize chunks from diff data\n     * @param {Object} diffData - Diff data\n     */\n    initChunks(diffData) {\n        const startTime = performance.now();\n        Debug.log('ChunkManager: Initializing chunks from diff data', null, 2);\n\n        // Clear previous cache state\n        ChunkUtils.clearCache();\n\n        // Save chunks data\n        this.chunks = diffData.chunks || [];\n        this.oldContent = diffData.old || [];\n        this.newContent = diffData.new || [];\n\n        // Track chunk count for performance metrics\n        this._performanceMetrics.chunkCount = this.chunks.length;\n\n        // Mark chunks with type 'replace' as conflicts for navigation\n        this.chunks.forEach(chunk => {\n            chunk.conflict = true;\n        });\n\n        Debug.log(`ChunkManager: ${this.chunks.length} chunks initialized`, null, 3);\n\n        // Update navigation counter if available\n        if (this.diffViewer.diffNavigator) {\n            this.diffViewer.diffNavigator.updateCounter();\n        }\n\n        const endTime = performance.now();\n        this._performanceMetrics.initTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Initialization completed in ${this._performanceMetrics.initTime.toFixed(2)}ms`, null, 2);\n\n        return this.chunks;\n    }\n\n    /**\n     * Render chunks to container\n     */\n    renderChunks() {\n        const startTime = performance.now();\n\n        // Delegate to renderer component\n        this.renderer.renderChunks();\n\n        // Initialize the visual state manager\n        if (this.selectionHandler.visualStateManager.initialize) {\n            this.selectionHandler.visualStateManager.initialize();\n        }\n\n        // Setup chunk selection after rendering\n        this.setupChunkSelection();\n\n        // Initialize chunk elements for navigation\n        this.initChunkElements();\n\n        const endTime = performance.now();\n        this._performanceMetrics.renderTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Rendering completed in ${this._performanceMetrics.renderTime.toFixed(2)}ms`,\n            {\n                chunkCount: this._performanceMetrics.chunkCount,\n                msPerChunk: (this._performanceMetrics.renderTime / Math.max(1, this._performanceMetrics.chunkCount)).toFixed(2)\n            }, 2);\n\n        return true;\n    }\n\n    /**\n     * Setup chunk selection handlers\n     */\n    setupChunkSelection() {\n        // Delegate to selection handler\n        this.selectionHandler.setupChunkSelection();\n    }\n\n    /**\n     * Toggle selection state of a chunk\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - Selection state (this.SELECTED_STATE or this.UNSELECTED_STATE)\n     */\n    toggleChunkSelection(chunkId, side, state) {\n        this.selectionHandler.toggleChunkSelection(chunkId, side, state);\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    generateMergedContent() {\n        const selections = this.selectionHandler.getSelections();\n        return this.contentGenerator.generateMergedContent(selections);\n    }\n\n    /**\n     * Generate content from lines array\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated file content\n     */\n    generateFileFromLines(lines) {\n        return this.contentGenerator.generateFileFromLines(lines);\n    }\n\n    /**\n     * Initialize chunk elements array for navigation\n     */\n    initChunkElements() {\n        // Create array to hold chunk elements\n        this.chunkElements = [];\n\n        // Debug total available chunks\n        Debug.log(`ChunkManager: Looking for ${this.chunks.length} chunks in DOM`, null, 2);\n\n        this.chunks.forEach((chunk, index) => {\n            // Find elements for this chunk ID (using optimized cache query)\n            const elements = ChunkUtils.getChunkElements(chunk.id);\n            Debug.log(`ChunkManager: Chunk ID ${chunk.id}: Found ${elements.length} elements`, null, 3);\n\n            if (elements.length > 0) {\n                // Sort by line number to get the first element\n                const sortedElements = ChunkUtils.sortElementsByLineNumber(elements);\n\n                // Store the first element for this chunk\n                this.chunkElements[index] = sortedElements[0];\n            } else {\n                Debug.warn(`ChunkManager: No DOM elements found for chunk ID: ${chunk.id}`, null, 2);\n            }\n        });\n\n        const initializedCount = this.chunkElements.filter(Boolean).length;\n        Debug.log(`ChunkManager: Initialized ${initializedCount}/${this.chunks.length} chunk elements for navigation`, null, 2);\n\n        // Log warning if no elements were found\n        if (initializedCount === 0 && this.chunks.length > 0) {\n            Debug.error('ChunkManager: No chunk elements found in DOM. Navigation will not work properly.', null, 1);\n\n            // Check if elements with the expected selector exist at all\n            const anyChunkElements = document.querySelectorAll(Selectors.DIFF.CHUNK);\n            Debug.warn(`ChunkManager: ${anyChunkElements.length} elements match the chunk selector ${Selectors.DIFF.CHUNK}`, null, 2);\n\n            // Check if any elements have data-chunk-id attribute\n            const anyChunkIdElements = document.querySelectorAll('[data-chunk-id]');\n            Debug.warn(`ChunkManager: ${anyChunkIdElements.length} elements have data-chunk-id attribute`, null, 2);\n        }\n    }\n\n    /**\n     * Get performance metrics for this component\n     * @returns {Object} Performance metrics\n     */\n    getPerformanceMetrics() {\n        const metrics = {\n            ...this._performanceMetrics\n        };\n\n        // Add metrics from subcomponents\n        if (this.selectionHandler.visualStateManager.getMetrics) {\n            metrics.visualStateManager = this.selectionHandler.visualStateManager.getMetrics();\n        }\n\n        // Add cache stats\n        metrics.cacheStats = ChunkUtils.getCacheStats();\n\n        return metrics;\n    }\n\n    /**\n     * Get selections\n     * @returns {Object} Current selections\n     */\n    get selections() {\n        return this.selectionHandler.getSelections();\n    }\n\n    /**\n     * Handle selection change callback\n     * This maintains compatibility with external code expecting this function\n     */\n    onSelectionChange() {\n        // This can be overridden by DiffViewer\n    }\n}\n","import { Debug } from '../utils/Debug';\n\nimport { NavigationCounter } from './navigator/NavigationCounter';\nimport { NavigationUIBuilder } from './navigator/NavigationUIBuilder';\nimport { ConflictNavigator } from './navigator/ConflictNavigator';\n\n/**\n * DiffNavigator handles navigation between conflicting chunks\n */\nexport class DiffNavigator {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer component\n     * @param {boolean} initializeImmediately - Whether to initialize navigation immediately\n     */\n    constructor(diffViewer, initializeImmediately = true) {\n        this.diffViewer = diffViewer;\n        this.currentChunkIndex = -1;\n\n        // Validate that the diffViewer has a valid configuration\n        if (!this.diffViewer || !this.diffViewer.chunkManager) {\n            Debug.error('DiffNavigator: Failed to initialize - diffViewer or chunkManager is missing', null, 1);\n            return;\n        }\n\n        // Create subcomponents\n        this.navigationCounter = new NavigationCounter(this);\n        this.uiBuilder = new NavigationUIBuilder(this);\n        this.conflictNavigator = new ConflictNavigator(this);\n\n        // Initialize navigation only if requested\n        if (initializeImmediately) {\n            this.initNavigation();\n        }\n\n        Debug.log('DiffNavigator: Component created', null, 2);\n    }\n\n    /**\n     * Initialize navigation\n     */\n    initNavigation() {\n        Debug.log('DiffNavigator: Initializing', null, 2);\n\n        // Validate that we have chunks before proceeding\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: No diff chunks found in configuration', {\n                configChunks: this.diffViewer.chunkManager.chunks,\n                diffConfig: this.diffViewer.diffConfig\n            }, 1);\n\n            // Add navigation UI anyway for better UX, but disable buttons\n            this.addNavigationButtons(true);\n            return;\n        }\n\n        // Add navigation UI\n        this.addNavigationButtons();\n\n        // Add keyboard shortcuts\n        this.setupKeyboardShortcuts();\n\n        // Navigate to first conflict if any\n        this.navigateToFirstConflict();\n\n        Debug.log('DiffNavigator: Initialized with chunk navigation',\n            { chunks: this.diffViewer.chunkManager.chunks?.length || 0 }, 2);\n    }\n\n    /**\n     * Add navigation buttons to the interface\n     * @param {boolean} disableButtons - Whether to disable navigation buttons\n     */\n    addNavigationButtons(disableButtons = false) {\n        // Create UI elements\n        const ui = this.uiBuilder.createNavigationUI();\n\n        if (!ui) return;\n\n        // Save references to counter and buttons\n        this.navigationCounter.setCounterElement(ui.counter);\n        this.navigationCounter.setButtons(ui.prevButton, ui.nextButton);\n\n        // Disable buttons if requested\n        if (disableButtons) {\n            ui.prevButton.disabled = true;\n            ui.nextButton.disabled = true;\n            ui.counter.textContent = 'No diff data';\n        } else {\n            // Update counter with current count\n            this.updateCounter();\n        }\n    }\n\n    /**\n     * Set up keyboard shortcuts for navigation\n     */\n    setupKeyboardShortcuts() {\n        document.addEventListener('keydown', (event) => {\n            // Only handle if not in input or textarea\n            if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\n                return;\n            }\n\n            // Check for navigation keys\n            switch (event.key) {\n                case 'ArrowDown':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToNextConflict();\n                    }\n                    break;\n\n                case 'ArrowUp':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToPrevConflict();\n                    }\n                    break;\n            }\n        });\n    }\n\n    /**\n     * Update navigation counter\n     * @returns {Array} Active conflicts\n     */\n    updateCounter() {\n        return this.navigationCounter.updateCounter();\n    }\n\n    /**\n     * Navigate to the first conflict\n     */\n    navigateToFirstConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToFirstConflict();\n    }\n\n    /**\n     * Navigate to the next conflict\n     */\n    navigateToNextConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToNextConflict();\n    }\n\n    /**\n     * Navigate to the previous conflict\n     */\n    navigateToPrevConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToPrevConflict();\n    }\n\n    /**\n     * Navigate to a specific chunk\n     * @param {number} index - Chunk index\n     * @returns {boolean} Success status\n     */\n    navigateToChunk(index) {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToChunk(index);\n    }\n\n    /**\n     * Destroy component and clean up event handlers\n     */\n    destroy() {\n        this.uiBuilder.destroy();\n        Debug.log('DiffNavigator: Destroyed', null, 2);\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { ConfigUtils } from '../utils/ConfigUtils';\nimport { EndpointDiscovery } from '../utils/EndpointDiscovery';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport Selectors from '../constants/Selectors';\n\nimport { ThemeManager } from './ThemeManager';\nimport { ThemeSelector } from './ThemeSelector';\nimport { SyntaxHighlighter } from './SyntaxHighlighter';\nimport { ChunkManager } from './ChunkManager';\nimport { ThemeToggle } from './ThemeToggle';\nimport { MergeHandler } from './MergeHandler';\nimport { DiffNavigator } from './DiffNavigator';\nimport { ScrollSynchronizer } from './viewer/ScrollSynchronizer';\nimport { IconMarkerManager } from './viewer/IconMarkerManager';\nimport { LayoutManager } from './viewer/LayoutManager';\nimport { ModalManager } from './modal/ModalManager';\n\n/**\n * Main diff viewer component\n */\nexport class DiffViewer {\n    /**\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        // Default configuration matching PHP javascript section structure\n        const defaultOptions = {\n            // Basic configuration\n            lang: 'en',\n            debug: false,\n            logLevel: 2,\n\n            // Theme settings\n            theme: {\n                defaultFamily: 'atom-one',\n                defaultMode: 'dark',\n                showSelector: true\n            },\n\n            // API endpoint\n            apiEndpoint: null\n\n            // We've removed default translations from here as they'll be handled by TranslationManager\n        };\n\n        // Merge options in priority order\n        // Configuration comes from: defaults < window.diffConfig < constructor options\n        this.config = ConfigUtils.mergeConfigurations(defaultOptions, window.diffConfig || {}, options);\n\n        // Create separate internal runtime properties\n        this.runtimeProps = {\n            diffData: options.diffData || window.diffConfig?.diffData || null,\n            serverSaveEnabled: options.serverSaveEnabled || window.diffConfig?.serverSaveEnabled || false,\n            // SECURITY: Remove server paths and use only secure fileRefIds\n            fileRefId: options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            // Keep safe filename properties (not paths)\n            newFileName: options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: options.filepath || window.diffConfig?.filepath || null,\n            demoEnabled: options.demoEnabled || window.diffConfig?.demoEnabled || false\n        };\n\n        // Store the main loader ID if provided from window.enableDiffViewer\n        this.mainLoaderId = options.mainLoaderId || null;\n\n        // Set debug values early\n        Debug.initialize(this.config.debug, '[DiffViewer]', this.config.logLevel || 2);\n\n        // Initialize TranslationManager with the translations from the config\n        const translationManager = TranslationManager.getInstance();\n        if (!translationManager.isInitialized() && this.config.translations) {\n            Debug.log('DiffViewer: Initializing TranslationManager', {\n                lang: this.config.lang || 'en',\n                translations: this.config.translations\n            }, 2);\n            translationManager.initialize(this.config.lang || 'en', this.config.translations);\n        } else {\n            Debug.log('DiffViewer: TranslationManager already initialized', null, 2);\n        }\n\n        // Get container element - now always using Selectors.DIFF.VIEWER\n        this.container = document.querySelector(Selectors.DIFF.VIEWER);\n\n        if (!this.container) {\n            Debug.error('DiffViewer: Container element not found', null, 2);\n            throw new Error('Container element not found');\n        }\n\n        // Verify diff data\n        if (!this.runtimeProps.diffData) {\n            Debug.error('DiffViewer: No diff data provided', null, 2);\n            throw new Error('No diff data provided');\n        }\n\n        Debug.log('DiffViewer: Initializing component', null, 2);\n\n        // Initialize services (singletons)\n        this._initializeServices();\n\n        // Create components\n        this._createComponents();\n\n        Debug.log('DiffViewer: Component created', null, 2);\n    }\n\n    /**\n     * Initialize service singletons\n     * @private\n     */\n    _initializeServices() {\n        // Get service singletons\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.themeSelector = ThemeSelector.getInstance(this);\n        this.modalManager = ModalManager.getInstance({\n            debug: this.config.debug,\n            translations: this.config.translations\n        });\n\n        // Initialize ThemeManager with config and ResourceLoader\n        this.themeManager.initialize({\n            theme: this.config.theme\n        }, this.resourceLoader);\n    }\n\n    /**\n     * Create component instances\n     * @private\n     */\n    _createComponents() {\n        // Create core components\n        this.syntaxHighlighter = new SyntaxHighlighter(this);\n        this.chunkManager = new ChunkManager(this);\n\n        // Create UI components - pass browserUIManager to ThemeToggle if available\n        this.themeToggle = new ThemeToggle(\n            this.browserUIManager,\n            Selectors.THEME.TOGGLE.name(),\n            Selectors.CONTAINER.WRAPPER.name()\n        );\n        this.mergeHandler = new MergeHandler(this);\n\n        // Create DiffNavigator but don't initialize it yet - it will be initialized after chunks are loaded\n        this.diffNavigator = new DiffNavigator(this, false);\n\n        // Create layout components\n        this.scrollSynchronizer = new ScrollSynchronizer(this);\n        this.iconMarkerManager = new IconMarkerManager(this);\n        this.layoutManager = new LayoutManager(this);\n    }\n\n    /**\n     * Initialize the diff viewer and render content\n     */\n    async initialize() {\n        Debug.log('DiffViewer: Beginning initialization', null, 2);\n\n        try {\n            // PHASE 1: DATA INITIALIZATION\n            await this._initializeData();\n\n            // PHASE 2: RESOURCE LOADING\n            await this._loadResources();\n\n            // PHASE 3: UI RENDERING\n            await this._renderUI();\n\n            // PHASE 4: UI ENHANCEMENT\n            await this._setupUIFeatures();\n\n            // Display demo mode warning if enabled\n            if (this.runtimeProps.demoEnabled) {\n                this._showDemoModeWarning();\n            }\n\n            // Initialize ModalManager early\n            this.modalManager.initModals();\n\n            Debug.log('DiffViewer: Initialization complete', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('DiffViewer: Error during initialization:', error, 2);\n            this._handleInitializationError(error);\n            throw error;\n        }\n    }\n\n    /**\n     * Handle initialization error\n     * @private\n     */\n    _handleInitializationError(error) {\n        Debug.error('DiffViewer: Error handling initialization failure', error, 2);\n\n        // Get translation manager for error display\n        const translationManager = TranslationManager.getInstance();\n        const errorText = translationManager.get('errorLoadingDiff') || 'Error Loading Diff Viewer';\n\n        // Display error message in container\n        const errorMessage = document.createElement('div');\n        errorMessage.className = `${Selectors.UTILITY.ALERT_DANGER.name()} vdm-m-3`;\n        errorMessage.innerHTML = `\n            <h4>${errorText}</h4>\n            <p>${error.message || 'An unexpected error occurred.'}</p>\n        `;\n\n        // Add error to container\n        if (this.container) {\n            // Keep existing content, just append the error\n            this.container.appendChild(errorMessage);\n\n            // Make sure container is visible\n            this.container.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Initialize data structures\n     * @private\n     */\n    async _initializeData() {\n        // Initialize chunks from diff data\n        this.chunkManager.initChunks(this.runtimeProps.diffData);\n\n        Debug.log(`DiffViewer: Loaded ${this.runtimeProps.diffData.chunks?.length || 0} chunks and content arrays: old=${this.runtimeProps.diffData.old?.length || 0}, new=${this.runtimeProps.diffData.new?.length || 0}`, null, 2);\n    }\n\n    /**\n     * Load required resources\n     * @private\n     */\n    async _loadResources() {\n        // Load syntax highlighter if not already loaded\n        if (!this.syntaxHighlighter.highlightJsLoaded) {\n            await this.syntaxHighlighter.initialize();\n            await this.syntaxHighlighter.loadHighlightJs();\n        }\n\n        // Load theme through ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        await this.themeManager.applyTheme(currentTheme.family, currentTheme.mode);\n    }\n\n    /**\n     * Render UI components\n     * @private\n     */\n    async _renderUI() {\n        // Make sure container is visible\n        if (this.container) {\n            this.container.style.display = 'flex';\n        }\n\n        // Render the diff chunks\n        Debug.log(`DiffViewer: Rendering ${this.runtimeProps.diffData.chunks?.length || 0} chunks`, null, 2);\n        this.chunkManager.renderChunks();\n\n        // Apply syntax highlighting\n        this.syntaxHighlighter.highlightAll(this.container);\n\n        // Initialize theme based on preference\n        this.themeToggle.initialize();\n\n        // Initialize theme selector if enabled\n        if (this.config.theme.showSelector) {\n            this.themeSelector.initialize();\n        }\n\n        // Mark container as loaded using DOMUtils\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', true);\n\n        // Show the content wrapper if needed\n        const containerWrapper = document.querySelector(Selectors.CONTAINER.WRAPPER);\n        if (containerWrapper?.classList.contains('vdm-d-none')) {\n            containerWrapper.classList.remove('vdm-d-none');\n        }\n\n        // Fix theme switcher position - move it above the diff container\n        const themeSwitcher = document.querySelector(Selectors.THEME.SWITCHER);\n        const diffContainer = document.querySelector(Selectors.DIFF.CONTAINER);\n        diffContainer?.parentNode?.insertBefore?.(themeSwitcher, diffContainer);\n        if (themeSwitcher && diffContainer) {\n            Debug.log('DiffViewer: Repositioned theme switcher above diff container', null, 2);\n        }\n    }\n\n    /**\n     * Set up UI features and enhancements\n     * @private\n     */\n    async _setupUIFeatures() {\n        // Set up scroll synchronization\n        this.scrollSynchronizer.setupSynchronizedScrolling();\n\n        // Initialize layout manager\n        this.layoutManager.initialize();\n\n        // Set up icon markers\n        this.iconMarkerManager.initializeIconMarkers();\n\n        // Initialize the DiffNavigator AFTER chunks are loaded and rendered\n        if (this.diffNavigator) {\n            Debug.log('DiffViewer: Initializing navigation with loaded chunks', null, 2);\n            this.diffNavigator.initNavigation();\n        }\n\n        // Dispatch a custom event to notify that the diff viewer has finished loading\n        // This allows other components to know when the diff viewer is ready\n        const diffLoadedEvent = new CustomEvent('vdm-diff-loaded', {\n            detail: {\n                timestamp: new Date(),\n                viewer: this\n            }\n        });\n        document.dispatchEvent(diffLoadedEvent);\n        Debug.log('DiffViewer: Dispatched vdm-diff-loaded event', null, 2);\n\n        Debug.log('DiffViewer: UI features and enhancements set up', null, 2);\n    }\n\n    /**\n     * Display a warning message for demo mode\n     * @private\n     */\n    _showDemoModeWarning() {\n        Debug.log('DiffViewer: Showing demo mode warning', null, 2);\n\n        // Use the AlertManager to show the warning\n        const AlertManager = window.AlertManager || (this.browserUIManager?.AlertManager);\n\n        if (AlertManager) {\n            const alertManager = AlertManager.getInstance();\n\n            // Find the form element to place the alert before\n            const comparisonForm = document.querySelector('#vdm-file-comparison-form');\n\n            // Show warning about demo mode\n            alertManager.showAlert(\n                `<strong>Demo Mode Active</strong> - Merging is disabled on this server and will be simulated.\n                To use the file browser with actual file modifications, please install Visual Diff Merge on your own server.`,\n                'warning',\n                {\n                    dismissable: true,\n                    className: 'vdm-mb-3',\n                    translate: false, // Disable translation\n                    targetElement: comparisonForm, // Place before the form\n                    placement: 'before',\n                    timeout: 0 // Prevent auto-dismiss\n                }\n            );\n\n            Debug.log('DiffViewer: Demo mode warning displayed via AlertManager', null, 2);\n        }\n    }\n\n    /**\n     * Updates configuration with new values\n     * @param {Object} newConfig - New configuration values to apply\n     */\n    updateConfig(newConfig) {\n        if (!newConfig) return;\n\n        // Merge new config with current config\n        this.config = ConfigUtils.mergeConfigurations(this.config, newConfig);\n\n        Debug.log('DiffViewer: Configuration updated', newConfig, 3);\n    }\n\n    /**\n     * Updates runtime properties\n     * @param {Object} props - New runtime properties to apply\n     */\n    updateRuntimeProps(props) {\n        if (!props) return;\n\n        // Merge new runtime properties with current ones\n        this.runtimeProps = {...this.runtimeProps, ...props};\n\n        Debug.log('DiffViewer: Runtime properties updated', props, 3);\n    }\n\n    /**\n     * Get the current configuration\n     * @returns {Object} Current configuration\n     */\n    getConfig() {\n        return {...this.config};\n    }\n\n    /**\n     * Get the current runtime properties\n     * @returns {Object} Current runtime properties\n     */\n    getRuntimeProps() {\n        // DEBUG: Add logging to identify when this method is called and what it returns\n        Debug.log('DiffViewer.getRuntimeProps called', {\n            fileRefId: this.runtimeProps.fileRefId || '(none)',\n            oldFileRefId: this.runtimeProps.oldFileRefId || '(none)',\n            newFileName: this.runtimeProps.newFileName || '(none)',\n            oldFileName: this.runtimeProps.oldFileName || '(none)',\n            // Also check if these properties are in window.diffConfig\n            windowDiffConfig: {\n                hasFileRefId: window.diffConfig && 'fileRefId' in window.diffConfig,\n                fileRefId: window.diffConfig?.fileRefId || '(none)',\n                hasOldFileRefId: window.diffConfig && 'oldFileRefId' in window.diffConfig,\n                oldFileRefId: window.diffConfig?.oldFileRefId || '(none)',\n                hasNewFileName: window.diffConfig && 'newFileName' in window.diffConfig,\n                newFileName: window.diffConfig?.newFileName || '(none)',\n                hasOldFileName: window.diffConfig && 'oldFileName' in window.diffConfig,\n                oldFileName: window.diffConfig?.oldFileName || '(none)'\n            }\n        }, 3);\n\n        return {...this.runtimeProps};\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        // Destroy layout manager\n        if (this.layoutManager) {\n            this.layoutManager.destroy();\n        }\n\n        // Clean up diffNavigator\n        if (this.diffNavigator) {\n            this.diffNavigator.destroy();\n        }\n\n        // Remove loaded class from container\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', false);\n\n        // Additional cleanup as needed\n        Debug.log('DiffViewer: Component destroyed', null, 2);\n    }\n\n    /**\n     * Initialize runtime properties\n     */\n    initializeRuntimeProps() {\n        // Common runtime properties\n        this.runtimeProps = {\n            diffData: this.options.diffData || {},\n            serverSaveEnabled: this.options.serverSaveEnabled || false,\n            // SECURITY: Use only secure fileRefIds and filenames, not server paths\n            fileRefId: this.options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: this.options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            newFileName: this.options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: this.options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: this.options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: this.options.filepath || window.diffConfig?.filepath || ''\n        };\n\n        Debug.log('DiffViewer: Runtime properties initialized', this.runtimeProps, 3);\n    }\n\n    /**\n     * Check if the content has been beautified\n     * @returns {boolean} True if content has been beautified\n     */\n    isContentBeautified() {\n        // Check if the beautified flag exists in runtime properties\n        // If not defined, default to false\n        return this.runtimeProps.isBeautified || false;\n    }\n\n    /**\n     * Get API endpoint by name\n     * @param {string} endpointName - Name of the endpoint to get\n     * @returns {Promise<string>} The endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        Debug.log(`DiffViewer: Getting endpoint for ${endpointName}`, null, 2);\n\n        try {\n            // Use EndpointDiscovery if available\n            const endpointDiscovery = EndpointDiscovery.getInstance();\n            const endpoint = await endpointDiscovery.getEndpoint(endpointName);\n\n            Debug.log(`DiffViewer: Found endpoint for ${endpointName}`, endpoint, 2);\n            return endpoint;\n        } catch (error) {\n            // Fall back to config or default endpoints\n            Debug.warn(`DiffViewer: Error getting endpoint for ${endpointName}, using fallback`, error, 1);\n\n            // Check if we have endpoints in the config\n            if (this.config?.apiEndpoints[endpointName]) {\n                return this.config.apiEndpoints[endpointName];\n            }\n\n            // Default endpoints as a last resort\n            const defaultEndpoints = {\n                'ajaxDiffMerge': '../api/ajax-diff-merge.php',\n                'diffProcessor': '../api/diff-processor.php'\n            };\n\n            return defaultEndpoints[endpointName] || '../api/' + endpointName + '.php';\n        }\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {DiffViewer} This instance for method chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n\n        // Update references in components that need the BrowserUIManager\n        if (this.themeToggle) {\n            this.themeToggle.setBrowserUIManager(browserUIManager);\n        }\n\n        Debug.log('DiffViewer: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n}\n","// MergeHandler.js - Handles merging of selected lines\nimport { Debug } from '../utils/Debug';\nimport AlertManager from '../utils/AlertManager';\n\nimport { MergePreviewManager } from './merge/MergePreviewManager';\nimport { MergeUIController } from './merge/MergeUIController';\nimport { MergeOperationHandler } from './merge/MergeOperationHandler';\n\n\n/**\n * Main coordinator for merge operations\n */\nexport class MergeHandler {\n    /**\n     * Initialize merge handler\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n\n        // Use the shared modalManager instance\n        this.modalManager = this.diffViewer.modalManager;\n\n        // Create subcomponents using composition\n        this.previewManager = new MergePreviewManager(this);\n        this.uiController = new MergeUIController(this);\n        this.operationHandler = new MergeOperationHandler(this);\n\n        // Initialize components\n        this.initialize();\n\n        Debug.log('MergeHandler: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize all subcomponents\n     */\n    initialize() {\n        // Check if we should use server or local controls\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n        const serverSaveEnabled = runtimeProps && runtimeProps.serverSaveEnabled;\n\n        Debug.log(`MergeHandler: Initializing with serverSaveEnabled=${serverSaveEnabled}`, null, 2);\n\n        // Initialize UI controller first\n        this.uiController.initialize();\n\n        // If server save is disabled, set up local-only controls\n        if (serverSaveEnabled === false) {\n            Debug.log('MergeHandler: Server save is disabled, using local-only controls', null, 2);\n            this.uiController.setupLocalOnlyControls();\n        }\n\n        // Then initialize preview manager\n        this.previewManager.initialize();\n\n        Debug.log('MergeHandler: All subcomponents initialized', null, 2);\n    }\n\n    /**\n     * Preview the merged file\n     * Delegates to preview manager\n     */\n    previewMerge() {\n        this.previewManager.handlePreviewClick();\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    getMergedContent() {\n        return this.diffViewer.chunkManager.generateMergedContent();\n    }\n\n    /**\n     * Proceed with merge operation\n     * Delegates to operation handler\n     * @param {string} mergeType - Type of merge ('original' or 'new')\n     * @returns {Promise} Promise resolving when merge completes\n     */\n    proceedWithMerge(mergeType) {\n        return this.operationHandler.proceedWithMerge(mergeType);\n    }\n\n    /**\n     * Count unresolved conflicts\n     * Delegates to UI controller\n     * @returns {number} Number of unresolved conflicts\n     */\n    countUnresolvedConflicts() {\n        return this.uiController.countUnresolvedConflicts();\n    }\n\n    /**\n     * Show conflict resolution modal\n     * Delegates to UI controller\n     * @param {number} unresolvedCount - Number of unresolved conflicts\n     */\n    showConflictModal(unresolvedCount) {\n        this.uiController.showConflictModal(unresolvedCount);\n    }\n\n    /**\n     * Highlight unresolved chunks\n     * Delegates to UI controller\n     */\n    highlightUnresolvedChunks() {\n        return this.uiController.highlightUnresolvedChunks();\n    }\n\n    /**\n     * Create alert element with proper BEM classes\n     * @param {boolean} resolved - Whether the conflict is resolved\n     * @param {string} success_message - Success message to display\n     * @param {string} message - Warning message to display\n     * @returns {HTMLElement} Alert element\n     */\n    createAlertElement(resolved, success_message, message) {\n        const alertManager = AlertManager.getInstance();\n\n        if (resolved) {\n            return alertManager.showSuccess(success_message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        } else {\n            return alertManager.showWarning(message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        }\n    }\n}\n","// SyntaxHighlighter.js - Handles syntax highlighting for code\nimport { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { MergeContentFormatter } from '../utils/MergeContentFormatter';\nimport languageMap from '../data/highlightjs-languages.json';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport Selectors from '../constants/Selectors';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport { LoaderManager } from '../utils/LoaderManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Manages syntax highlighting functionality\n */\nexport class SyntaxHighlighter {\n    /**\n     * @param {DiffViewer} diffViewer - Parent DiffViewer component\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.highlightJsLoaded = false;\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.language = 'plaintext'; // Default language\n\n        // Get theme from ThemeManager instead of localStorage directly\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.theme = currentTheme.mode || 'light';\n\n        Debug.log('SyntaxHighlighter: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize the highlighter with the language\n     */\n    async initialize() {\n        // First, load highlight.js core\n        await this.loadHighlightJs();\n\n        // Only proceed with language setup if highlight.js loaded successfully\n        if (this.highlightJsLoaded) {\n            // Get filepath from runtimeProps\n            const filepath = this.diffViewer.getRuntimeProps().filepath || '';\n\n            // Set initial language using the prioritized logic\n            await this.setLanguage(filepath);\n\n            Debug.log('SyntaxHighlighter: Initialized with language:', this.language, 2);\n        } else {\n            Debug.warn('SyntaxHighlighter: Initialization incomplete - highlight.js failed to load', null, 2);\n        }\n    }\n\n    /**\n     * Load highlightjs and required language components\n     */\n    async loadHighlightJs() {\n        try {\n            Debug.log('SyntaxHighlighter: Loading highlight.js core', null, 2);\n\n            // Use resource loader to load syntax highlighter core\n            await this.diffViewer.resourceLoader.loadSyntaxHighlighterCore();\n\n            this.highlightJsLoaded = true;\n            Debug.log('SyntaxHighlighter: highlight.js loaded successfully', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Failed to load highlight.js:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Highlight all code elements in batches\n     * @param {Element|Document} container - Container with code elements\n     */\n    highlightAll(container = document) {\n        if (!this.highlightJsLoaded || !window.hljs) {\n            Debug.warn('SyntaxHighlighter: Cannot highlight code - highlight.js not loaded', null, 2);\n            return;\n        }\n\n        // Use DOMUtils.getElements for consistent element selection with error handling\n        const elements = DOMUtils.getElements(\n            `${Selectors.DIFF.LINE_CONTENT}:not(${Selectors.DIFF.LINE_CONTENT_EMPTY}):not(${Selectors.DIFF.LINE_PLACEHOLDER})`,\n            container\n        );\n\n        if (!elements) {\n            Debug.log('SyntaxHighlighter: No code elements found to highlight', null, 2);\n            return;\n        }\n\n        const codeElements = Array.from(elements).filter(el => el.textContent.trim());\n        Debug.log(`SyntaxHighlighter: Found ${codeElements.length} code elements to highlight`, null, 2);\n\n        // Only show loader for large files (more than 100 elements)\n        let loaderId = null;\n        if (codeElements.length > 100) {\n            // Get translation manager for loading message\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const loadingMessage = translationManager.get('applyingSyntaxHighlighting', 'Applying syntax highlighting...');\n\n            // Show loading indicator\n            loaderId = loaderManager.showLoader(loadingMessage, {\n                fullscreen: true,\n                zIndex: 1000\n            });\n\n            Debug.log('SyntaxHighlighter: Showing loader for large file highlighting', null, 2);\n        }\n\n        // Small batch size for smoother UI updates\n        const batchSize = 30;\n        let index = 0;\n\n        // Performance tracking\n        const startTime = performance.now();\n\n        // Function to process a batch\n        const processBatch = () => {\n            if (index >= codeElements.length) {\n                // Hide loader if shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n\n                    // Log performance metrics\n                    const endTime = performance.now();\n                    const duration = endTime - startTime;\n                    Debug.log(`SyntaxHighlighter: Highlighting complete for ${codeElements.length} elements in ${duration.toFixed(2)}ms`, null, 2);\n                } else {\n                    Debug.log('SyntaxHighlighter: Highlighting complete', null, 2);\n                }\n                return;\n            }\n\n            // Process next batch\n            const end = Math.min(index + batchSize, codeElements.length);\n            for (let i = index; i < end; i++) {\n                this.highlightElement(codeElements[i]);\n            }\n\n            // Update loader message with progress if shown\n            if (loaderId && index % (batchSize * 5) === 0) { // Update every 5 batches\n                const loaderManager = LoaderManager.getInstance();\n                const translationManager = TranslationManager.getInstance();\n                const progress = Math.round((index / codeElements.length) * 100);\n                const progressMessage = translationManager.get('applyingSyntaxHighlightingProgress',\n                    'Applying syntax highlighting ({0}%)').replace('{0}', progress);\n\n                loaderManager.updateLoaderMessage(loaderId, progressMessage);\n            }\n\n            // Move to next batch\n            index = end;\n\n            // Schedule next batch - use requestAnimationFrame for better performance\n            requestAnimationFrame(() => {\n                setTimeout(processBatch, 0);\n            });\n        };\n\n        // Start batch processing\n        processBatch();\n    }\n\n    /**\n     * Apply syntax highlighting to a single element\n     * @param {Element} element - Element to highlight\n     * @param {boolean} withLineNumbers - Whether to add line numbers\n     */\n    highlightElement(element, withLineNumbers = false) {\n        if (!this.highlightJsLoaded || !window.hljs || !element) return;\n\n        try {\n            // Use DOMUtils.toggleClass for consistent class manipulation\n            if (!element.classList.contains(this.language)) {\n                // Remove existing language classes first\n                const languageClasses = element.className.split(' ')\n                    .filter(cls => cls.startsWith('language-'));\n\n                languageClasses.forEach(cls => {\n                    element.classList.remove(cls);\n                });\n\n                // Add the correct language class\n                element.classList.add(this.language);\n            }\n\n            // Use the MergeContentFormatter utility\n            MergeContentFormatter.resetHighlighting(element);\n\n            // Apply highlighting\n            window.hljs.highlightElement(element);\n\n            // Add line numbers if needed\n            if (withLineNumbers && window.hljs.lineNumbersBlock) {\n                window.hljs.lineNumbersBlock(element);\n            }\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Error highlighting element:', error, 2);\n        }\n    }\n\n    /**\n     * Set the language for syntax highlighting\n     * @param {string} filepath - File path to derive language from\n     */\n    async setLanguage(filepath) {\n        // Get runtime properties\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Try to determine language using the prioritized logic\n        let newLanguage = 'plaintext';\n        let sourceUsed = 'default';\n\n        // 1. Try to guess language from filepath if provided\n        if (filepath && typeof filepath === 'string' && filepath.includes('.')) {\n            const extension = filepath.split('.').pop().toLowerCase();\n            if (extension) {\n                newLanguage = languageMap[extension] || extension;\n                sourceUsed = 'filepath';\n                Debug.log(`SyntaxHighlighter: Language determined from filepath extension: ${extension}`, null, 2);\n            }\n        }\n\n        // 2. If no language determined from filepath, try diffData.language\n        if (newLanguage === 'plaintext' && sourceUsed === 'default' && runtimeProps.diffData?.language) {\n            newLanguage = runtimeProps.diffData.language;\n            sourceUsed = 'diffData';\n            Debug.log(`SyntaxHighlighter: Language determined from diffData: ${newLanguage}`, null, 2);\n        }\n\n        // 3. If still no language, use plaintext as fallback\n        if (newLanguage === 'plaintext' && sourceUsed === 'default') {\n            Debug.log('SyntaxHighlighter: No language could be determined, using plaintext as fallback', null, 2);\n        }\n\n        // Only load if different from current language\n        if (this.language !== newLanguage) {\n            this.language = newLanguage;\n\n            Debug.log(`SyntaxHighlighter: Setting language to ${newLanguage} (source: ${sourceUsed})`, null, 2);\n\n            // Only load if needed and not already loaded\n            if (this.highlightJsLoaded && !this.resourceLoader.loadedLanguages.has(newLanguage)) {\n                Debug.log(`SyntaxHighlighter: Loading language ${newLanguage}`, null, 2);\n\n                // Get translation manager for loading message\n                const translationManager = TranslationManager.getInstance();\n                const loaderManager = LoaderManager.getInstance();\n                const loadingMessage = translationManager.get('loadingLanguage', 'Loading language: {0}')\n                    .replace('{0}', newLanguage);\n\n                // Try to use the main loader ID from diffViewer\n                const mainLoaderId = this.diffViewer.mainLoaderId;\n\n                if (!mainLoaderId) {\n                    Debug.warn('SyntaxHighlighter: No main loader ID available from DiffViewer for language loading', null, 2);\n                }\n\n                try {\n                    // Update the main loader message if available\n                    if (mainLoaderId) {\n                        loaderManager.updateLoaderMessage(mainLoaderId, loadingMessage);\n                    }\n\n                    // Use dynamic import to load the language on demand\n                    await this.resourceLoader.loadLanguage(newLanguage);\n\n                    // No need to hide the main loader as it's managed elsewhere\n                } catch (error) {\n                    Debug.error(`SyntaxHighlighter: Error loading language ${newLanguage}:`, error, 2);\n                }\n            } else {\n                Debug.log(`SyntaxHighlighter: Language ${newLanguage} already loaded`, null, 3);\n            }\n\n            Debug.log(`SyntaxHighlighter: Language set to ${this.language}`, null, 2);\n        } else {\n            Debug.log(`SyntaxHighlighter: Language already set to ${this.language}`, null, 3);\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport Selectors from '../constants/Selectors';\n\n// Module-level singleton instance\nlet instance = null;\n\nexport class ThemeManager extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @returns {ThemeManager} The singleton instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new ThemeManager();\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     */\n    constructor() {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        // Initialize instance\n        this.initialized = false;\n        this.availableThemes = null;\n        this.currentTheme = { family: null, mode: null };\n        this.defaultTheme = { family: 'atom-one', mode: 'dark' };\n        this.listeners = [];\n        this.resourceLoader = null;\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize with config and ResourceLoader\n     * @param {Object} config - Configuration object with theme settings\n     * @param {ResourceLoader} resourceLoader - ResourceLoader instance\n     * @returns {boolean} Success status\n     */\n    initialize(config, resourceLoader) {\n        Debug.log('ThemeManager: Initializing', { config }, 2);\n\n        if (this.initialized) return true;\n\n        // Get theme configuration (accepts both legacy and new format)\n        this.config = config?.theme || {};\n        this.resourceLoader = resourceLoader;\n\n        // Get the availableThemes from ResourceLoader\n        this.availableThemes = resourceLoader.config.availableThemes;\n\n        // Set defaults from config or use hardcoded defaults\n        this.defaultTheme.family = this.config.defaultFamily || this.defaultTheme.family;\n        this.defaultTheme.mode = this.config.defaultMode || this.defaultTheme.mode;\n\n        // Get saved preferences\n        const savedFamily = localStorage.getItem('diffViewerThemeFamily') || this.defaultTheme.family;\n        const savedMode = localStorage.getItem('diffViewerTheme') || this.defaultTheme.mode;\n\n        this.currentTheme = {\n            family: savedFamily,\n            mode: savedMode\n        };\n\n        Debug.log(`ThemeManager: Initialized with ${savedFamily} (${savedMode})`, null, 2);\n        this.initialized = true;\n\n        Debug.log('ThemeManager: Successfully initialized', null, 2);\n        return true;\n    }\n\n    /**\n     * Get theme URL for a specific family and mode\n     * @param {string} family - The theme family (e.g., 'atom-one')\n     * @param {string} mode - The theme mode ('light' or 'dark')\n     * @param {boolean} fallbackToDefaults - Whether to fall back to defaults if not found\n     * @returns {string} The theme URL\n     */\n    getThemeUrl(family, mode, fallbackToDefaults = true) {\n        // First check if the requested theme exists\n        if (this.availableThemes?.[family]?.[mode]) {\n            return this.availableThemes[family][mode];\n        }\n\n        // Don't proceed with fallbacks if requested\n        if (!fallbackToDefaults) {\n            return null;\n        }\n\n        // Check if the opposite mode exists for this family\n        const alternateMode = mode === 'dark' ? 'light' : 'dark';\n        if (this.availableThemes?.[family]?.[alternateMode]) {\n            Debug.log(`ThemeManager: Theme ${family} doesn't have ${mode} mode, using ${alternateMode} instead`, null, 2);\n            return this.availableThemes[family][alternateMode];\n        }\n\n        // Fall back to default theme\n        Debug.log(`ThemeManager: Falling back to default theme: ${this.defaultTheme.family} (${mode})`, null, 2);\n        return this.availableThemes[this.defaultTheme.family][mode] ||\n               this.availableThemes[this.defaultTheme.family][alternateMode];\n    }\n\n    /**\n     * Check if a theme exists\n     * @param {string} family - The theme family\n     * @param {string} mode - The theme mode\n     * @returns {boolean} Whether the theme exists\n     */\n    themeExists(family, mode) {\n        return !!this.availableThemes?.[family]?.[mode];\n    }\n\n    /**\n     * Get all available theme families\n     * @returns {string[]} Array of theme family names\n     */\n    getAvailableThemeFamilies() {\n        return Object.keys(this.availableThemes || {});\n    }\n\n    /**\n     * Get available modes for a theme family\n     * @param {string} family - The theme family\n     * @returns {string[]} Available modes ('light', 'dark', or both)\n     */\n    getAvailableModesForFamily(family) {\n        if (!this.availableThemes?.[family]) {\n            return [];\n        }\n        return Object.keys(this.availableThemes[family]);\n    }\n\n    /**\n     * Get theme CDN version - useful for consistent versioning\n     * @returns {string} The CDN version\n     */\n    getThemeCdnVersion() {\n        return '11.11.1'; // Could be made configurable in the future\n    }\n\n    /**\n     * Get theme CDN base URL\n     * @returns {string} The CDN base URL\n     */\n    getThemeCdnBase() {\n        return 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js';\n    }\n\n    /**\n     * Get standard theme URL pattern (for direct generation)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {string} Standard theme URL\n     */\n    getStandardThemeUrl(family, mode) {\n        return `${this.getThemeCdnBase()}/${this.getThemeCdnVersion()}/styles/base16/${family}-${mode}.min.css`;\n    }\n\n    /**\n     * Apply theme (load CSS and update UI)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {Promise<boolean>} Success status\n     */\n    async applyTheme(family, mode) {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Use our centralized method to get the URL\n        const themeUrl = this.getThemeUrl(family, mode);\n        if (!themeUrl) {\n            Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n            return false;\n        }\n\n        Debug.log(`ThemeManager: Applying theme ${family}/${mode}`, null, 2);\n\n        // Skip if theme is already active\n        const activeTheme = document.querySelector(\n            'link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])'\n        );\n\n        if (activeTheme && activeTheme.getAttribute('href') === themeUrl) {\n            Debug.log(`ThemeManager: Theme ${family}/${mode} already active`, null, 2);\n            return true;\n        }\n\n        try {\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during theme operation:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Update container theme class based on mode\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     */\n    updateContainerThemeClass(mode) {\n        const container = document.getElementById(Selectors.CONTAINER.WRAPPER.name());\n        if (container) {\n            container.classList.remove(Selectors.THEME.DARK.name(), Selectors.THEME.LIGHT.name());\n            container.classList.add(Selectors.THEME.MODE_PREFIX.name() + '--' + mode);\n        }\n    }\n\n    /**\n     * Set theme mode only (light/dark)\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeMode(mode) {\n        Debug.log(`ThemeManager: Setting theme mode to ${mode}`, null, 2);\n        return this.applyTheme(this.currentTheme.family, mode);\n    }\n\n    /**\n     * Set theme family only (keeps current mode)\n     * @param {string} family - Theme family\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeFamily(family) {\n        Debug.log(`ThemeManager: Setting theme family to ${family}`, null, 2);\n        return this.applyTheme(family, this.currentTheme.mode);\n    }\n\n    /**\n     * Add a listener to be notified of theme changes\n     * @param {Function} listener - Listener function\n     */\n    addListener(listener) {\n        if (typeof listener === 'function') {\n            this.listeners.push(listener);\n        }\n    }\n\n    /**\n     * Notify all listeners of theme changes\n     */\n    notifyListeners() {\n        this.listeners.forEach(listener => {\n            try {\n                listener(this.currentTheme);\n            } catch (error) {\n                Debug.error('ThemeManager: Error in theme listener:', error, 2);\n            }\n        });\n    }\n\n    /**\n     * Get current theme information\n     * @returns {Object} Current theme information\n     */\n    getCurrentTheme() {\n        return { ...this.currentTheme };\n    }\n\n    /**\n     * Load initial theme based on current settings\n     * @returns {Promise<boolean>} Success status\n     */\n    async loadInitialTheme() {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Get theme from current settings\n        const family = this.currentTheme.family || this.defaultTheme.family;\n        const mode = this.currentTheme.mode || this.defaultTheme.mode;\n\n        Debug.log(`ThemeManager: Loading initial theme ${family}/${mode}`, null, 2);\n\n        try {\n            // Apply the theme\n            const themeUrl = this.getThemeUrl(family, mode);\n            if (!themeUrl) {\n                Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n                return false;\n            }\n\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Initial theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during initial theme loading:', error, 2);\n            return false;\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n// Module-level variables\nlet instance = null;\n\n/**\n * Manages theme family selection dropdown\n */\nexport class ThemeSelector extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance (only used during first initialization)\n     * @returns {ThemeSelector} The singleton instance\n     */\n    static getInstance(diffViewer = null) {\n        Debug.log('ThemeSelector: Retrieving or creating instance', null, 3);\n        if (!instance) {\n            instance = new ThemeSelector(diffViewer);\n        } else if (diffViewer && !instance.diffViewer) {\n            // Update diffViewer if it was null previously\n            instance.diffViewer = diffViewer;\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    constructor(diffViewer) {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        Debug.log('ThemeSelector: Instance created', null, 3);\n\n        // Initialize instance\n        this.diffViewer = diffViewer;\n        this.container = null;\n        this.selectElement = null;\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = null;\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize the theme selector\n     */\n    initialize() {\n        // Check if theme selector should be enabled using the new config structure\n        if (!this._isThemeSelectorEnabled()) {\n            Debug.log('ThemeSelector: Theme selector disabled in configuration', null, 2);\n            return false;\n        }\n\n        Debug.log('ThemeSelector: Initializing', null, 2);\n\n        // Create container for the theme selector\n        this.createSelectorElement();\n\n        // Add the selector to the DOM\n        this.addSelectorToDOM();\n\n        // Update selector to reflect current theme\n        this.updateSelector();\n\n        // Add listener to ThemeManager to update selector when theme changes\n        this.themeManager.addListener(this.updateSelector.bind(this));\n\n        Debug.log('ThemeSelector: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Check if theme selector should be enabled\n     * @private\n     * @returns {boolean} Whether the theme selector should be enabled\n     */\n    _isThemeSelectorEnabled() {\n        // First try the new config structure\n        if (this.diffViewer?.getConfig()?.theme?.selector !== undefined) {\n            return !!this.diffViewer.getConfig().theme.selector;\n        }\n\n        // Then try the old options structure\n        if (this.diffViewer?.options?.themeSelector !== undefined) {\n            return !!this.diffViewer.options.themeSelector;\n        }\n\n        // Finally try the global diffConfig\n        if (window.diffConfig?.theme?.selector !== undefined) {\n            return !!window.diffConfig.theme.selector;\n        }\n\n        // Default to true - always show selector unless explicitly disabled\n        return true;\n    }\n\n    /**\n     * Create the theme selector dropdown\n     */\n    createSelectorElement() {\n        const currentTheme = this.themeManager.getCurrentTheme();\n\n        // Create the container using DOMUtils with proper array of classes\n        this.container = DOMUtils.createElement('div', null, [Selectors.THEME_SELECTOR.WRAPPER.name(), Selectors.UTILITY.MARGIN_END_3.name()]);\n\n        // Create select element using DOMUtils\n        this.selectElement = DOMUtils.createAndAppendElement('select', this.container, {\n            id: Selectors.THEME.SELECTOR.name(),\n            classes: [Selectors.UTILITY.FORM_SELECT.name(), Selectors.UTILITY.FORM_SELECT.name()]\n        });\n\n        // Add options from available themes\n        const availableThemes = this.themeManager.getAvailableThemeFamilies();\n        if (!availableThemes || availableThemes.length === 0) {\n            Debug.warn('ThemeSelector: No available themes found', null, 2);\n            return;\n        }\n\n        availableThemes.forEach(themeKey => {\n            DOMUtils.createAndAppendElement('option', this.selectElement, {\n                attributes: {\n                    value: themeKey,\n                    selected: themeKey === currentTheme.family\n                },\n                content: this.formatThemeName(themeKey)\n            });\n        });\n\n        Debug.log('ThemeSelector: Created selector with options',\n                  { count: availableThemes.length }, 2);\n\n        // Add change event handler\n        this.selectElement.addEventListener('change', this.handleThemeChange.bind(this));\n    }\n\n    /**\n     * Format theme name for display (e.g., \"atom-one\" to \"Atom One\")\n     * @param {string} themeName - Theme name in kebab-case\n     * @returns {string} Formatted theme name\n     */\n    formatThemeName(themeName) {\n        return themeName\n            .split('-')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    /**\n     * Add the selector to the DOM\n     */\n    addSelectorToDOM() {\n        // Find theme switcher container using DOMUtils\n        const themeSwitcherContainer = DOMUtils.getElement(Selectors.THEME.SWITCHER.name());\n        if (!themeSwitcherContainer) {\n            Debug.warn('ThemeSelector: No theme switcher container found', null, 2);\n            return false;\n        }\n\n        // Insert the selector before any existing elements\n        themeSwitcherContainer.insertBefore(this.container, themeSwitcherContainer.firstChild);\n\n        Debug.log('ThemeSelector: Selector added to DOM', null, 2);\n        return true;\n    }\n\n    /**\n     * Update selector to match current theme\n     * @param {Object} theme - Theme object\n     */\n    updateSelector(theme) {\n        if (!this.selectElement) return;\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        this.selectElement.value = currentTheme.family;\n\n        Debug.log(`ThemeSelector: Selector updated to ${theme?.family || currentTheme.family}`, null, 3);\n    }\n\n    /**\n     * Handle theme change event\n     * @param {Event} event - Change event\n     */\n    handleThemeChange(event) {\n        const selectedTheme = event.target.value;\n\n        // Try to get the BrowserUIManager instance if not already set\n        if (!this.browserUIManager && this.diffViewer?.browserUIManager) {\n            this.browserUIManager = this.diffViewer.browserUIManager;\n        }\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeFamily(selectedTheme)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeSelector: Theme changed to ${selectedTheme}`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeSelector: Error changing theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeSelector: Error changing theme:', error, 2);\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Handles theme light/dark toggle functionality\n */\nexport class ThemeToggle {\n    /**\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @param {string} toggleElementId - Toggle element ID\n     * @param {string} containerId - Container element ID\n     */\n    constructor(browserUIManager = null, toggleElementId = Selectors.THEME.TOGGLE.name(), containerId = Selectors.CONTAINER.WRAPPER.name()) {\n        this.toggleElementId = toggleElementId;\n        this.containerId = containerId;\n\n        // Use DOMUtils for element retrieval with consistent error handling\n        this.toggleElement = DOMUtils.getElement(toggleElementId);\n        this.container = DOMUtils.getElement(containerId);\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = browserUIManager;\n\n        Debug.log('ThemeToggle: Component created', null, 2);\n    }\n\n    /**\n     * Initialize toggle with event handlers\n     */\n    initialize() {\n        Debug.log('ThemeToggle: Initializing', null, 2);\n\n        if (!this.toggleElement || !this.container) {\n            Debug.warn(`ThemeToggle: Elements not found for initialization - toggle: ${!!this.toggleElement}, container: ${!!this.container}`, null, 2);\n            return false;\n        }\n\n        // Get current theme from ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Apply initial theme class to container using ThemeManager's method\n        this.themeManager.updateContainerThemeClass(currentTheme.mode);\n\n        // Add event listener to toggle element\n        this.toggleElement.addEventListener('change', this.handleToggle.bind(this));\n\n        // Add listener to ThemeManager to update toggle when theme changes from elsewhere\n        this.themeManager.addListener(this.updateToggle.bind(this));\n\n        // Log whether we have a BrowserUIManager instance\n        Debug.log(`ThemeToggle: BrowserUIManager reference ${this.browserUIManager ? 'is available' : 'is not available'}`, null, 2);\n\n        Debug.log('ThemeToggle: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {ThemeToggle} - This instance for chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n        Debug.log('ThemeToggle: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n\n    /**\n     * Handle toggle event\n     * @param {Event} event - Change event\n     */\n    handleToggle(event) {\n        const isDark = event.target.checked;\n        const newMode = isDark ? 'dark' : 'light';\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        } else {\n            Debug.log('ThemeToggle: BrowserUIManager not available, no loading indicator will be shown', null, 2);\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeMode(newMode)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeToggle: Theme toggled to ${newMode} mode`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n        }\n    }\n\n    /**\n     * Update toggle state based on theme\n     * @param {Object} theme - Theme object\n     */\n    updateToggle(theme) {\n        if (!this.toggleElement) return;\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Instead of using our own updateContainerClass method,\n        // leverage the centralized method from ThemeManager\n        if (this.container) {\n            this.themeManager.updateContainerThemeClass(currentTheme.mode);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { StringUtils } from '../../utils/StringUtils';\nimport Selectors from '../../constants/Selectors';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n/**\n * Responsible for rendering chunk content\n */\nexport class ChunkRenderer {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n    }\n\n    /**\n     * Render all chunks to container\n     */\n    renderChunks() {\n        Debug.log('ChunkRenderer: Beginning chunk rendering', null, 2);\n\n        // Show loading indicator for large diffs (more than 100 chunks)\n        let loaderId = null;\n        if (this.chunkManager.chunks.length > 100) {\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const loadingMessage = translationManager.get('renderingDiff', 'Rendering diff...');\n\n            loaderId = loaderManager.showLoader(loadingMessage, {\n                fullscreen: true,\n                zIndex: 1000\n            });\n\n            Debug.log('ChunkRenderer: Showing loader for large diff rendering', null, 2);\n        }\n\n        // Performance tracking\n        const startTime = performance.now();\n\n        // Generate HTML for both panes\n        const leftHtml = this.buildDiffPaneHtml(this.chunkManager.oldContent, 'left');\n        const rightHtml = this.buildDiffPaneHtml(this.chunkManager.newContent, 'right');\n\n        // Inject HTML into container - WITHOUT creating empty pane headers\n        // The headers will be added by ChunkSelectionHandler later\n        this.chunkManager.diffViewer.container.innerHTML = `\n            <div class=\"${Selectors.DIFF.PANES_CONTAINER.name()}\">\n                <div class=\"${Selectors.DIFF.PANE.name()}\" id=\"${Selectors.DIFF.PANE_LEFT.name()}\" data-side=\"left\">\n                    ${leftHtml}\n                </div>\n                <div class=\"${Selectors.DIFF.PANE.name()}\" id=\"${Selectors.DIFF.PANE_RIGHT.name()}\" data-side=\"right\">\n                    ${rightHtml}\n                </div>\n            </div>\n        `;\n\n        // Hide loader if shown\n        if (loaderId) {\n            const loaderManager = LoaderManager.getInstance();\n            loaderManager.hideLoader(loaderId);\n\n            // Log performance metrics\n            const endTime = performance.now();\n            const duration = endTime - startTime;\n            Debug.log(`ChunkRenderer: Rendered ${this.chunkManager.chunks.length} chunks in ${duration.toFixed(2)}ms`, null, 2);\n        } else {\n            Debug.log(`ChunkRenderer: Rendered ${this.chunkManager.chunks.length} chunks successfully`, null, 2);\n        }\n    }\n\n    /**\n     * Build HTML for a diff pane\n     * @param {Array} lines - Content lines\n     * @param {string} side - 'left' or 'right'\n     * @returns {string} Generated HTML\n     */\n    buildDiffPaneHtml(lines, side) {\n        // First, identify chunks that have placeholder lines\n        const chunksWithPlaceholders = new Set();\n        for (const line of lines) {\n            if (line.type === 'placeholder' && line.chunkId) {\n                chunksWithPlaceholders.add(line.chunkId);\n            }\n        }\n\n        // Create HTML with nested containers for proper scrolling\n        let html = `<div class=\"${Selectors.DIFF.PANE_CONTENT.name()} hljs\">`; // Add scrolling container\n        html += `<div class=\"${Selectors.DIFF.TABLE_WRAPPER.name()}\">`;\n        html += `<table class=\"${Selectors.CODE.TABLE.name()}\"><tbody>`;\n\n        let lineCounter = 0;\n\n        for (const line of lines) {\n            html += this._renderDiffLine(line, side, ++lineCounter, chunksWithPlaceholders);\n        }\n\n        html += '</tbody></table>';\n        html += '</div>'; // Close table wrapper\n        html += '</div>'; // Close scrolling container\n\n        return html;\n    }\n\n    /**\n     * Render a single diff line\n     * @private\n     */\n    _renderDiffLine(line, side, lineNumber, chunksWithPlaceholders) {\n        let html = '<tr>';\n\n        const chunkId = line.chunkId !== undefined ? line.chunkId : '';\n\n        // Get chunk type if this is a chunk line\n        let chunkType = '';\n        if (chunkId !== '') {\n            const chunk = this.chunkManager.chunks.find(c => c.id === chunkId);\n            chunkType = chunk ? chunk.type : '';\n        }\n\n        // Add line number cell\n        html += `<td class=\"${Selectors.CODE.LINE_NUMBER.name()}\">${lineNumber}</td>`;\n\n        // Check if this chunk has placeholder lines\n        const hasPlaceholder = chunkId !== '' && chunksWithPlaceholders.has(chunkId);\n\n        if (line.type === 'placeholder') {\n            html += this._renderPlaceholderLine(line, chunkId, chunkType, side, lineNumber);\n        } else {\n            html += this._renderContentLine(line, chunkId, chunkType, side, lineNumber, hasPlaceholder);\n        }\n\n        html += '</tr>';\n        return html;\n    }\n\n    /**\n     * Render placeholder line\n     * @private\n     */\n    _renderPlaceholderLine(line, chunkId, chunkType, side, lineNumber) {\n        // Add status class for chunks that can be navigated\n        let additionalClass = '';\n        if (chunkId !== '') {\n            // Add the vdm-diff__chunk class for elements with chunk IDs\n            additionalClass += ` ${Selectors.DIFF.CHUNK.name()}`;\n\n            if (line.conflict || chunkType === 'replace' || chunkType === 'add' || chunkType === 'delete') {\n                additionalClass += ` ${Selectors.STATUS.UNRESOLVED.name()}`;\n            }\n        }\n\n        return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()} ${Selectors.DIFF.LINE_CONTENT_EMPTY.name()} ${Selectors.DIFF.LINE_PLACEHOLDER.name()}${additionalClass}\"\n                   data-chunk-id=\"${chunkId}\"\n                   data-chunk-type=\"${chunkType}\"\n                   data-side=\"${side}\"\n                   data-placeholder-type=\"${line.placeholderType || 'default'}\"\n                   data-line-id=\"${side}-${lineNumber}\"\n                   data-has-placeholder=\"true\">&nbsp;</td>`;\n    }\n\n    /**\n     * Render content line\n     * @private\n     */\n    _renderContentLine(line, chunkId, chunkType, side, lineNumber, hasPlaceholder) {\n        const lineContent = line.line;\n        const isEmpty = !lineContent || lineContent === '\\r' || lineContent === '\\n';\n\n        // Add different classes based on chunk type\n        let additionalClass = '';\n        if (chunkId !== '') {\n            additionalClass = this._getChunkClass(chunkType, side);\n\n            // Add the vdm-diff__chunk class for elements with chunk IDs\n            additionalClass += ` ${Selectors.DIFF.CHUNK.name()}`;\n\n            // Add status class for chunks that can be navigated - include all chunk types that need resolution\n            if (line.conflict || chunkType === 'replace' || chunkType === 'add' || chunkType === 'delete') {\n                additionalClass += ` ${Selectors.STATUS.UNRESOLVED.name()}`;\n            }\n        }\n\n        if (isEmpty) {\n            additionalClass += ` ${Selectors.CODE.LINE_EMPTY.name()}`;\n            return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()}${additionalClass}\"\n                       data-chunk-id=\"${chunkId}\"\n                       data-chunk-type=\"${chunkType}\"\n                       data-side=\"${side}\"\n                       data-line-id=\"${side}-${lineNumber}\"\n                       ${hasPlaceholder ? 'data-has-placeholder=\"true\"' : ''}>&nbsp;</td>`;\n        } else {\n            // Add the line content with proper attributes for chunk handling\n            const displayContent = StringUtils.escapeHtml ?\n                                   StringUtils.escapeHtml(lineContent) :\n                                   lineContent.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n            // Add cursor: pointer to all clickable chunk elements\n            const styleAttr = chunkId !== '' ? ' style=\"cursor: pointer;\"' : '';\n\n            return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()}${additionalClass}\"\n                       data-chunk-id=\"${chunkId}\"\n                       data-chunk-type=\"${chunkType}\"\n                       data-side=\"${side}\"\n                       data-line-id=\"${side}-${lineNumber}\"\n                       ${hasPlaceholder ? 'data-has-placeholder=\"true\"' : ''}${styleAttr}>${displayContent}</td>`;\n        }\n    }\n\n    /**\n     * Get CSS class for a chunk type\n     * @private\n     */\n    _getChunkClass(chunkType, side) {\n        if (chunkType === 'delete' && side === 'left') {\n            return ` ${Selectors.DIFF.LINE_DELETE.name()}`;\n        } else if (chunkType === 'add' && side === 'right') {\n            return ` ${Selectors.DIFF.LINE_ADD.name()}`;\n        } else if (chunkType === 'replace') {\n            let cls = ` ${Selectors.DIFF.LINE_ADD.name()}`;\n            if (side === 'left') {\n                cls += ` ${Selectors.DIFF.LINE_REPLACE_LEFT.name()}`;\n            } else {\n                cls += ` ${Selectors.DIFF.LINE_REPLACE_RIGHT.name()}`;\n            }\n            return cls;\n        }\n        return '';\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors';\nimport { ChunkUtils } from '../../utils/ChunkUtils';\nimport { IconRegistry } from '../../utils/IconRegistry';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\n\nimport { ChunkVisualStateManager } from './ChunkVisualStateManager';\n\n/**\n * Handles chunk selection operations\n */\nexport class ChunkSelectionHandler {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n        this.selections = {}; // Store selections separately\n        this.visualStateManager = new ChunkVisualStateManager(chunkManager);\n\n        // Define selection state constants to replace hardcoded strings\n        this.SELECTED = Selectors.DIFF.CHUNK_SELECTED.name();\n        this.UNSELECTED = Selectors.DIFF.CHUNK_UNSELECTED.name();\n\n        // Performance tracking metrics\n        this._performanceMetrics = {\n            lastOperationTime: 0,\n            operationCount: 0\n        };\n    }\n\n    /**\n     * Setup chunk selection handlers\n     */\n    setupChunkSelection() {\n        // Store the handler function with proper binding\n        this._boundClickHandler = (event) => this._handleClick(event);\n        this._boundCheckAllHandler = (event) => this._handleCheckAll(event);\n\n        // Clear existing handlers and setup new ones for ALL chunk elements\n        // by targeting data-chunk-id attribute instead of specific classes\n        DOMUtils.setupEventHandlers(\n            '[data-chunk-id]:not([data-chunk-id=\"\"])',\n            'click',\n            this._boundClickHandler,\n            {\n                removeExisting: true,\n                styles: { cursor: 'pointer' }\n            }\n        );\n\n        // Add \"Check All\" buttons to each pane and setup handlers\n        this._setupCheckAllButtons();\n\n        // Clear ChunkUtils cache to ensure fresh state\n        ChunkUtils.clearCache();\n\n        Debug.log('ChunkSelectionHandler: Selection handlers initialized for all chunk elements', null, 2);\n    }\n\n    /**\n     * Set up \"Check All\" buttons\n     * @private\n     */\n    _setupCheckAllButtons() {\n        // Find panes\n        const panes = this.chunkManager.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        if (panes.length !== 2) {\n            Debug.log('ChunkSelectionHandler: Could not find both diff panes for \"Check All\" buttons', null, 2);\n            return;\n        }\n\n        const leftPane = panes[0];\n        const rightPane = panes[1];\n\n        // Create and add the check all buttons to the panes\n        this._createCheckAllButtonHeader(leftPane, 'left');\n        this._createCheckAllButtonHeader(rightPane, 'right');\n    }\n\n    /**\n     * Create a header with a \"Check All\" button for a pane\n     * @private\n     */\n    _createCheckAllButtonHeader(pane, side) {\n        // Get translation manager instance\n        const translationManager = TranslationManager.getInstance();\n\n        // Create header element\n        const header = document.createElement('div');\n        header.className = Selectors.DIFF.PANE_HEADER.name();\n\n        // Make header a flex container\n        header.classList.add('vdm-d-flex', 'vdm-justify-content-between', 'vdm-align-items-center');\n\n        // Get language information from DiffViewer\n        const language = this.chunkManager.diffViewer.runtimeProps.diffData.language || 'Text';\n\n        // Create language badge\n        const langBadge = document.createElement('span');\n        langBadge.className = 'vdm-badge vdm-badge--info';\n        langBadge.textContent = language;\n\n        // Create button element\n        const checkAllButton = document.createElement('button');\n        checkAllButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_EXTRA_SMALL.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()} ${Selectors.DIFF.CHECK_ALL_BTN.name()}`;\n        checkAllButton.setAttribute('data-side', side);\n        checkAllButton.setAttribute('data-icon-state', 'unchecked');\n        checkAllButton.title = `Select all changes from the ${side} pane`;\n        checkAllButton.style.display = 'inline-flex';\n        checkAllButton.style.alignItems = 'center';\n        checkAllButton.style.verticalAlign = 'middle';\n\n        // Create icon wrapper span\n        const iconWrapper = document.createElement('span');\n        iconWrapper.className = 'vdm-icon-wrapper';\n        iconWrapper.style.marginRight = '3px';\n        iconWrapper.style.display = 'inline-flex';\n        iconWrapper.style.alignItems = 'center';\n        iconWrapper.style.verticalAlign = 'middle';\n        iconWrapper.style.height = '14px';\n        iconWrapper.style.lineHeight = '1';\n\n        // Add checkbox-unchecked icon by default\n        const uncheckIcon = IconRegistry.createIcon('checkbox-unchecked', {\n            width: 14,\n            height: 14,\n            classes: 'vdm-icon-checkbox'\n        });\n\n        iconWrapper.appendChild(uncheckIcon);\n\n        // Create text node with a span wrapper for better alignment\n        const textSpan = document.createElement('span');\n        textSpan.style.display = 'inline-block';\n        textSpan.style.verticalAlign = 'middle';\n        textSpan.style.lineHeight = '1';\n        textSpan.appendChild(document.createTextNode(translationManager.get('checkAll')));\n\n        // Add icon and text to button\n        checkAllButton.appendChild(iconWrapper);\n        checkAllButton.appendChild(textSpan);\n\n        // Add language badge and button to header\n        header.appendChild(langBadge);\n        header.appendChild(checkAllButton);\n\n        // Add header as the first child of the pane\n        pane.insertBefore(header, pane.firstChild);\n\n        // Add click event handler\n        checkAllButton.addEventListener('click', this._boundCheckAllHandler);\n    }\n\n    /**\n     * Handle click on \"Check All\" button\n     * @private\n     */\n    _handleCheckAll(event) {\n        const button = event.currentTarget;\n        const side = button.getAttribute('data-side');\n        const iconState = button.getAttribute('data-icon-state');\n        const oppositeButton = this._getOppositeButton(side);\n\n        // Get translation manager and loader manager\n        const translationManager = TranslationManager.getInstance();\n        const loaderManager = LoaderManager.getInstance();\n\n        if (!side) return;\n\n        // Show loading indicator for batch operations\n        const message = translationManager.get('processingChunks') || 'Processing chunks...';\n        const loaderId = loaderManager.showLoader(message, {\n            fullscreen: true,\n            zIndex: 9999\n        });\n\n        // Also update button state for visual feedback\n        this._setButtonProcessingState(button, true);\n\n        // Track performance\n        const startTime = performance.now();\n\n        // Use a small timeout to allow the loader to be shown\n        setTimeout(() => {\n            // If this button is already checked, uncheck everything\n            if (iconState === 'checked') {\n                Debug.log('ChunkSelectionHandler: Unchecking all selections', null, 2);\n\n                // Reset this button\n                this._toggleButtonIconState(button, 'checked');\n\n                // Reset opposite button if it's checked\n                if (oppositeButton && oppositeButton.getAttribute('data-icon-state') === 'checked') {\n                    this._toggleButtonIconState(oppositeButton, 'checked');\n                }\n\n                // Clear all selections\n                this.clearAllSelections(true); // Use optimized batch version\n            }\n            // If opposite button is checked, toggle both sides\n            else if (oppositeButton && oppositeButton.getAttribute('data-icon-state') === 'checked') {\n                // Uncheck the opposite side\n                this._toggleButtonIconState(oppositeButton, 'checked');\n\n                // Check this side\n                this._toggleButtonIconState(button, 'unchecked');\n\n                // Select all on this side\n                this.selectAllOnSide(side, true); // Use optimized batch version\n            }\n            // Default case: check this side\n            else {\n                this._toggleButtonIconState(button, 'unchecked');\n                this.selectAllOnSide(side, true); // Use optimized batch version\n            }\n\n            // Reset button state\n            this._setButtonProcessingState(button, false);\n\n            // Hide loader\n            loaderManager.hideLoader(loaderId);\n\n            // Track performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }, 50);\n    }\n\n    /**\n     * Set button to processing state to give visual feedback during long operations\n     * @private\n     */\n    _setButtonProcessingState(button, isProcessing) {\n        if (isProcessing) {\n            button.classList.add('processing');\n            button.style.opacity = '0.8';\n            button.style.cursor = 'wait';\n        } else {\n            button.classList.remove('processing');\n            button.style.opacity = '';\n            button.style.cursor = '';\n        }\n    }\n\n    /**\n     * Record performance metrics for optimization analysis\n     * @private\n     */\n    _recordPerformanceMetrics(startTime) {\n        const endTime = performance.now();\n        const operationTime = endTime - startTime;\n\n        this._performanceMetrics.lastOperationTime = operationTime;\n        this._performanceMetrics.operationCount++;\n\n        // Log cache statistics to evaluate caching effectiveness\n        const cacheStats = ChunkUtils.getCacheStats();\n        const elementHitRatio = cacheStats.elementCacheHits /\n            (cacheStats.elementCacheHits + cacheStats.elementCacheMisses) * 100 || 0;\n        const iconHitRatio = cacheStats.iconMarkerCacheHits /\n            (cacheStats.iconMarkerCacheHits + cacheStats.iconMarkerCacheMisses) * 100 || 0;\n\n        Debug.log(`ChunkSelectionHandler: Operation completed in ${operationTime.toFixed(2)}ms`,\n            {\n                totalOperations: this._performanceMetrics.operationCount,\n                cacheStats: {\n                    elementCacheHits: cacheStats.elementCacheHits,\n                    elementCacheMisses: cacheStats.elementCacheMisses,\n                    elementHitRatio: `${elementHitRatio.toFixed(1)}%`,\n                    iconMarkerCacheHits: cacheStats.iconMarkerCacheHits,\n                    iconMarkerCacheMisses: cacheStats.iconMarkerCacheMisses,\n                    iconHitRatio: `${iconHitRatio.toFixed(1)}%`\n                }\n            }, 2);\n    }\n\n    /**\n     * Get the button for the opposite side\n     * @private\n     * @param {string} currentSide - Current side ('left' or 'right')\n     * @returns {Element|null} - The opposite side button element or null if not found\n     */\n    _getOppositeButton(currentSide) {\n        const oppositeSide = currentSide === 'left' ? 'right' : 'left';\n        return this.chunkManager.diffViewer.container.querySelector(\n            `.${Selectors.DIFF.CHECK_ALL_BTN.name()}[data-side=\"${oppositeSide}\"]`\n        );\n    }\n\n    /**\n     * Toggle button icon state between checked and unchecked\n     * @private\n     * @param {Element} button - The button element\n     * @param {string} currentState - Current icon state ('checked' or 'unchecked')\n     */\n    _toggleButtonIconState(button, currentState) {\n        const iconWrapper = button.querySelector('.vdm-icon-wrapper');\n        if (!iconWrapper) return;\n\n        // Clear current icon\n        iconWrapper.innerHTML = '';\n\n        // Determine new state based on current state\n        let newIconState;\n        if (currentState === 'unchecked') {\n            newIconState = 'checked';\n            iconWrapper.appendChild(IconRegistry.createIcon('checkbox-checked', {\n                width: 14,\n                height: 14,\n                classes: 'vdm-icon-checkbox'\n            }));\n        } else {\n            newIconState = 'unchecked';\n            iconWrapper.appendChild(IconRegistry.createIcon('checkbox-unchecked', {\n                width: 14,\n                height: 14,\n                classes: 'vdm-icon-checkbox'\n            }));\n        }\n\n        // Update icon state attribute\n        button.setAttribute('data-icon-state', newIconState);\n    }\n\n    /**\n     * Select all chunks on a specific side\n     * @param {string} side - 'left' or 'right'\n     * @param {boolean} useBatch - Whether to use batching for large files (default: false for backward compatibility)\n     */\n    selectAllOnSide(side, useBatch = false) {\n        const oppositeSide = side === 'left' ? 'right' : 'left';\n\n        Debug.log(`ChunkSelectionHandler: Selecting all chunks on ${side} side${useBatch ? ' (batched)' : ''}`, null, 2);\n\n        // Get all chunks that need resolution\n        const conflictChunks = this.chunkManager.chunks.filter(chunk =>\n            chunk.conflict || chunk.type === 'replace' || chunk.type === 'add' || chunk.type === 'delete'\n        );\n\n        // Check if we should use batching based on number of chunks\n        const largeDiff = conflictChunks.length > 20; // Threshold for considering a diff as \"large\"\n        useBatch = useBatch || largeDiff;\n\n        // Show loader for large operations\n        let loaderId = null;\n        if (useBatch && conflictChunks.length > 50) {\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const message = translationManager.get('processingChunks') || 'Processing chunks...';\n            loaderId = loaderManager.showLoader(message, {\n                fullscreen: true,\n                zIndex: 9999\n            });\n        }\n\n        // Start tracking performance\n        const startTime = performance.now();\n\n        if (useBatch) {\n            // First update internal state for all chunks\n            conflictChunks.forEach(chunk => {\n                // Update selections object\n                this.selections[chunk.id] = side;\n\n                // Sync with diffConfig for compatibility\n                this._syncWithDiffConfig(chunk.id, side);\n            });\n\n            // Get all chunks by side for efficient batch processing\n            const chunksBySide = new Map();\n\n            // Group all elements by chunk ID and side for batch processing\n            conflictChunks.forEach(chunk => {\n                // Toggle visual state with batching enabled\n                this.visualStateManager.updateVisualState(chunk.id, side, this.SELECTED, true);\n                this.visualStateManager.updateVisualState(chunk.id, oppositeSide, this.UNSELECTED, true);\n\n                // Collect chunk elements for resolved status update\n                if (!chunksBySide.has(chunk.id)) {\n                    const elements = ChunkUtils.getChunkElements(chunk.id);\n                    chunksBySide.set(chunk.id, elements);\n                }\n            });\n\n            // Process visual updates in a single batch\n            this.visualStateManager.applyBatch(false); // Don't notify yet\n\n            // Apply resolved status to all chunks in a separate batch\n            requestAnimationFrame(() => {\n                // Ensure the icon markers are updated by forcing a redraw\n                this._refreshIconStates(side, conflictChunks);\n\n                chunksBySide.forEach((elements) => {\n                    elements.forEach(element => {\n                        element.classList.add(Selectors.STATUS.RESOLVED.name());\n                        element.classList.remove(Selectors.STATUS.UNRESOLVED.name());\n                    });\n                });\n\n                // Update navigation counter after all visual changes\n                this._updateNavigationCounter();\n\n                // Now notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n\n                // Hide loader if it was shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n                }\n\n                // Record performance metrics after all operations\n                this._recordPerformanceMetrics(startTime);\n            });\n        } else {\n            // Legacy approach - process one by one\n            conflictChunks.forEach(chunk => {\n                this.toggleChunkSelection(chunk.id, side, this.SELECTED);\n                this.toggleChunkSelection(chunk.id, oppositeSide, this.UNSELECTED);\n            });\n\n            // Callback to notify of selection change\n            if (typeof this.chunkManager.onSelectionChange === 'function') {\n                this.chunkManager.onSelectionChange();\n            }\n\n            // Record performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }\n    }\n\n    /**\n     * Force refresh icon states for chunks\n     * This ensures icon markers are correctly updated during batch operations\n     * @private\n     */\n    _refreshIconStates(selectedSide, chunks) {\n        const oppositeSide = selectedSide === 'left' ? 'right' : 'left';\n\n        // Force all chunks to properly show their selection state visually\n        chunks.forEach(chunk => {\n            // Get elements for both sides\n            const selectedElements = ChunkUtils.getChunkElements(chunk.id, selectedSide);\n            const oppositeElements = ChunkUtils.getChunkElements(chunk.id, oppositeSide);\n\n            // Handle selected side\n            if (selectedElements.length > 0) {\n                // Sort by line number to get first element for icon marker\n                const sortedElements = ChunkUtils.sortElementsByLineNumber(selectedElements);\n                const firstElement = sortedElements[0];\n\n                if (firstElement) {\n                    const lineId = firstElement.dataset.lineId;\n                    if (lineId) {\n                        // Force direct icon marker update with the correct side\n                        const iconMarker = ChunkUtils.getIconMarker(lineId);\n                        if (iconMarker) {\n                            // Remove all state classes first\n                            iconMarker.classList.remove(\n                                Selectors.DIFF.CHUNK_SELECTED.name(),\n                                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                                Selectors.ICONS.SELECT.name(),\n                                Selectors.ICONS.SELECT_LEFT.name(),\n                                Selectors.ICONS.SELECT_RIGHT.name()\n                            );\n\n                            // Add selected state\n                            iconMarker.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                            // Add the side-specific icon marker\n                            if (selectedSide === 'left') {\n                                iconMarker.classList.add(Selectors.ICONS.SELECT_LEFT.name());\n                            } else {\n                                iconMarker.classList.add(Selectors.ICONS.SELECT_RIGHT.name());\n                            }\n                        }\n                    }\n                }\n\n                // Apply the selected class to all elements for this chunk on the selected side\n                selectedElements.forEach(element => {\n                    // Remove all selection classes first\n                    element.classList.remove(\n                        Selectors.DIFF.CHUNK_SELECTED.name(),\n                        Selectors.DIFF.CHUNK_UNSELECTED.name()\n                    );\n\n                    // Add selected class\n                    element.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                    // Update the parent row too\n                    const row = ChunkUtils.getParentRow(element);\n                    if (row) {\n                        row.classList.remove(\n                            Selectors.DIFF.CHUNK_SELECTED.name(),\n                            Selectors.DIFF.CHUNK_UNSELECTED.name()\n                        );\n                        row.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n                    }\n                });\n            }\n\n            // Handle opposite side\n            if (oppositeElements.length > 0) {\n                // Clear any icon markers on the opposite side\n                const sortedOppositeElements = ChunkUtils.sortElementsByLineNumber(oppositeElements);\n                const firstOppositeElement = sortedOppositeElements[0];\n\n                if (firstOppositeElement) {\n                    const oppositeLineId = firstOppositeElement.dataset.lineId;\n                    if (oppositeLineId) {\n                        const oppositeIconMarker = ChunkUtils.getIconMarker(oppositeLineId);\n                        if (oppositeIconMarker) {\n                            // Clear all selection related classes\n                            oppositeIconMarker.classList.remove(\n                                Selectors.DIFF.CHUNK_SELECTED.name(),\n                                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                                Selectors.ICONS.SELECT.name(),\n                                Selectors.ICONS.SELECT_LEFT.name(),\n                                Selectors.ICONS.SELECT_RIGHT.name()\n                            );\n\n                            // DETERMINE IF THIS SHOULD BE A PLACEHOLDER\n                            // Apply the same placeholder logic used in _updateOppositeMarker\n\n                            // Check if the opposite element has placeholder attributes\n                            const hasPlaceholder = firstOppositeElement.dataset.hasPlaceholder === 'true';\n                            const isPlaceholderType = firstOppositeElement.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name());\n                            const wasPlaceholder = oppositeIconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n                            // Find the corresponding selected element for the same line number\n                            const lineNumber = oppositeLineId.split('-')[1];\n                            const selectedLineId = `${selectedSide}-${lineNumber}`;\n                            const selectedElement = document.querySelector(`[data-line-id=\"${selectedLineId}\"]`);\n\n                            // Check if the selected element indicates this should be a placeholder\n                            const selectedHasPlaceholder = selectedElement?.dataset.hasPlaceholder === 'true';\n                            const selectedIsPlaceholderType = selectedElement?.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name());\n\n                            // If any of these conditions are true, this should be a placeholder\n                            if (hasPlaceholder || isPlaceholderType || wasPlaceholder ||\n                                selectedHasPlaceholder || selectedIsPlaceholderType) {\n                                // Set as placeholder\n                                oppositeIconMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                                Debug.log(`ChunkSelectionHandler: Set opposite marker ${oppositeLineId} as placeholder during batch refresh`, null, 3);\n                            } else {\n                                // Normal unselected state\n                                oppositeIconMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n                            }\n                        }\n                    }\n                }\n\n                // Apply the unselected class to all elements on the opposite side\n                oppositeElements.forEach(element => {\n                    // Remove all selection classes first\n                    element.classList.remove(\n                        Selectors.DIFF.CHUNK_SELECTED.name(),\n                        Selectors.DIFF.CHUNK_UNSELECTED.name()\n                    );\n\n                    // Add unselected class\n                    element.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n\n                    // Update the parent row too\n                    const row = ChunkUtils.getParentRow(element);\n                    if (row) {\n                        row.classList.remove(\n                            Selectors.DIFF.CHUNK_SELECTED.name(),\n                            Selectors.DIFF.CHUNK_UNSELECTED.name()\n                        );\n                        row.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Handle click event on chunk\n     * @private\n     */\n    _handleClick(event) {\n        const element = event.currentTarget;\n        const chunkId = element.getAttribute('data-chunk-id');\n        const side = element.getAttribute('data-side');\n\n        Debug.log(`ChunkSelectionHandler: Click detected on side ${side} for chunk ${chunkId}`, {\n            element: element.outerHTML.substring(0, 100) + '...' // Log first 100 chars of HTML\n        }, 3);\n\n        if (chunkId && side) {\n            // Check if the chunk is already selected on this side\n            const isAlreadySelected = this.selections[chunkId] === side &&\n                element.classList.contains(Selectors.DIFF.CHUNK_SELECTED.name());\n\n            if (isAlreadySelected) {\n                // Unselect this chunk\n                Debug.log(`ChunkSelectionHandler: Unselecting chunk ${chunkId} as it was already selected`, null, 3);\n\n                // Remove from selections\n                delete this.selections[chunkId];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId];\n                }\n\n                // Reset visual state for both sides\n                this.visualStateManager.resetVisualState(chunkId);\n\n                // Remove resolved status from all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunkId);\n                chunkElements.forEach(element => {\n                    element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                    element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                });\n\n                // Update navigation counter\n                this._updateNavigationCounter();\n\n                // Notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n            } else {\n                // Get the opposite side\n                const oppositeSide = side === 'left' ? 'right' : 'left';\n\n                // Debug before toggling\n                Debug.log(`ChunkSelectionHandler: Toggling chunk ${chunkId}`, {\n                    selectedSide: side,\n                    oppositeSide: oppositeSide\n                }, 3);\n\n                // Toggle both sides\n                this.toggleChunkSelection(chunkId, side, this.SELECTED);\n                this.toggleChunkSelection(chunkId, oppositeSide, this.UNSELECTED);\n            }\n        }\n    }\n\n    /**\n     * Toggle selection state of a chunk side\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - Selection state constant (SELECTED or UNSELECTED)\n     * @param {boolean} batch - Whether to use batching (default: false for backward compatibility)\n     */\n    toggleChunkSelection(chunkId, side, state, batch = false) {\n        // Update the selections object\n        if (state === this.SELECTED) {\n            this.selections[chunkId] = side;\n\n            // Sync with diffConfig for compatibility\n            this._syncWithDiffConfig(chunkId, side);\n\n            // Update the navigation counter\n            this._updateNavigationCounter();\n\n            if (!batch) {\n                // Add resolved status to all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunkId);\n                chunkElements.forEach(element => {\n                    element.classList.add(Selectors.STATUS.RESOLVED.name());\n                    element.classList.remove(Selectors.STATUS.UNRESOLVED.name());\n                });\n            }\n        }\n\n        // Update visual selection using the specialized component\n        this.visualStateManager.updateVisualState(chunkId, side, state, batch);\n    }\n\n    /**\n     * Sync selection with diffConfig\n     * @private\n     */\n    _syncWithDiffConfig(chunkId, side) {\n        if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n            this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId] = side;\n        }\n    }\n\n    /**\n     * Update navigation counter\n     * @private\n     */\n    _updateNavigationCounter() {\n        if (this.chunkManager.diffViewer?.diffNavigator) {\n            this.chunkManager.diffViewer.diffNavigator.updateCounter();\n        }\n    }\n\n    /**\n     * Get all selections\n     * @returns {Object} Map of chunkId to selected side\n     */\n    getSelections() {\n        return {...this.selections};\n    }\n\n    /**\n     * Check if a chunk is resolved (has selection)\n     * @param {string} chunkId - Chunk ID to check\n     * @returns {boolean} True if resolved\n     */\n    isChunkResolved(chunkId) {\n        return !!this.selections[chunkId];\n    }\n\n    /**\n     * Get unresolved chunk count\n     * @returns {number} Number of unresolved chunks\n     */\n    getUnresolvedCount() {\n        const conflictChunks = this.chunkManager.chunks.filter(c => c.conflict);\n        return conflictChunks.length - Object.keys(this.selections).length;\n    }\n\n    /**\n     * Clear all selections from both sides\n     * @param {boolean} useBatch - Whether to use batching for performance (default: false for backward compatibility)\n     */\n    clearAllSelections(useBatch = false) {\n        // Get all chunks that need resolution\n        const conflictChunks = this.chunkManager.chunks.filter(chunk =>\n            chunk.conflict || chunk.type === 'replace' || chunk.type === 'add' || chunk.type === 'delete'\n        );\n\n        // Check if we should use batching based on number of chunks\n        const largeDiff = conflictChunks.length > 20; // Threshold for considering a diff as \"large\"\n        useBatch = useBatch || largeDiff;\n\n        // Show loader for large operations\n        let loaderId = null;\n        if (useBatch) {\n            const selectedChunks = conflictChunks.filter(chunk => this.isChunkResolved(chunk.id));\n            if (selectedChunks.length > 50) { // Only show loader for large batches\n                const translationManager = TranslationManager.getInstance();\n                const loaderManager = LoaderManager.getInstance();\n                const message = translationManager.get('processingChunks') || 'Processing chunks...';\n                loaderId = loaderManager.showLoader(message, {\n                    fullscreen: true,\n                    zIndex: 9999\n                });\n            }\n        }\n\n        // Start tracking performance\n        const startTime = performance.now();\n\n        if (useBatch) {\n            Debug.log(`ChunkSelectionHandler: Clearing all selections using batch operations`, null, 2);\n\n            // First update internal state\n            const selectedChunks = conflictChunks.filter(chunk => this.isChunkResolved(chunk.id));\n\n            // Use a set for faster lookups\n            const selectedChunkIds = new Set(selectedChunks.map(chunk => chunk.id));\n\n            // Collect all elements that need updating\n            const elementsToUpdate = new Map();\n\n            // Remove from internal objects efficiently\n            selectedChunkIds.forEach(chunkId => {\n                // Remove from selections object\n                delete this.selections[chunkId];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId];\n                }\n\n                // Queue visual state reset with batching\n                this.visualStateManager.resetVisualState(chunkId, true);\n\n                // Collect elements for later class updates\n                const elements = ChunkUtils.getChunkElements(chunkId);\n                elementsToUpdate.set(chunkId, elements);\n            });\n\n            // Apply all visual updates in a batch\n            this.visualStateManager.applyBatch(false); // Don't notify yet\n\n            // Update element status classes in a separate batch\n            requestAnimationFrame(() => {\n                elementsToUpdate.forEach((elements, _chunkId) => {\n                    elements.forEach(element => {\n                        element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                        element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                    });\n                });\n\n                // Update navigation counter after all visual changes\n                this._updateNavigationCounter();\n\n                // Now notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n\n                // Hide loader if it was shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n                }\n\n                // Record performance metrics after all operations\n                this._recordPerformanceMetrics(startTime);\n            });\n        } else {\n            // Legacy approach - clear selection for each chunk individually\n            conflictChunks.forEach(chunk => {\n                // Skip chunks that aren't selected\n                if (!this.isChunkResolved(chunk.id)) return;\n\n                // Remove resolved status from all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunk.id);\n                chunkElements.forEach(element => {\n                    element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                    element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                });\n\n                // Remove from selections object\n                delete this.selections[chunk.id];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunk.id];\n                }\n\n                // Reset visual state for both sides\n                this.visualStateManager.resetVisualState(chunk.id);\n            });\n\n            // Update navigation counter\n            this._updateNavigationCounter();\n\n            // Callback to notify of selection change\n            if (typeof this.chunkManager.onSelectionChange === 'function') {\n                this.chunkManager.onSelectionChange();\n            }\n\n            // Record performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }\n    }\n}\n","import { ChunkUtils } from '../../utils/ChunkUtils';\nimport Selectors from '../../constants/Selectors';\nimport { Debug } from '../../utils/Debug';\n\n/**\n * Manages visual state updates for chunk selections\n */\nexport class ChunkVisualStateManager {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n        // Batch operations queue\n        this._pendingOperations = [];\n        // Track whether DOM updates are batched\n        this._isBatching = false;\n        // Performance metrics\n        this._metrics = {\n            lastBatchSize: 0,\n            lastBatchTime: 0\n        };\n        Debug.log('ChunkVisualStateManager: Initialized', null, 3);\n    }\n\n    /**\n     * Initialize the visual state manager\n     * Preloads all chunk data for optimal performance with large files\n     */\n    initialize() {\n        // Preload all chunks into cache for better performance\n        ChunkUtils.preloadChunks();\n        Debug.log('ChunkVisualStateManager: Initialized with preloaded chunks', null, 2);\n    }\n\n    /**\n     * Update visual selection state\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - 'selected' or 'unselected'\n     * @param {boolean} batch - Whether to batch operations (defaults to false for backward compatibility)\n     */\n    updateVisualState(chunkId, side, state, batch = false) {\n        Debug.log(`ChunkVisualStateManager: Updating visual state for chunk ${chunkId}, side ${side}, state ${state}`, null, 3);\n\n        // Get all elements for this chunk side\n        const elements = ChunkUtils.getChunkElements(chunkId, side);\n        Debug.log(`ChunkVisualStateManager: Found ${elements.length} elements for chunk ${chunkId}`, null, 3);\n\n        // Sort by line number (only needed for getting the first element)\n        const sortedElements = ChunkUtils.sortElementsByLineNumber(elements);\n\n        // Get the opposite side to handle placeholder synchronization\n        const oppositeSide = side === 'left' ? 'right' : 'left';\n\n        if (batch) {\n            // Add to batch queue\n            this._pendingOperations.push({\n                type: 'updateState',\n                chunkId,\n                side,\n                elements: elements,\n                firstElement: sortedElements.length > 0 ? sortedElements[0] : null,\n                state: state,\n                oppositeSide: oppositeSide\n            });\n        } else {\n            // Apply immediately (for backward compatibility)\n            this._applyStateToElements(elements, state);\n\n            // Only update the icon for the first element\n            if (sortedElements.length > 0) {\n                Debug.log(`ChunkVisualStateManager: Updating icon marker for first element of chunk ${chunkId}`, null, 3);\n\n                // When setting a state on one side, also update opposite side\n                const firstElement = sortedElements[0];\n                if (firstElement && state === 'selected') {\n                    // First handle the selected side\n                    this._updateIconMarker(firstElement, state);\n\n                    // Then handle the opposite side marker as a placeholder\n                    this._updateOppositeMarker(firstElement, oppositeSide);\n                } else {\n                    // Normal case without special opposite handling\n                    this._updateIconMarker(firstElement, state);\n                }\n            } else {\n                Debug.warn(`ChunkVisualStateManager: No elements found to update icon for chunk ${chunkId}`, null, 3);\n            }\n\n            // Notify about selection change\n            this._notifySelectionChange();\n        }\n    }\n\n    /**\n     * Update the opposite side's marker when a chunk is selected\n     * @private\n     * @param {Element} element - The element being selected\n     * @param {string} oppositeSide - The opposite side ('left' or 'right')\n     */\n    _updateOppositeMarker(element, oppositeSide) {\n        if (!element?.dataset?.lineId) return;\n\n        // Extract line number from lineId (format: \"side-number\")\n        const lineIdParts = element.dataset.lineId.split('-');\n        if (lineIdParts.length !== 2) return;\n\n        const lineNumber = lineIdParts[1];\n        const oppositeLineId = `${oppositeSide}-${lineNumber}`;\n\n        // Find the opposite marker\n        const oppositeMarker = ChunkUtils.getIconMarker(oppositeLineId);\n        if (!oppositeMarker) {\n            Debug.warn(`ChunkVisualStateManager: Could not find opposite marker for ${oppositeLineId}`, null, 3);\n            return;\n        }\n\n        Debug.log(`ChunkVisualStateManager: Updating opposite marker ${oppositeLineId}`, {\n            currentClasses: Array.from(oppositeMarker.classList)\n        }, 3);\n\n        // Remove selection classes\n        oppositeMarker.classList.remove(\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name(),\n            Selectors.ICONS.SELECT.name(),\n            Selectors.ICONS.SELECT_LEFT.name(),\n            Selectors.ICONS.SELECT_RIGHT.name()\n        );\n\n        // CRITICAL DECISION POINT: Determine if the opposite marker should be a placeholder\n        // This is determined by whether the line only exists on one side\n\n        // Only mark as placeholder if it was originally a placeholder\n        const wasPlaceholder = oppositeMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n        if (wasPlaceholder) {\n            // If it was a placeholder, keep it as a placeholder\n            oppositeMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n            Debug.log(`ChunkVisualStateManager: Preserved placeholder status for ${oppositeLineId}`, null, 3);\n        } else {\n            // Otherwise mark it as unselected\n            oppositeMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n            Debug.log(`ChunkVisualStateManager: Set opposite marker ${oppositeLineId} as unselected`, null, 3);\n        }\n    }\n\n    /**\n     * Reset visual state for a chunk\n     * @param {string} chunkId - Chunk ID\n     * @param {boolean} batch - Whether to batch operations (defaults to false for backward compatibility)\n     */\n    resetVisualState(chunkId, batch = false) {\n        Debug.log(`ChunkVisualStateManager: Resetting visual state for chunk ${chunkId}`, null, 3);\n\n        // Get all elements for this chunk (both sides)\n        const elements = ChunkUtils.getChunkElements(chunkId);\n        Debug.log(`ChunkVisualStateManager: Found ${elements.length} elements for chunk ${chunkId}`, null, 3);\n\n        // Get icon markers associated with this chunk more efficiently\n        const iconMarkers = ChunkUtils.getChunkIconMarkers(chunkId);\n\n        if (batch) {\n            // Add to batch queue\n            this._pendingOperations.push({\n                type: 'resetState',\n                chunkId,\n                elements: elements,\n                iconMarkers: iconMarkers\n            });\n        } else {\n            // Apply immediately (for backward compatibility)\n            this._applyResetToElements(elements, iconMarkers);\n\n            Debug.log(`ChunkVisualStateManager: Reset ${iconMarkers.length} icon markers for chunk ${chunkId}`, null, 3);\n\n            // Notify about selection change\n            this._notifySelectionChange();\n        }\n    }\n\n    /**\n     * Process all pending visual updates in a single batch\n     * @param {boolean} notify - Whether to trigger notification after batch (default: true)\n     */\n    applyBatch(notify = true) {\n        if (this._pendingOperations.length === 0) {\n            return;\n        }\n\n        // Set batching state flag\n        this._isBatching = true;\n        const batchSize = this._pendingOperations.length;\n        this._metrics.lastBatchSize = batchSize;\n\n        // Use a single RAF call for better performance\n        requestAnimationFrame(() => {\n            const startTime = performance.now();\n            Debug.log(`ChunkVisualStateManager: Applying batch of ${batchSize} operations`, null, 2);\n\n            try {\n                // Group operations by type for better performance\n                const updateOperations = [];\n                const resetOperations = [];\n\n                // Sort operations into groups\n                this._pendingOperations.forEach(operation => {\n                    if (operation.type === 'updateState') {\n                        updateOperations.push(operation);\n                    } else if (operation.type === 'resetState') {\n                        resetOperations.push(operation);\n                    }\n                });\n\n                // Process reset operations first to ensure clean state\n                if (resetOperations.length > 0) {\n                    this._processBatchedResets(resetOperations);\n                }\n\n                // Then process update operations\n                if (updateOperations.length > 0) {\n                    this._processBatchedUpdates(updateOperations);\n                }\n\n                // Track batch processing time\n                const endTime = performance.now();\n                const processingTime = endTime - startTime;\n                this._metrics.lastBatchTime = processingTime;\n\n                Debug.log(`ChunkVisualStateManager: Batch processing completed in ${processingTime.toFixed(2)}ms`,\n                    {\n                        operations: batchSize,\n                        resetOps: resetOperations.length,\n                        updateOps: updateOperations.length,\n                        msPerOperation: (processingTime / batchSize).toFixed(2)\n                    }, 2);\n            }\n            catch (error) {\n                Debug.error(`Error during batch processing: ${error.message}`, error, 1);\n            }\n            finally {\n                // Clear the queue\n                this._pendingOperations = [];\n\n                // Reset batching state flag\n                this._isBatching = false;\n\n                // Send notification if requested\n                if (notify) {\n                    this._notifySelectionChange();\n                }\n            }\n        });\n    }\n\n    /**\n     * Process a batch of reset operations efficiently\n     * @private\n     */\n    _processBatchedResets(operations) {\n        if (operations.length === 0) return;\n\n        // Group elements and markers by class operations for fewer DOM updates\n        const allElements = [];\n        const allIconMarkers = [];\n\n        // Collect all elements and markers to be reset\n        operations.forEach(operation => {\n            if (operation.elements) {\n                allElements.push(...operation.elements);\n            }\n            if (operation.iconMarkers) {\n                allIconMarkers.push(...operation.iconMarkers);\n            }\n        });\n\n        // Apply resets in bulk\n        this._applyResetToElements(allElements, allIconMarkers);\n    }\n\n    /**\n     * Process a batch of update operations efficiently\n     * @private\n     */\n    _processBatchedUpdates(operations) {\n        if (operations.length === 0) return;\n\n        // Group elements by state for more efficient DOM updates\n        const elementsByState = {\n            'selected': [],\n            'unselected': []\n        };\n\n        // First elements for icon marker updates\n        const firstElementsByState = {\n            'selected': {},  // chunkId -> {element, oppositeSide}\n            'unselected': {} // chunkId -> {element}\n        };\n\n        // Group elements by state\n        operations.forEach(operation => {\n            const { elements, firstElement, state, chunkId, side, oppositeSide } = operation;\n\n            if (elements && elements.length > 0) {\n                if (state === 'selected' || state === 'unselected') {\n                    elementsByState[state].push(...elements);\n                }\n            }\n\n            // Track first element of each chunk for icon marker updates\n            if (firstElement && chunkId) {\n                if (state === 'selected' || state === 'unselected') {\n                    firstElementsByState[state][chunkId] = {\n                        element: firstElement,\n                        side: side,\n                        oppositeSide: oppositeSide\n                    };\n                }\n            }\n        });\n\n        // Apply updates by state\n        Object.entries(elementsByState).forEach(([state, elements]) => {\n            if (elements.length > 0) {\n                this._applyStateToElements(elements, state);\n            }\n        });\n\n        // Update icon markers\n        Object.entries(firstElementsByState).forEach(([state, chunksMap]) => {\n            Object.entries(chunksMap).forEach(([_chunkId, data]) => {\n                // Update the element's marker\n                this._updateIconMarker(data.element, state);\n\n                // For selected elements, also update the opposite marker\n                if (state === 'selected' && data.oppositeSide) {\n                    this._updateOppositeMarker(data.element, data.oppositeSide);\n                }\n            });\n        });\n\n        // Force a DOM layout refresh to ensure styles are applied\n        if (document.body) {\n            document.body.getBoundingClientRect();\n        }\n    }\n\n    /**\n     * Apply state changes to elements using efficient operations\n     * @private\n     */\n    _applyStateToElements(elements, state) {\n        if (!elements || elements.length === 0) return;\n\n        // For better performance, prepare the classes to add/remove\n        const removeClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name()\n        ];\n\n        let addClass = '';\n        if (state === 'selected') {\n            addClass = Selectors.DIFF.CHUNK_SELECTED.name();\n        } else if (state === 'unselected') {\n            addClass = Selectors.DIFF.CHUNK_UNSELECTED.name();\n        } else {\n            // Fallback for backward compatibility\n            addClass = state;\n        }\n\n        // Collect all rows to update at once (reduces layout thrashing)\n        const rows = new Set();\n\n        // Apply to all elements efficiently\n        elements.forEach(element => {\n            // Remove classes\n            element.classList.remove(...removeClasses);\n\n            // Add class\n            element.classList.add(addClass);\n\n            // Add placeholder class if needed\n            if (element.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name())) {\n                element.classList.add(Selectors.DIFF.PLACEHOLDER.name());\n            }\n\n            // Collect parent row for batch update\n            const row = ChunkUtils.getParentRow(element);\n            if (row) {\n                rows.add(row);\n            }\n        });\n\n        // Update all rows at once\n        rows.forEach(row => {\n            row.classList.remove(...removeClasses);\n            row.classList.add(addClass);\n        });\n    }\n\n    /**\n     * Apply reset operations to elements and icon markers efficiently\n     * @private\n     */\n    _applyResetToElements(elements, iconMarkers) {\n        if ((!elements || elements.length === 0) && (!iconMarkers || iconMarkers.length === 0)) return;\n\n        // Pre-compute classes to remove for better performance\n        const removeClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name()\n        ];\n\n        const iconRemoveClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name(),\n            Selectors.ICONS.SELECT.name(),\n            Selectors.ICONS.SELECT_LEFT.name(),\n            Selectors.ICONS.SELECT_RIGHT.name()\n        ];\n\n        // Collect all rows to update at once (reduces layout thrashing)\n        const rows = new Set();\n\n        // Remove classes from elements efficiently\n        if (elements && elements.length > 0) {\n            elements.forEach(el => {\n                // Skip null or undefined elements\n                if (!el) return;\n\n                // Reset element classes\n                el.classList.remove(...removeClasses);\n\n                // Collect parent row for batch update\n                const row = ChunkUtils.getParentRow(el);\n                if (row) {\n                    rows.add(row);\n                }\n            });\n\n            // Reset all rows at once\n            rows.forEach(row => {\n                row.classList.remove(...removeClasses);\n            });\n        }\n\n        // Reset icon markers efficiently\n        if (iconMarkers && iconMarkers.length > 0) {\n            iconMarkers.forEach(marker => {\n                if (marker) {\n                    // Store placeholder status before removing classes\n                    const isPlaceholder = marker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n                    // Remove selection-related classes\n                    marker.classList.remove(...iconRemoveClasses);\n\n                    // Preserve placeholder status when resetting\n                    if (isPlaceholder) {\n                        marker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Update icon marker for the element\n     * @private\n     */\n    _updateIconMarker(element, state) {\n        if (!element) return;\n\n        const lineId = element.dataset.lineId;\n        if (!lineId) return;\n\n        Debug.log(`ChunkVisualStateManager: Looking for icon marker with lineId ${lineId}`, null, 3);\n        // Find and update the icon marker (use cached version if available)\n        const iconMarker = ChunkUtils.getIconMarker(lineId);\n\n        if (iconMarker) {\n            Debug.log(`ChunkVisualStateManager: Updating icon marker state to ${state}`, {\n                lineId: lineId,\n                currentClasses: Array.from(iconMarker.classList)\n            }, 3);\n\n            // Store the placeholder status before removing classes\n            const isPlaceholder = iconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n            // Only remove selection-related classes, preserve placeholder status\n            iconMarker.classList.remove(\n                Selectors.DIFF.CHUNK_SELECTED.name(),\n                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                Selectors.ICONS.SELECT.name(),\n                Selectors.ICONS.SELECT_LEFT.name(),\n                Selectors.ICONS.SELECT_RIGHT.name()\n            );\n\n            // Add the appropriate class based on state\n            if (state === 'selected') {\n                iconMarker.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                // Add the side-appropriate selection icon class\n                if (element.dataset.side === 'left') {\n                    iconMarker.classList.add(Selectors.ICONS.SELECT_LEFT.name());\n                } else {\n                    iconMarker.classList.add(Selectors.ICONS.SELECT_RIGHT.name());\n                }\n            } else if (state === 'unselected') {\n                iconMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n            } else {\n                // Fallback for backward compatibility\n                iconMarker.classList.add(state);\n            }\n\n            // Preserve placeholder status - don't try to infer it from the element\n            if (isPlaceholder && !iconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name())) {\n                iconMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                Debug.log(`ChunkVisualStateManager: Preserved placeholder marker status`, null, 3);\n            }\n        } else {\n            Debug.warn(`ChunkVisualStateManager: No icon marker found for line ${lineId}`, null, 3);\n        }\n    }\n\n    /**\n     * Notify about selection change\n     * @private\n     */\n    _notifySelectionChange() {\n        Debug.log(`ChunkVisualStateManager: Notifying about selection change`, null, 3);\n        if (typeof this.chunkManager.onSelectionChange === 'function') {\n            this.chunkManager.onSelectionChange();\n        } else {\n            Debug.log(`ChunkVisualStateManager: No onSelectionChange handler defined`, null, 3);\n        }\n    }\n\n    /**\n     * Get performance metrics\n     * @returns {Object} Current metrics\n     */\n    getMetrics() {\n        return {...this._metrics};\n    }\n}\n","import { ChunkUtils } from '../../utils/ChunkUtils';\nimport { Debug } from '../../utils/Debug';\n\n/**\n * Generates merged content from selections\n */\nexport class MergeContentGenerator {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @param {Object} selections - Map of chunk IDs to selected sides\n     * @returns {string} Merged content\n     */\n    generateMergedContent(selections) {\n        // If no selections, return right side content\n        if (Object.keys(selections).length === 0) {\n            return ChunkUtils.generateFileContent(this.chunkManager.newContent);\n        }\n\n        // Start with empty result array\n        const result = [];\n\n        // Group right-side lines by chunk ID for better lookups\n        const rightChunkLines = {};\n        this.chunkManager.newContent.forEach(line => {\n            if (line.chunkId) {\n                if (!rightChunkLines[line.chunkId]) {\n                    rightChunkLines[line.chunkId] = [];\n                }\n                rightChunkLines[line.chunkId].push(line);\n            }\n        });\n\n        // Group left-side lines by chunk ID for better lookups\n        const leftChunkLines = {};\n        this.chunkManager.oldContent.forEach(line => {\n            if (line.chunkId) {\n                if (!leftChunkLines[line.chunkId]) {\n                    leftChunkLines[line.chunkId] = [];\n                }\n                leftChunkLines[line.chunkId].push(line);\n            }\n        });\n\n        Debug.log('leftChunkLines', leftChunkLines, 3);\n        Debug.log('rightChunkLines', rightChunkLines, 3);\n        Debug.log('selections', selections, 3);\n\n        // Track processed chunks to avoid duplicates\n        const processedChunks = new Set();\n\n        // First pass: add non-chunk lines and handle chunk lines based on selection\n        for (let i = 0; i < this.chunkManager.newContent.length; i++) {\n            const line = this.chunkManager.newContent[i];\n\n            // Non-chunk content lines always get added\n            if (!line.chunkId && line.type === 'content') {\n                result.push(line.line);\n                continue;\n            }\n\n            // Skip non-content lines\n            if (line.type !== 'content') {\n                continue;\n            }\n\n            // Process chunk lines\n            if (line.chunkId && !processedChunks.has(line.chunkId)) {\n                // Mark this chunk as processed\n                processedChunks.add(line.chunkId);\n\n                // Get chunk selection (left, right, or undefined)\n                const selection = selections[line.chunkId];\n\n                // Handle based on selection\n                if (selection === 'left') {\n                    // Use left content for this chunk\n                    const leftLines = leftChunkLines[line.chunkId] || [];\n                    const contentLines = leftLines.filter(l => l.type === 'content');\n\n                    if (contentLines.length > 0) {\n                        contentLines.forEach(l => result.push(l.line));\n                    }\n                } else {\n                    // Use right content for this chunk\n                    const rightLines = rightChunkLines[line.chunkId] || [];\n                    const contentLines = rightLines.filter(l => l.type === 'content');\n\n                    if (contentLines.length > 0) {\n                        contentLines.forEach(l => result.push(l.line));\n                    }\n                }\n            }\n        }\n\n        // Return the combined content\n        return result.join('\\n');\n    }\n\n    /**\n     * Generate file content from lines\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated content\n     */\n    generateFileFromLines(lines) {\n        return ChunkUtils.generateFileContent(lines);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport AlertManager from '../../utils/AlertManager';\n\n/**\n * Handles merge operation actions\n */\nexport class MergeOperationHandler {\n    /**\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n    }\n\n    /**\n     * Proceed with merge operation - this is the main entry point called from MergeHandler\n     * @param {string} mergeType - Type of merge ('new', 'new-suffix', etc.)\n     * @returns {Promise<Object>} Result object with success status\n     */\n    async proceedWithMerge(mergeType) {\n        Debug.log('MergeOperationHandler: Proceeding with merge', { mergeType }, 2);\n\n        // Get runtime properties to check context\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n        const fileRefId = runtimeProps.fileRefId || '';\n        const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n        // If mergeType requires file references but we don't have them,\n        // automatically switch to clipboard mode\n        if ((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (no fileRefId available)', null, 2);\n            mergeType = 'clipboard';\n        } else if ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (no oldFileRefId available)', null, 2);\n            mergeType = 'clipboard';\n        } else if ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId)) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (missing file reference IDs)', null, 2);\n            mergeType = 'clipboard';\n        }\n\n        // Get translation manager for loading message\n        const translationManager = TranslationManager.getInstance();\n        const loadingMessage = translationManager.get('loadingContent', 'Processing merge...');\n\n        // Show loading indicator\n        const loaderManager = LoaderManager.getInstance();\n        const loaderId = loaderManager.showLoader(loadingMessage, {\n            fullscreen: true,\n            zIndex: 1000 // Ensure it appears above other UI elements\n        });\n\n        try {\n            // Generate merged content\n            const mergedContent = this.diffViewer.chunkManager.generateMergedContent();\n\n            // Apply the merge - skip server calls for clipboard type (text-compare, url-compare, file-upload)\n            let result;\n            if (mergeType === 'clipboard') {\n                // For clipboard type, we don't need to save on server, just return success\n                result = {\n                    success: true,\n                    message: translationManager.get('mergeSuccessClipboard', 'Merge completed successfully. The merged content is ready.')\n                };\n            } else {\n                // For file-browser mode, apply the merge on server\n                result = await this.applyMerge(mergedContent, mergeType);\n            }\n\n            // Hide loading indicator\n            loaderManager.hideLoader(loaderId);\n\n            // Show result message\n            if (result.success) {\n                // Get the result container and show success message\n                const resultContainer = document.getElementById('vdm-merge__result');\n                if (resultContainer) {\n                    resultContainer.innerHTML = '';\n                    resultContainer.classList.remove('vdm-d-none');\n\n                    // Use AlertManager to show success message\n                    const alertManager = AlertManager.getInstance();\n                    const alertElement = alertManager.showSuccess(result.message, {\n                        timeout: 0, // Don't auto-dismiss\n                        translate: false // Message is already translated\n                    });\n\n                    resultContainer.appendChild(alertElement);\n\n                    // Scroll to the result container\n                    this.scrollToMergeResult();\n                }\n            } else {\n                // Show error message\n                const resultContainer = document.getElementById('vdm-merge__result');\n                if (resultContainer) {\n                    resultContainer.innerHTML = '';\n                    resultContainer.classList.remove('vdm-d-none');\n\n                    // Use AlertManager to show error message\n                    const alertManager = AlertManager.getInstance();\n                    const alertElement = alertManager.showError(result.message || 'An error occurred during the merge operation.', {\n                        timeout: 0, // Don't auto-dismiss\n                        translate: false // Message is already translated\n                    });\n\n                    resultContainer.appendChild(alertElement);\n\n                    // Scroll to the result container\n                    this.scrollToMergeResult();\n                }\n            }\n\n            return result;\n        } catch (error) {\n            // Hide loading indicator in case of error\n            loaderManager.hideLoader(loaderId);\n\n            Debug.error('MergeOperationHandler: Error in merge operation', error, 1);\n\n            // Show error message in UI\n            const resultContainer = document.getElementById('vdm-merge__result');\n            if (resultContainer) {\n                resultContainer.innerHTML = '';\n                resultContainer.classList.remove('vdm-d-none');\n\n                // Use AlertManager to show error message\n                const alertManager = AlertManager.getInstance();\n                const errorMessage = `Error: ${error.message || 'An unexpected error occurred during merge.'}`;\n                const alertElement = alertManager.showError(errorMessage, {\n                    timeout: 0, // Don't auto-dismiss\n                    translate: false // Error message doesn't need translation\n                });\n\n                resultContainer.appendChild(alertElement);\n            }\n\n            return {\n                success: false,\n                message: error.message || 'An unexpected error occurred during merge'\n            };\n        }\n    }\n\n    /**\n     * Apply merged content to file\n     * @param {string} mergedContent - Merged content\n     * @param {string} mergeType - Merge type (new, new-suffix, old, old-suffix, both, both-suffix)\n     * @returns {Promise<Object>} Result object with success status\n     */\n    async applyMerge(mergedContent, mergeType) {\n        // Get the runtime properties - using only fileRefId, not server paths\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Get only the file reference IDs - security improvement\n        const fileRefId = runtimeProps.fileRefId || '';\n        const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n        Debug.log('MergeOperationHandler: File references for merge operation', {\n            fileRefId,\n            oldFileRefId,\n            mergeType\n        }, 2);\n\n        // If no file references are available, automatically fall back to clipboard mode\n        if (((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) ||\n            ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) ||\n            ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId))) {\n\n            Debug.log('MergeOperationHandler: Switching to clipboard mode in applyMerge (missing file references)', null, 2);\n            return {\n                success: true,\n                message: TranslationManager.getInstance().get('mergeSuccessClipboard', 'Merge completed successfully. The merged content is ready.')\n            };\n        }\n\n        // Rest of original validation kept for safety\n        if ((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) {\n            Debug.error('MergeOperationHandler: No file reference ID available for new file', null, 1);\n            return {\n                success: false,\n                message: 'No file reference ID available to save changes to new file'\n            };\n        } else if ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) {\n            Debug.error('MergeOperationHandler: No file reference ID available for old file', null, 1);\n            return {\n                success: false,\n                message: 'No file reference ID available to save changes to old file'\n            };\n        } else if ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId)) {\n            Debug.error('MergeOperationHandler: Missing file reference IDs for both files', null, 1);\n            return {\n                success: false,\n                message: 'Missing file reference IDs to save changes to both files'\n            };\n        }\n\n        // Get selections and beautification status\n        const selections = JSON.stringify(this.diffViewer.chunkManager.selections);\n        const wasBeautified = this.diffViewer.isContentBeautified() ? 1 : 0;\n\n        try {\n            // SECURITY: Only use fileRefId - never pass server paths\n            const formParams = {\n                action: 'registerMergedContent',\n                content: mergedContent,\n                selections,\n                mergeType,\n                wasBeautified\n            };\n\n            // Add appropriate file reference IDs based on merge type\n            if (mergeType === 'new' || mergeType === 'new-suffix' || mergeType === 'both' || mergeType === 'both-suffix') {\n                formParams.fileRefId = fileRefId;\n            }\n\n            if (mergeType === 'old' || mergeType === 'old-suffix' || mergeType === 'both' || mergeType === 'both-suffix') {\n                formParams.oldFileRefId = oldFileRefId;\n            }\n\n            Debug.log('MergeOperationHandler: Form parameters for save request', formParams, 2);\n\n            // Get API endpoint\n            const endpoint = await this.diffViewer.getEndpoint('ajaxDiffMerge');\n            Debug.log('MergeOperationHandler: Using endpoint', { endpoint }, 2);\n\n            // Send the request\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams(formParams)\n            });\n\n            // Parse response\n            const result = await response.json();\n            Debug.log('MergeOperationHandler: API response', result, 2);\n\n            return result;\n        } catch (error) {\n            Debug.error(\"MergeOperationHandler: Error applying merge:\", error, 1);\n            return {\n                success: false,\n                message: `Error applying merge: ${error.message}`\n            };\n        }\n    }\n\n    /**\n     * Scroll to the merge result container\n     */\n    scrollToMergeResult() {\n        const resultElement = document.getElementById('vdm-merge__result');\n        if (resultElement) {\n            // Scroll the element into view with smooth behavior\n            resultElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            });\n\n            Debug.log('MergeOperationHandler: Scrolled to merge result', null, 2);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { MergeContentFormatter } from '../../utils/MergeContentFormatter';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { CopyButton } from '../syntax/CopyButton';\nimport Selectors from '../../constants/Selectors';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\n\n/**\n * Handles preview functionality for merges\n */\nexport class MergePreviewManager {\n    /**\n     * Initialize preview manager\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n        this.modalManager = mergeHandler.modalManager;\n    }\n\n    /**\n     * Initialize preview button and events\n     * Sets up the preview button click handler\n     */\n    initialize() {\n        // Set up the preview button event handler\n        this.setupPreviewButton();\n        Debug.log('MergePreviewManager: Initialized', null, 2);\n    }\n\n    /**\n     * Set up the preview button with event handler\n     * Recreates button to remove existing handlers\n     */\n    setupPreviewButton() {\n        // Try to find the standard preview button first\n        const previewButton = document.getElementById(Selectors.MERGE.BUTTON_PREVIEW.name());\n\n        // If not found, check for the \"Get merged result\" button (used in local-only mode)\n        const getMergedResultButton = !previewButton ?\n            document.getElementById(Selectors.MERGE.GET_MERGED_RESULT_BTN.name()) : null;\n\n        // Use whichever button is available\n        const buttonToUse = previewButton || getMergedResultButton;\n\n        if (!buttonToUse) {\n            Debug.warn('MergePreviewManager: Preview button not found', null, 2);\n            return;\n        }\n\n        // Remove any existing handlers by cloning\n        const newBtn = buttonToUse.cloneNode(true);\n        if (buttonToUse.parentNode) {\n            buttonToUse.parentNode.replaceChild(newBtn, buttonToUse);\n        }\n\n        // Add the icon and text if needed (only for the regular preview button)\n        if (buttonToUse === previewButton && (!newBtn.innerHTML || newBtn.innerHTML.trim() === '')) {\n            newBtn.innerHTML = DOMUtils.getIconHtml('eye', { classes: 'me-2' }) + 'Preview';\n        }\n\n        // Add handler\n        newBtn.addEventListener('click', this.handlePreviewClick.bind(this));\n        Debug.log(`MergePreviewManager: ${buttonToUse === previewButton ? 'Preview' : 'Get merged result'} button handler set up`, null, 3);\n    }\n\n    /**\n     * Handle preview button click\n     * Generates preview content and shows in modal\n     */\n    handlePreviewClick() {\n        Debug.log('MergePreviewManager: Preview button clicked', null, 2);\n\n        // Get translation manager for loading message\n        const translationManager = TranslationManager.getInstance();\n        const loadingMessage = translationManager.get('loadingContent', 'Generating preview...');\n\n        // Show loading indicator\n        const loaderManager = LoaderManager.getInstance();\n        const loaderId = loaderManager.showLoader(loadingMessage, {\n            fullscreen: true,\n            zIndex: 1000 // Ensure it appears above other UI elements\n        });\n\n        try {\n            // Get the merged content from the content generator\n            const mergedContent = this.mergeHandler.getMergedContent();\n\n            // Get file extension from runtime properties instead of options\n            const fileToMerge = this.diffViewer.runtimeProps?.filepath || '';\n            const extension = fileToMerge.split('.').pop().toLowerCase();\n\n            // Format the content for preview with line numbers\n            const formattedContent = MergeContentFormatter.formatPreview(mergedContent, extension, true);\n\n            // Hide loading indicator now that content is ready\n            loaderManager.hideLoader(loaderId);\n\n            // Set the filename in the preview modal title using DOMUtils\n            DOMUtils.setContent(\n                Selectors.MODAL.PREVIEW_FILENAME.name(),\n                this.diffViewer.runtimeProps.filepath || 'merged-file'\n            );\n\n            // Use ModalManager to set content and open modal\n            this.modalManager.setContent(\n                Selectors.MODAL.PREVIEW.name(),\n                formattedContent,\n                Selectors.MODAL.PREVIEW_CONTENT_ID.name()\n            );\n\n            // Create controls container\n            const controlsContainer = document.createElement('div');\n            controlsContainer.classList.add(Selectors.UTILITY.FLEX.name(),\n                                           Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name(),\n                                           Selectors.UTILITY.MARGIN_TOP_2.name(),\n                                           Selectors.UTILITY.PADDING_2.name());\n\n            // Create message area\n            const messageArea = document.createElement('div');\n            messageArea.id = 'merge-preview-message';\n            messageArea.classList.add(Selectors.UTILITY.FLEX.name(),\n                                     Selectors.UTILITY.ALIGN_ITEMS_CENTER.name());\n            controlsContainer.appendChild(messageArea);\n\n            // Open the modal\n            this.modalManager.open(Selectors.MODAL.PREVIEW.name());\n\n            // Apply syntax highlighting if available\n            this.applySyntaxHighlighting();\n\n            // Add copy buttons to code blocks\n            CopyButton.addCopyButtonsToPreview(Selectors.MODAL.PREVIEW_CONTENT_ID.name());\n\n            Debug.log('MergePreviewManager: Preview opened successfully', null, 2);\n        } catch (error) {\n            // Hide loading indicator in case of error\n            loaderManager.hideLoader(loaderId);\n\n            Debug.error('MergePreviewManager: Error during preview:', error, 2);\n            this.showPreviewError(error);\n        }\n    }\n\n    /**\n     * Apply syntax highlighting to preview content\n     * Uses highlight.js if available\n     */\n    applySyntaxHighlighting() {\n        if (!window.hljs) {\n            Debug.log('MergePreviewManager: Highlight.js not available', null, 3);\n            return;\n        }\n\n        try {\n            // Use DOMUtils to get the preview element\n            const preElement = DOMUtils.getElement(Selectors.MODAL.PREVIEW_CONTENT_ID.name())?.querySelector('pre');\n            const codeElement = preElement?.querySelector('code');\n\n            if (!codeElement) {\n                Debug.warn('MergePreviewManager: No code element found for highlighting', null, 2);\n                return;\n            }\n\n            // Apply syntax highlighting\n            window.hljs.highlightElement(codeElement);\n\n            // Add line numbers if the pre element has the data-line-numbers attribute\n            if (preElement.getAttribute('data-line-numbers') === 'true' && window.hljs.lineNumbersBlock) {\n                window.hljs.lineNumbersBlock(codeElement);\n                Debug.log('MergePreviewManager: Line numbers added to preview', null, 3);\n            }\n\n            Debug.log('MergePreviewManager: Syntax highlighting applied', null, 3);\n        } catch (error) {\n            Debug.warn('MergePreviewManager: Error applying syntax highlighting:', error, 2);\n        }\n    }\n\n    /**\n     * Show error in preview modal\n     * @param {Error} error - Error object\n     */\n    showPreviewError(error) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        const escapedError = StringUtils.escapeHtml(errorMessage);\n\n        // First clear the modal content\n        this.modalManager.setContent(\n            Selectors.MODAL.PREVIEW.name(),\n            '',\n            Selectors.MODAL.PREVIEW_CONTENT_ID.name()\n        );\n\n        // Then use DOMUtils to show the message\n        DOMUtils.showMessage(\n            Selectors.MODAL.PREVIEW_CONTENT_ID.name(),\n            `<h4>Error Generating Preview</h4><p>${escapedError}</p>`,\n            'danger',\n            { className: '' } // No margin in modal\n        );\n\n        this.modalManager.open(Selectors.MODAL.PREVIEW.name());\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { MergeContentFormatter } from '../../utils/MergeContentFormatter';\nimport { NavigationUtils } from '../../utils/NavigationUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Controls merge UI elements and interactions\n */\nexport class MergeUIController {\n    /**\n     * Initialize UI controller\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n        this.modalManager = mergeHandler.modalManager;\n        this.translationManager = TranslationManager.getInstance();\n\n        // UI element references\n        this.mergeDestination = null;\n        this.mergeToggleBtn = null;\n        this.mergeToggleIcon = null;\n        this.mergeToggleText = null;\n    }\n\n    /**\n     * Initialize UI elements and event handlers\n     */\n    initialize() {\n        // Initialize merge destination toggle\n        this.initMergeDestinationToggle();\n\n        // Set up modal buttons\n        this.setupModalButtons();\n\n        // Set up apply merge button\n        this.setupApplyMergeButton();\n\n        Debug.log('MergeUIController: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize merge destination toggle\n     */\n    initMergeDestinationToggle() {\n        // Get the necessary elements\n        this.mergeDestination = DOMUtils.getElement(Selectors.MERGE.DESTINATION_DROPDOWN);\n        this.mergeToggleBtn = DOMUtils.getElement(Selectors.MERGE.DESTINATION_TOGGLE);\n\n        // Get toggle icon and text by proper IDs, not using name()\n        this.mergeToggleIcon = document.getElementById('vdm-merge-controls__toggle-icon');\n        this.mergeToggleText = document.getElementById('vdm-merge-controls__toggle-text');\n\n        if (!this.mergeDestination || !this.mergeToggleBtn) {\n            Debug.warn('MergeUIController: Missing merge destination elements', null, 2);\n            return;\n        }\n\n        // Explicitly set type=\"button\" on toggle button to prevent form submission\n        if (this.mergeToggleBtn) {\n            this.mergeToggleBtn.setAttribute('type', 'button');\n        }\n\n        // ALWAYS populate the dropdown options regardless of current state\n        // This ensures configuration-based options are always used\n        Debug.log('MergeUIController: Populating merge destination options', null, 2);\n        this.populateMergeDestinations();\n\n        // Load saved preference or default to 'new'\n        const savedDestination = localStorage.getItem('preferredMergeDestination') || 'new';\n\n        // Ensure the value exists in the dropdown\n        let valueExists = false;\n        for (let i = 0; i < this.mergeDestination.options.length; i++) {\n            if (this.mergeDestination.options[i].value === savedDestination) {\n                valueExists = true;\n                break;\n            }\n        }\n\n        // Set the value if it exists, otherwise use the first option\n        if (valueExists) {\n            this.mergeDestination.value = savedDestination;\n        } else if (this.mergeDestination.options.length > 0) {\n            this.mergeDestination.selectedIndex = 0;\n        }\n\n        Debug.log(`MergeUIController: Initial merge destination set to ${this.mergeDestination.value}`, null, 2);\n\n        // Set up event handlers\n        this.setupMergeToggleEvents();\n\n        Debug.log('MergeUIController: Merge destination toggle initialized', null, 2);\n    }\n\n    /**\n     * Populate merge destination dropdown\n     */\n    populateMergeDestinations() {\n        // Get runtime properties\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Get diffData which contains file information\n        const diffData = runtimeProps.diffData || {};\n\n        // Get filenames from the appropriate sources using the new pattern (no server paths)\n        // Prefer new secure properties (newFileName, oldFileName) that only contain the filename\n        const newFileName = runtimeProps.newFileName || diffData.new?.filename || runtimeProps.filepath?.split('/').pop() || 'new-file';\n        const oldFileName = runtimeProps.oldFileName || diffData.old?.filename || 'old-file';\n\n        // Clean filenames - ensure we're only using the basename without any path components\n        const newFile = newFileName.split(/[\\/\\\\]/).pop();\n        const oldFile = oldFileName.split(/[\\/\\\\]/).pop();\n\n        Debug.log('MergeUIController: File names for merge destinations', {\n            newFileName,\n            oldFileName,\n            newFile,\n            oldFile\n        }, 3);\n\n        // Create merged filenames\n        const newFileWithoutExt = newFile.substring(0, newFile.lastIndexOf('.')) || newFile;\n        const oldFileWithoutExt = oldFile.substring(0, oldFile.lastIndexOf('.')) || oldFile;\n        const newFileExt = newFile.substring(newFile.lastIndexOf('.')) || '';\n        const oldFileExt = oldFile.substring(oldFile.lastIndexOf('.')) || '';\n\n        const newMergedFile = `${newFileWithoutExt}-merged${newFileExt}`;\n        const oldMergedFile = `${oldFileWithoutExt}-merged${oldFileExt}`;\n\n        // Get configuration for enabled save options\n        const config = this.diffViewer.getConfig();\n        const saveOptions = config?.saveOptions || {\n            saveToOriginal: true,\n            saveWithSuffix: true,\n            saveToOld: true,\n            saveToOldWithSuffix: true,\n            saveToBoth: true,\n            saveToBothWithSuffix: true\n        };\n\n        Debug.log('MergeUIController: Save options configuration', saveOptions, 3);\n\n        // IMPORTANT: Always clear ALL existing options to ensure we start fresh\n        while (this.mergeDestination.options.length > 0) {\n            this.mergeDestination.remove(0);\n        }\n\n        // Alternative method to clear options for cross-browser compatibility\n        this.mergeDestination.innerHTML = '';\n\n        Debug.log('MergeUIController: Cleared existing dropdown options', null, 3);\n\n        let optionCount = 0;\n\n        // Add options based on configuration\n        if (saveOptions.saveToOriginal) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new',\n                    'data-tooltip': this.translationManager.get('saveToOriginalTooltip', 'Replace the current file with merged content')\n                },\n                content: `${newFile} (new)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new-suffix',\n                    'data-tooltip': this.translationManager.get('saveWithSuffixTooltip', 'Save merged content as a new file with -merged suffix')\n                },\n                content: `${newMergedFile} (new)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToOld) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'old',\n                    'data-tooltip': this.translationManager.get('saveToOldTooltip', 'Replace the old file with merged content')\n                },\n                content: `${oldFile} (old)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToOldWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'old-suffix',\n                    'data-tooltip': this.translationManager.get('saveToOldWithSuffixTooltip', 'Save merged content as a new file with -merged suffix in old location')\n                },\n                content: `${oldMergedFile} (old)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToBoth) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'both',\n                    'data-tooltip': this.translationManager.get('saveToBothTooltip', 'Replace both old and new files with merged content')\n                },\n                content: this.translationManager.get('saveToBoth', 'Overwrite both files')\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToBothWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'both-suffix',\n                    'data-tooltip': this.translationManager.get('saveToBothWithSuffixTooltip', 'Save merged content as new files with -merged suffix in both locations')\n                },\n                content: this.translationManager.get('saveToBothWithSuffix', 'Save to both with suffix')\n            });\n            optionCount++;\n        }\n\n        // If no options were added (all disabled), add at least the default option\n        if (optionCount === 0) {\n            Debug.log('MergeUIController: No save options enabled, adding default option', null, 2);\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new',\n                    'data-tooltip': this.translationManager.get('saveToOriginalTooltip', 'Replace the current file with merged content')\n                },\n                content: `${newFile} (new)`\n            });\n            optionCount = 1;\n        }\n\n        Debug.log(`MergeUIController: Populated merge destinations with ${optionCount} options`, null, 2);\n    }\n\n    /**\n     * Set up merge toggle button events\n     */\n    setupMergeToggleEvents() {\n        // Create event handlers\n        const toggleHandler = (event) => {\n            // Prevent default action and stop propagation\n            event.preventDefault();\n            event.stopPropagation();\n\n            // We need a better approach to open the dropdown - the current method doesn't work in all browsers\n            if (this.mergeDestination) {\n                // Instead of trying to simulate a click, make the dropdown visible\n                // First, directly focus the element to prepare it\n                this.mergeDestination.focus();\n\n                // If the browser supports it, use the showPicker method\n                if (typeof this.mergeDestination.showPicker === 'function') {\n                    try {\n                        this.mergeDestination.showPicker();\n                        Debug.log('MergeUIController: Opened dropdown using showPicker()', null, 3);\n                        return;\n                    } catch (e) {\n                        Debug.log('MergeUIController: showPicker() failed, trying alternative method', e, 2);\n                    }\n                }\n\n                // Alternative: Use a small delay and click to open\n                setTimeout(() => {\n                    try {\n                        // Create and dispatch a mouse event\n                        const clickEvent = new MouseEvent('mousedown', {\n                            bubbles: true,\n                            cancelable: true,\n                            view: window\n                        });\n                        this.mergeDestination.dispatchEvent(clickEvent);\n                    } catch (e) {\n                        Debug.log('MergeUIController: Failed to open dropdown with click event', e, 2);\n                    }\n                }, 10);\n\n                // If all else fails, make the select element very noticeable to prompt user interaction\n                this.mergeDestination.classList.add('vdm-dropdown-highlight');\n                setTimeout(() => {\n                    this.mergeDestination.classList.remove('vdm-dropdown-highlight');\n                }, 1000);\n            }\n\n            Debug.log('MergeUIController: Toggle button clicked, attempting to open dropdown', null, 3);\n        };\n\n        const changeHandler = () => {\n            // Update appearance and save preference\n            this.updateMergeToggle(this.mergeDestination.value);\n            localStorage.setItem('preferredMergeDestination', this.mergeDestination.value);\n\n            Debug.log(`MergeUIController: Selection changed to ${this.mergeDestination.value}`, null, 3);\n        };\n\n        // Remove any existing listeners using cloneNode\n        const newToggleBtn = this.mergeToggleBtn.cloneNode(true);\n        const newMergeDestination = this.mergeDestination.cloneNode(true);\n\n        // Replace elements - Add null checks to prevent errors when elements don't exist in DOM\n        if (this.mergeToggleBtn && this.mergeToggleBtn.parentNode) {\n            this.mergeToggleBtn.parentNode.replaceChild(newToggleBtn, this.mergeToggleBtn);\n        }\n\n        if (this.mergeDestination && this.mergeDestination.parentNode) {\n            this.mergeDestination.parentNode.replaceChild(newMergeDestination, this.mergeDestination);\n        }\n\n        // Update references\n        this.mergeToggleBtn = newToggleBtn;\n        this.mergeDestination = newMergeDestination;\n\n        // Add the icon and text elements if they're now missing\n        if (!this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-icon')) {\n            this.mergeToggleIcon = DOMUtils.createAndAppendElement('i', this.mergeToggleBtn, {\n                id: 'vdm-merge-controls__toggle-icon',\n            });\n            this.mergeToggleBtn.insertBefore(this.mergeToggleIcon, this.mergeToggleBtn.firstChild);\n        } else {\n            this.mergeToggleIcon = this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-icon');\n        }\n\n        if (!this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-text')) {\n            this.mergeToggleText = DOMUtils.createAndAppendElement('span', this.mergeToggleBtn, {\n                id: 'vdm-merge-controls__toggle-text'\n            });\n        } else {\n            this.mergeToggleText = this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-text');\n        }\n\n        // Enhance dropdown appearance to make it more visible\n        this.mergeDestination.classList.add('vdm-dropdown-visible');\n        this.mergeDestination.style.cursor = 'pointer';\n\n        // Add a small down arrow icon to the toggle button to indicate it opens a dropdown\n        const dropdownIcon = document.createElement('span');\n        dropdownIcon.className = Selectors.UTILITY.MARGIN_START_2.name(); // Using the correct end start class\n        dropdownIcon.innerHTML = DOMUtils.getIconHtml('chevron-down', { width: 10, height: 10 });\n        this.mergeToggleBtn.appendChild(dropdownIcon);\n\n        // Add event listeners to both the toggle button and dropdown\n        this.mergeToggleBtn.addEventListener('click', toggleHandler);\n        this.mergeDestination.addEventListener('change', changeHandler);\n\n        // Make the dropdown more interactive and visible\n        this.mergeDestination.style.paddingRight = '1.5rem';\n        this.mergeDestination.style.appearance = 'menulist';\n        this.mergeDestination.style.cursor = 'pointer';\n\n        // Add tooltip to the dropdown\n        this.mergeDestination.title = 'Click to select where to save the merged content';\n\n        // Make the dropdown more easily clickable and indicate it's interactive\n        this.mergeDestination.addEventListener('mouseover', () => {\n            this.mergeDestination.style.borderColor = 'var(--vdm-primary, #0d6efd)';\n        });\n        this.mergeDestination.addEventListener('mouseout', () => {\n            this.mergeDestination.style.borderColor = 'var(--vdm-border-color, #495057)';\n        });\n\n        // Re-apply the toggle styling AFTER cloning\n        this.updateMergeToggle(this.mergeDestination.value);\n    }\n\n    /**\n     * Update merge toggle button appearance\n     */\n    updateMergeToggle(value) {\n        // Define color classes for different destination types\n        const newFileColorClass = 'vdm-text-primary'; // Purple for new file destinations\n        const oldFileColorClass = 'vdm-text-warning'; // Amber for old file destinations\n        const bothFilesColorClass = 'vdm-text-info';  // Turquoise for both files destinations\n\n        // Define button style classes that match the color theme\n        const newFileBtnClass = Selectors.UTILITY.BUTTON_PRIMARY.name(); // Purple button\n        const oldFileBtnClass = Selectors.UTILITY.BUTTON_WARNING.name(); // Amber button\n        const bothFilesBtnClass = Selectors.UTILITY.BUTTON_INFO.name();  // Turquoise button\n\n        // Create single SVG icon HTML for each destination state with appropriate color class\n        // Always use a single icon per destination type with color indicating the destination\n        let iconHtml = '';\n        let colorClass = '';\n        let buttonClass = '';\n\n        // Determine icon, color class, and button class based on destination type\n        switch (value) {\n            case 'new':\n            case 'new-suffix':\n                // New file destinations use file icon with primary color\n                iconHtml = 'file';\n                colorClass = newFileColorClass;\n                buttonClass = newFileBtnClass;\n                break;\n\n            case 'old':\n            case 'old-suffix':\n                // Old file destinations use file-lines icon with warning color\n                iconHtml = 'file-lines';\n                colorClass = oldFileColorClass;\n                buttonClass = oldFileBtnClass;\n                break;\n\n            case 'both':\n            case 'both-suffix':\n                // Both files destinations use file-copy icon with info color\n                iconHtml = 'file-copy';\n                colorClass = bothFilesColorClass;\n                buttonClass = bothFilesBtnClass;\n                break;\n\n            default:\n                // Default to new file icon with primary color\n                iconHtml = 'file';\n                colorClass = newFileColorClass;\n                buttonClass = newFileBtnClass;\n                break;\n        }\n\n        // Generate the icon HTML with proper classes\n        const iconClasses = `${Selectors.UTILITY.MARGIN_END_1.name()} ${colorClass}`;\n        this.mergeToggleIcon.innerHTML = DOMUtils.getIconHtml(iconHtml, { classes: iconClasses });\n\n        // Update the Apply Merge button style to match the destination\n        const applyButton = document.getElementById(Selectors.MERGE.BUTTON_APPLY.name());\n        if (applyButton) {\n            // Remove any existing button style classes\n            applyButton.classList.remove(\n                Selectors.UTILITY.BUTTON_PRIMARY.name(),\n                Selectors.UTILITY.BUTTON_WARNING.name(),\n                Selectors.UTILITY.BUTTON_INFO.name(),\n                Selectors.UTILITY.BUTTON_SUCCESS.name(),\n                Selectors.UTILITY.BUTTON_DANGER.name(),\n                Selectors.UTILITY.BUTTON_SECONDARY.name()\n            );\n\n            // Add the appropriate button style class\n            applyButton.classList.add(buttonClass);\n\n            Debug.log(`MergeUIController: Updated apply button style to ${buttonClass}`, null, 3);\n        }\n\n        // Update text content based on the destination value\n        switch (value) {\n            case 'new':\n                // Save to new file (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOriginal', 'Save to original');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOriginalTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new');\n                break;\n\n            case 'new-suffix':\n                // Save to new file with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveWithSuffix', 'Save with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new-suffix');\n                break;\n\n            case 'old':\n                // Save to old file (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOld', 'Save to old file');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOldTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'old');\n                break;\n\n            case 'old-suffix':\n                // Save to old file with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOldWithSuffix', 'Save to old with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOldWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'old-suffix');\n                break;\n\n            case 'both':\n                // Save to both files (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToBoth', 'Save to both files');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToBothTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'both');\n                break;\n\n            case 'both-suffix':\n                // Save to both files with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveToBothWithSuffix', 'Save to both with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToBothWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'both-suffix');\n                break;\n\n            default:\n                // Default to 'new' if value is not recognized\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOriginal', 'Save to original');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOriginalTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new');\n                break;\n        }\n\n        Debug.log(`MergeUIController: Toggle updated to ${value}`, null, 3);\n    }\n\n    /**\n     * Set up modal buttons\n     */\n    setupModalButtons() {\n        // Add a direct event listener to the document for clicks on modal buttons\n        document.addEventListener('click', (event) => {\n            // Handle continue merging button\n            if (event.target.closest && event.target.closest(`#${Selectors.MODAL.CONTINUE_BTN.name()}`)) {\n                Debug.log('MergeUIController: Continue merging button clicked via delegation', null, 2);\n                this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                // Also close the preview modal - use MODAL.PREVIEW instead of MERGE.PREVIEW_MODAL\n                const previewModalId = Selectors.MODAL.PREVIEW.name();\n                Debug.log(`MergeUIController: Also closing preview modal (ID: ${previewModalId})`, null, 1);\n                this.modalManager.close(previewModalId);\n\n                setTimeout(() => {\n                    this.highlightUnresolvedChunks();\n                }, 400);\n            }\n\n            // Handle merge anyway button\n            if (event.target.closest && event.target.closest(`#${Selectors.MODAL.MERGE_BTN.name()}`)) {\n                Debug.log('MergeUIController: Merge anyway button clicked via delegation', null, 2);\n                this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                this.mergeHandler.proceedWithMerge(this.getMergeType());\n            }\n        });\n\n        // For compatibility, still register the before-open callback as well\n        if (this.modalManager && typeof this.modalManager.registerBeforeOpenCallback === 'function') {\n            this.modalManager.registerBeforeOpenCallback(Selectors.MERGE.CONFLICT_MODAL.name(), () => {\n                // Log the presence of the buttons when the modal opens\n                const continueBtn = document.getElementById(Selectors.MODAL.CONTINUE_BTN.name());\n                const mergeBtn = document.getElementById(Selectors.MODAL.MERGE_BTN.name());\n\n                Debug.log(`MergeUIController: Modal opened, buttons present: continueBtn=${!!continueBtn}, mergeBtn=${!!mergeBtn}`, null, 2);\n\n                // Add direct click handlers (as a backup)\n                if (continueBtn) {\n                    continueBtn.onclick = () => {\n                        Debug.log('MergeUIController: Continue merging clicked via direct handler', null, 2);\n                        this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                        // Also close the preview modal - use MODAL.PREVIEW instead of MERGE.PREVIEW_MODAL\n                        const previewModalId = Selectors.MODAL.PREVIEW.name();\n                        Debug.log(`MergeUIController: Also closing preview modal (ID: ${previewModalId})`, null, 1);\n                        this.modalManager.close(previewModalId);\n\n                        setTimeout(() => {\n                            this.highlightUnresolvedChunks();\n                        }, 400);\n                        return false; // Prevent default\n                    };\n                }\n\n                if (mergeBtn) {\n                    mergeBtn.onclick = () => {\n                        Debug.log('MergeUIController: Merge anyway clicked via direct handler', null, 2);\n                        this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                        this.mergeHandler.proceedWithMerge(this.getMergeType());\n                        return false; // Prevent default\n                    };\n                }\n            });\n        }\n    }\n\n    /**\n     * Set up apply merge button\n     */\n    setupApplyMergeButton() {\n        // Get the Apply Merge button\n        const applyButton = document.getElementById(Selectors.MERGE.BUTTON_APPLY.name());\n        if (!applyButton) {\n            Debug.warn('MergeUIController: Apply merge button not found', null, 2);\n            return;\n        }\n\n        // Get the merge controls actions container\n        const mergeControlsActions = document.querySelector(Selectors.MERGE.CONTROLS_ACTIONS.toString());\n        if (!mergeControlsActions) {\n            Debug.warn('MergeUIController: Merge controls container not found', null, 2);\n            return;\n        }\n\n        // Get the merge destination dropdown and toggle button\n        const destinationDropdown = document.getElementById(Selectors.MERGE.DESTINATION_DROPDOWN.name());\n        const toggleButton = document.getElementById(Selectors.MERGE.DESTINATION_TOGGLE.name());\n\n        // Create a form element to wrap the merge controls\n        const form = document.createElement('form');\n        form.id = 'vdm-merge__form';\n        form.className = mergeControlsActions.className;\n        form.style.display = 'flex';\n        form.style.justifyContent = 'space-between';\n        form.style.width = '100%';\n\n        // Replace the merge controls actions container with the form\n        if (mergeControlsActions.parentNode) {\n            mergeControlsActions.parentNode.replaceChild(form, mergeControlsActions);\n\n            // Move all content from the original container to the form\n            while (mergeControlsActions.firstChild) {\n                form.appendChild(mergeControlsActions.firstChild);\n            }\n\n            // Make sure the dropdown is inside the form by checking if it exists but is outside\n            if (destinationDropdown && !form.contains(destinationDropdown)) {\n                const destinationContainer = document.querySelector('.vdm-merge-controls__destination');\n                if (destinationContainer) {\n                    form.insertBefore(destinationContainer, form.firstChild);\n                }\n            }\n\n            Debug.log('MergeUIController: Created form wrapper for merge controls', null, 2);\n        }\n\n        // Listen for form submission instead of button click\n        form.addEventListener('submit', (event) => {\n            event.preventDefault();\n            this.handleApplyMerge();\n            Debug.log('MergeUIController: Form submitted', null, 3);\n        });\n\n        // Important: Prevent the toggle button from submitting the form\n        if (toggleButton) {\n            toggleButton.type = 'button'; // Explicitly set type to 'button' to prevent form submission\n\n            // Add a click handler that stops propagation\n            toggleButton.addEventListener('click', (event) => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // The toggle logic is already in setupMergeToggleEvents\n                // This is just to prevent form submission\n                Debug.log('MergeUIController: Toggle button click intercepted to prevent form submission', null, 3);\n            });\n        }\n\n        // For backwards compatibility, also keep the button click handler\n        applyButton.addEventListener('click', (event) => {\n            event.preventDefault();\n            // Validate that the button is inside the form\n            if (applyButton.form) {\n                applyButton.form.dispatchEvent(new Event('submit'));\n            } else {\n                this.handleApplyMerge();\n            }\n            Debug.log('MergeUIController: Apply merge clicked', null, 3);\n        });\n    }\n\n    /**\n     * Handle the apply merge button click\n     */\n    handleApplyMerge() {\n        // Count unresolved conflicts\n        const unresolvedCount = this.countUnresolvedConflicts();\n\n        if (unresolvedCount > 0) {\n            this.showConflictModal(unresolvedCount);\n        } else {\n            // Check if we're in file-browser mode or not by checking for fileRefId\n            const runtimeProps = this.diffViewer.getRuntimeProps();\n            const fileRefId = runtimeProps.fileRefId || '';\n            const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n            // If neither fileRefId exists, we're in a non-file-browser mode\n            // (text-compare, url-compare, file-upload)\n            if (!fileRefId && !oldFileRefId) {\n                // Use 'clipboard' merge type for non-file-browser modes\n                Debug.log('MergeUIController: Using clipboard merge type for non-file-browser mode', null, 2);\n                this.mergeHandler.proceedWithMerge('clipboard');\n            } else {\n                // Use selected merge type for file-browser mode\n                Debug.log('MergeUIController: Using selected merge type for file-browser mode', null, 2);\n                this.mergeHandler.proceedWithMerge(this.getMergeType());\n            }\n        }\n    }\n\n    /**\n     * Count unresolved conflicts\n     * @returns {number} Number of unresolved conflicts\n     */\n    countUnresolvedConflicts() {\n        const conflictChunks = this.diffViewer.chunkManager.chunks.filter(c => c.conflict);\n        const selections = this.diffViewer.chunkManager.selections || {};\n        return conflictChunks.length - Object.keys(selections).length;\n    }\n\n    /**\n     * Show conflict resolution modal\n     * @param {number} unresolvedCount - Number of unresolved conflicts\n     */\n    showConflictModal(unresolvedCount) {\n        // Get translations from config\n        const translations = this.diffViewer.getConfig().translations || {};\n\n        // Set message about unresolved conflicts\n        const message = MergeContentFormatter.formatUnresolvedCount(unresolvedCount, translations);\n\n        // Open the conflict modal\n        this.modalManager.open(Selectors.MERGE.CONFLICT_MODAL.name());\n\n        // Set the message in the modal\n        setTimeout(() => {\n            DOMUtils.showMessage(Selectors.MODAL.MESSAGE.name(), message, 'warning', {\n                className: '' // No extra margin needed in modal\n            });\n            Debug.log('MergeUIController: Showing conflict modal with message', null, 2);\n        }, 50);\n\n        // Attach event handlers to buttons with a small delay to ensure the modal is fully rendered\n        setTimeout(() => {\n            const continueBtn = document.getElementById(Selectors.MODAL.CONTINUE_BTN.name());\n            const mergeBtn = document.getElementById(Selectors.MODAL.MERGE_BTN.name());\n\n            // Handle the Continue button\n            if (continueBtn) {\n                // Remove any existing handlers by cloning\n                const newContinueBtn = continueBtn.cloneNode(true);\n                continueBtn.parentNode.replaceChild(newContinueBtn, continueBtn);\n\n                // Add direct, simplified handler\n                newContinueBtn.addEventListener('click', () => {\n                    Debug.log('MergeUIController: Continue button clicked', null, 2);\n\n                    // First close the conflict modal\n                    this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                    // Then close the preview modal\n                    const previewModalId = Selectors.MODAL.PREVIEW.name();\n                    Debug.log(`MergeUIController: Closing preview modal (ID: ${previewModalId})`, null, 2);\n                    this.modalManager.close(previewModalId);\n\n                    // Highlight any unresolved chunks after a delay\n                    setTimeout(() => {\n                        this.highlightUnresolvedChunks();\n                    }, 400);\n                });\n            }\n\n            // Handle the Merge Anyway button\n            if (mergeBtn) {\n                // Remove any existing handlers by cloning\n                const newMergeBtn = mergeBtn.cloneNode(true);\n                mergeBtn.parentNode.replaceChild(newMergeBtn, mergeBtn);\n\n                // Add direct, simplified handler\n                newMergeBtn.addEventListener('click', () => {\n                    Debug.log('MergeUIController: Merge anyway button clicked', null, 2);\n                    this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                    this.mergeHandler.proceedWithMerge(this.getMergeType());\n                });\n            }\n        }, 50);\n    }\n\n    /**\n     * Get current merge type from UI\n     * @returns {string} Merge type ('original' or 'new')\n     */\n    getMergeType() {\n        return this.mergeDestination?.value || 'original';\n    }\n\n    /**\n     * Highlight unresolved chunks\n     * @returns {boolean} True if any chunk was highlighted\n     */\n    highlightUnresolvedChunks() {\n        Debug.log('MergeUIController: Finding first unresolved conflict', null, 2);\n\n        // Get all chunks and current selections\n        const chunks = this.diffViewer.chunkManager.chunks;\n        const selections = this.diffViewer.chunkManager.selections || {};\n\n        // Find the first unresolved chunk\n        for (const chunk of chunks) {\n            if (chunk.conflict && !selections[chunk.id]) {\n                // Use DiffNavigator to navigate to this chunk\n                const chunkIndex = chunks.indexOf(chunk);\n                if (this.diffViewer.diffNavigator) {\n                    // First navigate to the chunk\n                    this.diffViewer.diffNavigator.navigateToChunk(chunkIndex);\n\n                    // Then highlight the chunk element using imported NavigationUtils\n                    const chunkElement = document.querySelector(`[data-chunk-id=\"${chunk.id}\"]`);\n                    if (chunkElement) {\n                        NavigationUtils.addHighlightEffect(chunkElement, 4000);\n                    }\n\n                    Debug.log(`MergeUIController: Highlighted unresolved chunk ${chunk.id}`, null, 2);\n                    return true;\n                }\n            }\n        }\n\n        Debug.log('MergeUIController: No unresolved conflicts found', null, 2);\n        return false;\n    }\n\n    /**\n     * Setup local-only controls when server save is disabled\n     * This creates a simplified UI with just the \"Get merged result\" button\n     */\n    setupLocalOnlyControls() {\n        Debug.log('MergeUIController: Setting up local-only controls (server save disabled)', null, 2);\n\n        // Get translations using the TranslationManager\n        Debug.log('MergeUIController: Getting translations for local-only controls', this.translationManager, 2);\n        const getMergedResultText = this.translationManager.get('getMergedResult', 'Get Merged Result');\n        const getMergedResultTooltip = this.translationManager.get('getMergedResultTooltip', 'View and download the merged content');\n\n        // Find the merge controls container\n        const mergeControlsActions = document.querySelector(Selectors.MERGE.CONTROLS_ACTIONS.toString());\n\n        if (!mergeControlsActions) {\n            Debug.error('MergeUIController: Could not find merge controls container', null, 1);\n            return;\n        }\n\n        // Clear any existing content from the container to ensure we only have our button\n        mergeControlsActions.innerHTML = '';\n\n        // Create the \"Get merged result\" button\n        const getMergedResultBtn = document.createElement('button');\n        getMergedResultBtn.id = Selectors.MERGE.GET_MERGED_RESULT_BTN.name();\n        getMergedResultBtn.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`;\n        getMergedResultBtn.title = getMergedResultTooltip;\n\n        // Add download icon and text using the proper icon system\n        const downloadIconHtml = DOMUtils.getIconHtml('download', { classes: Selectors.UTILITY.MARGIN_END_1.name() });\n        getMergedResultBtn.innerHTML = `${downloadIconHtml} ${getMergedResultText}`;\n\n        // Add to container (align to right)\n        const buttonContainer = document.createElement('div');\n        buttonContainer.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} w-100`;\n        buttonContainer.style.width = '100%';\n\n        // Add a spacer on the left to push the button to the right\n        const spacer = document.createElement('div');\n        spacer.style.flex = '1';\n\n        buttonContainer.appendChild(spacer);\n        buttonContainer.appendChild(getMergedResultBtn);\n        mergeControlsActions.appendChild(buttonContainer);\n\n        // Add event handler to show the preview content when clicked\n        getMergedResultBtn.addEventListener('click', (event) => {\n            event.preventDefault();\n\n            // Use 'clipboard' merge type for non-file-browser modes\n            this.mergeHandler.proceedWithMerge('clipboard');\n\n            Debug.log('MergeUIController: Get merged result button clicked (using clipboard merge type)', null, 2);\n        });\n\n        Debug.log('MergeUIController: Local-only controls setup complete', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { BaseSingleton } from '../../utils/BaseSingleton';\nimport Selectors from '../../constants/Selectors';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * Lightweight standalone modal manager without external dependencies\n */\nexport class ModalManager extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @param {Object} options - Configuration options (only used during first initialization)\n     * @returns {ModalManager} The singleton instance\n     */\n    static getInstance(options = {}) {\n        if (!instance) {\n            instance = new ModalManager(options);\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        super();\n\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        this.options = {\n            debug: false,\n            translations: {},\n            ...options\n        };\n\n        this.modals = {};\n        this.activeModal = null;\n        this.initialized = false;\n\n        Debug.log('ModalManager: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize modals by creating the necessary HTML\n     * @returns {boolean} Success status\n     */\n    initModals() {\n        try {\n            if (this.initialized) {\n                Debug.log('ModalManager: Already initialized', null, 2);\n                return true;\n            }\n\n            const translationManager = TranslationManager.getInstance();\n\n            // Create confirm modal\n            this.createModal({\n                id: Selectors.MODAL.CONFIRM.name(),\n                title: translationManager.get('confirmation'),\n                contentId: Selectors.MODAL.MESSAGE.name(),\n                contentClass: Selectors.UTILITY.PADDING_3.name(),\n                footerButtons: [\n                    {\n                        id: Selectors.MODAL.CONTINUE_BTN.name(),\n                        text: translationManager.get('continueResolving'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_PRIMARY.name() + ' ' + Selectors.UTILITY.MARGIN_END_2.name()\n                    },\n                    {\n                        id: Selectors.MODAL.MERGE_BTN.name(),\n                        text: translationManager.get('mergeAnyway'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_WARNING.name()\n                    }\n                ]\n            });\n\n            // Create preview modal\n            this.createModal({\n                id: Selectors.MODAL.PREVIEW.name(),\n                title: '<span id=\"' + Selectors.MODAL.PREVIEW_FILENAME.name() + '\"></span>',\n                contentId: Selectors.MODAL.PREVIEW_CONTENT_ID.name(),\n                contentClass: Selectors.MODAL.PREVIEW_CONTENT.name(),\n                headerClass: Selectors.MODAL.HEADER_FIXED.name(),\n                modalClass: 'vdm-modal--fixed-footer',\n                fullscreen: true\n            });\n\n            // Create conflict modal\n            this.createModal({\n                id: Selectors.MERGE.CONFLICT_MODAL.name(),\n                title: translationManager.get('unresolvedConflicts'),\n                contentId: Selectors.MODAL.MESSAGE.name(),\n                contentClass: Selectors.UTILITY.PADDING_3.name(),\n                footerButtons: [\n                    {\n                        id: Selectors.MODAL.CONTINUE_BTN.name(),\n                        text: translationManager.get('continueResolving'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_PRIMARY.name() + ' ' + Selectors.UTILITY.MARGIN_END_2.name()\n                    },\n                    {\n                        id: Selectors.MODAL.MERGE_BTN.name(),\n                        text: translationManager.get('mergeAnyway'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_WARNING.name()\n                    }\n                ]\n            });\n\n            // Add event listeners for close buttons, backdrop clicks, etc.\n            this._setupEventListeners();\n\n            this.initialized = true;\n            Debug.log('ModalManager: Modals initialized', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ModalManager: Error initializing modals', error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Create a modal with the specified configuration\n     * @param {Object} config - Modal configuration\n     * @param {string} config.id - Modal ID (without # prefix)\n     * @param {string} config.title - Modal title (can include HTML)\n     * @param {string} [config.contentId] - ID for the content container (without # prefix)\n     * @param {string} [config.contentClass] - CSS class for the content container\n     * @param {string} [config.modalClass] - Additional CSS class for the modal\n     * @param {string} [config.headerClass] - CSS class for the header (overrides default)\n     * @param {Array} [config.footerButtons] - Array of button configurations\n     * @param {boolean} [config.fullscreen] - Whether to make the modal fullscreen\n     * @param {Object} [config.events] - Custom event handlers for modal elements\n     * @param {Object} [config.attr] - Additional attributes to add to the modal element\n     * @returns {boolean} Success status\n     */\n    createModal(config) {\n        try {\n            const modalId = config.id;\n\n            // Check if modal already exists in DOM\n            if (document.getElementById(modalId)) {\n                Debug.log(`ModalManager: Modal ${modalId} already exists in DOM`, null, 2);\n                return true;\n            }\n\n            // Use header class from config or default to MODAL.HEADER with prefix removed\n            const headerClass = config.headerClass || Selectors.MODAL.HEADER.name();\n\n            // Start building modal HTML\n            let modalHtml = `\n                <div id=\"${modalId}\" class=\"${Selectors.MODAL.CONTAINER.name()/*remove dot prefix*/}${config.modalClass ? ' ' + config.modalClass : ''}\" style=\"display: none;\"`;\n\n            // Add additional attributes if provided\n            if (config.attr) {\n                Object.entries(config.attr).forEach(([key, value]) => {\n                    modalHtml += ` ${key}=\"${value}\"`;\n                });\n            }\n\n            modalHtml += `>\n                    <div class=\"${Selectors.MODAL.CONTENT.name()}\">\n                        <div class=\"${headerClass}\">\n                            <h5 class=\"${Selectors.MODAL.TITLE.name()}\">${config.title}</h5>\n                            <button class=\"${Selectors.MODAL.CLOSE.name()}\">&times;</button>\n                        </div>`;\n\n            // Add content container\n            if (config.contentId) {\n                modalHtml += `<div id=\"${config.contentId}\" class=\"${config.contentClass || ''}\"></div>`;\n            } else {\n                modalHtml += `<div class=\"${config.contentClass || ''}\"></div>`;\n            }\n\n            // Add footer with buttons if specified\n            if (config.footerButtons && config.footerButtons.length > 0) {\n                modalHtml += `<div class=\"${Selectors.MODAL.FOOTER.name()} ${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.PADDING_3.name()}\">`;\n                config.footerButtons.forEach(button => {\n                    // Check if this is a close button - only buttons with the exact MODAL.CLOSE.name() class should be considered close buttons\n                    const isCloseButton = button?.class.split(' ').includes(Selectors.MODAL.CLOSE.name());\n\n                    // Determine the button type based on class\n                    let iconName = 'chevron-right'; // Default icon\n\n                    if (button.class) {\n                        const classNames = button.class.split(' ');\n\n                        // Determine button type from classes\n                        if (classNames.some(cls => cls.includes('primary'))) {\n                            iconName = 'check-circle';\n                        } else if (classNames.some(cls => cls.includes('success'))) {\n                            iconName = 'check-circle';\n                        } else if (classNames.some(cls => cls.includes('danger'))) {\n                            iconName = 'exclamation-triangle';\n                        } else if (classNames.some(cls => cls.includes('warning'))) {\n                            iconName = 'exclamation-circle';\n                        } else if (classNames.some(cls => cls.includes('info'))) {\n                            iconName = 'info-circle';\n                        }\n                    }\n\n                    // Special case for specific button IDs\n                    if (button.id) {\n                        if (button.id.toLowerCase().includes('copy')) {\n                            iconName = 'copy';\n                        } else if (button.id === Selectors.MODAL.CONTINUE_BTN.name()) {\n                            iconName = 'chevron-right';\n                        } else if (button.id === Selectors.MODAL.MERGE_BTN.name()) {\n                            iconName = 'exclamation-circle';\n                        }\n                    }\n\n                    // Generate icon HTML if this is not a close button\n                    let iconHtml = '';\n                    if (!isCloseButton) {\n                        iconHtml = DOMUtils.getIconHtml(iconName, { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n                    }\n\n                    modalHtml += `<button id=\"${button.id}\" class=\"${button.class || Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_SECONDARY.name()}\"`;\n\n                    // Add data attributes if provided\n                    if (button.data) {\n                        Object.entries(button.data).forEach(([key, value]) => {\n                            modalHtml += ` data-${key}=\"${value}\"`;\n                        });\n                    }\n\n                    // Add the icon before text but only for non-close buttons\n                    if (isCloseButton && !button.text) {\n                        // For close buttons without text, don't add any content (X will be created by CSS)\n                        modalHtml += `></button>`;\n                    } else {\n                        // For other buttons or close buttons with text, add icon + text span\n                        modalHtml += `>${iconHtml}<span>${button.text || ''}</span></button>`;\n                    }\n                });\n                modalHtml += `</div>`;\n            }\n\n            // Close the modal structure\n            modalHtml += `\n                    </div>\n                </div>\n            `;\n\n            this._appendToBody(modalId, modalHtml);\n            this.modals[modalId] = {\n                element: document.getElementById(modalId),\n                isOpen: false,\n                config: config\n            };\n\n            // Apply fullscreen if needed\n            if (config.fullscreen) {\n                const modalElement = document.getElementById(modalId);\n                if (modalElement) {\n                    this.setFullscreenSize(modalElement);\n                }\n            }\n\n            // Attach custom event handlers if provided\n            if (config.events) {\n                const modalElement = document.getElementById(modalId);\n\n                Object.entries(config.events).forEach(([selector, events]) => {\n                    let elements;\n\n                    // Handle special selectors\n                    if (selector === 'modal') {\n                        elements = [modalElement];\n                    } else if (selector === 'close') {\n                        elements = Array.from(modalElement.querySelectorAll(Selectors.MODAL.CLOSE));\n                    } else {\n                        // For regular selectors, query within the modal\n                        elements = Array.from(modalElement.querySelectorAll(selector));\n                    }\n\n                    // Attach events to each matching element\n                    elements.forEach(element => {\n                        if (element) {\n                            Object.entries(events).forEach(([eventName, handler]) => {\n                                element.addEventListener(eventName, handler);\n                                Debug.log(`ModalManager: Attached ${eventName} event to ${selector} in modal ${modalId}`, null, 3);\n                            });\n                        }\n                    });\n                });\n            }\n\n            Debug.log(`ModalManager: Created modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error creating modal - ${config.id}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Determine the appropriate icon for a button based on context\n     * @private\n     * @param {Object} button - The button configuration object\n     * @returns {string} The name of the icon to use\n     */\n    _getIconNameForButton(button) {\n        // First, check the IconRegistry to ensure we use icons that actually exist\n\n        // Icons based on button text (case insensitive)\n        const buttonText = button.text.toLowerCase();\n\n        if (buttonText.includes('continue')) return 'chevron-right';\n        if (buttonText.includes('merge')) return 'check'; // Changed from code-merge to check\n        if (buttonText.includes('close') || buttonText.includes('cancel')) return 'exclamation-circle'; // Changed from times-circle\n        if (buttonText.includes('confirm') || buttonText.includes('ok')) return 'check-circle';\n        if (buttonText.includes('copy')) return 'copy';\n        if (buttonText.includes('download')) return 'file'; // Changed from download\n        if (buttonText.includes('upload')) return 'file-circle-plus'; // Changed from upload\n        if (buttonText.includes('save')) return 'check-circle'; // Changed from save\n        if (buttonText.includes('delete')) return 'exclamation-triangle'; // Changed from trash\n        if (buttonText.includes('edit')) return 'eye'; // Changed from edit\n\n        // Icons based on button class\n        if (button.class) {\n            const buttonClass = button.class.toLowerCase();\n\n            if (buttonClass.includes('primary')) return 'check';\n            if (buttonClass.includes('secondary')) return 'chevron-right';\n            if (buttonClass.includes('success')) return 'check-circle';\n            if (buttonClass.includes('danger')) return 'exclamation-triangle';\n            if (buttonClass.includes('warning')) return 'exclamation-circle';\n            if (buttonClass.includes('info')) return 'info-circle';\n        }\n\n        // Default icon if no matching pattern found\n        return 'chevron-right';\n    }\n\n    /**\n     * Append HTML to body\n     * @private\n     * @param {string} modalId - Modal ID\n     * @param {string} html - HTML to append\n     */\n    _appendToBody(modalId, html) {\n        // Create wrapper div for modals if it doesn't exist\n        let modal = document.getElementById(modalId);\n        if (!modal) {\n            // Convert HTML string to DOM element before appending\n            const tempContainer = document.createElement('div');\n            tempContainer.innerHTML = html;\n            document.body.appendChild(tempContainer.firstElementChild);\n        }\n\n        // Create or update the backdrop element\n        let backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (!backdrop) {\n            backdrop = document.createElement('div');\n            backdrop.id = Selectors.MODAL.BACKDROP.name();\n            backdrop.style.display = 'none';\n            document.body.appendChild(backdrop);\n        }\n    }\n\n    /**\n     * Set up event listeners for modals\n     * @private\n     */\n    _setupEventListeners() {\n        // Use document-level event delegation for close buttons\n        document.addEventListener('click', (event) => {\n            // Check if the clicked element is a close button or has the close class\n            if (event.target.matches(Selectors.MODAL.CLOSE)) {\n                const modal = event.target.closest(Selectors.MODAL.CONTAINER);\n                if (modal?.id) {\n                    this.close(modal.id);\n                }\n            }\n        });\n\n        // Backdrop click to close\n        const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (backdrop) {\n            backdrop.addEventListener('click', () => {\n                if (this.activeModal) {\n                    this.close(this.activeModal);\n                }\n            });\n        }\n\n        // ESC key to close\n        document.addEventListener('keydown', (event) => {\n            if (event.key === 'Escape' && this.activeModal) {\n                this.close(this.activeModal);\n            }\n        });\n    }\n\n    /**\n     * Register a modal instance\n     * @param {string} modalId - ID of the modal element\n     * @param {Object} options - Modal configuration options\n     * @returns {boolean} Success status\n     */\n    register(modalId, options = {}) {\n        try {\n            const element = document.getElementById(modalId);\n            if (!element) {\n                Debug.warn(`ModalManager: Element not found for modal ID ${modalId}`, null, 2);\n                return false;\n            }\n\n            this.modals[modalId] = {\n                element: element,\n                isOpen: false,\n                options: options\n            };\n\n            Debug.log(`ModalManager: Registered modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error registering modal - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Register a callback to be executed before opening a modal\n     * @param {string} modalId - ID of the modal\n     * @param {Function} callback - Function to execute before opening\n     * @returns {boolean} Success status\n     */\n    registerBeforeOpenCallback(modalId, callback) {\n        try {\n            if (!this.modals[modalId]) {\n                this.modals[modalId] = {\n                    element: document.getElementById(modalId),\n                    isOpen: false,\n                    config: {}\n                };\n            }\n\n            if (!this.modals[modalId].beforeOpenCallbacks) {\n                this.modals[modalId].beforeOpenCallbacks = [];\n            }\n\n            this.modals[modalId].beforeOpenCallbacks.push(callback);\n            Debug.log(`ModalManager: Registered before-open callback for modal ${modalId}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error registering before-open callback for modal ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Open a modal by ID\n     * @param {string} modalId - ID of the modal to open\n     * @returns {boolean} Success status\n     */\n    open(modalId) {\n        try {\n            const modal = this.modals[modalId];\n            if (!modal) {\n                Debug.warn(`ModalManager: Cannot open modal ${modalId} - not registered`, null, 2);\n\n                // Forcefully try to find the modal element even if not registered\n                const element = document.getElementById(modalId);\n                if (element) {\n                    Debug.log(`ModalManager: Found unregistered modal element ${modalId}, registering now`, null, 2);\n                    this.register(modalId, { element });\n                    this._showModal(modalId);\n                    return true;\n                }\n\n                return false;\n            }\n\n            // Execute any registered before-open callbacks\n            if (modal.beforeOpenCallbacks && modal.beforeOpenCallbacks.length > 0) {\n                Debug.log(`ModalManager: Executing ${modal.beforeOpenCallbacks.length} before-open callbacks for modal ${modalId}`, null, 2);\n                modal.beforeOpenCallbacks.forEach(callback => {\n                    try {\n                        callback();\n                    } catch (err) {\n                        Debug.error(`ModalManager: Error in before-open callback for modal ${modalId}`, err, 1);\n                    }\n                });\n            }\n\n            this._showModal(modalId);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error opening modal ${modalId}:`, error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Show a modal\n     * @private\n     * @param {string} modalId - Modal ID to show\n     */\n    _showModal(modalId) {\n        const modal = this.modals[modalId];\n        if (!modal) {\n            Debug.warn(`ModalManager: Modal ${modalId} not found`, null, 2);\n            return;\n        }\n\n        // Set as active modal - important for proper backdrop handling\n        this.activeModal = modalId;\n\n        // Show backdrop\n        const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (backdrop) {\n            backdrop.style.display = 'block';\n            setTimeout(() => {\n                backdrop.style.opacity = '1';\n            }, 10);\n        }\n\n        // IMPORTANT: Force modal display style using direct manipulation\n        // Show modal with animation - set display IMMEDIATELY\n        modal.element.style.display = 'block';\n        modal.element.style.opacity = '0';\n\n        // Debug logs to help diagnose modal display issues\n        Debug.log(`ModalManager: Setting modal ${modalId} display to block`, {\n            modalElement: modal.element.id,\n            displayBefore: modal.element.style.display\n        }, 2);\n\n        // Apply animation\n        setTimeout(() => {\n            modal.element.style.opacity = '1';\n            Debug.log(`ModalManager: Fading in modal ${modalId}`, null, 3);\n        }, 10);\n\n        modal.isOpen = true;\n\n        // Handle fullscreen if needed\n        if (modalId === Selectors.MODAL.PREVIEW.name()) {\n            this.setFullscreenSize(modal.element);\n        }\n\n        // Prevent body scrolling\n        document.body.style.overflow = 'hidden';\n    }\n\n    /**\n     * Hide a modal\n     * @private\n     * @param {string} modalId - Modal ID to hide\n     */\n    _hideModal(modalId) {\n        const modal = this.modals[modalId];\n        if (!modal) return;\n\n        // Fade out\n        modal.element.style.opacity = '0';\n\n        // After animation completes\n        setTimeout(() => {\n            modal.element.style.display = 'none';\n            modal.isOpen = false;\n\n            // Hide backdrop if this is the currently active modal\n            if (this.activeModal === modalId) {\n                const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n                if (backdrop) {\n                    backdrop.style.opacity = '0';\n\n                    // Hide backdrop after fade-out animation\n                    setTimeout(() => {\n                        backdrop.style.display = 'none';\n                    }, 150);\n                }\n\n                // Reset body scrolling\n                document.body.style.overflow = '';\n                this.activeModal = null;\n            }\n        }, 250); // Match transition duration\n    }\n\n    /**\n     * Close a modal by ID\n     * @param {string} modalId - ID of the modal to close\n     * @returns {boolean} Success status\n     */\n    close(modalId) {\n        try {\n            if (!this.modals[modalId]) {\n                Debug.warn(`ModalManager: Modal not found - ${modalId}`, null, 2);\n                return false;\n            }\n\n            this._hideModal(modalId);\n\n            Debug.log(`ModalManager: Closed modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error closing modal - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Set content for a modal\n     * @param {string} modalId - ID of the modal\n     * @param {string|Element} content - HTML content or DOM element\n     * @param {string} contentSelector - Selector for content container\n     * @returns {boolean} Success status\n     */\n    setContent(modalId, content, contentSelector = null) {\n        try {\n            Debug.log(`ModalManager: Setting content for modal ${modalId}`, {\n                contentType: typeof content,\n                contentLength: typeof content === 'string' ? content.length : 'Element',\n                contentPreview: typeof content === 'string' ? content.substring(0, 150) + '...' : 'Element object',\n                targetSelector: contentSelector\n            }, 2);\n\n            const modal = this.modals[modalId];\n            if (!modal) {\n                Debug.error(`ModalManager: Modal not found - ${modalId}`, null, 1);\n                return false;\n            }\n\n            // Find the content container\n            let container;\n            if (contentSelector) {\n                Debug.log(`ModalManager: Looking for content container with selector: ${contentSelector}`, null, 2);\n                // Check if contentSelector is an ID without # prefix\n                if (!contentSelector.startsWith('#') && !contentSelector.startsWith('.')) {\n                    container = document.getElementById(contentSelector);\n                    Debug.log(`ModalManager: Tried getElementById with: ${contentSelector}, found: ${!!container}`, null, 2);\n                }\n\n                // If not found or not an ID, try as a selector\n                if (!container) {\n                    container = document.querySelector(contentSelector);\n                    Debug.log(`ModalManager: Tried querySelector with: ${contentSelector}, found: ${!!container}`, null, 2);\n                }\n\n                // Log container details\n                Debug.log(`ModalManager: Container lookup result:`, {\n                    found: !!container,\n                    id: container?.id || 'none',\n                    classList: container ? Array.from(container.classList) : []\n                }, 2);\n            } else {\n                container = modal.element.querySelector(Selectors.MODAL.CONTENT);\n                Debug.log(`ModalManager: Using default content container:`, {\n                    found: !!container,\n                    selector: Selectors.MODAL.CONTENT\n                }, 2);\n\n                if (!container) {\n                    Debug.error(`ModalManager: Content container not found - ${modalId}`, null, 1);\n                    return false;\n                }\n            }\n\n            if (!container) {\n                Debug.error(`ModalManager: Could not find content container with selector: ${contentSelector}`, null, 1);\n                return false;\n            }\n\n            // Set the content\n            if (typeof content === 'string') {\n                Debug.log(`ModalManager: Setting HTML content for modal ${modalId}`, {\n                    contentLength: content.length,\n                    containsPre: content.includes('<pre'),\n                    container: container.id || container.className\n                }, 2);\n\n                container.innerHTML = content;\n\n                // Verify the content was set correctly\n                const hasPreElements = container.querySelectorAll('pre').length > 0;\n                Debug.log(`ModalManager: Content set verification:`, {\n                    hasPreElements,\n                    innerHTML: container.innerHTML.substring(0, 100) + '...'\n                }, 2);\n\n                if (content.includes('<pre') && !hasPreElements) {\n                    Debug.warn(`ModalManager: Content included <pre> tags but none found after setting innerHTML`, {\n                        innerHtmlLength: container.innerHTML.length\n                    }, 1);\n                }\n            } else if (content instanceof Element) {\n                Debug.log(`ModalManager: Setting Element content for modal ${modalId}`, {\n                    elementType: content.tagName,\n                    elementId: content.id || 'none'\n                }, 2);\n                container.innerHTML = '';\n                container.appendChild(content);\n            } else {\n                Debug.error(`ModalManager: Invalid content type - ${typeof content}`, null, 1);\n                return false;\n            }\n\n            Debug.log(`ModalManager: Content set for modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error setting content - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Set fullscreen size for modal\n     * @param {Element} modalElement - Modal DOM element\n     * @returns {boolean} Success status\n     */\n    setFullscreenSize(modalElement) {\n        try {\n            if (!modalElement) {\n                Debug.warn('ModalManager: Modal element not provided for fullscreen', null, 2);\n                return false;\n            }\n\n            // Add fullscreen class\n            modalElement.classList.add(Selectors.MODAL.FULLSCREEN.name());\n\n            // Calculate and set the height\n            const headerHeight = modalElement.querySelector(Selectors.MODAL.HEADER) ?\n                modalElement.querySelector(Selectors.MODAL.HEADER).offsetHeight : 0;\n\n            const content = modalElement.querySelector(Selectors.MODAL.CONTENT);\n            if (content) {\n                content.style.height = `calc(100% - ${headerHeight}px)`;\n            }\n\n            Debug.log('ModalManager: Modal set to fullscreen size', null, 3);\n            return true;\n        } catch (error) {\n            Debug.error('ModalManager: Error setting fullscreen size', error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Creates a code copy modal for displaying and copying code snippets\n     * @param {string} codeText - The code text to display in the modal\n     * @returns {string} Modal ID\n     */\n    createCopyModal(codeText) {\n        const modalId = Selectors.MODAL.CODE_COPY.name();\n        // Get translations\n        const translationManager = TranslationManager.getInstance();\n\n        // Create modal if it doesn't exist yet\n        if (!this.modals[modalId]) {\n            this.createModal({\n                id: modalId,\n                title: translationManager.get('copyCode'),\n                contentId: Selectors.MODAL.COPY_CONTENT.name(),\n                modalClass: Selectors.MODAL.FIXED_FOOTER.name(),\n                headerClass: Selectors.MODAL.HEADER_FIXED.name(),\n                footerButtons: [\n                    {\n                        class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()}`\n                    }\n                ]\n            });\n        }\n\n        // Create content with textarea and copy button\n        const safeText = this._escapeHtml(codeText);\n        const content = `\n            <div class=\"${Selectors.COPY.MODAL.DIALOG.name()}\">\n                <p class=\"${Selectors.COPY.MODAL.INSTRUCTIONS.name()}\">${translationManager.get('copyInstructions')}</p>\n                <div class=\"${Selectors.COPY.MODAL.TEXTAREA.name()}\">\n                    <textarea id=\"${Selectors.COPY.MODAL.TEXTAREA_ELEM.name()}\" class=\"${Selectors.COPY.MODAL.TEXTAREA_ELEM.name()}\">${safeText}</textarea>\n                </div>\n                <div class=\"${Selectors.COPY.MODAL.ACTIONS.name()}\">\n                    <button id=\"${Selectors.COPY.MODAL.BUTTON.name()}\" class=\"${Selectors.COPY.MODAL.BUTTON.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}\">\n                        ${DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() })}\n                        <span>${translationManager.get('copyToClipboard')}</span>\n                    </button>\n                </div>\n            </div>\n        `;\n\n        // Set content\n        this.setContent(modalId, content, Selectors.MODAL.COPY_CONTENT.name());\n\n        // Set up event handlers after a short delay to ensure DOM is ready\n        setTimeout(() => {\n            const textarea = document.getElementById(Selectors.COPY.MODAL.TEXTAREA_ELEM.name());\n            const copyBtn = document.getElementById(Selectors.COPY.MODAL.BUTTON.name());\n\n            if (textarea) {\n                // Select all text when focused\n                textarea.addEventListener('focus', function() {\n                    this.select();\n                });\n\n                // Initial focus and select\n                textarea.select();\n            }\n\n            if (copyBtn && textarea) {\n                copyBtn.addEventListener('click', function() {\n                    // Focus and select the textarea\n                    textarea.select();\n\n                    try {\n                        // Try to copy using clipboard API or fallback to execCommand\n                        let success = false;\n\n                        if (navigator.clipboard?.writeText) {\n                            navigator.clipboard.writeText(textarea.value)\n                                .then(() => {\n                                    this._showCopySuccess(copyBtn);\n                                    Debug.log('ModalManager: Successfully copied using Clipboard API', null, 3);\n                                })\n                                .catch(_err => {\n                                    // Fallback to execCommand\n                                    // @SuppressWarnings(javascript:S1874) - Keeping for browser compatibility\n                                    success = document.execCommand('copy');\n                                    if (success) {\n                                        this._showCopySuccess(copyBtn);\n                                        Debug.log('ModalManager: Successfully copied using execCommand fallback', null, 3);\n                                    } else {\n                                        this._showCopyFailure(copyBtn);\n                                        Debug.warn('ModalManager: Copy failed with execCommand fallback', null, 2);\n                                    }\n                                });\n                        } else {\n                            // Try execCommand directly\n                            // @SuppressWarnings(javascript:S1874) - Keeping for browser compatibility\n                            success = document.execCommand('copy');\n                            if (success) {\n                                this._showCopySuccess(copyBtn);\n                                Debug.log('ModalManager: Successfully copied using execCommand', null, 3);\n                            } else {\n                                this._showCopyFailure(copyBtn);\n                                Debug.warn('ModalManager: Copy failed with execCommand', null, 2);\n                            }\n                        }\n                    } catch (err) {\n                        this._showCopyFailure(copyBtn);\n                        Debug.error('ModalManager: Error during copy operation', err, 2);\n                    }\n                }.bind(this)); // Bind to modal manager for access to helper methods\n            }\n        }, 300);\n\n        return modalId;\n    }\n\n    /**\n     * Show success state on copy button\n     * @param {HTMLElement} button - Button element\n     * @private\n     */\n    _showCopySuccess(button) {\n        const translationManager = TranslationManager.getInstance();\n        button.innerHTML = DOMUtils.getIconHtml('check-circle', { classes: 'vdm-icon--success ' + Selectors.UTILITY.MARGIN_END_2.name() }) +\n            `<span>${translationManager.get('copied')}</span>`;\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_SUCCESS.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) +\n                `<span>${translationManager.get('copyToClipboard')}</span>`;\n            button.classList.remove(Selectors.UTILITY.BUTTON_SUCCESS.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Show failure state on copy button\n     * @param {HTMLElement} button - Button element\n     * @private\n     */\n    _showCopyFailure(button) {\n        const translationManager = TranslationManager.getInstance();\n        button.innerHTML = DOMUtils.getIconHtml('exclamation-triangle', { classes: 'vdm-icon--danger ' + Selectors.UTILITY.MARGIN_END_2.name() }) +\n            `<span>${translationManager.get('copyFailed')}</span>`;\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_DANGER.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) +\n                `<span>${translationManager.get('tryAgain')}</span>`;\n            button.classList.remove(Selectors.UTILITY.BUTTON_DANGER.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Escape HTML entities in a string\n     * @param {string} html - String to escape\n     * @returns {string} Escaped string\n     * @private\n     */\n    _escapeHtml(html) {\n        if (!html) return '';\n\n        return html\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n    }\n\n    /**\n     * Create a modal dynamically with content and open it immediately\n     * @param {Object} config - Modal configuration (see createModal)\n     * @param {string|Element} content - Content to set in the modal\n     * @param {string} [contentSelector] - Optional content container selector\n     * @returns {string} Modal ID\n     */\n    createAndOpenModal(config, content, contentSelector = null) {\n        try {\n            // Generate a unique ID if none provided\n            if (!config.id) {\n                config.id = 'vdm-modal--dynamic-' + Date.now();\n            }\n\n            // Create the modal\n            this.createModal(config);\n\n            // Set the content if provided\n            if (content) {\n                this.setContent(config.id, content, contentSelector || config.contentId);\n            }\n\n            // Open the modal\n            this.open(config.id);\n\n            return config.id;\n        } catch (error) {\n            Debug.error('ModalManager: Error creating and opening modal', error, 1);\n            return null;\n        }\n    }\n\n    /**\n     * Create a simple confirmation modal\n     * @param {Object} options - Confirmation options\n     * @param {string} options.title - Modal title\n     * @param {string} options.message - Confirmation message\n     * @param {string} options.confirmText - Text for confirm button\n     * @param {string} options.cancelText - Text for cancel button\n     * @param {Function} options.onConfirm - Callback for confirm action\n     * @param {Function} options.onCancel - Callback for cancel action\n     * @returns {string} Modal ID\n     */\n    createConfirmationModal(options) {\n        const modalId = 'vdm-modal--confirmation-' + Date.now();\n\n        // Create modal\n        this.createModal({\n            id: modalId,\n            title: options.title || 'Confirmation',\n            contentId: 'vdm-modal__confirmation-content',\n            contentClass: Selectors.UTILITY.PADDING_3.name(),\n            footerButtons: [\n                {\n                    id: `${modalId}-cancel-btn`,\n                    text: options.cancelText || 'Cancel',\n                    class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()} me-2`\n                },\n                {\n                    id: `${modalId}-confirm-btn`,\n                    text: options.confirmText || 'Confirm',\n                    class: `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`\n                }\n            ],\n            events: {\n                [`#${modalId}-confirm-btn`]: {\n                    click: () => {\n                        if (typeof options.onConfirm === 'function') {\n                            options.onConfirm();\n                        }\n                        this.close(modalId);\n                    }\n                },\n                [`#${modalId}-cancel-btn`]: {\n                    click: () => {\n                        if (typeof options.onCancel === 'function') {\n                            options.onCancel();\n                        }\n                        this.close(modalId);\n                    }\n                }\n            }\n        });\n\n        // Set message content\n        this.setContent(modalId, `<p>${options.message || ''}</p>`, 'vdm-modal__confirmation-content');\n\n        // Open the modal\n        this.open(modalId);\n\n        return modalId;\n    }\n\n    /**\n     * Create an alert modal for showing messages\n     * @param {Object} options - Alert options\n     * @param {string} options.title - Modal title\n     * @param {string} options.message - Alert message\n     * @param {string} options.type - Alert type (success, info, warning, danger)\n     * @param {string} options.buttonText - Text for button\n     * @param {Function} options.onClose - Callback for close action\n     * @returns {string} Modal ID\n     */\n    createAlertModal(options) {\n        const modalId = `${Selectors.MODAL.CONTAINER.name()}--alert-${Date.now()}`;\n\n        // Determine alert class based on type\n        const alertClass = options.type ?\n            `${Selectors.UTILITY.ALERT} ${Selectors.UTILITY.ALERT_PREFIX}${options.type}` :\n            `${Selectors.UTILITY.ALERT} ${Selectors.UTILITY.ALERT_INFO}`;\n\n        // Create modal\n        this.createModal({\n            id: modalId,\n            title: options.title || 'Alert',\n            contentId: `${Selectors.MODAL.CONTAINER.name()}__alert-content`,\n            contentClass: Selectors.UTILITY.PADDING_3.name(),\n            footerButtons: [\n                {\n                    id: `${modalId}-ok-btn`,\n                    text: options.buttonText || 'OK',\n                    class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`\n                }\n            ],\n            events: {\n                [`#${modalId}-ok-btn`]: {\n                    click: (e) => {\n                        if (typeof options.onClose === 'function') {\n                            options.onClose(e);\n                        }\n                        this.close(modalId);\n                    }\n                }\n            }\n        });\n\n        // Create alert content\n        const alertContent = `\n            <div class=\"${alertClass} mb-0\">\n                ${options.message || ''}\n            </div>\n        `;\n\n        // Set content\n        this.setContent(modalId, alertContent, `${Selectors.MODAL.CONTAINER.name()}__alert-content`);\n\n        // Open the modal\n        this.open(modalId);\n\n        return modalId;\n    }\n\n    /**\n     * Destroy all modal instances and clean up\n     */\n    destroy() {\n        try {\n            // Close any open modal\n            if (this.activeModal) {\n                this.close(this.activeModal);\n            }\n\n            // Reset all modal references\n            this.modals = {};\n            this.activeModal = null;\n\n            Debug.log('ModalManager: Destroyed', null, 2);\n        } catch (error) {\n            Debug.error('ModalManager: Error during destroy', error, 1);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { NavigationUtils } from '../../utils/NavigationUtils';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Handles navigation between conflicts\n */\nexport class ConflictNavigator {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n        this.diffViewer = navigator.diffViewer;\n    }\n\n    /**\n     * Find all unresolved chunk IDs in the document\n     * @returns {Object} Object containing unresolvedChunkIds and total count\n     */\n    _getUnresolvedChunkInfo() {\n        // Find elements with unresolved status\n        const unresolvedElements = Array.from(document.querySelectorAll(\n            `[data-chunk-id]:not([data-chunk-id=\"\"])`\n        )).filter(el => el.classList.contains(Selectors.STATUS.UNRESOLVED.name()));\n\n        if (unresolvedElements.length === 0) {\n            Debug.log('ConflictNavigator: No unresolved elements found', null, 2);\n            return { unresolvedChunkIds: [], count: 0 };\n        }\n\n        // Get a unique list of chunk IDs that have unresolved status\n        const unresolvedChunkIds = [...new Set(\n            unresolvedElements.map(el => el.getAttribute('data-chunk-id'))\n        )];\n\n        Debug.log(`ConflictNavigator: Found ${unresolvedChunkIds.length} unresolved chunks`, null, 3);\n\n        return { unresolvedChunkIds, count: unresolvedChunkIds.length };\n    }\n\n    /**\n     * Navigate to first conflict\n     */\n    navigateToFirstConflict() {\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        // Find the first chunk with this ID\n        const chunks = this.diffViewer.chunkManager.chunks;\n        const firstUnresolvedIndex = chunks.findIndex(chunk =>\n            unresolvedChunkIds.includes(String(chunk.id))\n        );\n\n        if (firstUnresolvedIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to first unresolved chunk at index ${firstUnresolvedIndex}`, null, 2);\n            return this.navigator.navigateToChunk(firstUnresolvedIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Navigate to next conflict\n     */\n    navigateToNextConflict() {\n        const currentIndex = this.navigator.currentChunkIndex;\n        Debug.log(`ConflictNavigator: Current chunk index is ${currentIndex}`, null, 3);\n\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        const chunks = this.diffViewer.chunkManager.chunks;\n\n        // Find next chunk or wrap around\n        const nextIndex = this._findNextChunkIndex(chunks, unresolvedChunkIds, currentIndex);\n\n        if (nextIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to next unresolved chunk at index ${nextIndex}`, null, 2);\n            return this.navigator.navigateToChunk(nextIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Find the next chunk index from a starting point\n     * @private\n     */\n    _findNextChunkIndex(chunks, unresolvedChunkIds, currentIndex) {\n        const indexMap = this._createChunkIndexMap(chunks, unresolvedChunkIds);\n\n        // No matching chunks\n        if (indexMap.size === 0) {\n            return -1;\n        }\n\n        // Get all indices in the map\n        const indices = Array.from(indexMap.values()).sort((a, b) => a - b);\n\n        // Find the next index after currentIndex\n        for (const index of indices) {\n            if (index > currentIndex) {\n                return index;\n            }\n        }\n\n        // Wrap around to beginning\n        return indices[0];\n    }\n\n    /**\n     * Navigate to previous conflict\n     */\n    navigateToPrevConflict() {\n        const currentIndex = this.navigator.currentChunkIndex;\n\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        const chunks = this.diffViewer.chunkManager.chunks;\n\n        // Find previous chunk or wrap around\n        const prevIndex = this._findPrevChunkIndex(chunks, unresolvedChunkIds, currentIndex);\n\n        if (prevIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to previous unresolved chunk at index ${prevIndex}`, null, 2);\n            return this.navigator.navigateToChunk(prevIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Find the previous chunk index from a starting point\n     * @private\n     */\n    _findPrevChunkIndex(chunks, unresolvedChunkIds, currentIndex) {\n        const indexMap = this._createChunkIndexMap(chunks, unresolvedChunkIds);\n\n        // No matching chunks\n        if (indexMap.size === 0) {\n            return -1;\n        }\n\n        // Get all indices in the map\n        const indices = Array.from(indexMap.values()).sort((a, b) => a - b);\n\n        // Find the previous index before currentIndex\n        for (let i = indices.length - 1; i >= 0; i--) {\n            if (indices[i] < currentIndex) {\n                return indices[i];\n            }\n        }\n\n        // Wrap around to end\n        return indices[indices.length - 1];\n    }\n\n    /**\n     * Create a map of chunk IDs to their indices for fast lookup\n     * @private\n     */\n    _createChunkIndexMap(chunks, unresolvedChunkIds) {\n        const indexMap = new Map();\n\n        chunks.forEach((chunk, index) => {\n            // Only include chunks that are unresolved\n            if (chunk && chunk.id && unresolvedChunkIds.includes(String(chunk.id))) {\n                indexMap.set(String(chunk.id), index);\n            }\n        });\n\n        return indexMap;\n    }\n\n    /**\n     * Navigate to specific chunk\n     * @param {number} index - Chunk index\n     * @returns {boolean} Success status\n     */\n    navigateToChunk(index) {\n        // Set current chunk\n        this.navigator.currentChunkIndex = index;\n\n        // Get the chunk element\n        const chunkElement = this.diffViewer.chunkManager.chunkElements[index];\n\n        // Scroll to it\n        if (chunkElement) {\n            Debug.log(`ConflictNavigator: Navigating to chunk ${index}`, null, 2);\n\n            // Find the diff-pane-content containing this element\n            const paneContent = chunkElement.closest(Selectors.DIFF.PANE_CONTENT);\n            if (paneContent) {\n                // Use utility to scroll element into view\n                NavigationUtils.scrollElementIntoView(chunkElement, paneContent);\n\n                // Add highlight effect\n                NavigationUtils.addHighlightEffect(chunkElement, 2000);\n            } else {\n                Debug.warn(`ConflictNavigator: Cannot navigate - chunk ${index} parent not found`, null, 2);\n                return false;\n            }\n        } else {\n            Debug.warn(`ConflictNavigator: Cannot scroll - chunk ${index} not found`, null, 2);\n            return false;\n        }\n\n        // Update counter\n        this.navigator.navigationCounter.updateCounter();\n        Debug.log('ConflictNavigator: Navigation complete', null, 2);\n\n        return true;\n    }\n}\n","\n/**\n * Manages navigation counter display and state\n */\nexport class NavigationCounter {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n        this.counterElement = null;\n        this.prevButton = null;\n        this.nextButton = null;\n    }\n\n    /**\n     * Set counter element reference\n     * @param {Element} element - Counter element\n     */\n    setCounterElement(element) {\n        this.counterElement = element;\n    }\n\n    /**\n     * Set navigation button references\n     * @param {Element} prevButton - Previous button\n     * @param {Element} nextButton - Next button\n     */\n    setButtons(prevButton, nextButton) {\n        this.prevButton = prevButton;\n        this.nextButton = nextButton;\n    }\n\n    /**\n     * Update counter display\n     * @returns {Array} Active conflicts for navigation\n     */\n    updateCounter() {\n        if (!this.counterElement) return [];\n\n        const chunks = this.navigator.diffViewer.chunkManager.chunks;\n        const selections = this.navigator.diffViewer.chunkManager.selections;\n        let conflictCount = 0;\n        let currentIndex = 0;\n        let activeConflicts = [];\n\n        // Count only unresolved conflicts\n        chunks.forEach((chunk, index) => {\n            if (chunk.conflict && !selections[chunk.id]) {\n                // This is an unresolved conflict - no selection made yet\n                activeConflicts.push(index);\n                conflictCount++;\n            }\n        });\n\n        // Find current position in active conflicts\n        if (this.navigator.currentChunkIndex >= 0) {\n            const position = activeConflicts.findIndex(index => index >= this.navigator.currentChunkIndex);\n            if (position !== -1) {\n                currentIndex = position + 1; // 1-based index for display\n            }\n        }\n\n        // Update counter text with different symbol when complete\n        if (conflictCount === 0) {\n            // All conflicts resolved! Show a checkmark\n            this.counterElement.textContent = '✓';\n            this.counterElement.title = 'All conflicts resolved!';\n        } else {\n            this.counterElement.textContent = `${currentIndex || 1}/${conflictCount}`;\n            this.counterElement.title = `${conflictCount} conflicts remaining`;\n        }\n\n        // Enable/disable buttons based on conflict count\n        if (this.prevButton && this.nextButton) {\n            this.prevButton.disabled = conflictCount === 0;\n            this.nextButton.disabled = conflictCount === 0;\n        }\n\n        return activeConflicts;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Builds navigation UI elements\n */\nexport class NavigationUIBuilder {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n    }\n\n    /**\n     * Create navigation UI elements\n     * @returns {Object|null} Object with counter, prev button, and next button elements\n     */\n    createNavigationUI() {\n        Debug.log('NavigationUIBuilder: Creating navigation UI', null, 2);\n\n        // Find container element - first look for an existing one\n        let container = document.querySelector(Selectors.NAVIGATION.CONTAINER);\n\n        // If no container found, create one\n        if (!container) {\n            Debug.log('NavigationUIBuilder: No navigation container found, creating one', null, 2);\n\n            // Get the diff pane contents as parent reference\n            const panes = document.querySelectorAll(Selectors.DIFF.PANE);\n            if (!panes || panes.length === 0) {\n                Debug.warn('NavigationUIBuilder: No diff panes found to append navigation container');\n                return null;\n            }\n\n            // Create container\n            container = document.createElement('div');\n            container.className = Selectors.NAVIGATION.CONTAINER.name();\n\n            // Build controls inside the container\n            this._createControls(container);\n\n            // Append after the first pane\n            if (panes[0].parentNode) {\n                panes[0].parentNode.insertBefore(container, panes[0]);\n            }\n        } else {\n            // Use existing container, but update its contents\n            Debug.log('NavigationUIBuilder: Using existing navigation container', null, 2);\n            container.innerHTML = '';\n            this._createControls(container);\n        }\n\n        // Return references to the elements\n        return {\n            counter: document.getElementById(Selectors.NAVIGATION.COUNTER.name()),\n            prevButton: document.getElementById(Selectors.NAVIGATION.PREV_BUTTON.name()),\n            nextButton: document.getElementById(Selectors.NAVIGATION.NEXT_BUTTON.name())\n        };\n    }\n\n    /**\n     * Create navigation controls\n     * @private\n     * @param {Element} container - Container element\n     */\n    _createControls (container) {\n        // Create nav chunk element\n        const navChunk = document.createElement('div');\n        navChunk.className = Selectors.NAVIGATION.NAV_CHUNK.name();\n\n        // Create counter element\n        const counter = document.createElement('span');\n        counter.id = Selectors.NAVIGATION.COUNTER.name();\n        counter.className = Selectors.NAVIGATION.COUNTER_ELEMENT.name();\n\n        // Create previous button\n        const prevButton = document.createElement('button');\n        prevButton.id = Selectors.NAVIGATION.PREV_BUTTON.name();\n        prevButton.classList.add(\n            Selectors.UTILITY.BUTTON.name(),\n            Selectors.UTILITY.BUTTON_FLAT.name(),\n            Selectors.UTILITY.BUTTON_SMALL.name()\n        );\n        prevButton.innerHTML = DOMUtils.getIconHtml('chevron-up');\n        prevButton.title = 'Previous change';\n        prevButton.addEventListener('click', () => this.navigator.navigateToPrevConflict());\n\n        // Create next button\n        const nextButton = document.createElement('button');\n        nextButton.id = Selectors.NAVIGATION.NEXT_BUTTON.name();\n        nextButton.classList.add(\n            Selectors.UTILITY.BUTTON.name(),\n            Selectors.UTILITY.BUTTON_FLAT.name(),\n            Selectors.UTILITY.BUTTON_SMALL.name()\n        );\n        nextButton.innerHTML = DOMUtils.getIconHtml('chevron-down');\n        nextButton.title = 'Next change';\n        nextButton.addEventListener('click', () => this.navigator.navigateToNextConflict());\n\n        // Add elements to navChunk\n        navChunk.appendChild(prevButton);\n        navChunk.appendChild(counter);\n        navChunk.appendChild(nextButton);\n\n        // Add navChunk to container\n        container.appendChild(navChunk);\n\n        Debug.log('NavigationUIBuilder: Navigation controls created', null, 2);\n    }\n\n    /**\n     * Clean up event handlers\n     */\n    destroy() {\n        // Find navigation buttons\n        const prevButton = document.getElementById(Selectors.NAVIGATION.PREV_BUTTON.name());\n        const nextButton = document.getElementById(Selectors.NAVIGATION.NEXT_BUTTON.name());\n\n        // Remove event listeners by cloning\n        if (prevButton) {\n            const newPrevButton = prevButton.cloneNode(true);\n            prevButton.parentNode.replaceChild(newPrevButton, prevButton);\n        }\n\n        if (nextButton) {\n            const newNextButton = nextButton.cloneNode(true);\n            nextButton.parentNode.replaceChild(newNextButton, nextButton);\n        }\n\n        Debug.log('NavigationUIBuilder: Event handlers removed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { ModalManager } from '../modal/ModalManager';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Adds copy buttons to code blocks in the preview modal\n * This implementation uses a fallback strategy for maximum browser compatibility\n */\nexport class CopyButton {\n    /**\n     * Initialize copy buttons for code blocks\n     * @param {string} containerId - ID of the container element\n     * @returns {boolean} Success status\n     */\n    static addCopyButtonsToPreview(containerId = Selectors.MODAL.PREVIEW_CONTENT_ID.name()) {\n        // Get instance of TranslationManager\n        const translationManager = TranslationManager.getInstance();\n\n        const container = DOMUtils.getElement(containerId);\n\n        if (!container) {\n            // Try direct DOM methods too\n            const directElement = document.getElementById(containerId);\n            const querySelectorElement = document.querySelector('#' + containerId);\n\n            Debug.log('CopyButton: Alternative container lookup results', {\n                getElementById: !!directElement,\n                querySelector: !!querySelectorElement\n            }, 2);\n\n            Debug.warn('CopyButton: Preview container not found', null, 2);\n            return false;\n        }\n\n        // Find all code blocks within the container\n        const preElements = container.querySelectorAll('pre');\n\n        if (!preElements || preElements.length === 0) {\n            Debug.log('CopyButton: No code blocks found in preview', null, 3);\n            return false;\n        }\n\n        // Add copy button to each pre element\n        preElements.forEach(pre => {\n            // Check if button already exists\n            if (pre.querySelector(Selectors.COPY.BUTTON)) {\n                return;\n            }\n\n            // Create copy button\n            const button = DOMUtils.createElement('button', null, Selectors.COPY.BUTTON.name(), {\n                type: 'button',\n                title: translationManager.get('copyCode')\n            });\n\n            // Add copy button content\n            button.innerHTML = `<span class=\"${Selectors.COPY.ICON.name()}\"></span><span class=\"${Selectors.COPY.TEXT.name()}\">${translationManager.get('copy')}</span>`;\n\n            // Position the button within the pre element\n            pre.style.position = 'relative';\n\n            // Find code element and insert button before it\n            const codeEl = pre.querySelector('code');\n            if (codeEl) {\n                pre.insertBefore(button, codeEl);\n            } else {\n                // Fallback to appending if no code element found\n                pre.appendChild(button);\n            }\n\n            // Add click event with progressive fallback\n            button.addEventListener('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                const codeEl = pre.querySelector('code');\n                if (!codeEl) return;\n\n                // Store reference to the code element for later use\n                // This is important to maintain context during asynchronous operations\n                CopyButton._sourceCodeElement = codeEl;\n\n                // Get text content - use most reliable method\n                let textToCopy;\n                if (codeEl.hasAttribute('data-original-code')) {\n                    textToCopy = CopyButton._decodeHTMLEntities(codeEl.getAttribute('data-original-code'));\n                    Debug.log('CopyButton: Using original code from attribute', null, 3);\n                } else {\n                    textToCopy = codeEl.textContent || '';\n                    textToCopy = textToCopy.replace(/\\n\\n+/g, '\\n');\n                    Debug.log('CopyButton: Using text content from code element', null, 3);\n                }\n\n                Debug.log('CopyButton: Text length: ' + textToCopy.length, null, 3);\n\n                // Go straight to the most reliable method - manual copy\n                // This ensures consistent behavior across all browsers\n                CopyButton._showManualCopyModal(textToCopy);\n\n                // Show visual feedback that copy operation was initiated\n                CopyButton._showProcessingState(button);\n            });\n        });\n\n        Debug.log(`CopyButton: Added copy buttons to ${preElements.length} code blocks`, null, 2);\n        return true;\n    }\n\n    /**\n     * Show processing state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showProcessingState(button) {\n        button.classList.add(Selectors.COPY.PROCESSING.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Open Copy Dialog...';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.PROCESSING.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 1000);\n    }\n\n    /**\n     * Show copied state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopiedState(button) {\n        button.classList.add(Selectors.COPY.COPIED.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Copied!';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.COPIED.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 2000);\n    }\n\n    /**\n     * Show a modal dialog with text for manual copying using ModalManager\n     * @param {string} text - Text to copy\n     * @private\n     */\n    static _showManualCopyModal(text) {\n        // Get singleton instance of ModalManager\n        const modalManager = ModalManager.getInstance();\n\n        // Create the copy modal and get its ID\n        const modalId = modalManager.createCopyModal(text);\n\n        // Open the modal\n        modalManager.open(modalId);\n\n        Debug.log('CopyButton: Showing manual copy modal', null, 2);\n    }\n\n    /**\n     * Show copy failure on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopyFailure(button) {\n        button.innerHTML = DOMUtils.getIconHtml('exclamation-triangle', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Copy Failed';\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name(), Selectors.UTILITY.BUTTON_SUCCESS.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_DANGER.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Try Again';\n            button.classList.remove(Selectors.UTILITY.BUTTON_DANGER.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Decode HTML entities in a string\n     * @param {string} html - String with HTML entities\n     * @returns {string} Decoded string\n     * @private\n     */\n    static _decodeHTMLEntities(html) {\n        if (!html) return '';\n\n        const textarea = document.createElement('textarea');\n        textarea.innerHTML = html;\n        return textarea.value;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n/**\n * Manages browser UI generation for file-browser.php\n * This component handles the dynamic generation of UI elements that were previously\n * hardcoded in the PHP file, ensuring proper use of selectors and translations.\n */\nexport class BrowserUIManager {\n    /**\n     * @param {DiffViewer|Object} diffViewer - Parent diff viewer instance or options object\n     */\n    constructor (diffViewer) {\n        // Handle both DiffViewer instance or options object\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n        } else {\n            this.diffViewer = null;\n            this.options = diffViewer || {};\n        }\n\n        this.container = null;\n        this.elements = {\n            themeSwitcher: null,\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Get the translation manager instance\n        this.translationManager = TranslationManager.getInstance();\n\n        // Log translation state for debugging\n        let translationsSource;\n\n        // Extract nested ternary operations into separate statements\n        const hasWindowConfig = !!window.diffConfig?.translations;\n        const hasOptionsTranslations = !!this.options?.translations;\n\n        if (this.translationManager.isInitialized()) {\n            translationsSource = 'TranslationManager';\n        } else if (hasWindowConfig) {\n            translationsSource = 'window.diffConfig';\n        } else if (hasOptionsTranslations) {\n            translationsSource = 'options';\n        } else {\n            translationsSource = 'none';\n        }\n\n        const lang = this.translationManager.getLanguage();\n\n        Debug.log(`BrowserUIManager: Created with \"${lang}\" translations from ${translationsSource}`,\n                 this.translationManager.getAllTranslations(), 2);\n    }\n\n    /**\n     * Set the DiffViewer instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    setDiffViewer(diffViewer) {\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n            Debug.log('BrowserUIManager: Updated DiffViewer reference', null, 3);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Get translations from options\n     * @returns {Object} Translations object\n     */\n    getTranslations() {\n        // First, try to get translations from the TranslationManager\n        if (this.translationManager && this.translationManager.isInitialized()) {\n            Debug.log('BrowserUIManager: Using translations from TranslationManager', this.translationManager.getAllTranslations(), 3);\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Second, try to auto-initialize TranslationManager with window.diffConfig\n        if (window.diffConfig?.translations && typeof window.diffConfig.translations === 'object') {\n            Debug.log('BrowserUIManager: Auto-initializing TranslationManager from window.diffConfig', window.diffConfig.translations, 3);\n            this.translationManager.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Fall back to local options if nothing else works\n        if (this.options?.translations && typeof this.options.translations === 'object') {\n            Debug.log('BrowserUIManager: Using translations from local options', this.options.translations, 3);\n            return this.options.translations;\n        }\n\n        Debug.log('BrowserUIManager: No translations found, using empty object', null, 3);\n        return {};\n    }\n\n    /**\n     * Initialize UI components\n     * @param {string} containerSelector - Container element selector\n     */\n    initialize(containerSelector = Selectors.CONTAINER.WRAPPER) {\n        Debug.log('BrowserUIManager: Initializing UI components', null, 2);\n\n        this.container = document.querySelector(containerSelector);\n\n        if (!this.container) {\n            Debug.error('BrowserUIManager: Container element not found', null, 2);\n            return false;\n        }\n\n        // Change the order of generation - create diff container first\n        this.generateDiffContainer();\n        this.generateThemeSwitcher();\n        this.generateMergeControls();\n\n        Debug.log('BrowserUIManager: UI components generated', null, 2);\n        return true;\n    }\n\n    /**\n     * Generate theme switcher UI\n     */\n    generateThemeSwitcher() {\n        Debug.log('BrowserUIManager: Generating theme switcher', null, 3);\n\n        // Get the ID without the # prefix for createElement\n        const themeSwitcherId = Selectors.THEME.SWITCHER.name();\n        const themeLoadingId = Selectors.THEME.LOADING_INDICATOR.name();\n        const themeToggleId = Selectors.THEME.TOGGLE.name();\n\n        // Create theme switcher element\n        const themeSwitcher = document.createElement('div');\n        themeSwitcher.id = themeSwitcherId;\n        themeSwitcher.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n        themeSwitcher.style.cssText = 'display: none !important; position: relative;';\n\n        // Create theme switcher wrapper\n        const switcherWrapper = document.createElement('div');\n        switcherWrapper.className = Selectors.THEME_SWITCHER.WRAPPER.name();\n\n        // Get SVG icons for light/dark mode\n        const sunIcon = DOMUtils.getIconHtml('sun', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n        const moonIcon = DOMUtils.getIconHtml('moon', { classes: Selectors.UTILITY.MARGIN_START_2.name() });\n\n        // Create theme switcher content with toggle\n        switcherWrapper.innerHTML = `\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_END_2.name()}\">${sunIcon}</span>\n            <label class=\"${Selectors.THEME_SWITCHER.CONTROL.name()}\" for=\"${themeToggleId}\">\n                <input type=\"checkbox\" id=\"${themeToggleId}\" checked>\n                <span class=\"${Selectors.THEME_SWITCHER.SLIDER.name()} ${Selectors.THEME_SWITCHER.SLIDER_ROUND.name()}\"></span>\n            </label>\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_START_2.name()} \">${moonIcon}</span>\n        `;\n\n        // Append elements to theme switcher\n        themeSwitcher.appendChild(switcherWrapper);\n\n        // Create a separate container for the loader outside the theme switcher hierarchy\n        const loadingContainer = document.createElement('div');\n        loadingContainer.id = themeLoadingId;\n        loadingContainer.style.display = 'none';\n        loadingContainer.style.position = 'absolute';\n        loadingContainer.style.zIndex = '1000';\n\n        // Append theme switcher to container\n        this.container.appendChild(themeSwitcher);\n\n        // Append loading container to body for proper positioning\n        document.body.appendChild(loadingContainer);\n\n        // Store reference\n        this.elements.themeSwitcher = themeSwitcher;\n        this.elements.themeLoadingContainer = loadingContainer;\n\n        // Watch for the vdm-diff__container to have 'loaded' class\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach(() => {\n                const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n                if (diffContainer && diffContainer.classList.contains('loaded')) {\n                    // If the container is loaded, make the theme switcher visible\n                    if (themeSwitcher) {\n                        themeSwitcher.style.cssText = 'display: flex !important; position: relative;';\n                    }\n                    // Disconnect the observer once we've made the change\n                    observer.disconnect();\n                }\n            });\n        });\n\n        // Start observing the container's parent element for child changes\n        const containerParent = this.container || document.body;\n        observer.observe(containerParent, {\n            subtree: true,\n            childList: true,\n            attributes: true,\n            attributeFilter: ['class']\n        });\n    }\n\n    /**\n     * Generate diff container UI\n     */\n    generateDiffContainer() {\n        Debug.log('BrowserUIManager: Generating diff container', null, 3);\n\n        // Get IDs without the # prefix for createElement\n        const diffContainerId = Selectors.DIFF.CONTAINER.name();\n        const viewerId = Selectors.DIFF.VIEWER.name();\n\n        // Create diff container\n        const diffContainer = document.createElement('div');\n        diffContainer.id = diffContainerId;\n\n        // Create viewer element\n        const viewerElement = document.createElement('div');\n        viewerElement.id = viewerId;\n        viewerElement.className = Selectors.UTILITY.MARGIN_TOP_2.name();\n        viewerElement.style.display = 'none';\n\n        // Set up a mutation observer to watch for display changes on the viewer element\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.type === 'attributes' &&\n                    mutation.attributeName === 'style' &&\n                    viewerElement.style.display !== 'none') {\n                    // If viewer becomes visible, show the theme switcher\n                    if (this.elements.themeSwitcher) {\n                        this.elements.themeSwitcher.style.display = 'flex';\n                    }\n                }\n            });\n        });\n\n        // Start observing the viewer element for style changes\n        observer.observe(viewerElement, { attributes: true });\n\n        // Append elements to diff container\n        diffContainer.appendChild(viewerElement);\n\n        // Append diff container to container\n        this.container.appendChild(diffContainer);\n\n        // Store reference and log creation\n        this.elements.diffContainer = diffContainer;\n\n        // Verify the element was created\n        const createdViewer = document.getElementById(viewerId);\n        Debug.log(`BrowserUIManager: Viewer element (${viewerId}) created successfully: ${!!createdViewer}`, null, 3);\n    }\n\n    /**\n     * Generate merge controls UI using translations from DiffViewer\n     */\n    generateMergeControls() {\n        Debug.log('BrowserUIManager: Generating merge controls structure only', null, 3);\n\n        // Get translations from options\n        const translations = this.getTranslations();\n\n        // Get IDs without the # prefix for createElement\n        const previewButtonId = Selectors.MERGE.BUTTON_PREVIEW.name();\n        const toggleButtonId = Selectors.MERGE.DESTINATION_TOGGLE.name();\n        const toggleIconId = Selectors.MERGE.TOGGLE_ICON.name();\n        const toggleTextId = Selectors.MERGE.TOGGLE_TEXT.name();\n        const dropdownId = Selectors.MERGE.DESTINATION_DROPDOWN.name();\n        const applyButtonId = Selectors.MERGE.BUTTON_APPLY.name();\n\n        // Create merge controls container\n        const mergeControls = document.createElement('div');\n        mergeControls.className = `${Selectors.MERGE.CONTROLS_ACTIONS.name()} ${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.MARGIN_Y_2.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n\n        // Create preview button section\n        const previewSection = document.createElement('div');\n\n        const previewButton = document.createElement('button');\n        previewButton.id = previewButtonId;\n        previewButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_INFO.name()}`;\n        previewButton.type = 'button';\n        previewButton.innerHTML = `${DOMUtils.getIconHtml('eye', { classes: Selectors.UTILITY.MARGIN_END_2.name() })}${translations.preview || 'Preview'}`;\n\n        previewSection.appendChild(previewButton);\n\n        // Create merge controls section\n        const mergeSection = document.createElement('div');\n        mergeSection.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()}`;\n\n        // Create a group for toggle button and dropdown - using input-group styling approach\n        const toggleGroup = document.createElement('div');\n        toggleGroup.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_STRETCH.name()} ${Selectors.UTILITY.MARGIN_END_3.name()}`;\n        // Add class for styling instead of inline style\n        toggleGroup.classList.add('vdm-input-group');\n\n        // Create destination toggle button\n        const toggleButton = document.createElement('button');\n        toggleButton.id = toggleButtonId;\n        toggleButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_FLAT.name()} vdm-input-group__prepend`;\n        toggleButton.type = 'button'; // Explicitly set type to button\n\n        const toggleIcon = document.createElement('span');\n        toggleIcon.id = toggleIconId;\n        toggleIcon.innerHTML = DOMUtils.getIconHtml('plus-circle', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n\n        const toggleText = document.createElement('span');\n        toggleText.id = toggleTextId;\n        toggleText.setAttribute('title', translations.saveToOriginalTooltip || 'Replace the current file with merged content');\n        toggleText.textContent = translations.saveToOriginal || 'Save to original';\n\n        toggleButton.appendChild(toggleIcon);\n        toggleButton.appendChild(toggleText);\n\n        // Create empty destination dropdown - IMPORTANT CHANGE: No options added\n        const dropdown = document.createElement('select');\n        dropdown.id = dropdownId;\n        dropdown.className = `${Selectors.UTILITY.FORM_SELECT.name()} vdm-input-group__append vdm-select-auto-width`;\n        // No options are added here - This will be handled by MergeUIController\n\n        // Add toggle button and dropdown to the toggle group with no spacing between them\n        toggleGroup.appendChild(toggleButton);\n        toggleGroup.appendChild(dropdown);\n\n        // Create apply merge button\n        const applyButton = document.createElement('button');\n        applyButton.id = applyButtonId;\n        applyButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()} vdm-nowrap`;\n        applyButton.type = 'button';\n        applyButton.innerHTML = (translations.applyMerge || 'Apply Merge') + ` ${DOMUtils.getIconHtml('file-circle-plus', { classes: Selectors.UTILITY.MARGIN_START_2.name() })}`;\n        applyButton.style.whiteSpace = 'nowrap';\n        applyButton.style.display = 'inline-flex';\n        applyButton.style.alignItems = 'center';\n\n        // Append toggle group and apply button to merge section\n        mergeSection.appendChild(toggleGroup);\n        mergeSection.appendChild(applyButton);\n\n        // Append sections to merge controls\n        mergeControls.appendChild(previewSection);\n        mergeControls.appendChild(mergeSection);\n\n        // Append merge controls to container\n        this.container.appendChild(mergeControls);\n\n        // Store reference\n        this.elements.mergeControls = mergeControls;\n\n        Debug.log('BrowserUIManager: Created empty merge controls structure (options will be populated by MergeUIController)', null, 2);\n    }\n\n    /**\n     * Show theme loading indicator using the LoaderManager\n     */\n    showThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        const themeSwitcher = this.elements.themeSwitcher;\n\n        if (loadingContainer && themeSwitcher) {\n            // Get the translated message\n            const message = TranslationManager.getInstance().get('loadingTheme', 'Loading theme...');\n\n            // Use proper CSS classes for styling\n            loadingContainer.innerHTML = `\n                <div class=\"vdm-theme__loading-spinner\"></div>\n                <span>${message}</span>\n            `;\n\n            // Add styling for the translucid background and rounded corners\n            loadingContainer.className = 'vdm-theme__loading-indicator';\n\n            // Get the position of the theme switcher\n            const rect = themeSwitcher.getBoundingClientRect();\n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n            // Position the loader just above the theme switcher\n            loadingContainer.style.top = (rect.top + scrollTop - 40) + 'px';\n\n            // Make the loader visible\n            loadingContainer.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Hide theme loading indicator\n     */\n    hideThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        if (loadingContainer) {\n            loadingContainer.style.display = 'none';\n        }\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        Debug.log('BrowserUIManager: Destroying UI components', null, 2);\n\n        // Hide any active theme loader\n        this.hideThemeLoading();\n\n        // Remove generated elements\n        if (this.elements.themeSwitcher && this.elements.themeSwitcher.parentNode) {\n            this.elements.themeSwitcher.parentNode.removeChild(this.elements.themeSwitcher);\n        }\n\n        if (this.elements.diffContainer && this.elements.diffContainer.parentNode) {\n            this.elements.diffContainer.parentNode.removeChild(this.elements.diffContainer);\n        }\n\n        if (this.elements.mergeControls && this.elements.mergeControls.parentNode) {\n            this.elements.mergeControls.parentNode.removeChild(this.elements.mergeControls);\n        }\n\n        // Reset references\n        this.elements = {\n            themeSwitcher: null,\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Clear DiffViewer reference\n        this.diffViewer = null;\n\n        Debug.log('BrowserUIManager: UI components destroyed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Manages icon marker creation and positioning\n */\nexport class IconMarkerManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n    }\n\n    /**\n     * Initialize icon markers with proper scroll synchronization\n     */\n    initializeIconMarkers() {\n        // Measure actual cell height for accurate positioning\n        const cellHeight = this._calculateCellHeight();\n        document.documentElement.style.setProperty('--cell-height', `${cellHeight}px`);\n\n        // Process each diff pane\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        panes.forEach(pane => {\n            this._setupIconColumn(pane);\n        });\n\n        // Use a dedicated method to handle all height updates\n        this._updateIconColumnHeights();\n\n        // Set up future height updates for window resizing\n        this._setupIconHeightUpdater();\n    }\n\n    /**\n     * Set up icon column for a pane\n     * @private\n     */\n    _setupIconColumn(pane) {\n        // Get the content container (scrollable area)\n        const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        if (!content) return;\n\n        // Get code table wrapper to match height\n        const codeTableWrapper = content.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n        if (!codeTableWrapper) {\n            Debug.warn('IconMarkerManager: Code table wrapper not found', null, 2);\n            return;\n        }\n\n        // Create or get icon column\n        let iconColumn = pane.querySelector(`:scope > ${Selectors.ICONS.COLUMN}`);\n        if (!iconColumn) {\n            iconColumn = document.createElement('div');\n            iconColumn.className = Selectors.ICONS.COLUMN.name();\n            pane.appendChild(iconColumn);\n        }\n\n        // Get all cells with chunk IDs\n        const chunkCells = content.querySelectorAll(\n            `${Selectors.DIFF.LINE_CONTENT}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_PLACEHOLDER}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_CONTENT_EMPTY}[data-chunk-id]:not([data-chunk-id=\"\"])`\n        );\n\n        // Organize cells by chunk ID\n        const chunkGroups = {};\n        chunkCells.forEach(cell => {\n            const chunkId = cell.dataset.chunkId;\n            if (!chunkGroups[chunkId]) {\n                chunkGroups[chunkId] = [];\n            }\n            chunkGroups[chunkId].push(cell);\n        });\n\n        // Process only the first cell of each chunk\n        Object.keys(chunkGroups).forEach(chunkId => {\n            // Sort by line number\n            chunkGroups[chunkId].sort((a, b) => {\n                const aLineNum = parseInt(a.dataset.lineId.split('-').pop(), 10);\n                const bLineNum = parseInt(b.dataset.lineId.split('-').pop(), 10);\n                return aLineNum - bLineNum;\n            });\n\n            // Get the first cell in the sorted group\n            const firstCell = chunkGroups[chunkId][0];\n\n            if (firstCell) {\n                this._createIconMarker(firstCell, iconColumn);\n            }\n        });\n\n        // Store table height for later use\n        if (codeTableWrapper) {\n            const tableHeight = codeTableWrapper.scrollHeight;\n            pane.dataset.tableHeight = tableHeight;\n        }\n\n        // Set up scroll synchronization\n        content.addEventListener('scroll', () => {\n            // Sync vertical scroll position with requestAnimationFrame\n            requestAnimationFrame(() => {\n                iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n            });\n\n            // Handle horizontal scroll state\n            if (content.scrollLeft > 0) {\n                pane.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                pane.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }, { passive: true });\n\n        // Initial position\n        iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n    }\n\n    /**\n     * Create a single icon marker for a cell\n     * @private\n     */\n    _createIconMarker(cell, iconColumn) {\n        const lineId = cell.dataset.lineId;\n        if (!lineId) return;\n\n        // Check if marker already exists\n        let marker = iconColumn.querySelector(`${Selectors.ICONS.MARKER}[data-line-id=\"${lineId}\"]`);\n\n        // Create new marker only if it doesn't exist\n        if (!marker) {\n            marker = document.createElement('div');\n            marker.className = Selectors.ICONS.MARKER.name();\n\n            // Add class for placeholder lines\n            if (cell.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name())) {\n                marker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n            }\n\n            // Use line ID for matching\n            marker.dataset.lineId = lineId;\n\n            // Set position index\n            const lineNumber = lineId.split('-').pop();\n            marker.dataset.iconIndex = lineNumber;\n            marker.style.setProperty('--icon-index', lineNumber);\n\n            // DO NOT transfer selection state classes - they will be managed by ChunkVisualStateManager\n            // Selection state and placeholder status are orthogonal concepts and should be managed separately\n\n            // Add to icon column\n            iconColumn.appendChild(marker);\n        }\n    }\n\n    /**\n     * Calculate cell height with maximum precision\n     * @private\n     * @returns {number} Precise cell height in pixels\n     */\n    _calculateCellHeight() {\n        // Get multiple line number cells for better accuracy\n        const lineNumberCells = this.diffViewer.container.querySelectorAll(Selectors.CODE.LINE_NUMBER);\n\n        if (!lineNumberCells || lineNumberCells.length === 0) {\n            Debug.log('IconMarkerManager: No line number cells found, using default height', null, 2);\n            return 20.5; // Fallback height\n        }\n\n        // Take the median height from first few cells (more reliable than just the first)\n        const heights = [];\n        const sampleSize = Math.min(5, lineNumberCells.length);\n\n        for (let i = 0; i < sampleSize; i++) {\n            heights.push(lineNumberCells[i].getBoundingClientRect().height);\n        }\n\n        // Sort heights and take the median (middle) value\n        heights.sort((a, b) => a - b);\n        const medianHeight = heights[Math.floor(heights.length / 2)];\n\n        Debug.log(`IconMarkerManager: Sampled heights: ${heights.join(', ')}, using median: ${medianHeight}px`, null, 3);\n\n        return medianHeight;\n    }\n\n    /**\n     * Set up height updater for window resizing\n     * @private\n     */\n    _setupIconHeightUpdater() {\n        // Debounce to avoid excessive updates\n        let resizeTimer;\n\n        // Add window resize listener\n        window.addEventListener('resize', () => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(() => {\n                this._updateIconColumnHeights();\n            }, 100);\n        });\n\n        // Initial update\n        this._updateIconColumnHeights();\n    }\n\n    /**\n     * Update all icon column heights\n     * @private\n     */\n    _updateIconColumnHeights() {\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n        const heights = {}; // Track heights for logging\n\n        panes.forEach(pane => {\n            const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n            const iconColumn = pane.querySelector(Selectors.ICONS.COLUMN);\n            const codeTableWrapper = content?.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n\n            if (iconColumn && codeTableWrapper) {\n                const tableHeight = codeTableWrapper.scrollHeight;\n                const currentHeight = parseInt(iconColumn.style.height) || 0;\n\n                // Only update if height changed significantly\n                if (Math.abs(currentHeight - tableHeight) > 5) {\n                    iconColumn.style.height = `${tableHeight}px`;\n                    heights[pane.dataset.side || 'pane'] = tableHeight;\n                }\n            }\n        });\n\n        // Log all height updates in one message\n        if (Object.keys(heights).length > 0) {\n            Debug.log('IconMarkerManager: Updated icon column heights:', heights, 3);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors'; // Add this import\n\n/**\n * Manages layout dimensions and responsive behavior\n */\nexport class LayoutManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.paneWidth = 0;\n    }\n\n    /**\n     * Initialize layout manager\n     */\n    initialize() {\n        // Initial pane width update\n        this.updatePaneWidth();\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this.updatePaneWidth();\n        });\n\n        // Set up mutation observer for content changes\n        this.setupWidthObserver();\n\n        Debug.log('LayoutManager: Initialized', null, 2);\n    }\n\n    /**\n     * Update pane width and CSS variables\n     */\n    updatePaneWidth() {\n        // Use DOMUtils.getElements for consistent element selection\n        const panes = DOMUtils.getElements(Selectors.DIFF.PANE, this.diffViewer.container);\n        if (!panes || panes.length === 0) return;\n\n        const pane = panes[0];\n        const newWidth = pane.clientWidth;\n\n        if (newWidth !== this.paneWidth) {\n            this.paneWidth = newWidth;\n\n            // Instead of direct DOM manipulation, use a helper method to set CSS variables\n            this.setCSSVariable('--diff-pane-width', `${this.paneWidth}px`);\n\n            Debug.log(`LayoutManager: Updated pane width: ${this.paneWidth}px`, null, 3);\n        }\n    }\n\n    /**\n     * Set CSS variable consistently\n     * @param {string} name - Variable name\n     * @param {string} value - Variable value\n     */\n    setCSSVariable(name, value) {\n        document.documentElement.style.setProperty(name, value);\n    }\n\n    /**\n     * Set up observer for content changes affecting width\n     */\n    setupWidthObserver() {\n        // Create mutation observer\n        const observer = new MutationObserver((mutations) => {\n            let shouldUpdate = false;\n\n            for (const mutation of mutations) {\n                if (mutation.type === 'childList' ||\n                    (mutation.type === 'attributes' &&\n                     (mutation.attributeName === 'style' || mutation.attributeName === 'class'))) {\n                    shouldUpdate = true;\n                    break;\n                }\n            }\n\n            if (shouldUpdate) {\n                this.updatePaneWidth();\n            }\n        });\n\n        // Start observing the container\n        observer.observe(this.diffViewer.container, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['style', 'class']\n        });\n\n        // Store for potential cleanup\n        this.observer = observer;\n\n        Debug.log('LayoutManager: Width observer setup complete', null, 2);\n    }\n\n    /**\n     * Clean up event handlers and observers\n     */\n    destroy() {\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = null;\n        }\n\n        Debug.log('LayoutManager: Destroyed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Handles scroll synchronization between panes\n */\nexport class ScrollSynchronizer {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.isSyncing = false;\n    }\n\n    /**\n     * Set up synchronized scrolling between panes\n     */\n    setupSynchronizedScrolling() {\n        // Find panes\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        if (panes.length !== 2) {\n            Debug.log(`ScrollSynchronizer: Could not find both diff panes. Found: ${panes.length}`, null, 2);\n            return;\n        }\n\n        const leftPane = panes[0];\n        const rightPane = panes[1];\n\n        // Get content elements\n        const leftContent = leftPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        const rightContent = rightPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n\n        if (!leftContent || !rightContent) {\n            Debug.log('ScrollSynchronizer: Could not find all required scrolling elements', null, 2);\n            return;\n        }\n\n        // Store references\n        this.leftContent = leftContent;\n        this.rightContent = rightContent;\n\n        // Sync both vertical AND horizontal scrolling between panes\n        leftContent.addEventListener('scroll', () => this._handleScroll(leftContent, rightContent), { passive: true });\n        rightContent.addEventListener('scroll', () => this._handleScroll(rightContent, leftContent), { passive: true });\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this._updateScrollState(leftContent);\n            this._updateScrollState(rightContent);\n        });\n\n        Debug.log('ScrollSynchronizer: Horizontal and vertical scroll synchronization set up', null, 2);\n    }\n\n    /**\n     * Handle scroll events\n     * @private\n     */\n    _handleScroll(sourceElement, targetElement) {\n        // Only update if not already syncing to avoid loops\n        if (!this.isSyncing) {\n            this.isSyncing = true;\n\n            // Sync vertical scrolling (top position)\n            targetElement.scrollTop = sourceElement.scrollTop;\n\n            // IMPORTANT: Also sync horizontal scrolling\n            targetElement.scrollLeft = sourceElement.scrollLeft;\n\n            this._updateScrollState(sourceElement);\n\n            // Reset syncing flag after a short delay\n            setTimeout(() => {\n                this.isSyncing = false;\n            }, 10);\n        }\n    }\n\n    /**\n     * Update CSS class based on scroll state\n     * @private\n     */\n    _updateScrollState(contentElement) {\n        const wasScrolled = contentElement.classList.contains(Selectors.STATUS.SCROLLED.name());\n        const isScrolled = contentElement.scrollLeft > 0;\n\n        // Only update if the state changed\n        if (wasScrolled !== isScrolled) {\n            if (isScrolled) {\n                contentElement.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                contentElement.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }\n    }\n}\n","/**\n * Centralized selectors for DOM elements\n * Using this object allows for easier maintenance and refactoring\n * All selectors include their prefix (# for IDs, . for classes)\n */\n\n// Import Debug for warning messages\nimport { Debug } from '../utils/Debug';\n\n// Create a proxy handler to intercept property access\nconst selectorHandler = {\n  get(target, prop) {\n    // Handle the name() method\n    if (prop === 'name') {\n      return function() {\n        if (target.startsWith('#') || target.startsWith('.')) {\n          return target.substring(1);\n        } else {\n          Debug.warn(`Selector '${target}' doesn't start with '.' or '#' but name() was called on it`);\n          return target;\n        }\n      };\n    }\n\n    // Add toString method to allow direct usage in DOM methods\n    if (prop === 'toString' || prop === Symbol.toPrimitive) {\n      return function() {\n        return String(target);\n      };\n    }\n\n    // Return the original property\n    return target[prop];\n  }\n};\n\n// Function to process all selectors with the proxy\nconst processSelectors = (obj) => {\n  const result = {};\n\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      result[key] = processSelectors(obj[key]);\n    } else if (typeof obj[key] === 'string') {\n      // Apply the proxy to each selector string\n      result[key] = new Proxy(Object(String(obj[key])), selectorHandler);\n    } else {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\n// Override utility selectors with values from window.diffConfig.ui if available\nconst getUtilitySelectors = () => {\n  // Default utility selectors\n  const defaultUtilitySelectors = {\n    BUTTON: '.vdm-btn',\n    BUTTON_PRIMARY: '.vdm-btn--primary',\n    BUTTON_SECONDARY: '.vdm-btn--secondary',\n    BUTTON_INFO: '.vdm-btn--info',\n    BUTTON_SUCCESS: '.vdm-btn--success',\n    BUTTON_WARNING: '.vdm-btn--warning',\n    BUTTON_DANGER: '.vdm-btn--danger',\n    BUTTON_FLAT: '.vdm-btn--flat',\n    BUTTON_SMALL: '.vdm-btn-sm',\n    BUTTON_EXTRA_SMALL: '.vdm-btn-xs',\n    BUTTON_LARGE: '.vdm-btn-lg',\n    ALERT: '.vdm-alert',\n    ALERT_PREFIX: '.vdm-alert--',\n    ALERT_INFO: '.vdm-alert--info',\n    ALERT_SUCCESS: '.vdm-alert--success',\n    ALERT_WARNING: '.vdm-alert--warning',\n    ALERT_DANGER: '.vdm-alert--danger',\n    FORM_SELECT: '.vdm-select',\n    FORM_SELECT_SM: '.vdm-select-sm',\n    FLEX: '.vdm-d-flex',\n    FLEX_COLUMN: '.vdm-flex-column',\n    JUSTIFY_CONTENT_BETWEEN: '.vdm-justify-content-between',\n    JUSTIFY_CONTENT_CENTER: '.vdm-justify-content-center',\n    ALIGN_ITEMS_CENTER: '.vdm-align-items-center',\n    ALIGN_ITEMS_STRETCH: '.vdm-align-items-stretch',\n    PADDING_2: '.vdm-p-2',\n    PADDING_3: '.vdm-p-3',\n    MARGIN_2: '.vdm-m-2',\n    MARGIN_TOP_2: '.vdm-mt-2',\n    MARGIN_BOTTOM_2: '.vdm-mb-2',\n    MARGIN_START_1: '.vdm-ms-1',\n    MARGIN_START_2: '.vdm-ms-2',\n    MARGIN_END_2: '.vdm-me-2',\n    MARGIN_END_3: '.vdm-me-3',\n    MARGIN_X_1: '.vdm-mx-1',\n    MARGIN_Y_2: '.vdm-my-2',\n    MARGIN_END_1: '.vdm-me-1'\n  };\n\n  // If window.diffConfig exists and has UI settings, override with those\n  if (window.diffConfig && window.diffConfig.ui) {\n    try {\n      // Map PHP ui settings to our selector format\n      if (window.diffConfig.ui.button) {\n        defaultUtilitySelectors.BUTTON = '.' + window.diffConfig.ui.button;\n      }\n      if (window.diffConfig.ui.buttonPrimary) {\n        defaultUtilitySelectors.BUTTON_PRIMARY = '.' + window.diffConfig.ui.buttonPrimary;\n      }\n      if (window.diffConfig.ui.buttonSecondary) {\n        defaultUtilitySelectors.BUTTON_SECONDARY = '.' + window.diffConfig.ui.buttonSecondary;\n      }\n      if (window.diffConfig.ui.buttonInfo) {\n        defaultUtilitySelectors.BUTTON_INFO = '.' + window.diffConfig.ui.buttonInfo;\n      }\n      if (window.diffConfig.ui.buttonSuccess) {\n        defaultUtilitySelectors.BUTTON_SUCCESS = '.' + window.diffConfig.ui.buttonSuccess;\n      }\n      if (window.diffConfig.ui.buttonWarning) {\n        defaultUtilitySelectors.BUTTON_WARNING = '.' + window.diffConfig.ui.buttonWarning;\n      }\n      if (window.diffConfig.ui.buttonDanger) {\n        defaultUtilitySelectors.BUTTON_DANGER = '.' + window.diffConfig.ui.buttonDanger;\n      }\n      if (window.diffConfig.ui.buttonFlat) {\n        defaultUtilitySelectors.BUTTON_FLAT = '.' + window.diffConfig.ui.buttonFlat;\n      }\n      if (window.diffConfig.ui.alert) {\n        defaultUtilitySelectors.ALERT = '.' + window.diffConfig.ui.alert;\n      }\n      if (window.diffConfig.ui.alertInfo) {\n        defaultUtilitySelectors.ALERT_INFO = '.' + window.diffConfig.ui.alertInfo;\n      }\n      if (window.diffConfig.ui.alertSuccess) {\n        defaultUtilitySelectors.ALERT_SUCCESS = '.' + window.diffConfig.ui.alertSuccess;\n      }\n      if (window.diffConfig.ui.alertWarning) {\n        defaultUtilitySelectors.ALERT_WARNING = '.' + window.diffConfig.ui.alertWarning;\n      }\n      if (window.diffConfig.ui.alertDanger) {\n        defaultUtilitySelectors.ALERT_DANGER = '.' + window.diffConfig.ui.alertDanger;\n      }\n\n      Debug.log('Overriding UI selectors with config values', window.diffConfig.ui, 2);\n    } catch (e) {\n      Debug.error('Error applying UI selector overrides from config', e, 1);\n    }\n  }\n\n  return defaultUtilitySelectors;\n};\n\nconst baseSelectors = {\n    // Code display\n    CODE: {\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_EMPTY: '.vdm-code__line--empty',\n        LINE_NUMBER: '.vdm-code__line-number',\n        TABLE: '.vdm-code__table'\n    },\n\n    // Container elements\n    CONTAINER: {\n        ROOT: '#vdm-container',\n        WRAPPER: '#vdm-container__wrapper'\n    },\n\n    // Copy functionality\n    COPY: {\n        BUTTON: '.vdm-code__copy-btn',\n        COPIED: '.vdm-code__copy--copied',\n        ICON: '.vdm-code__copy-icon',\n        MODAL: {\n            ACTIONS: '.vdm-modal__copy-actions',\n            BUTTON: '.vdm-modal__copy-btn',\n            DIALOG: '.vdm-modal__copy-dialog',\n            INSTRUCTIONS: '.vdm-modal__copy-instructions',\n            TEXTAREA: '.vdm-modal__copy-textarea-container',\n            TEXTAREA_ELEM: '.vdm-modal__copy-textarea'\n        },\n        PROCESSING: '.vdm-code__copy--processing',\n        TEXT: '.vdm-code__copy-text'\n    },\n\n    // Diff viewer elements\n    DIFF: {\n        CHECK_ALL_BTN: '.vdm-check-all-btn',\n        CHUNK: '.vdm-diff__chunk',\n        CHUNK_SELECTED: '.vdm-diff__chunk--selected',\n        CHUNK_UNSELECTED: '.vdm-diff__chunk--unselected',\n        CONTAINER: '#vdm-diff__container',\n        CONTENT_WRAPPER: '#vdm-diff__content-wrapper',\n        LINE_ADD: '.vdm-diff__line--add',\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_CONTENT_EMPTY: '.vdm-code__line-content--empty',\n        LINE_DELETE: '.vdm-diff__line--delete',\n        LINE_PLACEHOLDER: '.vdm-diff__line--placeholder',\n        LINE_REPLACE_LEFT: '.vdm-diff__line--replace-left',\n        LINE_REPLACE_RIGHT: '.vdm-diff__line--replace-right',\n        // LOADING selector removed - use Selectors.LOADER.MAIN instead\n        PANE: '.vdm-diff__pane',\n        PANE_CONTENT: '.vdm-diff__pane-content',\n        PANE_HEADER: '.vdm-pane-header',\n        PANE_LEFT: '#vdm-diff__pane--left',\n        PANE_RIGHT: '#vdm-diff__pane--right',\n        PANES_CONTAINER: '.vdm-diff__panes-container',\n        PLACEHOLDER: '.vdm-diff__placeholder',\n        TABLE_WRAPPER: '.vdm-diff__table-wrapper',\n        VIEWER: '#vdm-diff__viewer'\n    },\n\n    // Icon markers\n    ICONS: {\n        COLUMN: '.vdm-icon__column',\n        MARKER: '.vdm-icon__marker',\n        MARKER_PLACEHOLDER: '.vdm-icon__marker--placeholder',\n        SELECT: '.vdm-icon__select',\n        SELECT_LEFT: '.vdm-icon__select--left',\n        SELECT_RIGHT: '.vdm-icon__select--right'\n    },\n\n    // Loader elements\n    LOADER: {\n        ACTIVE: '.vdm-loader--active',\n        CONTAINER: '.vdm-loader__container',\n        FULLSCREEN: '.vdm-loader--fullscreen',\n        INDICATOR: '#vdm-loader__indicator',\n        INLINE: '.vdm-loader--inline',\n        MAIN: '#vdm-diff__loading', // Main application loader (previously DIFF.LOADING)\n        SPINNER: '.vdm-loader__spinner',\n        TEXT: '.vdm-loader__text',\n        WRAPPER: '.vdm-loader__wrapper'\n    },\n\n    // Merge controls\n    MERGE: {\n        BUTTON_APPLY: '#vdm-merge__button--apply',\n        BUTTON_PREVIEW: '#vdm-merge__button--preview',\n        CONFLICT_MODAL: '#vdm-merge__conflict-modal',\n        CONTROLS_ACTIONS: '.vdm-merge-controls__actions',\n        DESTINATION_DROPDOWN: '#vdm-merge__destination-dropdown',\n        DESTINATION_TOGGLE: '#vdm-merge__destination-toggle',\n        GET_MERGED_RESULT_BTN: '#vdm-merge__get-merged-result-btn',\n        MODAL: '#vdm-merge__modal',\n        PREVIEW_CONTENT: '#vdm-merge__preview-content',\n        PREVIEW_MODAL: '#vdm-merge__preview-modal',\n        TOGGLE_ICON: '#vdm-merge-controls__toggle-icon',\n        TOGGLE_TEXT: '#vdm-merge-controls__toggle-text'\n    },\n\n    // Modal dialogs\n    MODAL: {\n        BACKDROP: '#vdm-modal-backdrop',\n        CLOSE: '.vdm-modal__close',\n        CLOSE_BTN: '.vdm-modal__close', // Changed from ID to class\n        CODE_COPY: '#vdm-modal--code-copy',\n        CONFIRM: '#vdm-modal--confirm',\n        CONFIRMATION_CONTENT: '#vdm-modal__confirmation-content',\n        CONTAINER: '.vdm-modal',\n        CONTENT: '.vdm-modal__content',\n        CONTINUE_BTN: '#vdm-modal__continue-btn',\n        COPY_CONTENT: '#vdm-modal__copy-content',\n        FIXED_FOOTER: '.vdm-modal--fixed-footer',\n        FOOTER: '.vdm-modal__footer',\n        FULLSCREEN: '.vdm-modal--fullscreen',\n        HEADER: '.vdm-modal__header',\n        HEADER_FIXED: '.vdm-modal__header--fixed',\n        MERGE_BTN: '#vdm-modal__merge-btn',\n        MESSAGE: '#vdm-modal__message',\n        PREVIEW: '#vdm-modal--preview',\n        PREVIEW_CONTENT: '.vdm-modal__preview-content',\n        PREVIEW_CONTENT_ID: '#vdm-merge__preview-content',\n        PREVIEW_FILENAME: '#vdm-modal__preview-filename',\n        TITLE: '.vdm-modal__title'\n    },\n\n    // Navigation\n    NAVIGATION: {\n        CONTAINER: '.vdm-nav__controls',\n        COUNTER: '#vdm-nav__counter',\n        COUNTER_ELEMENT: '.vdm-navigator__counter',\n        HIGHLIGHT: '.vdm-highlight',\n        NAV_CHUNK: '.vdm-nav__chunk',\n        NEXT_BUTTON: '#vdm-nav__button--next',\n        PREV_BUTTON: '#vdm-nav__button--prev'\n    },\n\n    // Status indicators\n    STATUS: {\n        LOADED: '.vdm-status__loaded',\n        RESOLVED: '.vdm-status__resolved',\n        SCROLLED: '.vdm-status__scrolled-horizontally',\n        UNRESOLVED: '.vdm-status__unresolved'\n    },\n\n    // Theme and appearance\n    THEME: {\n        DARK: '.vdm-theme--dark',\n        LIGHT: '.vdm-theme--light',\n        LOADING_INDICATOR: '#vdm-theme__loading-indicator',\n        MODE_PREFIX: '.vdm-theme',\n        SELECTOR: '#vdm-theme__selector',\n        SWITCHER: '#vdm-theme-switcher',\n        TOGGLE: '#vdm-theme__toggle'\n    },\n\n    // Theme switcher components\n    THEME_SWITCHER: {\n        CONTROL: '.vdm-theme-switcher__control',\n        LABEL: '.vdm-theme-switcher__label',\n        SLIDER: '.vdm-theme-switcher__slider',\n        SLIDER_ROUND: '.vdm-theme-switcher__slider--round',\n        WRAPPER: '.vdm-theme-switcher__wrapper'\n    },\n\n    // Theme selector components\n    THEME_SELECTOR: {\n        WRAPPER: '.vdm-theme-selector__wrapper'\n    },\n\n    // Tooltips\n    TOOLTIP: {\n        ARROW: '.vdm-tooltip__arrow',\n        CONTAINER: '.vdm-tooltip',\n        CONTENT: '.vdm-tooltip__content'\n    },\n\n    // Utility classes - these can be overridden from PHP config\n    UTILITY: getUtilitySelectors()\n};\n\n// Process the selectors to add the name functionality\nconst Selectors = processSelectors(baseSelectors);\n\nexport default Selectors;\n","import Selectors from '../constants/Selectors';\n\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * AlertManager - Centralized utility for managing alert messages\n *\n * This singleton class provides methods to display and hide alert messages\n * throughout the application in a consistent manner. It supports different types\n * of alerts including info, success, warning, and danger.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * AlertManager class\n *\n * Provides methods to display and hide alert messages throughout the application\n */\nexport class AlertManager extends BaseSingleton {\n    /**\n     * Initialize the AlertManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.containerId = 'vdm-alert-container';\n        this.activeAlert = null;\n        this.timeoutId = null;\n\n        // Ensure the alert container exists and store it in this.container\n        this.container = this._ensureContainer();\n\n        // Mark as initialized\n        this.initialized = true;\n\n        Debug.log('AlertManager: Initialized', null, 2);\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {AlertManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new AlertManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Ensure the alert container exists in the DOM\n     * @private\n     */\n    _ensureContainer() {\n        let container = document.getElementById(this.containerId);\n\n        if (!container) {\n            container = document.createElement('div');\n            container.id = this.containerId;\n            container.className = 'vdm-alert-container';\n            container.style.position = 'fixed';\n            container.style.top = '20px';\n            container.style.left = '50%';\n            container.style.transform = 'translateX(-50%)';\n            container.style.zIndex = '9999';\n            container.style.width = 'auto';\n            container.style.maxWidth = '90%';\n\n            document.body.appendChild(container);\n            Debug.log('AlertManager: Created alert container', null, 2);\n        }\n\n        return container;\n    }\n\n    /**\n     * Create and show an alert\n     * @param {string} message - The alert message\n     * @param {string} type - The alert type: 'success', 'info', 'warning', 'error'\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} - The alert element\n     */\n    showAlert(message, type, options = {}) {\n        Debug.log('AlertManager.showAlert called with type', type, 2);\n        Debug.log('AlertManager.showAlert message', message, 3);\n\n        // Default options\n        const defaultOptions = {\n            timeout: 5000,      // Auto-dismiss after 5 seconds (0 = no auto-dismiss)\n            dismissable: true,  // Show close button\n            translate: true,    // Translate message if TranslationManager is available\n            className: '',      // Additional CSS classes\n            container: null,    // Container element (defaults to this.container)\n            targetElement: null, // Target element to place alert relative to\n            placement: 'before' // Placement relative to targetElement ('before' or 'after')\n        };\n\n        const mergedOptions = { ...defaultOptions, ...options };\n\n        // Only use the container if we're not placing relative to a target element\n        const useContainer = !mergedOptions.targetElement && (mergedOptions.container || this.container);\n\n        Debug.log('AlertManager placement options', {\n            hasTargetElement: !!mergedOptions.targetElement,\n            placement: mergedOptions.placement,\n            useContainer: !!useContainer\n        }, 3);\n\n        // Create alert element\n        const alertElement = document.createElement('div');\n\n        // Get the base alert class from Selectors if available\n        const baseAlertClass = Selectors.UTILITY.ALERT ?\n            Selectors.UTILITY.ALERT.toString().substring(1) : // Remove leading '.'\n            'vdm-alert';\n\n        // Start with base class\n        let alertClass = baseAlertClass;\n\n        // Type-specific class - use the proper format with double hyphens\n        if (type) {\n            // Use proper format from Selectors if available\n            const typeClass = type === 'info' && Selectors.UTILITY.ALERT_INFO ?\n                Selectors.UTILITY.ALERT_INFO.toString().substring(1) : // Remove leading '.'\n                `${baseAlertClass}--${type}`; // Use the proper double-hyphen format\n\n            alertClass += ` ${typeClass}`;\n        }\n\n        // Add any custom classes\n        if (mergedOptions.className) {\n            alertClass += ` ${mergedOptions.className}`;\n        }\n\n        alertElement.className = alertClass;\n        Debug.log('Alert classnames', alertElement.className, 3);\n        Debug.log('Alert selector values', {\n            selectorBase: Selectors.UTILITY.ALERT ? Selectors.UTILITY.ALERT.toString() : 'vdm-alert',\n            selectorType: type ? `${baseAlertClass}--${type}` : 'none'\n        }, 3);\n\n        // Translate message if needed\n        let finalMessage = message;\n        if (mergedOptions.translate && typeof TranslationManager !== 'undefined') {\n            const translationManager = TranslationManager.getInstance();\n            if (translationManager && typeof translationManager.get === 'function') {\n                finalMessage = translationManager.get(message, message);\n            }\n        }\n\n        // Set content\n        alertElement.innerHTML = finalMessage;\n\n        // Add close button if dismissable\n        if (mergedOptions.dismissable) {\n            const closeButton = document.createElement('button');\n            // Fix the close button class to match the CSS definition\n            closeButton.className = 'vdm-alert__close';\n            closeButton.innerHTML = '&times;';\n            closeButton.setAttribute('aria-label', 'Close');\n            closeButton.setAttribute('type', 'button');\n            alertElement.appendChild(closeButton);\n\n            // Add click event for close button\n            closeButton.addEventListener('click', () => this.hideAlert(alertElement));\n            Debug.log('Close button', closeButton ? 'found' : 'not found', 3);\n        }\n\n        // Add to container or place relative to target element\n        if (mergedOptions.targetElement) {\n            Debug.log('AlertManager: Placing alert relative to target element', {\n                target: mergedOptions.targetElement,\n                placement: mergedOptions.placement\n            }, 3);\n\n            if (mergedOptions.placement === 'before') {\n                // Insert before the target element\n                mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement);\n            } else if (mergedOptions.placement === 'after') {\n                // Insert after the target element\n                if (mergedOptions.targetElement.nextSibling) {\n                    mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement.nextSibling);\n                } else {\n                    mergedOptions.targetElement.parentNode.appendChild(alertElement);\n                }\n            }\n        } else if (useContainer) {\n            // Regular container append if no target element is specified\n            useContainer.appendChild(alertElement);\n            Debug.log('Alert appended to container', null, 3);\n        } else {\n            // Fallback to body if no container and no target element\n            document.body.appendChild(alertElement);\n            Debug.log('Alert appended to body', null, 3);\n        }\n\n        // Store reference to the active alert\n        this.activeAlert = alertElement;\n\n        // Set up auto-dismiss\n        if (mergedOptions.timeout > 0) {\n            this.timeoutId = setTimeout(() => {\n                this.hideAlert(alertElement);\n            }, mergedOptions.timeout);\n        }\n\n        Debug.log('Returning alert element', alertElement, 3);\n        return alertElement;\n    }\n\n    /**\n     * Hide the current alert if one exists\n     * @param {HTMLElement} alertElement - Optional specific alert element to hide\n     */\n    hideAlert(alertElement = null) {\n        // Clear any existing timeout\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n\n        // If a specific alert element is provided, remove it\n        if (alertElement?.parentNode) {\n            alertElement.parentNode.removeChild(alertElement);\n            Debug.log('AlertManager: Hiding specific alert', null, 3);\n\n            // If this was the active alert, clear the reference\n            if (this.activeAlert === alertElement) {\n                this.activeAlert = null;\n            }\n            return;\n        }\n\n        // Otherwise, remove the active alert if it exists\n        if (this.activeAlert?.parentNode) {\n            this.activeAlert.parentNode.removeChild(this.activeAlert);\n            this.activeAlert = null;\n            Debug.log('AlertManager: Hiding active alert', null, 3);\n        }\n    }\n\n    /**\n     * Show an info alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showInfo(message, options = {}) {\n        return this.showAlert(message, 'info', options);\n    }\n\n    /**\n     * Show a success alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showSuccess(message, options = {}) {\n        return this.showAlert(message, 'success', options);\n    }\n\n    /**\n     * Show a warning alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showWarning(message, options = {}) {\n        return this.showAlert(message, 'warning', options);\n    }\n\n    /**\n     * Show a danger/error alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showError(message, options = {}) {\n        return this.showAlert(message, 'danger', options);\n    }\n}\n\nexport default AlertManager;\n","/**\n * Base singleton implementation to standardize pattern across components\n */\nexport class BaseSingleton {\n    /**\n     * Get the singleton instance - must be implemented by subclasses\n     * @returns {BaseSingleton} The singleton instance\n     */\n    static getInstance() {\n        throw new Error('getInstance() must be implemented by subclass');\n    }\n\n    /**\n     * Check if this instance is already instantiated\n     * @protected\n     * @param {Object} instanceVar - The module-level instance variable\n     * @returns {boolean} True if this is the first initialization\n     */\n    _isFirstInstance(instanceVar) {\n        return !instanceVar;\n    }\n}\n","import Selectors from '../constants/Selectors';\nimport { Debug } from '../utils/Debug';\n\n// Cache for chunk elements to avoid repeated DOM queries\nconst _elementCache = {};\nconst _iconMarkerCache = {};\nconst _rowCache = {};\nlet _chunkIndex = null;\n\n// Cache statistics for diagnostics\nconst _cacheStats = {\n    elementCacheHits: 0,\n    elementCacheMisses: 0,\n    iconMarkerCacheHits: 0,\n    iconMarkerCacheMisses: 0,\n    rowCacheHits: 0,\n    rowCacheMisses: 0\n};\n\n/**\n * Utility functions specific to chunk operations\n */\nexport class ChunkUtils {\n    /**\n     * Clear the element cache\n     * Should be called when the DOM structure changes significantly\n     */\n    static clearCache() {\n        Object.keys(_elementCache).forEach(key => delete _elementCache[key]);\n        Object.keys(_iconMarkerCache).forEach(key => delete _iconMarkerCache[key]);\n        Object.keys(_rowCache).forEach(key => delete _rowCache[key]);\n        _chunkIndex = null;\n        Debug.log('ChunkUtils: Cache cleared', null, 2);\n    }\n\n    /**\n     * Get cache statistics\n     * @returns {Object} Current cache statistics\n     */\n    static getCacheStats() {\n        return {..._cacheStats};\n    }\n\n    /**\n     * Preload all chunk elements into cache\n     * This dramatically improves performance when working with large files\n     * @returns {Object} Index of all chunks and their elements\n     */\n    static preloadChunks() {\n        const startTime = performance.now();\n\n        // Clear existing cache first\n        ChunkUtils.clearCache();\n\n        // Initialize chunk index\n        _chunkIndex = {\n            byId: {},\n            byLineId: {},\n            allChunkIds: new Set()\n        };\n\n        // Get all chunk elements in one query\n        const allChunkElements = document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id]`);\n        Debug.log(`ChunkUtils: Preloading ${allChunkElements.length} chunk elements`, null, 2);\n\n        // Process all chunk elements\n        allChunkElements.forEach(element => {\n            const chunkId = element.getAttribute('data-chunk-id');\n            const side = element.getAttribute('data-side');\n            const lineId = element.getAttribute('data-line-id');\n\n            if (!chunkId) return;\n\n            // Add to chunk index\n            _chunkIndex.allChunkIds.add(chunkId);\n\n            // Initialize chunk in index if needed\n            if (!_chunkIndex.byId[chunkId]) {\n                _chunkIndex.byId[chunkId] = {\n                    elements: {\n                        all: [],\n                        left: [],\n                        right: []\n                    },\n                    lineIds: new Set()\n                };\n            }\n\n            // Add element to appropriate collections\n            _chunkIndex.byId[chunkId].elements.all.push(element);\n            if (side === 'left') {\n                _chunkIndex.byId[chunkId].elements.left.push(element);\n            } else if (side === 'right') {\n                _chunkIndex.byId[chunkId].elements.right.push(element);\n            }\n\n            // Track line ID and add to line index\n            if (lineId) {\n                _chunkIndex.byId[chunkId].lineIds.add(lineId);\n\n                // Add to line index for quick lookup\n                _chunkIndex.byLineId[lineId] = {\n                    chunkId: chunkId,\n                    element: element\n                };\n\n                // Also cache the element's parent row\n                const row = element.closest('tr');\n                if (row) {\n                    _rowCache[element.dataset.lineId] = row;\n                }\n            }\n\n            // Add to element cache directly to avoid later queries\n            // 1. All elements for chunk\n            const allCacheKey = `${chunkId}:both`;\n            if (!_elementCache[allCacheKey]) {\n                _elementCache[allCacheKey] = [];\n            }\n            _elementCache[allCacheKey].push(element);\n\n            // 2. Side-specific elements\n            if (side) {\n                const sideCacheKey = `${chunkId}:${side}`;\n                if (!_elementCache[sideCacheKey]) {\n                    _elementCache[sideCacheKey] = [];\n                }\n                _elementCache[sideCacheKey].push(element);\n            }\n        });\n\n        // Preload all icon markers\n        const allIconMarkers = document.querySelectorAll(`${Selectors.ICONS.MARKER}[data-line-id]`);\n        Debug.log(`ChunkUtils: Preloading ${allIconMarkers.length} icon markers`, null, 2);\n\n        allIconMarkers.forEach(marker => {\n            const lineId = marker.getAttribute('data-line-id');\n            if (lineId) {\n                _iconMarkerCache[lineId] = marker;\n\n                // Also associate with chunk if possible\n                if (_chunkIndex.byLineId[lineId]) {\n                    const chunkId = _chunkIndex.byLineId[lineId].chunkId;\n                    if (!_chunkIndex.byId[chunkId].iconMarkers) {\n                        _chunkIndex.byId[chunkId].iconMarkers = [];\n                    }\n                    _chunkIndex.byId[chunkId].iconMarkers.push(marker);\n                }\n            }\n        });\n\n        const duration = performance.now() - startTime;\n        Debug.log(`ChunkUtils: Preloaded ${Object.keys(_chunkIndex.byId).length} chunks in ${duration.toFixed(2)}ms`, null, 2);\n\n        return _chunkIndex;\n    }\n\n    /**\n     * Get all chunk IDs in the document\n     * @returns {Array} Array of chunk IDs\n     */\n    static getAllChunkIds() {\n        // Ensure index is built\n        if (!_chunkIndex) {\n            ChunkUtils.preloadChunks();\n        }\n\n        return Array.from(_chunkIndex.allChunkIds);\n    }\n\n    /**\n     * Sort elements by line number\n     * @param {Array|NodeList} elements - Elements to sort\n     * @returns {Array} Sorted elements\n     */\n    static sortElementsByLineNumber(elements) {\n        return Array.from(elements).sort((a, b) => {\n            const aLineNum = parseInt(a.dataset.lineId?.split('-').pop() || '0', 10);\n            const bLineNum = parseInt(b.dataset.lineId?.split('-').pop() || '0', 10);\n            return aLineNum - bLineNum;\n        });\n    }\n\n    /**\n     * Find elements by chunk ID\n     * @param {string} chunkId - The chunk ID to find\n     * @param {string} side - Optional side ('left' or 'right')\n     * @returns {Array} Matching elements\n     */\n    static getChunkElements(chunkId, side = null) {\n        if (!chunkId) return [];\n\n        // Create cache key\n        const cacheKey = `${chunkId}:${side || 'both'}`;\n\n        // Use cached elements if available\n        if (_elementCache[cacheKey]) {\n            _cacheStats.elementCacheHits++;\n            return _elementCache[cacheKey];\n        }\n\n        _cacheStats.elementCacheMisses++;\n\n        // Check if we have the chunk index built\n        if (_chunkIndex && _chunkIndex.byId[chunkId]) {\n            let elements;\n            if (side === 'left') {\n                elements = _chunkIndex.byId[chunkId].elements.left;\n            } else if (side === 'right') {\n                elements = _chunkIndex.byId[chunkId].elements.right;\n            } else {\n                elements = _chunkIndex.byId[chunkId].elements.all;\n            }\n\n            // Cache the result\n            _elementCache[cacheKey] = elements;\n            return elements;\n        }\n\n        // Fall back to DOM queries if index not available\n        let elements;\n        if (side) {\n            elements = Array.from(document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id=\"${chunkId}\"][data-side=\"${side}\"]`));\n        } else {\n            elements = Array.from(document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id=\"${chunkId}\"]`));\n        }\n\n        // Cache the result\n        _elementCache[cacheKey] = elements;\n        return elements;\n    }\n\n    /**\n     * Get all icon markers for a chunk ID\n     * @param {string} chunkId - The chunk ID\n     * @returns {Array} Array of icon marker elements\n     */\n    static getChunkIconMarkers(chunkId) {\n        if (!chunkId) return [];\n\n        // Check if we have the chunk index built\n        if (_chunkIndex && _chunkIndex.byId[chunkId]) {\n            return _chunkIndex.byId[chunkId].iconMarkers || [];\n        }\n\n        // If not in index, collect markers by getting line IDs from chunk elements\n        const elements = ChunkUtils.getChunkElements(chunkId);\n        const markers = [];\n\n        elements.forEach(element => {\n            const lineId = element.dataset.lineId;\n            if (lineId) {\n                const marker = ChunkUtils.getIconMarker(lineId);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n        });\n\n        return markers;\n    }\n\n    /**\n     * Get icon markers by chunk ID and line ID\n     * @param {string} lineId - The line ID\n     * @returns {Element|null} Icon marker element or null\n     */\n    static getIconMarker(lineId) {\n        if (!lineId) return null;\n\n        // Use cached marker if available\n        if (_iconMarkerCache[lineId]) {\n            _cacheStats.iconMarkerCacheHits++;\n            return _iconMarkerCache[lineId];\n        }\n\n        _cacheStats.iconMarkerCacheMisses++;\n\n        // If we have the index, check there first\n        if (_chunkIndex && _chunkIndex.byLineId[lineId]) {\n            // Get associated chunk and find marker\n            const chunkId = _chunkIndex.byLineId[lineId].chunkId;\n            if (_chunkIndex.byId[chunkId].iconMarkers) {\n                // Find marker with matching line ID\n                const marker = _chunkIndex.byId[chunkId].iconMarkers.find(m =>\n                    m.getAttribute('data-line-id') === lineId);\n\n                if (marker) {\n                    _iconMarkerCache[lineId] = marker;\n                    return marker;\n                }\n            }\n        }\n\n        // Fall back to DOM query\n        const iconMarker = document.querySelector(`${Selectors.ICONS.MARKER}[data-line-id=\"${lineId}\"]`);\n\n        // Cache the result\n        if (iconMarker) {\n            _iconMarkerCache[lineId] = iconMarker;\n        }\n\n        return iconMarker;\n    }\n\n    /**\n     * Get parent row of an element\n     * @param {Element} element - The element\n     * @returns {Element|null} Parent row element or null\n     */\n    static getParentRow(element) {\n        if (!element) return null;\n\n        const lineId = element.dataset.lineId;\n\n        // Use cached row if available\n        if (lineId && _rowCache[lineId]) {\n            _cacheStats.rowCacheHits++;\n            return _rowCache[lineId];\n        }\n\n        _cacheStats.rowCacheMisses++;\n        const row = element.closest('tr');\n\n        // Cache the result if line ID is available\n        if (lineId && row) {\n            _rowCache[lineId] = row;\n        }\n\n        return row;\n    }\n\n    /**\n     * Generate file content from line objects\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated file content\n     */\n    static generateFileContent(lines) {\n        return lines\n            .filter(line => line.type === 'content')\n            .map(line => line.line)\n            .join('\\n');\n    }\n}\n","/**\n * Configuration management utilities\n */\nexport class ConfigUtils {\n    /**\n     * Recursively merge multiple configurations\n     * @param {...Object} configs - Configurations to merge in order of increasing precedence\n     * @returns {Object} Merged configuration\n     */\n    static mergeConfigurations(...configs) {\n        // Start with an empty object\n        const result = {};\n\n        // Process each config in order\n        for (const config of configs) {\n            if (!config || typeof config !== 'object') {\n                continue;\n            }\n\n            // Merge properties\n            for (const key in config) {\n                if (Object.prototype.hasOwnProperty.call(config, key)) {\n                    // If both values are objects, merge recursively\n                    if (\n                        typeof result[key] === 'object' &&\n                        result[key] !== null &&\n                        !Array.isArray(result[key]) &&\n                        typeof config[key] === 'object' &&\n                        config[key] !== null &&\n                        !Array.isArray(config[key])\n                    ) {\n                        result[key] = this.mergeConfigurations(result[key], config[key]);\n                    } else {\n                        // Otherwise just override\n                        result[key] = config[key];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Validate required configuration\n     * @param {Object} config - Configuration to validate\n     * @returns {Object} Validation result with isValid and error properties\n     */\n    static validateConfig(config) {\n        const result = {\n            isValid: true,\n            error: null\n        };\n\n        if (!config) {\n            result.isValid = false;\n            result.error = 'No configuration found - window.diffConfig is not defined';\n            return result;\n        }\n\n        if (!config.diffData) {\n            result.isValid = false;\n            result.error = 'No diff data in configuration';\n\n            // Create empty diff data structure to prevent errors\n            config.diffData = {\n                old: [],\n                new: [],\n                chunks: []\n            };\n\n            // Log additional information to help diagnose the issue\n            console.warn('ConfigUtils: Missing diffData in configuration', {\n                configKeys: Object.keys(config),\n                oldData: config.old ? 'present' : 'missing',\n                newData: config.new ? 'present' : 'missing'\n            });\n        } else if (!config.diffData.chunks) {\n            result.isValid = false;\n            result.error = 'Missing chunks in diff data';\n\n            // Initialize empty chunks array to prevent errors\n            config.diffData.chunks = [];\n\n            console.warn('ConfigUtils: Missing chunks in diffData', {\n                diffDataKeys: Object.keys(config.diffData)\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Get configuration summary for logging\n     * @param {Object} config - Configuration object\n     * @returns {Object} Summary of key configuration properties\n     */\n    static getConfigSummary(config) {\n        return {\n            debug: !!config?.debug,\n            chunks: Array.isArray(config?.diffData?.chunks) ?\n                config.diffData.chunks.length : 0\n        };\n    }\n\n    /**\n     * Extract file extension from filepath\n     * @param {string} filepath - Path to extract extension from\n     * @param {string} defaultExtension - Default extension if not found\n     * @returns {string} The extracted extension or default\n     */\n    static getFileExtension(filepath, defaultExtension = 'php') {\n        if (!filepath) return defaultExtension;\n        return filepath.split('.').pop() || defaultExtension;\n    }\n\n    /**\n     * Get stored theme preferences\n     * @param {Object} config - Configuration with default theme settings\n     * @returns {Object} Theme settings object\n     */\n    static getThemePreferences(config) {\n        return {\n            mode: localStorage.getItem('diffViewerTheme') ||\n                  config?.theme?.defaultMode ||\n                  'light',\n            family: localStorage.getItem('diffViewerThemeFamily') ||\n                    config?.theme?.defaultFamily ||\n                    'atom-one'\n        };\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { IconRegistry } from './IconRegistry';\nimport AlertManager from './AlertManager';\n\n// Cache for DOM queries\nconst elementCache = new Map();\n\n/**\n * Reusable DOM manipulation utilities\n */\nexport class DOMUtils {\n    /**\n     * Set up a button handler with proper cleanup\n     * @param {string} buttonId - Button element ID\n     * @param {Function} handlerFn - Event handler function\n     * @param {string} logName - Name for logging\n     * @returns {Object|null} Handler information or null if element not found\n     */\n    static setupButtonHandler(buttonId, handlerFn, logName = '') {\n        const button = document.getElementById(buttonId);\n        if (!button) {\n            Debug.warn(`DOMUtils: Button ${buttonId} not found`, null, 2);\n            return null;\n        }\n\n        const instanceId = Date.now();\n\n        // Clean up if needed\n        if (button._handlerId && button._handlerId !== instanceId) {\n            // Clone to remove all event listeners\n            const newBtn = button.cloneNode(true);\n            if (button.parentNode) {\n                button.parentNode.replaceChild(newBtn, button);\n            }\n            Debug.log(`DOMUtils: Cleaned up previous handler for ${logName || buttonId}`, null, 2);\n            handlerFn(newBtn);\n            newBtn._handlerId = instanceId;\n            return { element: newBtn, id: instanceId };\n        } else {\n            button._handlerId = instanceId;\n            handlerFn(button);\n            return { element: button, id: instanceId };\n        }\n    }\n\n    /**\n     * Get element by ID with error handling\n     * @param {string} id - Element ID\n     * @returns {Element|null} The found element or null\n     */\n    static getElement(id) {\n        if (!id) {\n            Debug.error('DOMUtils.getElement: Empty ID provided', null, 1);\n            return null;\n        }\n\n        // Check cache first\n        if (elementCache.has(id)) {\n            return elementCache.get(id);\n        }\n\n        // Try direct getElementById first\n        let element = document.getElementById(id);\n\n        // If not found and the id doesn't include a #, try with a selector\n        if (!element) {\n            try {\n                if (!id.includes('#') && !id.includes('.')) {\n                    // If just an ID without # prefix, try with # prefix\n                    element = document.querySelector('#' + id);\n                } else {\n                    // Try as selector\n                    element = document.querySelector(id);\n                }\n            } catch (e) {\n                Debug.error(`DOMUtils.getElement: Error with selector: ${e.message}`, null, 1);\n            }\n        }\n\n        if (!element) {\n            Debug.error(`DOMUtils.getElement: Element with ID '${id}' not found`, null, 1);\n        } else {\n            // Cache the found element\n            elementCache.set(id, element);\n        }\n\n        return element;\n    }\n\n    /**\n     * Update toggle button appearance\n     * @param {string} currentValue - Current toggle value\n     * @param {Object} elements - Object containing button, icon, and text elements\n     * @param {Object} options - Configuration options\n     */\n    static updateToggleButton(currentValue, elements, options) {\n        const { toggleBtn, toggleIcon, toggleText } = elements;\n        const {\n            firstOption, secondOption,\n            firstClass, secondClass,\n            firstText, secondText,\n            firstTooltip, secondTooltip\n        } = options;\n\n        if (!toggleBtn || !toggleIcon || !toggleText) {\n            Debug.warn('DOMUtils: Missing elements for toggle button update');\n            return;\n        }\n\n        Debug.log(`DOMUtils: Updating toggle button to ${currentValue}`, null, 2);\n\n        // Set the button class based on current value\n        if (currentValue === firstOption) {\n            toggleIcon.className = firstClass;\n            toggleText.textContent = firstText;\n            toggleBtn.title = firstTooltip || firstText;\n            toggleBtn.setAttribute('data-value', firstOption);\n        } else if (currentValue === secondOption) {\n            toggleIcon.className = secondClass;\n            toggleText.textContent = secondText;\n            toggleBtn.title = secondTooltip || secondText;\n            toggleBtn.setAttribute('data-value', secondOption);\n        } else {\n            Debug.warn(`DOMUtils: Invalid toggle value: ${currentValue}`);\n        }\n    }\n\n    /**\n     * Show a standardized message in a container\n     * @param {string} containerId - Container element ID\n     * @param {string} message - Message content\n     * @param {string} type - Message type: 'info', 'success', 'warning', 'danger'\n     * @param {Object} options - Additional options\n     * @returns {boolean} Success status\n     */\n    static showMessage(containerId, message, type = 'info', options = {}) {\n        const container = document.getElementById(containerId);\n        if (!container) {\n            Debug.warn(`DOMUtils: Container #${containerId} not found for message`, null, 2);\n            return false;\n        }\n\n        // Default options\n        const {\n            _iconName = null,     // Custom icon name (preserved for backwards compatibility)\n            className = 'mt-5',  // Additional CSS classes\n            elementId = '',      // ID for created element\n            keepExisting = false // Whether to append or replace content\n        } = options;\n\n        // Use AlertManager to create the alert\n        const alertManager = AlertManager.getInstance();\n\n        // Clear existing content unless we're keeping it\n        if (!keepExisting) {\n            container.innerHTML = '';\n        }\n\n        // Check if HAS_ICON exists in UTILITY and provide a fallback if it doesn't\n        let iconClass = '';\n        try {\n            if (Selectors.UTILITY && Selectors.UTILITY.HAS_ICON) {\n                iconClass = Selectors.UTILITY.HAS_ICON.name();\n            } else {\n                // Fallback if HAS_ICON is not defined\n                iconClass = 'vdm-has-icon';\n                Debug.log('DOMUtils: Using fallback icon class because Selectors.UTILITY.HAS_ICON is undefined', null, 2);\n            }\n        } catch (e) {\n            // Fallback if any error occurs\n            iconClass = 'vdm-has-icon';\n            Debug.warn('DOMUtils: Error getting icon class, using fallback', e, 2);\n        }\n\n        // Create the alert with AlertManager\n        const alertElement = alertManager.showAlert(message, type, {\n            timeout: 0, // Don't auto-dismiss\n            translate: false, // Don't translate the message\n            className: `${iconClass} ${className}`\n        });\n\n        // Set ID if specified\n        if (elementId) {\n            alertElement.id = elementId;\n        }\n\n        // Append to container\n        container.appendChild(alertElement);\n\n        return true;\n    }\n\n    /**\n     * Toggle element visibility\n     * @param {string} elementId - Element ID\n     * @param {boolean} visible - Whether element should be visible\n     * @param {string} displayMode - Display mode when visible\n     * @returns {boolean} Success status\n     */\n    static toggleVisibility(elementId, visible, displayMode = 'block') {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for visibility toggle`, null, 2);\n            return false;\n        }\n\n        element.style.display = visible ? displayMode : 'none';\n        return true;\n    }\n\n    /**\n     * Add or remove a class from an element\n     * @param {string} elementId - Element ID\n     * @param {string} className - Class name to toggle\n     * @param {boolean} add - Whether to add or remove the class\n     * @returns {boolean} Success status\n     */\n    static toggleClass(elementId, className, add = true) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for class toggle`, null, 2);\n            return false;\n        }\n\n        if (add) {\n            element.classList.add(className);\n        } else {\n            element.classList.remove(className);\n        }\n\n        return true;\n    }\n\n    /**\n     * Create an element with specified attributes\n     * @param {string} tagName - Element tag name\n     * @param {string|null} id - Element ID\n     * @param {string|Array} classes - CSS classes\n     * @param {Object} attributes - Additional attributes\n     * @returns {HTMLElement} Created element\n     */\n    static createElement(tagName = 'div', id = null, classes = [], attributes = {}) {\n        const element = document.createElement(tagName);\n\n        // Set ID if provided\n        if (id) {\n            element.id = id;\n        }\n\n        // Add classes - handle both arrays and space-separated strings\n        if (classes) {\n            let classList;\n            if (Array.isArray(classes)) {\n                classList = classes;\n            } else if (typeof classes === 'string') {\n                classList = classes.split(/\\s+/).filter(Boolean);\n            } else {\n                classList = [];\n            }\n\n            if (classList.length > 0) {\n                element.classList.add(...classList);\n            }\n        }\n\n        // Set attributes\n        Object.entries(attributes).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                element.setAttribute(key, value);\n            }\n        });\n\n        return element;\n    }\n\n    /**\n     * Create and append an element to a container\n     * @param {string} tagName - Element tag name\n     * @param {Element|string} container - Container element or ID\n     * @param {Object} options - Element options\n     * @returns {HTMLElement|null} Created element or null if container not found\n     */\n    static createAndAppendElement(tagName, container, options = {}) {\n        // Get container element if ID was provided\n        const containerElement = typeof container === 'string'\n            ? document.getElementById(container)\n            : container;\n\n        if (!containerElement) {\n            Debug.warn(`DOMUtils: Container not found for createAndAppendElement`, null, 2);\n            return null;\n        }\n\n        // Extract options\n        const { id = null, classes = [], attributes = {}, content = null } = options;\n\n        // Create element\n        const element = DOMUtils.createElement(tagName, id, classes, attributes);\n\n        // Set content if provided\n        if (content !== null) {\n            if (typeof content === 'string') {\n                element.innerHTML = content;\n            } else if (content instanceof Node) {\n                element.appendChild(content);\n            }\n        }\n\n        // Append to container\n        containerElement.appendChild(element);\n\n        return element;\n    }\n\n    /**\n     * Set element content safely\n     * @param {string} elementId - Element ID\n     * @param {string} content - HTML content\n     * @returns {boolean} Success status\n     */\n    static setContent(elementId, content) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for content update`, null, 2);\n            return false;\n        }\n\n        element.innerHTML = content;\n        return true;\n    }\n\n    /**\n     * Get elements by selector\n     * @param {string} selector - CSS selector\n     * @param {Element|Document|string} context - Search context or ID\n     * @returns {NodeList|null} Selected elements or null if context not found\n     */\n    static getElements(selector, context = document) {\n        // Get context element if ID was provided\n        const contextElement = typeof context === 'string'\n            ? document.getElementById(context)\n            : context;\n\n        if (!contextElement) {\n            Debug.warn(`DOMUtils: Context not found for selector: ${selector}`, null, 2);\n            return null;\n        }\n\n        return contextElement.querySelectorAll(selector);\n    }\n\n    /**\n     * Append HTML content to an element\n     * @param {string} elementId - Element ID\n     * @param {string} content - HTML content to append\n     * @returns {boolean} Success status\n     */\n    static appendContent(elementId, content) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for content append`, null, 2);\n            return false;\n        }\n\n        element.insertAdjacentHTML('beforeend', content);\n        return true;\n    }\n\n    /**\n     * Remove an element safely\n     * @param {string|Element} elementOrId - Element or element ID to remove\n     * @returns {boolean} Success status\n     */\n    static removeElement(elementOrId) {\n        const element = typeof elementOrId === 'string'\n            ? document.getElementById(elementOrId)\n            : element;\n\n        if (!element?.parentNode) {\n            Debug.warn(`DOMUtils: Element not found or has no parent for removal`, null, 2);\n            return false;\n        }\n\n        element.parentNode.removeChild(element);\n        return true;\n    }\n\n    /**\n     * Setup event handlers on elements matching a selector\n     * @param {string} selector - CSS selector to match elements\n     * @param {string} eventType - Event type (e.g., 'click', 'change')\n     * @param {function} handler - Event handler function\n     * @param {Object} options - Additional options\n     * @returns {number} Number of elements that received the handler\n     */\n    static setupEventHandlers(selector, eventType, handler, options = {}) {\n        const {\n            context = document,\n            removeExisting = false,\n            styles = null\n        } = options;\n\n        const elements = DOMUtils.getElements(selector, context);\n        if (!elements) return 0;\n\n        // Remove existing handlers if requested\n        if (removeExisting) {\n            elements.forEach(element => {\n                element.removeEventListener(eventType, handler);\n            });\n        }\n\n        // Add new handlers and apply styles\n        elements.forEach(element => {\n            element.addEventListener(eventType, handler);\n\n            // Apply styles if provided\n            if (styles) {\n                Object.entries(styles).forEach(([property, value]) => {\n                    element.style[property] = value;\n                });\n            }\n        });\n\n        return elements.length;\n    }\n\n    /**\n     * Create an icon element\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Icon options\n     * @returns {Element} SVG icon element\n     */\n    static createIcon(iconName, options = {}) {\n        return IconRegistry.createIcon(iconName, options);\n    }\n\n    /**\n     * Get icon HTML string\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Icon options\n     * @returns {string} SVG icon HTML\n     */\n    static getIconHtml(iconName, options = {}) {\n        return IconRegistry.getIcon(iconName, options);\n    }\n}\n","/**\n * Debug utility for the diff viewer\n * Provides centralized logging with configuration options\n */\n\n/* eslint-disable no-console */\n// Disable console warnings for this file only since this is the official logging utility\n\nclass DebugUtility {\n    constructor() {\n        this.enabled = false;\n        this.logHistory = [];\n        this.maxLogHistory = 100;\n        this.prefix = '[DiffViewer]';\n        this.logLevel = 1; // Default to only high-level logs\n    }\n\n    /**\n     * Initialize debug settings\n     * @param {boolean} enabled - Enable debug output\n     * @param {string} prefix - Prefix for all log messages\n     * @param {number} logLevel - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    initialize (enabled = false, prefix = '[DiffViewer]', logLevel = 1) {\n        this.enabled = enabled;\n        this.prefix = prefix;\n        this.logLevel = enabled ? logLevel : 1;\n        console.error('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n        this.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n    }\n\n    /**\n     * Check if a message should be logged at the given level\n     * @param {number} level - The log level of the message\n     * @returns {boolean} - Whether the message should be logged\n     */\n    shouldLog(level = 1) {\n        return (window.diffConfig?.debug || this.enabled) && level <= this.logLevel;\n    }\n\n    /**\n     * Log an informational message\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    log(message, data = null, level = 1) {\n        if (!this.shouldLog(level)) return;\n\n        if (data !== null) {\n            console.log(`${this.prefix} ${message}`, data);\n            this._addToHistory('log', [message, data], level);\n        } else {\n            console.log(`${this.prefix} ${message}`);\n            this._addToHistory('log', [message], level);\n        }\n    }\n\n    /**\n     * Log a warning message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    warn (message, data = null, level = 1) {\n        // Warnings are always shown regardless of debug setting\n        if (data !== null) {\n            console.warn(`${this.prefix} ${message}`, data);\n            this._addToHistory('warn', [message, data], level);\n        } else {\n            console.warn(`${this.prefix} ${message}`);\n            this._addToHistory('warn', [message], level);\n        }\n    }\n\n    /**\n     * Log an error message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    error(message, data = null, level = 1) {\n        // Errors are always shown regardless of debug setting\n        if (data !== null) {\n            console.error(`${this.prefix} ${message}`, data);\n            this._addToHistory('error', [message, data], level);\n        } else {\n            console.error(`${this.prefix} ${message}`);\n            this._addToHistory('error', [message], level);\n        }\n    }\n\n    /**\n     * Get debug log history\n     * @param {number} maxLevel - Maximum level to include (1=high-level only, 3=all)\n     * @returns {Array} Log history filtered by level\n     */\n    getLogHistory(maxLevel = this.logLevel) {\n        if (maxLevel >= this.logLevel) {\n            return [...this.logHistory];\n        }\n        return this.logHistory.filter(entry => entry.level <= maxLevel);\n    }\n\n    /**\n     * Clear debug log history\n     */\n    clearLogHistory() {\n        this.logHistory = [];\n        this.log('Log history cleared');\n    }\n\n    /**\n     * Add entry to log history\n     * @private\n     * @param {string} type - Log type (log, warn, error)\n     * @param {Array} args - Message arguments\n     * @param {number} level - Log level\n     */\n    _addToHistory(type, args, level) {\n        this.logHistory.push({\n            timestamp: new Date(),\n            type,\n            message: args,\n            level\n        });\n\n        // Prevent excessive memory usage\n        if (this.logHistory.length > this.maxLogHistory) {\n            this.logHistory.shift();\n        }\n    }\n}\n\n// Create singleton instance\nconst Debug = new DebugUtility();\n\n// Export the singleton\nexport { Debug };\n","/**\n * DiffConfigManager.js\n *\n * Singleton utility to centralize management of the diffConfig configuration object.\n * This provides a single source of truth for the diffConfig settings used throughout the application.\n */\n\nimport { Debug } from './Debug';\n\n/**\n * Manages the diffConfig configuration settings as a singleton\n */\nexport class DiffConfigManager {\n    /**\n     * Private instance - follows singleton pattern\n     * @type {DiffConfigManager}\n     * @private\n     */\n    static #instance = null;\n\n    /**\n     * Centralized diffConfig object\n     * @type {Object}\n     * @private\n     */\n    #diffConfig = {};\n\n    /**\n     * Private constructor - use getInstance() instead\n     * @private\n     */\n    constructor() {\n        // Initialize the diffConfig with any existing window.diffConfig\n        if (typeof window !== 'undefined' && window.diffConfig) {\n            Debug.log('DiffConfigManager: Initializing with existing window.diffConfig', window.diffConfig, 2);\n            this.#diffConfig = { ...window.diffConfig };\n        } else {\n            this.#diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {}\n            };\n        }\n\n        // Make the diffConfig available globally through window.diffConfig\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {DiffConfigManager} The singleton instance\n     */\n    static getInstance() {\n        if (!DiffConfigManager.#instance) {\n            DiffConfigManager.#instance = new DiffConfigManager();\n        }\n        return DiffConfigManager.#instance;\n    }\n\n    /**\n     * Initialize with configuration\n     * @param {Object} config - The initial configuration\n     */\n    initialize(config = {}) {\n        Debug.log('DiffConfigManager: Initializing with config', config, 2);\n        this.#diffConfig = { ...this.#diffConfig, ...config };\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Get the current diffConfig\n     * @returns {Object} The current diffConfig\n     */\n    getDiffConfig() {\n        return this.#diffConfig;\n    }\n\n    /**\n     * Set a new diffConfig, completely replacing the current one\n     * @param {Object} config - The new configuration to use\n     */\n    setDiffConfig(config = {}) {\n        Debug.log('DiffConfigManager: Setting new diffConfig', config, 2);\n        this.#diffConfig = { ...config };\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Reset the diffConfig to default values, possibly with new overrides\n     * @param {Object} overrides - Optional configuration overrides to apply after reset\n     */\n    reset(overrides = {}) {\n        Debug.log('DiffConfigManager: Resetting diffConfig with overrides', overrides, 2);\n        this.#diffConfig = {\n            debug: false,\n            logLevel: 1,\n            old: {},\n            new: {},\n            ...overrides\n        };\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Update part of the configuration\n     * @param {Object} partialConfig - The partial configuration to update\n     */\n    update(partialConfig = {}) {\n        Debug.log('DiffConfigManager: Updating diffConfig with', partialConfig, 3);\n\n        // Check if the partialConfig has a nested 'config' property\n        if (partialConfig && partialConfig.config && typeof partialConfig.config === 'object') {\n            Debug.log('DiffConfigManager: Extracting nested config property', partialConfig.config, 3);\n            // Use the nested config object instead of the wrapper\n            this.#diffConfig = this.#mergeDeep(this.#diffConfig, partialConfig.config);\n        } else {\n            // Use the original object if no nested config property\n            this.#diffConfig = this.#mergeDeep(this.#diffConfig, partialConfig);\n        }\n\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Set a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} value - The value to set\n     */\n    set(key, value) {\n        Debug.log(`DiffConfigManager: Setting ${key}`, value, 3);\n        this.#diffConfig[key] = value;\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Get a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} defaultValue - Default value if the key doesn't exist\n     * @returns {*} The configuration value\n     */\n    get(key, defaultValue = null) {\n        return key in this.#diffConfig ? this.#diffConfig[key] : defaultValue;\n    }\n\n    /**\n     * Remove a specific configuration key\n     * @param {string} key - The configuration key to remove\n     */\n    remove(key) {\n        if (key in this.#diffConfig) {\n            Debug.log(`DiffConfigManager: Removing ${key}`, null, 3);\n            delete this.#diffConfig[key];\n            this.#updateGlobalDiffConfig();\n        }\n    }\n\n    /**\n     * Update the global window.diffConfig object\n     * @private\n     */\n    #updateGlobalDiffConfig() {\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...this.#diffConfig };\n        }\n    }\n\n    /**\n     * Deep merge two objects recursively\n     * @param {Object} target - Target object\n     * @param {Object} source - Source object to merge\n     * @returns {Object} The merged object\n     * @private\n     */\n    #mergeDeep(target, source) {\n        const output = { ...target };\n\n        if (this.#isObject(target) && this.#isObject(source)) {\n            Object.keys(source).forEach(key => {\n                if (this.#isObject(source[key])) {\n                    if (!(key in target)) {\n                        output[key] = source[key];\n                    } else {\n                        output[key] = this.#mergeDeep(target[key], source[key]);\n                    }\n                } else {\n                    output[key] = source[key];\n                }\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * Check if a value is an object\n     * @param {*} item - The value to check\n     * @returns {boolean} True if the value is an object\n     * @private\n     */\n    #isObject(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item));\n    }\n}\n\nexport default DiffConfigManager;\n","import { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\n\n/**\n * Utility for discovering API endpoints\n * Provides centralized access to API endpoints\n */\nexport class EndpointDiscovery extends BaseSingleton {\n    // Singleton instance\n    static #instance = null;\n\n    // Cached endpoint URL\n    #apiEndpoint = null;\n\n    // Promise for ongoing discovery\n    #discoveryPromise = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {EndpointDiscovery} The singleton instance\n     */\n    static getInstance() {\n        if (!EndpointDiscovery.#instance) {\n            EndpointDiscovery.#instance = new EndpointDiscovery();\n        }\n        return EndpointDiscovery.#instance;\n    }\n\n    /**\n     * Discover the API endpoint URL\n     * @returns {Promise<string>} Base API endpoint URL\n     */\n    async discoverEndpoint() {\n        // Return cached endpoint if available\n        if (this.#apiEndpoint) {\n            Debug.log('EndpointDiscovery: Using cached API endpoint', this.#apiEndpoint, 2);\n            return this.#apiEndpoint;\n        }\n\n        try {\n            // First check window.diffConfig.apiEndpoint\n            if (window.diffConfig?.apiEndpoint) {\n                Debug.log('EndpointDiscovery: Using configured API endpoint', window.diffConfig.apiEndpoint, 2);\n                this.#apiEndpoint = window.diffConfig.apiEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Try to determine endpoint based on script location\n            const scriptEndpoint = this.#determineEndpointFromScript();\n            if (scriptEndpoint) {\n                Debug.log('EndpointDiscovery: Determined API endpoint from script location', scriptEndpoint, 2);\n                this.#apiEndpoint = scriptEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Fall back to endpoint-config.php discovery\n            Debug.log('EndpointDiscovery: Discovering API endpoint from endpoint-config.php', null, 2);\n\n            // Generate URL to endpoint-config.php\n            const configUrl = this.#getEndpointConfigUrl();\n\n            Debug.log('EndpointDiscovery: Fetching from', configUrl, 2);\n\n            // Fetch endpoint configuration\n            const response = await fetch(configUrl);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch endpoint config: ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            Debug.log('EndpointDiscovery: Endpoint discovery response', data, 2);\n\n            // Check if we have a valid apiEndpoint in the response\n            if (data?.apiEndpoint !== undefined) {\n                this.#apiEndpoint = data.apiEndpoint;\n                Debug.log('EndpointDiscovery: Successfully discovered API endpoint', this.#apiEndpoint, 1);\n                return this.#apiEndpoint;\n            } else {\n                throw new Error('Invalid endpoint config response: apiEndpoint not found');\n            }\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error discovering endpoint', error, 1);\n\n            // Fall back to relative endpoint as a last resort\n            this.#apiEndpoint = './api/';\n            Debug.log('EndpointDiscovery: Using fallback endpoint', this.#apiEndpoint, 1);\n            return this.#apiEndpoint;\n        }\n    }\n\n    /**\n     * Get endpoint URL with efficient caching\n     * @param {string} [endpointName] Optional specific endpoint name (e.g., 'ajaxDiffMerge')\n     * @returns {Promise<string>} API endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        // First get the base endpoint URL\n        if (!this.#apiEndpoint) {\n            // If a discovery is already in progress, return that promise\n            if (this.#discoveryPromise) {\n                await this.#discoveryPromise;\n            } else {\n                // Start a new discovery and cache the promise\n                this.#discoveryPromise = this.discoverEndpoint();\n\n                try {\n                    // Wait for discovery to complete\n                    await this.#discoveryPromise;\n                } finally {\n                    // Clear the discovery promise regardless of outcome\n                    this.#discoveryPromise = null;\n                }\n            }\n        }\n\n        // Now we should have the base endpoint URL\n        if (!endpointName) {\n            // Return the base URL if no specific endpoint requested\n            return this.#apiEndpoint;\n        }\n\n        // For specific endpoints, map the name to the appropriate file\n        const endpointMap = {\n            'ajaxDiffMerge': 'ajax-diff-merge.php',\n            'diffProcessor': 'diff-processor.php',\n            'getFileContent': 'get-file-content.php',\n            'endpointsConfig': 'endpoint-config.php',  // <-- Changed to endpoint-config.php (singular)\n            'endpoints': 'endpoints-config.php'        // <-- Keep original endpoints-config.php mapping\n        };\n\n        // Get the file name for the requested endpoint\n        let fileName = endpointMap[endpointName];\n\n        // If no mapping exists, use a default pattern\n        if (!fileName) {\n            // Convert camelCase to kebab-case with .php extension\n            fileName = endpointName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase() + '.php';\n        }\n\n        // Ensure the base URL ends with a slash\n        const baseUrl = this.#apiEndpoint.endsWith('/') ? this.#apiEndpoint : this.#apiEndpoint + '/';\n\n        Debug.log(`EndpointDiscovery: Resolved ${endpointName} to endpoint`, baseUrl + fileName, 2);\n\n        return baseUrl + fileName;\n    }\n\n    /**\n     * Get a complete API URL for a specific endpoint file\n     * @param {string} endpointFile Filename to append to the base URL\n     * @returns {Promise<string>} Full API URL\n     */\n    async getApiUrl(endpointFile) {\n        const baseUrl = await this.getEndpoint();\n        return `${baseUrl}${endpointFile}`;\n    }\n\n    /**\n     * Attempt to determine API endpoint based on script location\n     * @private\n     * @returns {string|null} Determined endpoint or null\n     */\n    #determineEndpointFromScript() {\n        try {\n            // Find our script tag\n            const scripts = document.querySelectorAll('script');\n            let scriptUrl = null;\n\n            for (const script of scripts) {\n                if (script.src && (\n                    script.src.includes('diff-viewer.js') ||\n                    script.src.includes('diff-viewer.min.js')\n                )) {\n                    scriptUrl = script.src;\n                    break;\n                }\n            }\n\n            if (!scriptUrl) {\n                return null;\n            }\n\n            // Get the directory path by removing the filename\n            let basePath = scriptUrl.substring(0, scriptUrl.lastIndexOf('/') + 1);\n\n            // If it's in a /dist/ directory, adjust to parent\n            if (basePath.endsWith('/dist/')) {\n                basePath = basePath.substring(0, basePath.length - 5);\n            }\n\n            // Append 'api/' to the base path\n            return `${basePath}api/`;\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error determining endpoint from script', error, 2);\n            return null;\n        }\n    }\n\n    /**\n     * Generate URL to endpoint-config.php\n     * @private\n     * @returns {string} URL to endpoint-config.php\n     */\n    #getEndpointConfigUrl() {\n        // Try to use the base URL of the current page\n        const baseUrl = window.location.href.substring(0, window.location.href.lastIndexOf('/') + 1);\n\n        // Assume endpoint-config.php is in the /api/ directory\n        if (baseUrl.includes('/diff-viewer/')) {\n            // If we're in diff-viewer, go up one level\n            return `${baseUrl.substring(0, baseUrl.lastIndexOf('/diff-viewer/'))}api/endpoint-config.php`;\n        } else {\n            // Default case - look for api in the current directory\n            return `${baseUrl}api/endpoint-config.php`;\n        }\n    }\n}\n","/**\n * Central registry for SVG icons\n * This eliminates the need for external icon libraries\n */\nexport class IconRegistry {\n    /**\n     * Get SVG markup for the specified icon\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Additional options for the icon\n     * @returns {string} SVG markup\n     */\n    static getIcon(iconName, options = {}) {\n        const {\n            classes = '',\n            width = 16,\n            height = 16,\n            title = '',\n            ariaHidden = true\n        } = options;\n\n        // Get the SVG path data\n        const pathData = this._getIconPathData(iconName);\n\n        if (!pathData) {\n            console.warn(`Icon not found: ${iconName}`);\n            return '';\n        }\n\n        // Create title element for accessibility if provided\n        const titleElement = title ? `<title>${title}</title>` : '';\n\n        // Generate the SVG with the right attributes\n        return `<svg\n            class=\"vdm-icon ${classes}\"\n            width=\"${width}\"\n            height=\"${height}\"\n            viewBox=\"${pathData.viewBox || '0 0 512 512'}\"\n            ${ariaHidden ? 'aria-hidden=\"true\"' : 'role=\"img\"'}\n            focusable=\"false\"\n        >\n            ${titleElement}\n            ${pathData.paths}\n        </svg>`;\n    }\n\n    /**\n     * Get the path data for an icon\n     * @private\n     * @param {string} iconName - Name of the icon\n     * @returns {Object|null} Icon path data or null if not found\n     */\n    static _getIconPathData(iconName) {\n        // Map of icon names to their SVG path data\n        const icons = {\n            'chevron-up': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z\"/>'\n            },\n            'chevron-down': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z\"/>'\n            },\n            'eye': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>'\n            },\n            'sun': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM160 256a96 96 0 1 1 192 0 96 96 0 1 1 -192 0zm224 0a128 128 0 1 0 -256 0 128 128 0 1 0 256 0z\"/>'\n            },\n            'moon': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M223.5 32C100 32 0 132.3 0 256S100 480 223.5 480c60.6 0 115.5-24.2 155.8-63.4c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-9.8 1.7-19.8 2.6-30.1 2.6c-96.9 0-175.5-78.8-175.5-176c0-65.8 36-123.1 89.3-153.3c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-6.3-.5-12.6-.8-19-.8z\"/>'\n            },\n            'file': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M0 64C0 28.7 28.7 0 64 0H224V128c0 17.7 14.3 32 32 32H384V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zm384 64H256V0L384 128z\"/>'\n            },\n            'file-circle-plus': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M0 64C0 28.7 28.7 0 64 0H224V128c0 17.7 14.3 32 32 32H384v38.6C310.1 219.5 256 287.4 256 368c0 59.1 29.1 111.3 73.7 143.3c-3.2 .5-6.4 .7-9.7 .7H64c-35.3 0-64-28.7-64-64V64zm384 64H256V0L384 128zM288 368a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-80c-8.8 0-16 7.2-16 16v48H368c-8.8 0-16 7.2-16 16s7.2 16 16 16h48v48c0 8.8 7.2 16 16 16s16-7.2 16-16V384h48c8.8 0 16-7.2 16-16s-7.2-16-16-16H448V304c0-8.8-7.2-16-16-16z\"/>'\n            },\n            'file-lines': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V160H256c-17.7 0-32-14.3-32-32V0H64zM256 0V128H384L256 0zM112 256H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16z\"/>'\n            },\n            'file-copy': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M384 480h48c20.9 0 38.7-13.4 45.3-32H416c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16h61.3C470.7 157.4 452.9 144 432 144H384V64c0-35.3-28.7-64-64-64H64C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H384zM128 64H320V144H128V64zM400 240V416H144V192H352c26.5 0 48 21.5 48 48zm176-48c0-8.8-7.2-16-16-16H432c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H560c8.8 0 16-7.2 16-16V192z\"/>'\n            },\n            'plus-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM232 344V280H168c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H280v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z\"/>'\n            },\n            'exclamation-triangle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"/>'\n            },\n            'copy': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M272 0H396.1c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9V336c0 26.5-21.5 48-48 48H272c-26.5 0-48-21.5-48-48V48c0-26.5 21.5-48 48-48zM48 128H192v64H64V448H256V416h64v48c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48z\"/>'\n            },\n            // Add more icons as needed\n            'check-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM369 209L241 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L335 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z\"/>'\n            },\n            'chevron-right': {\n                viewBox: '0 0 320 512',\n                paths: '<path d=\"M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z\"/>'\n            },\n            'download': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z\"/>'\n            },\n            'uncheck-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm0-384c13.3 0 24 10.7 24 24v112c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zm-32 224a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/>'\n            },\n            'info-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/>'\n            },\n            'exclamation-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM256 128c13.3 0 24 10.7 24 24V264c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/>'\n            },\n            'checkbox-unchecked': {\n                viewBox: '0 0 24 24',\n                paths: '<path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/>'\n            },\n            'checkbox-checked': {\n                viewBox: '0 0 24 24',\n                paths: '<path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>'\n            }\n        };\n\n        return icons[iconName] || null;\n    }\n\n    /**\n     * Create DOM element for an icon\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Additional options for the icon\n     * @returns {Element} The created SVG element\n     */\n    static createIcon(iconName, options = {}) {\n        const svgString = this.getIcon(iconName, options);\n        if (!svgString) return null;\n\n        const template = document.createElement('template');\n        template.innerHTML = svgString.trim();\n        return template.content.firstChild;\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * LoaderManager - Centralized utility for managing loading indicators\n *\n * This singleton class provides methods to display and hide loading indicators\n * throughout the application in a consistent manner. It supports different styles\n * of loaders including fullscreen, inline, and element-specific indicators.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * LoaderManager class\n *\n * Provides methods to display and hide loading indicators throughout the application\n */\nexport class LoaderManager extends BaseSingleton {\n    /**\n     * Initialize the LoaderManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.activeLoaders = new Map();\n        this.loaderIdCounter = 0;\n        this.isMainLoaderActive = false; // Track if main loader is active\n        this.mainLoaderId = null; // Store the ID of the main loader for reference\n        this.recentlyRemovedLoaders = new Set(); // Track recently removed loaders to prevent errors\n\n        // Track loader operations for debugging\n        this.operationLog = [];\n        this.maxLogEntries = 20;\n\n        // Set flag to remember log level in debug mode\n        this.verboseLogging = Debug.isInitialized ? Debug.logLevel > 2 : false;\n\n        // Mark as initialized\n        this.initialized = true;\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {LoaderManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new LoaderManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Log an operation for debugging\n     * @private\n     */\n    _logOperation(operation, details) {\n        // Keep a short log history for debugging\n        if (this.operationLog.length >= this.maxLogEntries) {\n            this.operationLog.shift(); // Remove oldest entry\n        }\n\n        this.operationLog.push({\n            timestamp: new Date().toISOString(),\n            operation,\n            details\n        });\n    }\n\n    /**\n     * Create a loader element with the given message\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Options for the loader\n     * @returns {HTMLElement} The loader element\n     * @private\n     */\n    _createLoaderElement(message, options = {}) {\n        // Use an early translation if TranslationManager is available\n        if (message && typeof message === 'string' && message.startsWith('$') && TranslationManager.getInstance().isInitialized()) {\n            const translationKey = message.substring(1);\n            const translatedMessage = TranslationManager.getInstance().get(translationKey);\n            if (translatedMessage) {\n                message = translatedMessage;\n            }\n        }\n\n        const loader = document.createElement('div');\n        loader.className = 'vdm-loader';\n\n        if (options.fullscreen) {\n            loader.classList.add('vdm-loader--fullscreen');\n        }\n\n        if (options.inline) {\n            loader.classList.add('vdm-loader--inline');\n        }\n\n        if (options.small) {\n            loader.classList.add('vdm-loader--small');\n        }\n\n        if (options.container) {\n            loader.classList.add('vdm-loader--container');\n        }\n\n        if (options.className) {\n            loader.classList.add(options.className);\n        }\n\n        if (options.zIndex) {\n            loader.style.zIndex = options.zIndex;\n        }\n\n        // Create spinner\n        const spinner = document.createElement('div');\n        spinner.className = 'vdm-loader__spinner';\n        loader.appendChild(spinner);\n\n        // Add message if provided\n        if (message) {\n            const messageElement = document.createElement('div');\n            messageElement.className = 'vdm-loader__message';\n            messageElement.textContent = message;\n            loader.appendChild(messageElement);\n        }\n\n        return loader;\n    }\n\n    /**\n     * Show a loading indicator\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @param {boolean} options.fullscreen - Whether to show a fullscreen loader\n     * @param {boolean} options.inline - Whether to show an inline loader\n     * @param {boolean} options.small - Whether to show a small loader\n     * @param {string} options.className - Additional CSS class to add to the loader\n     * @param {HTMLElement} options.target - Target element to add the loader to\n     * @param {number} options.zIndex - Z-index for the loader\n     * @returns {string} ID of the loader (use this to hide the specific loader)\n     */\n    showLoader(message = 'Loading...', options = {}) {\n        // If main loader is active and we're showing a fullscreen loader,\n        // reuse the main loader with updated message\n        if (this.isMainLoaderActive && this.mainLoaderId && options.fullscreen) {\n            Debug.log('LoaderManager: Reusing main loader for fullscreen request', { message }, 3);\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        Debug.log('LoaderManager: Showing loader', { message, options }, 3);\n\n        const loaderId = `loader-${++this.loaderIdCounter}`;\n        const loaderElement = this._createLoaderElement(message, options);\n        loaderElement.setAttribute('data-loader-id', loaderId);\n\n        // Add loader to the correct target element\n        if (options.target && options.target instanceof HTMLElement) {\n            // If the target has position: static, change to relative for proper positioning\n            const targetPosition = window.getComputedStyle(options.target).getPropertyValue('position');\n            if (targetPosition === 'static') {\n                options.target.style.position = 'relative';\n            }\n            options.target.appendChild(loaderElement);\n        } else {\n            document.body.appendChild(loaderElement);\n        }\n\n        // Store reference to the loader\n        this.activeLoaders.set(loaderId, {\n            element: loaderElement,\n            target: options.target || document.body,\n            fullscreen: !!options.fullscreen,\n            timestamp: Date.now()\n        });\n\n        // Remove from recently removed list if it's there (unlikely but possible with ID reuse)\n        this.recentlyRemovedLoaders.delete(loaderId);\n\n        this._logOperation('show', { id: loaderId, message, type: 'regular' });\n\n        // Add showing class to trigger CSS transitions if any\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.classList.add('vdm-loader--showing');\n            }\n        }, 10);\n\n        return loaderId;\n    }\n\n    /**\n     * Show the main application loader and hide all other loaders\n     *\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Additional options for the loader\n     * @returns {string} ID of the loader\n     */\n    showMainLoader(message = 'Loading...', options = {}) {\n        Debug.log('LoaderManager: Showing main loader', { message }, 2);\n\n        // If main loader is already active, just update the message and return the existing ID\n        if (this.isMainLoaderActive && this.mainLoaderId && this.activeLoaders.has(this.mainLoaderId)) {\n            Debug.log('LoaderManager: Main loader already active, updating message', {\n                currentId: this.mainLoaderId,\n                message\n            }, 2);\n\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        // Hide all other loaders when showing the main one\n        this._hideAllInlineLoaders();\n\n        // Get the main loader element if it exists in the DOM\n        const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n\n        if (mainLoaderElement) {\n            // If the element already exists in the DOM, just show it\n            mainLoaderElement.style.display = 'flex';\n            mainLoaderElement.classList.add(Selectors.LOADER.ACTIVE.name());\n\n            // If it has a message element, update it\n            const messageElement = mainLoaderElement.querySelector('.vdm-loader__message');\n            if (messageElement) {\n                messageElement.textContent = message;\n            } else if (message) {\n                // Create message element if it doesn't exist but message is provided\n                const newMessageElement = document.createElement('div');\n                newMessageElement.className = 'vdm-loader__message';\n                newMessageElement.textContent = message;\n                mainLoaderElement.appendChild(newMessageElement);\n            }\n\n            // Generate an ID for this loader instance\n            const loaderId = `main-loader-${++this.loaderIdCounter}`;\n\n            // Store reference\n            this.activeLoaders.set(loaderId, {\n                element: mainLoaderElement,\n                target: document.body,\n                isMainLoader: true,\n                timestamp: Date.now()\n            });\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            // Remove from recently removed list if it's there\n            this.recentlyRemovedLoaders.delete(loaderId);\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-existing' });\n\n            return loaderId;\n        } else {\n            // If the element doesn't exist, create it using showLoader\n            const loaderId = this.showLoader(message, {\n                fullscreen: true,\n                className: Selectors.LOADER.MAIN.name(),\n                zIndex: 9999,\n                ...options\n            });\n\n            // Mark this as the main loader\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            if (loaderInfo) {\n                loaderInfo.isMainLoader = true;\n                loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n            }\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-new' });\n\n            return loaderId;\n        }\n    }\n\n    /**\n     * Show a loading indicator early in the page lifecycle before DiffViewer initialization\n     * This is specifically for components that need to show loaders before the main app initializes\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showEarlyLoader(message = 'Loading...', options = {}) {\n        // If debug is already initialized, use it, otherwise don't log\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Showing early loader', { message }, 2);\n        }\n\n        // Create a loader that will become the main loader\n        const loaderId = this.showLoader(message, {\n            fullscreen: true,\n            className: Selectors.LOADER.MAIN.name(),\n            zIndex: 9999,\n            ...options\n        });\n\n        // Mark this as the main loader\n        const loaderInfo = this.activeLoaders.get(loaderId);\n        if (loaderInfo) {\n            loaderInfo.isMainLoader = true;\n            loaderInfo.isEarlyLoader = true; // Mark as an early loader\n            loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n        }\n\n        // Update tracking\n        this.isMainLoaderActive = true;\n        this.mainLoaderId = loaderId;\n\n        this._logOperation('show', { id: loaderId, message, type: 'early-loader' });\n\n        return loaderId;\n    }\n\n    /**\n     * Convert an early loader to the main loader to ensure continuity\n     * Call this method from enableDiffViewer to take over an existing early loader\n     *\n     * @param {string} message - Optional new message to display\n     * @returns {string} ID of the main loader\n     */\n    adoptEarlyLoader(message = null) {\n        // If there's no active main loader, create one\n        if (!this.isMainLoaderActive || !this.mainLoaderId) {\n            if (Debug.isInitialized) {\n                Debug.log('LoaderManager: No early loader to adopt, creating new main loader', null, 2);\n            }\n            return this.showMainLoader(message);\n        }\n\n        // Update the message if provided\n        if (message) {\n            this.updateLoaderMessage(this.mainLoaderId, message);\n        }\n\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Adopted early loader as main loader', { id: this.mainLoaderId }, 2);\n        }\n\n        return this.mainLoaderId;\n    }\n\n    /**\n     * Hide the main loader\n     *\n     * @param {string} loaderId - Optional ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideMainLoader(loaderId = null) {\n        Debug.log('LoaderManager: Hiding main loader', { loaderId }, 2);\n\n        // Special handling: If this was recently removed, just return success\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Main loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // If main loader isn't active, silently succeed\n        if (!this.isMainLoaderActive) {\n            Debug.log('LoaderManager: Main loader not active, nothing to hide', null, 2);\n            return true;\n        }\n\n        // If loaderId is provided but doesn't match the main loader ID, verify it\n        if (loaderId && loaderId !== this.mainLoaderId) {\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            // If it's not found or not a main loader, use the stored main loader ID\n            if (!loaderInfo?.isMainLoader) {\n                Debug.log('LoaderManager: Using stored main loader ID',\n                    { providedId: loaderId, actualMainId: this.mainLoaderId }, 2);\n                loaderId = this.mainLoaderId;\n            }\n        } else if (!loaderId) {\n            // If no ID provided, use the stored main loader ID\n            loaderId = this.mainLoaderId;\n        }\n\n        // If we couldn't determine a loader ID or it doesn't exist anymore,\n        // try to clean up by element ID\n        if (!loaderId || !this.activeLoaders.has(loaderId)) {\n            const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n            if (mainLoaderElement) {\n                mainLoaderElement.style.display = 'none';\n                if (mainLoaderElement.parentNode) {\n                    mainLoaderElement.parentNode.removeChild(mainLoaderElement);\n                }\n                Debug.log('LoaderManager: Removed main loader by element ID', null, 2);\n            }\n\n            // Reset state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n            return true;\n        }\n\n        // Now hide the specific loader\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader so we don't try to hide it again\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            // Update state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            this._logOperation('hide', { id: loaderId, type: 'main' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Hide all inline loaders (internal method)\n     * @private\n     */\n    _hideAllInlineLoaders() {\n        Debug.log('LoaderManager: Hiding all inline loaders', null, 3);\n\n        // Find all inline loaders\n        const inlineLoaderIds = Array.from(this.activeLoaders.entries())\n            .filter(([_id, info]) => !info.isMainLoader && !info.fullscreen)\n            .map(([id]) => id);\n\n        // Hide each one\n        inlineLoaderIds.forEach(id => {\n            this._hideSpecificLoader(id);\n\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(id);\n\n            this._logOperation('hide', { id, type: 'inline-batch' });\n        });\n\n        // Also look for any inline loaders in the DOM that might not be tracked\n        document.querySelectorAll('.vdm-loader--inline').forEach(loader => {\n            this._removeLoaderElement(loader);\n            this._logOperation('hide', { element: 'untracked-inline', type: 'dom-query' });\n        });\n    }\n\n    /**\n     * Hide a specific loader by ID\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideLoader(loaderId) {\n        // If no loaderId specified, hide all loaders\n        if (!loaderId) {\n            Debug.log('LoaderManager: Hiding all loaders', null, 3);\n            const loaderIds = Array.from(this.activeLoaders.keys());\n            let success = true;\n\n            loaderIds.forEach(id => {\n                if (!this._hideSpecificLoader(id)) {\n                    success = false;\n                }\n\n                // Remember we removed this loader\n                this.recentlyRemovedLoaders.add(id);\n\n                this._logOperation('hide', { id, type: 'all-batch' });\n            });\n\n            // Reset main loader tracking\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            return success;\n        }\n\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // Case: this is the main loader\n        if (loaderId === this.mainLoaderId) {\n            return this.hideMainLoader(loaderId);\n        }\n\n        // Hide a specific loader\n        Debug.log('LoaderManager: Hiding loader', { loaderId }, 3);\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            this._logOperation('hide', { id: loaderId, type: 'specific' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Internal method to hide a specific loader\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     * @private\n     */\n    _hideSpecificLoader(loaderId) {\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed (in _hideSpecificLoader)', { loaderId }, 3);\n            return true;\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            Debug.log('LoaderManager: No loader found to hide', { loaderId }, 2);\n            return false;\n        }\n\n        // Update main loader status if this was a main loader\n        if (loader.isMainLoader) {\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n        }\n\n        // Check if the element still exists in DOM\n        if (!loader.element?.parentNode) {\n            // Element is already removed, just clean up our tracking\n            this.activeLoaders.delete(loaderId);\n            Debug.log('LoaderManager: Loader element was already removed from DOM', { loaderId }, 3);\n            return true;\n        }\n\n        // Remove the loader element with transition\n        this._removeLoaderElement(loader.element);\n        this.activeLoaders.delete(loaderId);\n\n        // Remember we removed this loader\n        this.recentlyRemovedLoaders.add(loaderId);\n\n        return true;\n    }\n\n    /**\n     * Remove a loader element with transition\n     *\n     * @param {HTMLElement} loaderElement - Loader element to remove\n     * @private\n     */\n    _removeLoaderElement(loaderElement) {\n        // First remove the showing class to trigger CSS transitions if any\n        loaderElement.classList.remove('vdm-loader--showing');\n\n        // Wait for transition to complete before removing the element\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.parentNode.removeChild(loaderElement);\n            }\n        }, 300); // Match this timing with CSS transition duration\n    }\n\n    /**\n     * Show a loader in a specific container (useful for buttons, etc.)\n     *\n     * @param {HTMLElement} container - Container element to add the loader to\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showLoaderInContainer(container, message = '', options = {}) {\n        const loaderId = this.showLoader(message, {\n            target: container,\n            container: true,\n            small: true,\n            ...options\n        });\n\n        this._logOperation('show', { id: loaderId, message, type: 'container' });\n\n        return loaderId;\n    }\n\n    /**\n     * Update an existing loader's message\n     *\n     * @param {string} loaderId - ID of the loader to update\n     * @param {string} message - New message to display\n     * @returns {boolean} Success status\n     */\n    updateLoaderMessage(loaderId, message) {\n        // Don't log anything when recently removed IDs are encountered\n        // This eliminates the spam in the console for removed loaders\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            return true; // Silently succeed\n        }\n\n        // If this is a falsy ID and main loader is active, use the main loader\n        if (!loaderId && this.isMainLoaderActive && this.mainLoaderId) {\n            loaderId = this.mainLoaderId;\n            Debug.log('LoaderManager: Using main loader ID for message update', { mainLoaderId: loaderId }, 3);\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            // Only log at level 2 if we're in verbose mode (reduces noise)\n            if (this.verboseLogging) {\n                Debug.log('LoaderManager: No loader found to update message', { loaderId }, 2);\n            }\n            return false;\n        }\n\n        // Check if element still exists in DOM\n        if (!loader.element?.parentNode) {\n            Debug.log('LoaderManager: Loader element was removed from DOM', { loaderId }, 3);\n            this.activeLoaders.delete(loaderId);\n            this.recentlyRemovedLoaders.add(loaderId);\n            return false;\n        }\n\n        const messageElement = loader.element.querySelector('.vdm-loader__message');\n\n        if (messageElement) {\n            messageElement.textContent = message;\n            this._logOperation('update', { id: loaderId, message, type: 'existing-element' });\n            return true;\n        } else if (message) {\n            // Create message element if it doesn't exist but a message is provided\n            const newMessageElement = document.createElement('div');\n            newMessageElement.className = 'vdm-loader__message';\n            newMessageElement.textContent = message;\n            loader.element.appendChild(newMessageElement);\n            this._logOperation('update', { id: loaderId, message, type: 'new-element' });\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a loader with the given ID exists\n     * @param {string} loaderId - Loader ID to check\n     * @returns {boolean} - Whether the loader exists\n     */\n    hasLoader(loaderId) {\n        return this.activeLoaders.has(loaderId) &&\n               !this.recentlyRemovedLoaders.has(loaderId);\n    }\n\n    /**\n     * Clean up old entries in the recentlyRemovedLoaders set to prevent memory leaks\n     * Called periodically by the system\n     */\n    _cleanupOldRemovedLoaders() {\n        // If the set gets too large, clean up old entries\n        if (this.recentlyRemovedLoaders.size > 20) {\n            // Just reset the whole set for simplicity\n            this.recentlyRemovedLoaders.clear();\n        }\n    }\n\n    /**\n     * Get debug information about a specific loader\n     * @param {string} loaderId - Loader ID to check\n     * @returns {Object|null} Loader information\n     */\n    getLoaderInfo(loaderId) {\n        if (!loaderId) return null;\n\n        const loader = this.activeLoaders.get(loaderId);\n        if (!loader) {\n            return {\n                exists: false,\n                wasRemoved: this.recentlyRemovedLoaders.has(loaderId)\n            };\n        }\n\n        return {\n            exists: true,\n            isMain: !!loader.isMainLoader,\n            fullscreen: !!loader.fullscreen,\n            message: loader.element.querySelector('.vdm-loader__message')?.textContent,\n            age: Date.now() - (loader.timestamp || 0), // milliseconds since creation\n            inDom: !!loader.element.parentNode\n        };\n    }\n\n    /**\n     * Debug method to get active loader information\n     * @returns {Object} Information about current loaders\n     */\n    getLoaderStatus() {\n        // Clean up the recently removed list to keep it tidy\n        this._cleanupOldRemovedLoaders();\n\n        return {\n            activeCount: this.activeLoaders.size,\n            recentlyRemovedCount: this.recentlyRemovedLoaders.size,\n            mainLoaderActive: this.isMainLoaderActive,\n            mainLoaderId: this.mainLoaderId,\n            operations: [...this.operationLog],\n            loaders: Array.from(this.activeLoaders.entries()).map(([id, info]) => ({\n                id,\n                isMain: !!info.isMainLoader,\n                fullscreen: !!info.fullscreen,\n                message: info.element.querySelector('.vdm-loader__message')?.textContent,\n                age: Date.now() - (info.timestamp || 0), // milliseconds since creation\n                inDom: !!info.element.parentNode\n            }))\n        };\n    }\n}\n\nexport default LoaderManager;\n","import { StringUtils } from './StringUtils';\nimport { Debug } from './Debug';\n\n/**\n * Formats merge content for various displays\n */\nexport class MergeContentFormatter {\n    /**\n     * Format merged content for preview\n     * @param {string} content - Raw content to format\n     * @param {string} extension - File extension\n     * @param {boolean} withLineNumbers - Whether to add line numbers\n     * @returns {string} Formatted HTML\n     */\n    static formatPreview(content, extension = '', withLineNumbers = true) {\n        // Ensure we have valid content\n        if (!content) {\n            Debug.warn('MergeContentFormatter: Empty content for preview formatting', null, 2);\n            return '<pre><code>No content available</code></pre>';\n        }\n\n        // Store original content for copy operations\n        const originalContent = content;\n\n        // Safely escape content\n        const escapedContent = StringUtils.escapeHtml(content);\n\n        // Map extension to language class for highlight.js\n        const languageClass = MergeContentFormatter.getLanguageClass(extension);\n\n        // Add data attribute for line numbers if requested\n        const lineNumberAttr = withLineNumbers ? 'data-line-numbers=\"true\"' : '';\n\n        // Store original content in a data attribute for reliable copying\n        const result = `<pre ${lineNumberAttr}><code class=\"${languageClass}\" data-original-code=\"${StringUtils.escapeAttribute(originalContent)}\">${escapedContent}</code></pre>`;\n\n        // Replace console.log with Debug utility\n        Debug.log('MergeContentFormatter: Preview HTML generated', { preview: result.substring(0, 150) + '...' }, 2);\n\n        return result;\n    }\n\n    /**\n     * Get language class from file extension\n     * @param {string} extension - File extension\n     * @returns {string} Language class for syntax highlighting\n     */\n    static getLanguageClass(extension = '') {\n        if (!extension) {\n            return '';\n        }\n\n        // Map common extensions to highlight.js language classes\n        const extensionMap = {\n            'js': 'javascript',\n            'ts': 'typescript',\n            'py': 'python',\n            'rb': 'ruby',\n            'java': 'java',\n            'cs': 'csharp',\n            'php': 'php',\n            'html': 'html',\n            'css': 'css',\n            'json': 'json',\n            'xml': 'xml',\n            'yml': 'yaml',\n            'yaml': 'yaml',\n            'md': 'markdown',\n            'sql': 'sql'\n        };\n\n        return extensionMap[extension.toLowerCase()] || extension.toLowerCase();\n    }\n\n    /**\n     * Format count of unresolved conflicts\n     * @param {number} count - Number of unresolved conflicts\n     * @param {Object} translations - Translation strings\n     * @returns {string} Formatted message\n     */\n    static formatUnresolvedCount(count, translations = {}) {\n        if (count === 1) {\n            return (translations.unresolvedChunkSingular || 'There is %COUNT% unresolved chunk remaining.')\n                .replace('%COUNT%', count);\n        } else {\n            return (translations.unresolvedChunksPlural || 'There are %COUNT% unresolved chunks remaining.')\n                .replace('%COUNT%', count);\n        }\n    }\n\n    /**\n     * Prepare code for highlighting\n     * @param {string} code - Code to prepare\n     * @returns {string} Prepared code\n     */\n    static prepareCode(code) {\n        // Clean up line endings\n        const cleanCode = code.replace(/\\r\\n/g, '\\n');\n        return cleanCode;\n    }\n\n    /**\n     * Reset element highlighting state\n     * @param {Element} element - Element to reset\n     * @returns {string|null} Original text content or null\n     */\n    static resetHighlighting(element) {\n        if (!element) return null;\n\n        // Remove data-highlighted attribute\n        if (element.hasAttribute('data-highlighted')) {\n            element.removeAttribute('data-highlighted');\n        }\n\n        // Store the original content\n        const originalText = element.textContent;\n\n        // Reset element content\n        element.textContent = originalText;\n\n        return originalText;\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\n\n/**\n * Navigation-related utility functions\n */\nexport class NavigationUtils {\n    /**\n     * Scroll element into view with smooth behavior\n     * @param {Element} element - Element to scroll to\n     * @param {Element} container - Scrollable container\n     * @returns {boolean} Success status\n     */\n    static scrollElementIntoView(element, container) {\n        if (!element || !container) {\n            Debug.warn('NavigationUtils: Missing element or container for scrolling', null, 2);\n            return false;\n        }\n\n        // Calculate the target scroll position (center element in container)\n        const elementTop = element.offsetTop;\n        const containerHeight = container.clientHeight;\n        const scrollTarget = elementTop - (containerHeight / 2) + (element.offsetHeight / 2);\n\n        // Apply scroll with smooth behavior\n        container.scrollTo({\n            top: scrollTarget,\n            behavior: 'smooth'\n        });\n\n        return true;\n    }\n\n    /**\n     * Add highlight effect to an element\n     * @param {Element} element - Element to highlight\n     * @param {number} duration - Duration in ms\n     */\n    static addHighlightEffect(element, duration = 2000) {\n        if (!element) return;\n\n        element.classList.add(Selectors.NAVIGATION.HIGHLIGHT.name());\n        setTimeout(() => {\n            element.classList.remove(Selectors.NAVIGATION.HIGHLIGHT.name());\n        }, duration);\n    }\n\n    /**\n     * Make an element draggable\n     * @param {Element} element - Element to make draggable\n     * @param {Object} options - Configuration options\n     * @returns {Object} Clean-up functions\n     */\n    static makeDraggable(element, options = {}) {\n        if (!element) return;\n\n        const defaults = {\n            handleSelector: null, // Selector for drag handle (null = entire element)\n            ignoreSelector: '.nav-button, .nav-counter', // Elements that shouldn't trigger drag\n            positionStyle: 'fixed', // 'fixed' or 'absolute'\n            dragClass: 'dragging', // Class to add while dragging\n        };\n\n        const config = {...defaults, ...options};\n        let isDragging = false;\n        let offsetX, offsetY;\n\n        // Mouse down handler\n        const mouseDownHandler = (e) => {\n            // Skip if clicking on ignored elements\n            if (config.ignoreSelector && e.target.matches(config.ignoreSelector)) {\n                return;\n            }\n\n            // Skip if using handle and not clicking on it\n            if (config.handleSelector && !e.target.matches(config.handleSelector)) {\n                return;\n            }\n\n            isDragging = true;\n            element.classList.add(config.dragClass);\n\n            // Calculate offsets differently depending on position style\n            const rect = element.getBoundingClientRect();\n            offsetX = rect.right - e.clientX;\n            offsetY = rect.bottom - e.clientY;\n\n            // Prevent text selection during drag\n            e.preventDefault();\n        };\n\n        // Mouse move handler\n        const mouseMoveHandler = (e) => {\n            if (!isDragging) return;\n\n            // Calculate new position from right and bottom edges\n            const containerRect = element.parentElement.getBoundingClientRect();\n            let newRight = containerRect.right - e.clientX - offsetX;\n            let newBottom = containerRect.bottom - e.clientY - offsetY;\n\n            // Ensure the element stays within the container\n            newRight = Math.max(0, Math.min(newRight, containerRect.width - element.offsetWidth));\n            newBottom = Math.max(0, Math.min(newBottom, containerRect.height - element.offsetHeight));\n\n            // Apply new position using right and bottom\n            element.style.right = `${newRight}px`;\n            element.style.bottom = `${newBottom}px`;\n            element.style.left = 'auto'; // Remove left positioning\n            element.style.top = 'auto'; // Remove top positioning\n        };\n\n        // Mouse up handler\n        const mouseUpHandler = () => {\n            if (isDragging) {\n                isDragging = false;\n                element.classList.remove(config.dragClass);\n            }\n        };\n\n        // Add event listeners\n        element.addEventListener('mousedown', mouseDownHandler);\n        document.addEventListener('mousemove', mouseMoveHandler);\n        document.addEventListener('mouseup', mouseUpHandler);\n\n        // Return clean-up function\n        return {\n            destroy: () => {\n                element.removeEventListener('mousedown', mouseDownHandler);\n                document.removeEventListener('mousemove', mouseMoveHandler);\n                document.removeEventListener('mouseup', mouseUpHandler);\n            }\n        };\n    }\n}\n","import { Debug } from '../utils/Debug';\n\nimport { BaseSingleton } from './BaseSingleton';\n\n// Module-level singleton instance\nlet instance = null;\n\nexport class ResourceLoader extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @returns {ResourceLoader} The singleton instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new ResourceLoader();\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     */\n    constructor() {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        // Initialize instance\n        this.config = null;\n        this.loadedResources = new Set();\n        this.loadedLanguages = new Set();\n        this.loadedThemes = new Set(); // ADD THIS LINE\n        this.CDN_BASE = 'https://cdnjs.cloudflare.com/ajax/libs';\n        this.HLJS_VERSION = '11.11.1';\n        this.LINE_NUMBERS_VERSION = '2.8.0';\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Configure the ResourceLoader\n     * @param {Object} config - Configuration object\n     */\n    configure(config) {\n        Debug.log('ResourceLoader: Configuring', { config }, 2);\n\n        this.config = config;\n        Debug.log('ResourceLoader configured');\n\n        Debug.log('ResourceLoader: Configuration complete', null, 2);\n        return this;\n    }\n\n    /**\n     * Load all dependencies required for the diff viewer\n     */\n    async loadDependencies() {\n        await this.loadSyntaxHighlighterCore();\n        await this.loadLanguage(this.config.language || 'php');\n        // Note: Theme loading is now ThemeManager's responsibility\n        return true;\n    }\n\n    // Split theme loading from core highlighter loading\n    /**\n     * Load syntax highlighter core without theme\n     */\n    async loadSyntaxHighlighterCore() {\n        if (!this.config) {\n            Debug.error('ResourceLoader: Must be configured before loading dependencies', null, 2);\n            throw new Error('ResourceLoader must be configured before loading dependencies');\n        }\n\n        try {\n            Debug.log('ResourceLoader: Loading syntax highlighter core (NO THEME)', null, 2);\n\n            // Check if hljs is already loaded\n            if (window.hljs) {\n                // Changed from level 3 to level 2 - more consistent with other logs\n                Debug.log('ResourceLoader: highlight.js already loaded', null, 2);\n            } else {\n                Debug.log('ResourceLoader: Loading highlight.js from CDN', null, 2);\n                await this.loadScript(`${this.CDN_BASE}/highlight.js/${this.HLJS_VERSION}/highlight.min.js`);\n\n                Debug.log('ResourceLoader: Loading line numbers plugin', null, 2);\n                await this.loadScript(`${this.CDN_BASE}/highlightjs-line-numbers.js/${this.LINE_NUMBERS_VERSION}/highlightjs-line-numbers.min.js`);\n            }\n\n            Debug.log('ResourceLoader: Syntax highlighter core loaded successfully', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ResourceLoader: Failed to load syntax highlighter core:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Load a specific language for syntax highlighting\n     * @param {string} language - The language to load\n     * @returns {Promise} - Resolves when language is loaded\n     */\n    async loadLanguage(language) {\n        // Normalize language name\n        const langMap = {\n            'markup': 'xml',\n            'html': 'xml',\n            'htm': 'xml',\n            'javascript': 'javascript',\n            'js': 'javascript',\n            'typescript': 'typescript',\n            'ts': 'typescript',\n            'jsx': 'javascript',\n            'tsx': 'typescript'\n        };\n\n        // Get the normalized language name\n        const normalizedLang = langMap[language.toLowerCase()] || language.toLowerCase();\n\n        // Check if already loaded\n        if (this.loadedLanguages.has(normalizedLang)) {\n            return true;\n        }\n\n        // Load the language\n        Debug.log(`ResourceLoader: Loading language ${normalizedLang}`, null, 2);\n        try {\n            // Since dynamic imports aren't working well with webpack, let's use CDN directly\n            await this.loadScript(`${this.CDN_BASE}/highlight.js/${this.HLJS_VERSION}/languages/${normalizedLang}.min.js`);\n            this.loadedLanguages.add(normalizedLang);\n            Debug.log(`ResourceLoader: Language ${normalizedLang} loaded from CDN successfully`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.warn(`ResourceLoader: Failed to load language ${normalizedLang}, falling back to built-in languages`, { error }, 2);\n            // Don't throw - highlight.js will use its built-in detection\n            return false;\n        }\n    }\n\n    /**\n     * Cache loaded resources to prevent duplicate requests\n     * @private\n     */\n    _cacheResource(url, loadPromise) {\n        if (!this.resourceCache) {\n            this.resourceCache = new Map();\n        }\n\n        if (!this.resourceCache.has(url)) {\n            this.resourceCache.set(url, loadPromise);\n        }\n\n        return this.resourceCache.get(url);\n    }\n\n    /**\n     * Load a script with caching\n     * @param {string} url - Script URL\n     * @returns {Promise} Loading promise\n     */\n    loadScript(url) {\n        return this._cacheResource(url, new Promise((resolve, reject) => {\n            if (this.loadedResources.has(url)) {\n                // Removed level 3 debug log - too verbose\n                resolve();\n                return;\n            }\n\n            Debug.log(`ResourceLoader: Loading script: ${url}`, null, 2);\n            const script = document.createElement('script');\n            script.src = url;\n            script.async = true;\n            script.onload = () => {\n                this.loadedResources.add(url);\n                // Removed level 3 debug log - covered by level 2 logs\n                resolve();\n            };\n            script.onerror = () => {\n                Debug.error(`ResourceLoader: Failed to load script: ${url}`, null, 2);\n                reject(new Error(`Failed to load script: ${url}`));\n            };\n            document.head.appendChild(script);\n        }));\n    }\n\n    /**\n     * Load a CSS file with Promise support\n     */\n    loadCSS(href) {\n        if (this.loadedThemes.has(href)) {\n            // Removed level 3 debug log - too verbose\n            return Promise.resolve();\n        }\n\n        Debug.log(`ResourceLoader: Loading CSS: ${href}`, null, 2);\n        return new Promise((resolve, reject) => {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = href;\n            link.onload = () => {\n                this.loadedThemes.add(href);\n                // Removed level 3 debug log - covered by level 2 logs\n                resolve();\n            };\n            link.onerror = () => {\n                Debug.error(`ResourceLoader: Failed to load CSS: ${href}`, null, 2);\n                reject(new Error(`Failed to load CSS: ${href}`));\n            };\n            document.head.appendChild(link);\n        });\n    }\n}\n","/**\n * String utility functions for the diff viewer\n */\nexport class StringUtils {\n    /**\n     * Escape HTML special characters to prevent XSS\n     * @param {string} unsafe - The potentially unsafe string to escape\n     * @returns {string} - HTML escaped string\n     */\n    static escapeHtml(unsafe) {\n        if (!unsafe || typeof unsafe !== 'string') return '';\n        return unsafe\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\")\n            .replace(/\\//g, \"&#x2F;\")\n            .replace(/\\\\/g, \"&#x5C;\")\n            .replace(/`/g, \"&#x60;\");\n    }\n\n    /**\n     * Escape a string for use in an HTML attribute\n     * @param {string} str - String to escape\n     * @returns {string} Escaped string\n     */\n    static escapeAttribute(str) {\n        if (!str) return '';\n        return str\n            .replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n}\n","/**\n * Translation Manager\n * Provides centralized access to translations throughout the application\n */\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\n\n/**\n * Singleton class that manages translations across the application\n */\nexport class TranslationManager extends BaseSingleton {\n    /**\n     * @private\n     * Singleton instance\n     */\n    static _instance = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {TranslationManager} The singleton instance\n     */\n    static getInstance() {\n        if (!TranslationManager._instance) {\n            TranslationManager._instance = new TranslationManager();\n            Debug.log('TranslationManager: Instance created', null, 2);\n        }\n        return TranslationManager._instance;\n    }\n\n    /**\n     * Constructor - private, use getInstance()\n     */\n    constructor() {\n        super();\n        this.translations = {};\n        this.lang = 'en';\n        this.initialized = false;\n\n        // IMPORTANT: Initialize immediately with window.diffConfig if available\n        this._initializeFromGlobalConfig();\n    }\n\n    /**\n     * Try to initialize from global config immediately\n     * @private\n     */\n    _initializeFromGlobalConfig() {\n        if (window.diffConfig && window.diffConfig.translations) {\n            Debug.log('TranslationManager: Auto-initializing from window.diffConfig', window.diffConfig.translations, 2);\n            this.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Initialize with language and translations\n     * @param {string} lang - The language code\n     * @param {Object} translations - Translation key-value pairs\n     */\n    initialize(lang = 'en', translations = {}) {\n        this.lang = lang;\n        this.translations = translations;\n        this.initialized = true;\n        Debug.log(`TranslationManager: Initialized with \"${lang}\" language`, this.translations, 2);\n    }\n\n    /**\n     * Get a translation by key\n     * @param {string} key - The translation key\n     * @param {string} defaultValue - Default value if key not found (defaults to key itself)\n     * @returns {string} The translated text or default value\n     */\n    get(key, defaultValue = null) {\n        // If not initialized and window.diffConfig exists, try to initialize from there\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n\n        // Check if we have translations for the current language\n        if (this.translations[this.lang] && this.translations[this.lang][key]) {\n            return this.translations[this.lang][key];\n        }\n\n        // Fallback to English if the key exists there\n        if (this.translations['en'] && this.translations['en'][key]) {\n            Debug.log(`TranslationManager: Key \"${key}\" not found in \"${this.lang}\", using English fallback`, null, 2);\n            return this.translations['en'][key];\n        }\n\n        // Use provided default or key itself\n        return defaultValue !== null ? defaultValue : key;\n    }\n\n    /**\n     * Check if initialization has been completed\n     * @returns {boolean} True if initialized\n     */\n    isInitialized() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.initialized;\n    }\n\n    /**\n     * Get the current language\n     * @returns {string} The current language code\n     */\n    getLanguage() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.lang;\n    }\n\n    /**\n     * Get all translations\n     * @returns {Object} All translations\n     */\n    getAllTranslations() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return {...this.translations};\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DiffViewer } from './components/DiffViewer';\nimport { ResourceLoader } from './utils/ResourceLoader';\nimport availableThemes from './data/highlightjs-themes.json';\nimport { ThemeManager } from './components/ThemeManager';\nimport { Debug } from './utils/Debug';\nimport { ConfigUtils } from './utils/ConfigUtils';\nimport { DOMUtils } from './utils/DOMUtils';\nimport Selectors from './constants/Selectors';\nimport { BrowserUIManager } from './components/viewer/BrowserUIManager';\nimport { EndpointDiscovery } from './utils/EndpointDiscovery';\nimport { LoaderManager } from './utils/LoaderManager';\nimport { TranslationManager } from './utils/TranslationManager';\nimport AlertManager from './utils/AlertManager';\nimport { DiffConfigManager } from './utils/DiffConfigManager';\n\n// Module-level singleton instance\nlet browserUIManagerInstance = null;\n\n// Initialize endpoint discovery early\nconst endpointDiscovery = EndpointDiscovery.getInstance();\n\n// Add copyright link to forms with vdm-form class\nfunction addCopyrightLink() {\n    // Find all forms with the vdm-form class\n    const forms = document.querySelectorAll('.vdm-form');\n\n    forms.forEach(form => {\n        // Check if the copyright link already exists to prevent duplicates\n        const existingLink = form.parentNode.querySelector('.vdm-copyright-link');\n        if (existingLink) return;\n\n        // Create the copyright link element\n        const linkContainer = document.createElement('div');\n        linkContainer.className = 'vdm-copyright-link';\n        linkContainer.style.cssText = 'text-align: right; font-size: 11px; margin-top: 4px; opacity: 0.7;';\n\n        // Create the actual link\n        linkContainer.innerHTML = '<a href=\"https://visual-diff-merge.miglisoft.com/\" rel=\"noopener\" target=\"_blank\" style=\"text-decoration: none; color: inherit;\">Powered by Visual-Diff-Merge</a>';\n\n        // Insert the link after the form\n        form.parentNode.insertBefore(linkContainer, form.nextSibling);\n    });\n}\n\n// Run the function when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', addCopyrightLink);\n\n// Also run it when the window loads (for dynamically created forms)\nwindow.addEventListener('load', addCopyrightLink);\n\nwindow.enableDiffViewer = async function () {\n    // Initialize debug with configured log level\n    const debug = window.diffConfig?.debug || false;\n    const logLevel = window.diffConfig?.logLevel || 1;\n    Debug.initialize(debug, '[DiffViewer]', logLevel);\n\n    // Initialize centralized loader management\n    const loaderManager = LoaderManager.getInstance();\n\n    const translationManager = TranslationManager.getInstance();\n\n    // Run the copyright link function again to catch any dynamically added forms\n    addCopyrightLink();\n\n    // Initialize translation manager if needed and if config contains translations\n    if (window.diffConfig?.translations && !translationManager.isInitialized()) {\n        const configLang = window.diffConfig.lang || 'en';\n        Debug.log(`Initializing TranslationManager with language: ${configLang}`, null, 2);\n        translationManager.initialize(configLang, window.diffConfig.translations);\n    }\n\n    // Get loading message from translations or use default\n    const initialMessage = translationManager.get('loadingDiff', 'Loading diff...');\n\n    // Try to adopt any early loader that might exist from URL/file components\n    // This ensures a smooth transition from early loading to main app loading\n    const mainLoaderId = loaderManager.adoptEarlyLoader(initialMessage);\n\n    try {\n        // PHASE 1: PREPARATION - level 1 log (phase boundary)\n        Debug.log('INITIALIZATION - PHASE 1: PREPARATION', null, 1);\n\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingContent', 'Loading content...'));\n\n        // Check for identical files first\n        if (window.diffConfig?.isIdentical) {\n            // Get message from translations\n            const message = translationManager.get('filesIdenticalMessage', 'The files are identical. No differences found.');\n            DOMUtils.showMessage(Selectors.DIFF.CONTENT_WRAPPER.name(), message, 'info');\n\n            // Hide the loader since we're done\n            loaderManager.hideMainLoader(mainLoaderId);\n\n            return;\n        }\n\n        // Make sure serverSaveEnabled is explicitly set in the diffConfig\n        // This ensures the BrowserUIManager can access it before creating UI controls\n        if (window.diffConfig) {\n            // If serverSaveEnabled is undefined, explicitly set it to false\n            if (typeof window.diffConfig.serverSaveEnabled === 'undefined') {\n                window.diffConfig.serverSaveEnabled = false;\n                Debug.log('Setting default serverSaveEnabled=false in diffConfig', null, 2);\n            } else {\n                // Ensure it's a boolean value, not a string\n                window.diffConfig.serverSaveEnabled = !!window.diffConfig.serverSaveEnabled;\n                Debug.log(`Found serverSaveEnabled=${window.diffConfig.serverSaveEnabled} in diffConfig`, null, 2);\n            }\n        }\n\n        // Discover API endpoint early in the initialization process\n        try {\n            loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('discoveringEndpoints', 'Discovering API endpoints...'));\n            const apiEndpoint = await endpointDiscovery.getEndpoint();\n            Debug.log('API endpoint discovered', apiEndpoint, 2);\n\n            // Update diffConfig with discovered endpoint\n            if (window.diffConfig && !window.diffConfig.apiEndpoint) {\n                window.diffConfig.apiEndpoint = apiEndpoint;\n            }\n        } catch (error) {\n            Debug.warn('API endpoint discovery failed, using fallbacks', error, 1);\n        }\n\n        // Check for identical files first\n        if (window.diffConfig?.isIdentical) {\n            // Get message from translations\n            const message = translationManager.get('filesIdenticalMessage', 'The files are identical. No differences found.');\n            DOMUtils.showMessage(Selectors.DIFF.CONTENT_WRAPPER.name(), message, 'info');\n\n            // Hide the loader since we're done\n            loaderManager.hideMainLoader(mainLoaderId);\n\n            return;\n        }\n\n        // Check if we already have an active instance and destroy it\n        if (window.diffViewer) {\n            Debug.log('Cleaning up previous instance', null, 1);\n            loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('cleaningUpPrevious', 'Cleaning up previous instance...'));\n\n            if (typeof window.diffViewer.destroy === 'function') {\n                await window.diffViewer.destroy();\n            }\n            window.diffViewer = null;\n        }\n\n        // Clean up UI manager if it exists\n        if (window.vdmBrowserUIManager) {\n            Debug.log('Cleaning up browser UI manager', null, 1);\n            if (typeof window.vdmBrowserUIManager.destroy === 'function') {\n                window.vdmBrowserUIManager.destroy();\n            }\n            window.vdmBrowserUIManager = null;\n        }\n\n        // Level 1 log - overall initialization started\n        Debug.log('INITIALIZATION - STARTING', null, 1);\n\n        // Validate configuration\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('validatingConfig', 'Validating configuration...'));\n        const validationResult = ConfigUtils.validateConfig(window.diffConfig);\n        if (!validationResult.isValid) {\n            Debug.error(validationResult.error);\n            loaderManager.hideMainLoader(mainLoaderId);\n            return;\n        }\n\n        // High-level summary of what we're loading\n        Debug.log('CONFIGURATION SUMMARY', ConfigUtils.getConfigSummary(window.diffConfig), 1);\n\n        // PHASE 2: SERVICES INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 2: SERVICES', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingServices', 'Initializing services...'));\n\n        // Get saved theme preferences\n        const themePrefs = ConfigUtils.getThemePreferences(window.diffConfig);\n\n        // 1. Configure ResourceLoader WITHOUT theme loading\n        const resourceLoader = ResourceLoader.getInstance();\n        resourceLoader.configure({\n            availableThemes: availableThemes,\n            currentTheme: themePrefs.mode,\n            currentThemeFamily: themePrefs.family,\n            language: ConfigUtils.getFileExtension(window.diffConfig.filepath, 'php')\n        });\n\n        // 2. Initialize ThemeManager as the ONLY theme loader\n        const themeManager = ThemeManager.getInstance();\n        themeManager.initialize({\n            theme: window.diffConfig.theme\n        }, resourceLoader);\n\n        // PHASE 2.5: UI PREPARATION - Generate required DOM elements first\n        Debug.log('INITIALIZATION - PHASE 2.5: UI PREPARATION', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('preparingUI', 'Preparing UI elements...'));\n\n        // Detect if we're in file browser mode - container wrapper exists but diff container doesn't\n        const containerWrapper = document.getElementById(Selectors.CONTAINER.WRAPPER.name());\n        const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n        const isFileBrowser = containerWrapper && !diffContainer;\n\n        // If in file browser mode, create UI elements BEFORE initializing DiffViewer\n        if (isFileBrowser) {\n            Debug.log('Creating browser UI elements before DiffViewer initialization', null, 1);\n\n            // Create a temporary BrowserUIManager with config options\n            const tempUIManager = new BrowserUIManager({\n                options: window.diffConfig || {}\n            });\n\n            // Generate UI elements - container wrapper already exists from the PHP template\n            tempUIManager.initialize();\n\n            // Store reference and clean up later\n            browserUIManagerInstance = tempUIManager;\n            window.vdmBrowserUIManager = tempUIManager;\n\n            // Wait a short time to ensure DOM elements are fully created (important!)\n            await new Promise(resolve => setTimeout(resolve, 50));\n        }\n\n        // PHASE 3: COMPONENT INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 3: COMPONENTS', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingComponents', 'Initializing components...'));\n\n        // Now that DOM elements should exist, get the container - checking several times if needed\n        let container = document.querySelector(Selectors.DIFF.VIEWER);\n        let attempts = 0;\n        const maxAttempts = 5;\n\n        // If we're in file browser mode and container isn't found immediately, try a few times\n        if (isFileBrowser) {\n            while (!container && attempts < maxAttempts) {\n                Debug.log(`Container element ${Selectors.DIFF.VIEWER} not found, attempt ${attempts + 1}/${maxAttempts}`, null, 2);\n                await new Promise(resolve => setTimeout(resolve, 100)); // Wait 100ms between attempts\n                container = document.querySelector(Selectors.DIFF.VIEWER);\n                attempts++;\n            }\n        }\n\n        if (!container) {\n            Debug.error(`Container element ${Selectors.DIFF.VIEWER} not found after ${attempts} attempts`);\n            loaderManager.hideMainLoader(mainLoaderId);\n            return;\n        }\n\n        // Show the container (hide loading indicator if it exists)\n        const loadingElement = document.querySelector(Selectors.LOADER.MAIN);\n        if (loadingElement) {\n            loadingElement.style.display = 'none';\n            Debug.log('Loading element hidden', null, 2);\n        }\n\n        if (container) {\n            container.style.display = 'flex'; // Changed from 'block' to 'flex'\n            Debug.log('Container element shown', null, 2);\n        }\n\n        // 3. Create DiffViewer with runtime properties and pass the mainLoaderId\n        const diffViewer = new DiffViewer({\n            // Runtime properties\n            diffData: window.diffConfig.diffData,\n            serverSaveEnabled: window.diffConfig.serverSaveEnabled || false,\n            // SECURITY: Use only fileRefId and filenames, not server paths\n            fileRefId: window.diffConfig.fileRefId || '',\n            oldFileRefId: window.diffConfig.oldFileRefId || '',\n            newFileName: window.diffConfig.newFileName || '',\n            oldFileName: window.diffConfig.oldFileName || '',\n            isIdentical: window.diffConfig.isIdentical || false,\n            filepath: window.diffConfig.filepath,\n\n            // Dependencies (not config values)\n            resourceLoader: resourceLoader,\n            themeManager: themeManager,\n            endpointDiscovery: endpointDiscovery,\n\n            // Pass the centralized loader management ID\n            mainLoaderId: mainLoaderId\n        });\n\n        // Store reference\n        window.diffViewer = diffViewer;\n\n        // If we created a temporary UI manager, update it with the actual diffViewer instance\n        if (isFileBrowser && browserUIManagerInstance) {\n            browserUIManagerInstance.setDiffViewer(diffViewer);\n            // Set the browserUIManager on the diffViewer to ensure proper bidirectional reference\n            diffViewer.setBrowserUIManager(browserUIManagerInstance);\n        }\n\n        // PHASE 4: RESOURCE LOADING - level 1 log\n        Debug.log('INITIALIZATION - PHASE 4: RESOURCES', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingResources', 'Loading resources...'));\n\n        // 4. Load core dependencies - syntax highlighter ONLY, no theme\n        await resourceLoader.loadSyntaxHighlighterCore();\n\n        // 5. Load theme ONCE through ThemeManager\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingTheme', 'Loading theme...'));\n        await themeManager.loadInitialTheme();\n\n        // PHASE 5: UI INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 5: UI', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingUI', 'Initializing UI...'));\n\n        // 7. Initialize UI after all resources are loaded\n        await diffViewer.initialize();\n\n        // Mark as loaded using DOMUtils\n        const diffContainerElement = document.querySelector(Selectors.DIFF.CONTAINER);\n        if (diffContainerElement) {\n            diffContainerElement.classList.add(Selectors.STATUS.LOADED.name());\n        }\n\n        // PHASE 6: COMPLETION - level 1 log\n        Debug.log('INITIALIZATION - COMPLETE', null, 1);\n\n        // Hide the loader now that initialization is complete\n        loaderManager.hideMainLoader(mainLoaderId);\n\n        return diffViewer;\n    } catch (error) {\n        Debug.error('Error initializing diff viewer:', error);\n        const viewerElement = document.querySelector(Selectors.DIFF.VIEWER);\n        if (viewerElement) {\n            // Use AlertManager for error display\n            const alertManager = AlertManager.getInstance();\n\n            // Get error message from translations if possible\n            const errorTitle = translationManager.get('errorLoadingDiff', 'Error loading diff');\n            const errorMessage = `\n                <h4>${errorTitle}</h4>\n                <p>${error instanceof Error ? error.message : String(error)}</p>\n            `;\n\n            const alertElement = alertManager.showError(errorMessage, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false, // Message is already prepared with translations\n                className: 'vdm-w-100' // Make alert fill the container width\n            });\n\n            // Clear the viewer and add the alert\n            viewerElement.innerHTML = '';\n            viewerElement.appendChild(alertElement);\n            viewerElement.style.display = 'flex';\n        }\n\n        // Always hide the loader on error\n        loaderManager.hideMainLoader(mainLoaderId);\n    }\n};\n\n// Explicitly export the BrowserUIManager to the global window object\n// This ensures it's available to external scripts like file-browser.js\nwindow.BrowserUIManager = BrowserUIManager;\n\n// Export the LoaderManager to the global window object so it can be used\n// by components before the main app initializes\nwindow.LoaderManager = LoaderManager;\n\n// Make TranslationManager available globally\nwindow.TranslationManager = TranslationManager;\n\n// Make AlertManager available globally\nwindow.AlertManager = AlertManager;\n\n// Make DiffConfigManager available globally\nwindow.DiffConfigManager = DiffConfigManager;\n\n// Export components for module bundlers\nexport {\n    DiffViewer,\n    BrowserUIManager,\n    EndpointDiscovery,\n    LoaderManager,\n    DiffConfigManager\n};\n"],"names":["root","factory","exports","module","define","amd","a","i","this","ChunkManager","diffViewer","_classCallCheck","chunks","oldContent","newContent","chunkElements","renderer","ChunkRenderer","selectionHandler","ChunkSelectionHandler","contentGenerator","MergeContentGenerator","SELECTED_STATE","Selectors","DIFF","CHUNK_SELECTED","name","UNSELECTED_STATE","CHUNK_UNSELECTED","_performanceMetrics","initTime","renderTime","chunkCount","Debug","log","key","value","diffData","startTime","performance","now","ChunkUtils","clearCache","old","length","forEach","chunk","conflict","concat","diffNavigator","updateCounter","endTime","toFixed","renderChunks","visualStateManager","initialize","setupChunkSelection","initChunkElements","msPerChunk","Math","max","chunkId","side","state","toggleChunkSelection","selections","getSelections","generateMergedContent","lines","generateFileFromLines","_this","index","elements","getChunkElements","id","sortedElements","sortElementsByLineNumber","warn","initializedCount","filter","Boolean","error","anyChunkElements","document","querySelectorAll","CHUNK","anyChunkIdElements","metrics","_objectSpread","getMetrics","cacheStats","getCacheStats","get","DiffNavigator","initializeImmediately","arguments","undefined","currentChunkIndex","chunkManager","navigationCounter","NavigationCounter","uiBuilder","NavigationUIBuilder","conflictNavigator","ConflictNavigator","initNavigation","_this$diffViewer$chun","configChunks","diffConfig","addNavigationButtons","setupKeyboardShortcuts","navigateToFirstConflict","disableButtons","ui","createNavigationUI","setCounterElement","counter","setButtons","prevButton","nextButton","disabled","textContent","addEventListener","event","target","tagName","ctrlKey","metaKey","preventDefault","navigateToNextConflict","navigateToPrevConflict","navigateToChunk","destroy","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","String","Number","_toPrimitive","DiffViewer","_window$diffConfig","_window$diffConfig2","_window$diffConfig3","_window$diffConfig4","_window$diffConfig5","_window$diffConfig6","_window$diffConfig7","_window$diffConfig8","_window$diffConfig9","options","config","ConfigUtils","mergeConfigurations","lang","debug","logLevel","theme","defaultFamily","defaultMode","showSelector","apiEndpoint","window","runtimeProps","serverSaveEnabled","fileRefId","oldFileRefId","newFileName","oldFileName","isIdentical","filepath","demoEnabled","mainLoaderId","translationManager","TranslationManager","getInstance","isInitialized","translations","container","querySelector","VIEWER","_initializeServices","_createComponents","resourceLoader","ResourceLoader","themeManager","ThemeManager","themeSelector","ThemeSelector","modalManager","ModalManager","syntaxHighlighter","SyntaxHighlighter","themeToggle","ThemeToggle","browserUIManager","THEME","TOGGLE","CONTAINER","WRAPPER","mergeHandler","MergeHandler","scrollSynchronizer","ScrollSynchronizer","iconMarkerManager","IconMarkerManager","layoutManager","LayoutManager","_initialize","_callee","_context","_initializeData","_loadResources","_renderUI","_setupUIFeatures","_showDemoModeWarning","initModals","t0","_handleInitializationError","errorText","errorMessage","createElement","className","UTILITY","ALERT_DANGER","innerHTML","message","appendChild","style","display","_initializeData2","_callee2","_this$runtimeProps$di","_this$runtimeProps$di2","_this$runtimeProps$di3","_context2","initChunks","_loadResources2","_callee3","currentTheme","_context3","highlightJsLoaded","loadHighlightJs","getCurrentTheme","applyTheme","family","mode","_renderUI2","_callee4","_this$runtimeProps$di4","_diffContainer$parent","_diffContainer$parent2","containerWrapper","themeSwitcher","diffContainer","_context4","highlightAll","DOMUtils","toggleClass","classList","contains","remove","SWITCHER","parentNode","insertBefore","_setupUIFeatures2","_callee5","diffLoadedEvent","_context5","setupSynchronizedScrolling","initializeIconMarkers","CustomEvent","detail","timestamp","Date","viewer","dispatchEvent","_this$browserUIManage","AlertManager","alertManager","comparisonForm","showAlert","dismissable","translate","targetElement","placement","timeout","newConfig","props","_window$diffConfig10","_window$diffConfig11","_window$diffConfig12","_window$diffConfig13","windowDiffConfig","hasFileRefId","hasOldFileRefId","hasNewFileName","hasOldFileName","_window$diffConfig14","_window$diffConfig15","_window$diffConfig16","_window$diffConfig17","_window$diffConfig18","_window$diffConfig19","isBeautified","_getEndpoint","_callee6","endpointName","endpointDiscovery","endpoint","_this$config","defaultEndpoints","_context6","EndpointDiscovery","getEndpoint","apiEndpoints","_x","setBrowserUIManager","previewManager","MergePreviewManager","uiController","MergeUIController","operationHandler","MergeOperationHandler","getRuntimeProps","setupLocalOnlyControls","handlePreviewClick","mergeType","proceedWithMerge","countUnresolvedConflicts","unresolvedCount","showConflictModal","highlightUnresolvedChunks","resolved","success_message","showSuccess","showWarning","language","setLanguage","_loadHighlightJs","loadSyntaxHighlighterCore","hljs","getElements","LINE_CONTENT","LINE_CONTENT_EMPTY","LINE_PLACEHOLDER","codeElements","Array","from","el","trim","loaderId","loaderManager","LoaderManager","loadingMessage","showLoader","fullscreen","zIndex","processBatch","hideLoader","duration","end","min","highlightElement","progress","round","progressMessage","replace","updateLoaderMessage","requestAnimationFrame","setTimeout","element","withLineNumbers","split","cls","startsWith","add","MergeContentFormatter","resetHighlighting","lineNumbersBlock","_setLanguage","_runtimeProps$diffDat","newLanguage","sourceUsed","extension","includes","toLowerCase","languageMap","loadedLanguages","has","loadLanguage","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","valueOf","Reflect","construct","_getPrototypeOf","bind","_setPrototypeOf","instance","_BaseSingleton","_isFirstInstance","initialized","availableThemes","defaultTheme","listeners","_inherits","savedFamily","localStorage","getItem","savedMode","_this$availableThemes","_this$availableThemes2","fallbackToDefaults","alternateMode","_this$availableThemes3","_this$availableThemes4","getThemeCdnBase","getThemeCdnVersion","_applyTheme","themeUrl","activeTheme","themeLink","getThemeUrl","getAttribute","loadCSS","link","updateContainerThemeClass","setItem","notifyListeners","_x2","getElementById","DARK","LIGHT","MODE_PREFIX","_setThemeMode","_x3","_setThemeFamily","_x4","listener","_this2","_loadInitialTheme","BaseSingleton","selectElement","_isThemeSelectorEnabled","createSelectorElement","addSelectorToDOM","updateSelector","addListener","_this$diffViewer","_this$diffViewer2","getConfig","selector","THEME_SELECTOR","MARGIN_END_3","createAndAppendElement","SELECTOR","classes","FORM_SELECT","getAvailableThemeFamilies","themeKey","attributes","selected","content","formatThemeName","count","handleThemeChange","themeName","map","word","toUpperCase","join","themeSwitcherContainer","getElement","firstChild","_this$diffViewer3","_this3","selectedTheme","showThemeLoading","setThemeFamily","hideThemeLoading","toggleElementId","containerId","toggleElement","checked","handleToggle","updateToggle","newMode","setThemeMode","leftHtml","buildDiffPaneHtml","rightHtml","PANES_CONTAINER","PANE","PANE_LEFT","PANE_RIGHT","_step","chunksWithPlaceholders","Set","_iterator","_createForOfIteratorHelper","line","err","html","PANE_CONTENT","TABLE_WRAPPER","CODE","TABLE","_step2","lineCounter","_iterator2","_renderDiffLine","lineNumber","chunkType","find","LINE_NUMBER","hasPlaceholder","_renderPlaceholderLine","_renderContentLine","additionalClass","STATUS","UNRESOLVED","placeholderType","lineContent","isEmpty","_getChunkClass","LINE_EMPTY","displayContent","StringUtils","escapeHtml","styleAttr","LINE_DELETE","LINE_ADD","LINE_REPLACE_LEFT","LINE_REPLACE_RIGHT","ChunkVisualStateManager","SELECTED","UNSELECTED","lastOperationTime","operationCount","_boundClickHandler","_handleClick","_boundCheckAllHandler","_handleCheckAll","setupEventHandlers","removeExisting","styles","cursor","_setupCheckAllButtons","panes","leftPane","rightPane","_createCheckAllButtonHeader","pane","header","PANE_HEADER","langBadge","checkAllButton","BUTTON","BUTTON_EXTRA_SMALL","BUTTON_SECONDARY","CHECK_ALL_BTN","setAttribute","title","alignItems","verticalAlign","iconWrapper","marginRight","height","lineHeight","uncheckIcon","IconRegistry","createIcon","width","textSpan","createTextNode","button","currentTarget","iconState","oppositeButton","_getOppositeButton","_setButtonProcessingState","_toggleButtonIconState","clearAllSelections","selectAllOnSide","_recordPerformanceMetrics","isProcessing","opacity","operationTime","elementHitRatio","elementCacheHits","elementCacheMisses","iconHitRatio","iconMarkerCacheHits","iconMarkerCacheMisses","totalOperations","currentSide","oppositeSide","currentState","newIconState","useBatch","conflictChunks","largeDiff","_syncWithDiffConfig","chunksBySide","Map","updateVisualState","set","applyBatch","_refreshIconStates","RESOLVED","_updateNavigationCounter","onSelectionChange","selectedSide","selectedElements","oppositeElements","firstElement","lineId","dataset","iconMarker","getIconMarker","ICONS","SELECT","SELECT_LEFT","SELECT_RIGHT","row","getParentRow","firstOppositeElement","oppositeLineId","oppositeIconMarker","isPlaceholderType","wasPlaceholder","MARKER_PLACEHOLDER","selectedLineId","selectedElement","selectedHasPlaceholder","selectedIsPlaceholderType","outerHTML","substring","_this$chunkManager$di","chunkSelections","resetVisualState","batch","_this$chunkManager$di2","_this$chunkManager$di3","_this4","isChunkResolved","selectedChunks","selectedChunkIds","elementsToUpdate","_this4$chunkManager$d","_chunkId","_this4$chunkManager$d2","_pendingOperations","_isBatching","_metrics","lastBatchSize","lastBatchTime","preloadChunks","_applyStateToElements","_updateIconMarker","_updateOppositeMarker","_notifySelectionChange","_element$dataset","lineIdParts","oppositeMarker","currentClasses","iconMarkers","getChunkIconMarkers","_applyResetToElements","notify","batchSize","updateOperations","resetOperations","operation","_processBatchedResets","_processBatchedUpdates","processingTime","operations","resetOps","updateOps","msPerOperation","allElements","allIconMarkers","_toConsumableArray","elementsByState","firstElementsByState","_elementsByState$stat","entries","_ref","_ref2","_slicedToArray","_ref3","_ref4","chunksMap","_ref5","_ref6","data","body","getBoundingClientRect","removeClasses","addClass","rows","_element$classList","PLACEHOLDER","_row$classList","iconRemoveClasses","_el$classList","_row$classList2","marker","_marker$classList","isPlaceholder","generateFileContent","result","rightChunkLines","leftChunkLines","processedChunks","contentLines","_proceedWithMerge","mergedContent","resultContainer","alertElement","_resultContainer","_alertManager","_alertElement","_resultContainer2","_alertManager2","_alertElement2","success","applyMerge","scrollToMergeResult","showError","_applyMerge","wasBeautified","formParams","response","JSON","stringify","isContentBeautified","action","fetch","headers","URLSearchParams","json","resultElement","scrollIntoView","behavior","block","setupPreviewButton","previewButton","MERGE","BUTTON_PREVIEW","getMergedResultButton","GET_MERGED_RESULT_BTN","buttonToUse","newBtn","cloneNode","replaceChild","getIconHtml","_this$diffViewer$runt","getMergedContent","formattedContent","formatPreview","setContent","MODAL","PREVIEW_FILENAME","PREVIEW","PREVIEW_CONTENT_ID","controlsContainer","FLEX","JUSTIFY_CONTENT_BETWEEN","MARGIN_TOP_2","PADDING_2","messageArea","ALIGN_ITEMS_CENTER","open","applySyntaxHighlighting","CopyButton","addCopyButtonsToPreview","showPreviewError","_DOMUtils$getElement","preElement","codeElement","escapedError","showMessage","mergeDestination","mergeToggleBtn","mergeToggleIcon","mergeToggleText","initMergeDestinationToggle","setupModalButtons","setupApplyMergeButton","DESTINATION_DROPDOWN","DESTINATION_TOGGLE","populateMergeDestinations","savedDestination","valueExists","selectedIndex","setupMergeToggleEvents","_diffData$new","_runtimeProps$filepat","_diffData$old","filename","newFile","oldFile","newFileWithoutExt","lastIndexOf","oldFileWithoutExt","newFileExt","oldFileExt","newMergedFile","oldMergedFile","saveOptions","saveToOriginal","saveWithSuffix","saveToOld","saveToOldWithSuffix","saveToBoth","saveToBothWithSuffix","optionCount","newToggleBtn","newMergeDestination","dropdownIcon","MARGIN_START_2","stopPropagation","focus","showPicker","clickEvent","MouseEvent","bubbles","cancelable","view","updateMergeToggle","paddingRight","appearance","borderColor","newFileColorClass","newFileBtnClass","BUTTON_PRIMARY","oldFileBtnClass","BUTTON_WARNING","bothFilesBtnClass","BUTTON_INFO","iconHtml","colorClass","buttonClass","iconClasses","MARGIN_END_1","applyButton","BUTTON_APPLY","BUTTON_SUCCESS","BUTTON_DANGER","closest","CONTINUE_BTN","close","CONFLICT_MODAL","previewModalId","MERGE_BTN","getMergeType","registerBeforeOpenCallback","continueBtn","mergeBtn","onclick","mergeControlsActions","CONTROLS_ACTIONS","toString","destinationDropdown","toggleButton","form","justifyContent","destinationContainer","handleApplyMerge","Event","formatUnresolvedCount","MESSAGE","newContinueBtn","newMergeBtn","_this$mergeDestinatio","chunkIndex","indexOf","chunkElement","NavigationUtils","addHighlightEffect","_this5","getMergedResultText","getMergedResultTooltip","getMergedResultBtn","downloadIconHtml","buttonContainer","spacer","flex","modals","activeModal","createModal","CONFIRM","contentId","contentClass","PADDING_3","footerButtons","text","class","MARGIN_END_2","PREVIEW_CONTENT","headerClass","HEADER_FIXED","modalClass","_setupEventListeners","modalId","HEADER","modalHtml","attr","CONTENT","TITLE","CLOSE","FOOTER","isCloseButton","iconName","classNames","some","_appendToBody","isOpen","modalElement","setFullscreenSize","events","_ref7","_ref8","eventName","handler","buttonText","tempContainer","firstElementChild","backdrop","BACKDROP","matches","modal","callback","beforeOpenCallbacks","register","_showModal","displayBefore","overflow","_hideModal","contentSelector","contentType","contentLength","contentPreview","targetSelector","_container","found","containsPre","hasPreElements","innerHtmlLength","Element","elementType","elementId","FULLSCREEN","headerHeight","offsetHeight","codeText","CODE_COPY","COPY_CONTENT","FIXED_FOOTER","safeText","_escapeHtml","COPY","DIALOG","INSTRUCTIONS","TEXTAREA","TEXTAREA_ELEM","ACTIONS","textarea","copyBtn","select","_navigator$clipboard","navigator","clipboard","writeText","_showCopySuccess","_err","execCommand","_showCopyFailure","_this6","cancelText","confirmText","_defineProperty","click","onConfirm","onCancel","_this7","alertClass","ALERT","ALERT_PREFIX","ALERT_INFO","onClose","alertContent","unresolvedElements","unresolvedChunkIds","_this$_getUnresolvedC","_getUnresolvedChunkInfo","firstUnresolvedIndex","findIndex","currentIndex","_this$_getUnresolvedC2","nextIndex","_findNextChunkIndex","indexMap","_createChunkIndexMap","size","indices","sort","b","_this$_getUnresolvedC3","prevIndex","_findPrevChunkIndex","paneContent","scrollElementIntoView","counterElement","conflictCount","activeConflicts","position","NAVIGATION","_createControls","COUNTER","PREV_BUTTON","NEXT_BUTTON","navChunk","NAV_CHUNK","COUNTER_ELEMENT","BUTTON_FLAT","BUTTON_SMALL","newPrevButton","newNextButton","directElement","querySelectorElement","preElements","pre","ICON","TEXT","codeEl","textToCopy","_sourceCodeElement","hasAttribute","_decodeHTMLEntities","_showManualCopyModal","_showProcessingState","PROCESSING","COPIED","createCopyModal","BrowserUIManager","_this$options","translationsSource","mergeControls","hasWindowConfig","hasOptionsTranslations","getLanguage","getAllTranslations","_this$options2","containerSelector","generateDiffContainer","generateThemeSwitcher","generateMergeControls","themeSwitcherId","themeLoadingId","LOADING_INDICATOR","themeToggleId","cssText","switcherWrapper","THEME_SWITCHER","sunIcon","moonIcon","LABEL","CONTROL","SLIDER","SLIDER_ROUND","loadingContainer","themeLoadingContainer","observer","MutationObserver","mutations","disconnect","containerParent","observe","subtree","childList","attributeFilter","diffContainerId","viewerId","viewerElement","mutation","attributeName","createdViewer","getTranslations","previewButtonId","toggleButtonId","toggleIconId","TOGGLE_ICON","toggleTextId","TOGGLE_TEXT","dropdownId","applyButtonId","MARGIN_Y_2","previewSection","preview","mergeSection","toggleGroup","ALIGN_ITEMS_STRETCH","toggleIcon","toggleText","saveToOriginalTooltip","dropdown","whiteSpace","rect","scrollTop","pageYOffset","documentElement","top","removeChild","cellHeight","_calculateCellHeight","setProperty","_setupIconColumn","_updateIconColumnHeights","_setupIconHeightUpdater","codeTableWrapper","iconColumn","COLUMN","chunkCells","chunkGroups","cell","parseInt","firstCell","_createIconMarker","tableHeight","scrollHeight","transform","scrollLeft","SCROLLED","passive","MARKER","iconIndex","lineNumberCells","heights","sampleSize","medianHeight","floor","resizeTimer","clearTimeout","currentHeight","abs","paneWidth","updatePaneWidth","setupWidthObserver","newWidth","clientWidth","setCSSVariable","shouldUpdate","isSyncing","leftContent","rightContent","_handleScroll","_updateScrollState","sourceElement","contentElement","wasScrolled","isScrolled","selectorHandler","prop","processSelectors","obj","Proxy","baseSelectors","ROOT","CONTENT_WRAPPER","LOADER","ACTIVE","INDICATOR","INLINE","MAIN","SPINNER","PREVIEW_MODAL","CLOSE_BTN","CONFIRMATION_CONTENT","HIGHLIGHT","LOADED","TOOLTIP","ARROW","defaultUtilitySelectors","BUTTON_LARGE","ALERT_SUCCESS","ALERT_WARNING","FORM_SELECT_SM","FLEX_COLUMN","JUSTIFY_CONTENT_CENTER","MARGIN_2","MARGIN_BOTTOM_2","MARGIN_START_1","MARGIN_X_1","buttonPrimary","buttonSecondary","buttonInfo","buttonSuccess","buttonWarning","buttonDanger","buttonFlat","alert","alertInfo","alertSuccess","alertWarning","alertDanger","getUtilitySelectors","_callSuper","activeAlert","timeoutId","_ensureContainer","left","maxWidth","mergedOptions","useContainer","hasTargetElement","baseAlertClass","typeClass","selectorBase","selectorType","finalMessage","closeButton","hideAlert","nextSibling","_this$activeAlert","instanceVar","_elementCache","_iconMarkerCache","_rowCache","_chunkIndex","_cacheStats","rowCacheHits","rowCacheMisses","byId","byLineId","allChunkIds","allChunkElements","all","right","lineIds","allCacheKey","sideCacheKey","_a$dataset$lineId","_b$dataset$lineId","cacheKey","markers","m","_len","configs","_key","_i","_configs","isArray","isValid","console","diffDataKeys","new","configKeys","oldData","newData","_config$diffData","defaultExtension","_config$theme","_config$theme2","elementCache","buttonId","handlerFn","logName","instanceId","_handlerId","currentValue","toggleBtn","firstOption","secondOption","firstClass","secondClass","firstText","secondText","firstTooltip","secondTooltip","_iconName","_options$className","_options$elementId","_options$keepExisting","keepExisting","iconClass","HAS_ICON","visible","displayMode","containerElement","_options$id","_options$classes","_options$attributes","_options$content","Node","context","contextElement","insertAdjacentHTML","elementOrId","eventType","_options$context","_options$removeExisti","_options$styles","removeEventListener","property","getIcon","DebugUtility","enabled","logHistory","maxLogHistory","prefix","level","shouldLog","_addToHistory","maxLevel","entry","args","shift","_diffConfig","WeakMap","_DiffConfigManager_brand","WeakSet","DiffConfigManager","_classPrivateFieldInitSpec","_classPrivateFieldSet","_assertClassBrand","_updateGlobalDiffConfig","_classPrivateFieldGet","overrides","partialConfig","_mergeDeep","defaultValue","_instance","_","source","output","_isObject","item","_checkPrivateRedeclaration","_apiEndpoint","_discoveryPromise","_EndpointDiscovery_brand","_discoverEndpoint","scriptEndpoint","configUrl","_determineEndpointFromScript","_getEndpointConfigUrl","ok","statusText","fileName","baseUrl","discoverEndpoint","endsWith","_getApiUrl","endpointFile","scripts","scriptUrl","script","src","basePath","location","href","_options$width","_options$height","_options$title","_options$ariaHidden","ariaHidden","pathData","_getIconPathData","titleElement","viewBox","paths","svgString","template","activeLoaders","loaderIdCounter","isMainLoaderActive","recentlyRemovedLoaders","operationLog","maxLogEntries","verboseLogging","details","toISOString","translationKey","translatedMessage","loader","inline","small","spinner","messageElement","loaderElement","_createLoaderElement","HTMLElement","getComputedStyle","getPropertyValue","_logOperation","currentId","_hideAllInlineLoaders","mainLoaderElement","newMessageElement","isMainLoader","loaderInfo","isEarlyLoader","showMainLoader","providedId","actualMainId","_hideSpecificLoader","info","_removeLoaderElement","loaderIds","hideMainLoader","_loader$element","_loader$element2","clear","_loader$element$query","exists","isMain","age","inDom","wasRemoved","_cleanupOldRemovedLoaders","activeCount","recentlyRemovedCount","mainLoaderActive","loaders","_info$element$querySe","originalContent","escapedContent","languageClass","getLanguageClass","escapeAttribute","unresolvedChunkSingular","unresolvedChunksPlural","code","removeAttribute","originalText","scrollTarget","offsetTop","clientHeight","scrollTo","offsetX","offsetY","handleSelector","ignoreSelector","positionStyle","dragClass","isDragging","mouseDownHandler","clientX","bottom","clientY","mouseMoveHandler","containerRect","parentElement","newRight","newBottom","offsetWidth","mouseUpHandler","loadedResources","loadedThemes","CDN_BASE","HLJS_VERSION","LINE_NUMBERS_VERSION","_loadDependencies","_loadSyntaxHighlighterCore","loadScript","_loadLanguage","normalizedLang","url","loadPromise","resourceCache","_cacheResource","reject","onload","onerror","head","rel","unsafe","str","_initializeFromGlobalConfig","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","browserUIManagerInstance","addCopyrightLink","linkContainer","enableDiffViewer","configLang","initialMessage","_message","validationResult","themePrefs","isFileBrowser","tempUIManager","attempts","maxAttempts","loadingElement","diffContainerElement","errorTitle","adoptEarlyLoader","vdmBrowserUIManager","validateConfig","getConfigSummary","getThemePreferences","configure","currentThemeFamily","getFileExtension","setDiffViewer","loadInitialTheme","t1"],"sourceRoot":""}