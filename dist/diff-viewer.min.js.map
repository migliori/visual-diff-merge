{"version":3,"file":"diff-viewer.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAM,I,g5CCGF,IAAMC,EAAY,WA8BrB,O,EA1BA,SAAAA,EAAYC,I,4FAAYC,CAAA,KAAAF,GACpBD,KAAKE,WAAaA,EAClBF,KAAKI,OAAS,GACdJ,KAAKK,WAAa,GAClBL,KAAKM,WAAa,GAClBN,KAAKO,cAAgB,GAGrBP,KAAKQ,SAAW,IAAIC,EAAAA,cAAcT,MAClCA,KAAKU,iBAAmB,IAAIC,EAAAA,sBAAsBX,MAClDA,KAAKY,iBAAmB,IAAIC,EAAAA,sBAAsBb,MAGlDA,KAAKc,eAAiBC,EAAAA,QAAUC,KAAKC,eAAeC,OACpDlB,KAAKmB,iBAAmBJ,EAAAA,QAAUC,KAAKI,iBAAiBF,OAGxDlB,KAAKqB,oBAAsB,CACvBC,SAAU,EACVC,WAAY,EACZC,WAAY,GAGhBC,EAAAA,MAAMC,IAAI,sCAAuC,KAAM,EAC3D,E,EAEA,EAAAC,IAAA,aAAAC,MAIA,SAAWC,GACP,IAAMC,EAAYC,YAAYC,MAC9BP,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,GAGpEO,EAAAA,WAAWC,aAGXlC,KAAKI,OAASyB,EAASzB,QAAU,GACjCJ,KAAKK,WAAawB,EAASM,KAAO,GAClCnC,KAAKM,WAAauB,EAAQ,KAAQ,GAGlC7B,KAAKqB,oBAAoBG,WAAaxB,KAAKI,OAAOgC,OAGlDpC,KAAKI,OAAOiC,SAAQ,SAAAC,GAChBA,EAAMC,UAAW,CACrB,IAEAd,EAAAA,MAAMC,IAAI,iBAADc,OAAkBxC,KAAKI,OAAOgC,OAAM,uBAAuB,KAAM,GAGtEpC,KAAKE,WAAWuC,eAChBzC,KAAKE,WAAWuC,cAAcC,gBAGlC,IAAMC,EAAUZ,YAAYC,MAQ5B,OAPAhC,KAAKqB,oBAAoBC,SAAWqB,EAAUb,EAE9CL,EAAAA,MAAMC,IAAI,6CAADc,OAA8CxC,KAAKqB,oBAAoBC,SAASsB,QAAQ,GAAE,MAAM,KAAM,GAG/G5C,KAAK6C,yBAEE7C,KAAKI,MAChB,GAEA,CAAAuB,IAAA,eAAAC,MAGA,WACI,IAAME,EAAYC,YAAYC,MAG9BhC,KAAKQ,SAASsC,eAGV9C,KAAKU,iBAAiBqC,mBAAmBC,YACzChD,KAAKU,iBAAiBqC,mBAAmBC,aAI7ChD,KAAKiD,sBAGLjD,KAAKkD,oBAEL,IAAMP,EAAUZ,YAAYC,MAS5B,OARAhC,KAAKqB,oBAAoBE,WAAaoB,EAAUb,EAEhDL,EAAAA,MAAMC,IAAI,wCAADc,OAAyCxC,KAAKqB,oBAAoBE,WAAWqB,QAAQ,GAAE,MAC5F,CACIpB,WAAYxB,KAAKqB,oBAAoBG,WACrC2B,YAAanD,KAAKqB,oBAAoBE,WAAa6B,KAAKC,IAAI,EAAGrD,KAAKqB,oBAAoBG,aAAaoB,QAAQ,IAC9G,IAEA,CACX,GAEA,CAAAjB,IAAA,sBAAAC,MAGA,WAEI5B,KAAKU,iBAAiBuC,qBAC1B,GAEA,CAAAtB,IAAA,uBAAAC,MAMA,SAAqB0B,EAASC,EAAMC,GAChCxD,KAAKU,iBAAiB+C,qBAAqBH,EAASC,EAAMC,EAC9D,GAEA,CAAA7B,IAAA,wBAAAC,MAIA,WACI,IAAM8B,EAAa1D,KAAKU,iBAAiBiD,gBACzC,OAAO3D,KAAKY,iBAAiBgD,sBAAsBF,EACvD,GAEA,CAAA/B,IAAA,wBAAAC,MAKA,SAAsBiC,GAClB,OAAO7D,KAAKY,iBAAiBkD,sBAAsBD,EACvD,GAEA,CAAAlC,IAAA,oBAAAC,MAGA,WAAoB,IAAAmC,EAAA,KAEhB/D,KAAKO,cAAgB,GAGrBkB,EAAAA,MAAMC,IAAI,6BAADc,OAA8BxC,KAAKI,OAAOgC,OAAM,kBAAkB,KAAM,GAEjFpC,KAAKI,OAAOiC,SAAQ,SAACC,EAAO0B,GAExB,IAAMC,EAAWhC,EAAAA,WAAWiC,iBAAiB5B,EAAM6B,IAGnD,GAFA1C,EAAAA,MAAMC,IAAI,0BAADc,OAA2BF,EAAM6B,GAAE,YAAA3B,OAAWyB,EAAS7B,OAAM,aAAa,KAAM,GAErF6B,EAAS7B,OAAS,EAAG,CAErB,IAAMgC,EAAiBnC,EAAAA,WAAWoC,yBAAyBJ,GAG3DF,EAAKxD,cAAcyD,GAASI,EAAe,EAC/C,MACI3C,EAAAA,MAAM6C,KAAK,qDAAD9B,OAAsDF,EAAM6B,IAAM,KAAM,EAE1F,IAEA,IAAMI,EAAmBvE,KAAKO,cAAciE,OAAOC,SAASrC,OAI5D,GAHAX,EAAAA,MAAMC,IAAI,6BAADc,OAA8B+B,EAAgB,KAAA/B,OAAIxC,KAAKI,OAAOgC,OAAM,kCAAkC,KAAM,GAG5F,IAArBmC,GAA0BvE,KAAKI,OAAOgC,OAAS,EAAG,CAClDX,EAAAA,MAAMiD,MAAM,mFAAoF,KAAM,GAGtG,IAAMC,EAAmBC,SAASC,iBAAiB9D,EAAAA,QAAUC,KAAK8D,OAClErD,EAAAA,MAAM6C,KAAK,iBAAD9B,OAAkBmC,EAAiBvC,OAAM,uCAAAI,OAAsCzB,EAAAA,QAAUC,KAAK8D,OAAS,KAAM,GAGvH,IAAMC,EAAqBH,SAASC,iBAAiB,mBACrDpD,EAAAA,MAAM6C,KAAK,iBAAD9B,OAAkBuC,EAAmB3C,OAAM,0CAA0C,KAAM,EACzG,CACJ,GAEA,CAAAT,IAAA,yBAAAC,MAGA,WACI,IAAIoD,EAAc,EACdC,EAAgB,EAqBpB,OAnBAjF,KAAKI,OAAOiC,SAAQ,SAAAC,GAEXA,EAAMH,KAAQG,EAAK,IAGE,YAAfA,EAAM4C,MAAwB5C,EAAMH,KAAQG,EAAK,IAIxD0C,KAHAvD,EAAAA,MAAM6C,KAAK,+BAAD9B,OAAgCF,EAAM6B,GAAE,+BAA+B7B,EAAO,GACxF2C,MAJAxD,EAAAA,MAAM6C,KAAK,uBAAD9B,OAAwBF,EAAM6B,GAAE,2BAA2B7B,EAAO,GAC5E2C,IAOR,IAEAxD,EAAAA,MAAMC,IAAI,0CAA2C,CACjDyD,MAAOH,EACPI,QAASH,EACTI,MAAOrF,KAAKI,OAAOgC,QACpB,GAEsB,IAAlB6C,CACX,GAEA,CAAAtD,IAAA,wBAAAC,MAIA,WACI,IAAM0D,E,+VAAOC,CAAA,GACNvF,KAAKqB,qBAWZ,OAPIrB,KAAKU,iBAAiBqC,mBAAmByC,aACzCF,EAAQvC,mBAAqB/C,KAAKU,iBAAiBqC,mBAAmByC,cAI1EF,EAAQG,WAAaxD,EAAAA,WAAWyD,gBAEzBJ,CACX,GAEA,CAAA3D,IAAA,aAAAgE,IAIA,WACI,OAAO3F,KAAKU,iBAAiBiD,eACjC,GAEA,CAAAhC,IAAA,oBAAAC,MAIA,WACI,I,4FACH,CAtPoB,E,i+BCHlB,IAAMgE,EAAa,WA4BtB,O,EAvBA,SAAAA,EAAY1F,GAA0C,IAA9B2F,IAAqBC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,KAAAA,UAAA,I,4FAAO3F,CAAA,KAAAyF,GAChD5F,KAAKE,WAAaA,EAClBF,KAAKgG,mBAAqB,EAGrBhG,KAAKE,YAAeF,KAAKE,WAAW+F,cAMzCjG,KAAKkG,kBAAoB,IAAIC,EAAAA,kBAAkBnG,MAC/CA,KAAKoG,UAAY,IAAIC,EAAAA,oBAAoBrG,MACzCA,KAAKsG,kBAAoB,IAAIC,EAAAA,kBAAkBvG,MAG3C6F,GACA7F,KAAKwG,iBAGT/E,EAAAA,MAAMC,IAAI,mCAAoC,KAAM,IAdhDD,EAAAA,MAAMiD,MAAM,8EAA+E,KAAM,EAezG,E,EAEA,EAAA/C,IAAA,iBAAAC,MAGA,WAAiB,IAAA6E,EAIb,GAHAhF,EAAAA,MAAMC,IAAI,8BAA+B,KAAM,IAG1C1B,KAAKE,WAAW+F,aAAa7F,QAAyD,IAA/CJ,KAAKE,WAAW+F,aAAa7F,OAAOgC,OAQ5E,OAPAX,EAAAA,MAAM6C,KAAK,uDAAwD,CAC/DoC,aAAc1G,KAAKE,WAAW+F,aAAa7F,OAC3CuG,WAAY3G,KAAKE,WAAWyG,YAC7B,QAGH3G,KAAK4G,sBAAqB,GAK9B5G,KAAK4G,uBAGL5G,KAAK6G,yBAGL7G,KAAK8G,0BAELrF,EAAAA,MAAMC,IAAI,mDACN,CAAEtB,QAA2C,QAAnCqG,EAAAzG,KAAKE,WAAW+F,aAAa7F,cAAM,IAAAqG,OAAA,EAAnCA,EAAqCrE,SAAU,GAAK,EACtE,GAEA,CAAAT,IAAA,uBAAAC,MAIA,WAA6C,IAAxBmF,EAAcjB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GAEzBkB,EAAKhH,KAAKoG,UAAUa,qBAErBD,IAGLhH,KAAKkG,kBAAkBgB,kBAAkBF,EAAGG,SAC5CnH,KAAKkG,kBAAkBkB,WAAWJ,EAAGK,WAAYL,EAAGM,YAGhDP,GACAC,EAAGK,WAAWE,UAAW,EACzBP,EAAGM,WAAWC,UAAW,EACzBP,EAAGG,QAAQK,YAAc,gBAGzBxH,KAAK0C,gBAEb,GAEA,CAAAf,IAAA,yBAAAC,MAGA,WAAyB,IAAAmC,EAAA,KACrBa,SAAS6C,iBAAiB,WAAW,SAACC,GAElC,GAA6B,UAAzBA,EAAMC,OAAOC,SAAgD,aAAzBF,EAAMC,OAAOC,QAKrD,OAAQF,EAAM/F,KACV,IAAK,aACG+F,EAAMG,SAAWH,EAAMI,WACvBJ,EAAMK,iBACNhE,EAAKiE,0BAET,MAEJ,IAAK,WACGN,EAAMG,SAAWH,EAAMI,WACvBJ,EAAMK,iBACNhE,EAAKkE,0BAIrB,GACJ,GAEA,CAAAtG,IAAA,gBAAAC,MAIA,WACI,OAAO5B,KAAKkG,kBAAkBxD,eAClC,GAEA,CAAAf,IAAA,0BAAAC,MAGA,WAEI,OAAK5B,KAAKE,WAAW+F,aAAa7F,QAAyD,IAA/CJ,KAAKE,WAAW+F,aAAa7F,OAAOgC,OAKzEpC,KAAKsG,kBAAkBQ,2BAJ1BrF,EAAAA,MAAM6C,KAAK,uDAAwD,KAAM,IAClE,EAIf,GAEA,CAAA3C,IAAA,yBAAAC,MAGA,WAEI,OAAK5B,KAAKE,WAAW+F,aAAa7F,QAAyD,IAA/CJ,KAAKE,WAAW+F,aAAa7F,OAAOgC,OAKzEpC,KAAKsG,kBAAkB0B,0BAJ1BvG,EAAAA,MAAM6C,KAAK,uDAAwD,KAAM,IAClE,EAIf,GAEA,CAAA3C,IAAA,yBAAAC,MAGA,WAEI,OAAK5B,KAAKE,WAAW+F,aAAa7F,QAAyD,IAA/CJ,KAAKE,WAAW+F,aAAa7F,OAAOgC,OAKzEpC,KAAKsG,kBAAkB2B,0BAJ1BxG,EAAAA,MAAM6C,KAAK,uDAAwD,KAAM,IAClE,EAIf,GAEA,CAAA3C,IAAA,kBAAAC,MAKA,SAAgBoC,GAEZ,OAAKhE,KAAKE,WAAW+F,aAAa7F,QAAyD,IAA/CJ,KAAKE,WAAW+F,aAAa7F,OAAOgC,OAKzEpC,KAAKsG,kBAAkB4B,gBAAgBlE,IAJ1CvC,EAAAA,MAAM6C,KAAK,uDAAwD,KAAM,IAClE,EAIf,GAEA,CAAA3C,IAAA,UAAAC,MAGA,WACI5B,KAAKoG,UAAU+B,UACf1G,EAAAA,MAAMC,IAAI,2BAA4B,KAAM,EAChD,I,4FAAC,CArLqB,E,6tDCR1B0G,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA6F,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,gBAAAE,EAAAlG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAnG,OAAAkG,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,IAAAA,EAAAU,UAAA,GAAAd,OAAAK,eAAAR,EAAAmG,EAAA5F,EAAAjH,KAAAiH,EAAA,WAAA4F,EAAAlG,GAAA,IAAAvI,EAAA,SAAAuI,EAAAC,GAAA,aAAAyC,EAAA1C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAQ,OAAA2F,aAAA,YAAApG,EAAA,KAAAtI,EAAAsI,EAAAyB,KAAAxB,EAAAC,GAAA,wBAAAyC,EAAAjL,GAAA,OAAAA,EAAA,UAAA+L,UAAA,kEAAAvD,EAAAmG,OAAAC,QAAArG,EAAA,CAAAsG,CAAAtG,EAAA,0BAAA0C,EAAAjL,GAAAA,EAAAA,EAAA,GAsBO,IAAM8O,EAAU,WAuFnB,OA7GJxG,EA0BI,SAAAwG,IAA0B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAdC,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,GA1B3B,SAAAhG,EAAA4I,GAAA,KAAA5I,aAAA4I,GAAA,UAAAoD,UAAA,qCA0B4B3L,CAAA,KAAA0O,GAuBpB7O,KAAKwP,OAASC,EAAAA,YAAYC,oBArBH,CAEnBC,KAAM,KACNC,OAAO,EACPC,SAAU,EAGVC,MAAO,CACHC,cAAe,WACfC,YAAa,OACbC,cAAc,GAIlBC,YAAa,MAO6CC,OAAOxJ,YAAc,CAAC,EAAG4I,GAGvFvP,KAAKoQ,aAAe,CAChBvO,SAAU0N,EAAQ1N,WAA6B,QAArBiN,EAAIqB,OAAOxJ,kBAAU,IAAAmI,OAAA,EAAjBA,EAAmBjN,WAAY,KAC7DwO,kBAAmBd,EAAQc,oBAAsC,QAArBtB,EAAIoB,OAAOxJ,kBAAU,IAAAoI,OAAA,EAAjBA,EAAmBsB,qBAAqB,EAExFC,UAAWf,EAAQe,YAA8B,QAArBtB,EAAImB,OAAOxJ,kBAAU,IAAAqI,OAAA,EAAjBA,EAAmBsB,YAAa,GAChEC,aAAchB,EAAQgB,eAAiC,QAArBtB,EAAIkB,OAAOxJ,kBAAU,IAAAsI,OAAA,EAAjBA,EAAmBsB,eAAgB,GAEzEC,YAAajB,EAAQiB,cAAgC,QAArBtB,EAAIiB,OAAOxJ,kBAAU,IAAAuI,OAAA,EAAjBA,EAAmBsB,cAAe,GACtEC,YAAalB,EAAQkB,cAAgC,QAArBtB,EAAIgB,OAAOxJ,kBAAU,IAAAwI,OAAA,EAAjBA,EAAmBsB,cAAe,GACtEC,YAAanB,EAAQmB,cAAgC,QAArBtB,EAAIe,OAAOxJ,kBAAU,IAAAyI,OAAA,EAAjBA,EAAmBsB,eAAe,EACtEC,SAAUpB,EAAQoB,WAA6B,QAArBtB,EAAIc,OAAOxJ,kBAAU,IAAA0I,OAAA,EAAjBA,EAAmBsB,WAAY,KAC7DC,YAAarB,EAAQqB,cAAgC,QAArBtB,EAAIa,OAAOxJ,kBAAU,IAAA2I,OAAA,EAAjBA,EAAmBsB,eAAe,GAI1E5Q,KAAK6Q,aAAetB,EAAQsB,cAAgB,KAG5CpP,EAAAA,MAAMuB,WAAWhD,KAAKwP,OAAOI,MAAO,eAAgB5P,KAAKwP,OAAOK,UAAY,GAG5E,IAAMiB,EAAqBC,EAAAA,mBAAmBC,cAc9C,IAbKF,EAAmBG,iBAAmBjR,KAAKwP,OAAO0B,cACnDzP,EAAAA,MAAMC,IAAI,8CAA+C,CACrDiO,KAAM3P,KAAKwP,OAAOG,MAAQ,KAC1BuB,aAAclR,KAAKwP,OAAO0B,cAC3B,GACHJ,EAAmB9N,WAAWhD,KAAKwP,OAAOG,MAAQ,KAAM3P,KAAKwP,OAAO0B,eAEpEzP,EAAAA,MAAMC,IAAI,qDAAsD,KAAM,GAI1E1B,KAAKmR,UAAYvM,SAASwM,cAAcrQ,EAAAA,QAAUC,KAAKqQ,SAElDrR,KAAKmR,UAEN,MADA1P,EAAAA,MAAMiD,MAAM,0CAA2C,KAAM,GACvD,IAAI2G,MAAM,+BAIpB,IAAKrL,KAAKoQ,aAAavO,SAEnB,MADAJ,EAAAA,MAAMiD,MAAM,oCAAqC,KAAM,GACjD,IAAI2G,MAAM,yBAGpB5J,EAAAA,MAAMC,IAAI,qCAAsC,KAAM,GAGtD1B,KAAKsR,sBAGLtR,KAAKuR,oBAEL9P,EAAAA,MAAMC,IAAI,gCAAiC,KAAM,EACrD,EA3GJ6G,EA6GI,EAAA5G,IAAA,sBAAAC,MAIA,WAEI5B,KAAKwR,eAAiBC,EAAAA,eAAeT,cACrChR,KAAK0R,aAAeC,EAAAA,aAAaX,cACjChR,KAAK4R,cAAgBC,EAAAA,cAAcb,YAAYhR,MAC/CA,KAAK8R,aAAeC,EAAAA,aAAaf,YAAY,CACzCpB,MAAO5P,KAAKwP,OAAOI,MACnBsB,aAAclR,KAAKwP,OAAO0B,eAI9BlR,KAAK0R,aAAa1O,WAAW,CACzB8M,MAAO9P,KAAKwP,OAAOM,OACpB9P,KAAKwR,eACZ,GAEA,CAAA7P,IAAA,oBAAAC,MAIA,WAEI5B,KAAKgS,kBAAoB,IAAIC,EAAAA,kBAAkBjS,MAC/CA,KAAKiG,aAAe,IAAIhG,EAAAA,aAAaD,MAGrCA,KAAKkS,YAAc,IAAIC,EAAAA,YACnBnS,KAAKoS,iBACLrR,EAAAA,QAAUsR,MAAMC,OAAOpR,OACvBH,EAAAA,QAAUwR,UAAUC,QAAQtR,QAEhClB,KAAKyS,aAAe,IAAIC,EAAAA,aAAa1S,MAGrCA,KAAKyC,cAAgB,IAAImD,EAAAA,cAAc5F,MAAM,GAG7CA,KAAK2S,mBAAqB,IAAIC,EAAAA,mBAAmB5S,MACjDA,KAAK6S,kBAAoB,IAAIC,EAAAA,kBAAkB9S,MAC/CA,KAAK+S,cAAgB,IAAIC,EAAAA,cAAchT,KAC3C,GAEA,CAAA2B,IAAA,aAAAC,OAAAqR,EAAA9E,EAAA/F,IAAA4E,MAGA,SAAAkG,IAAA,OAAA9K,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,OAC+D,OAA3DvK,EAAAA,MAAMC,IAAI,uCAAwC,KAAM,GAAGyR,EAAA1F,KAAA,EAAA0F,EAAAnH,KAAA,EAIjDhM,KAAKoT,kBAAiB,cAAAD,EAAAnH,KAAA,EAGtBhM,KAAKqT,iBAAgB,cAAAF,EAAAnH,KAAA,EAGrBhM,KAAKsT,YAAW,cAAAH,EAAAnH,KAAA,GAGhBhM,KAAKuT,mBAAkB,QAU6B,OAPtDvT,KAAKoQ,aAAaQ,aAClB5Q,KAAKwT,uBAITxT,KAAK8R,aAAa2B,aAElBhS,EAAAA,MAAMC,IAAI,sCAAuC,KAAM,GAAGyR,EAAAtH,OAAA,UACnD,GAAI,QAG4B,MAH5BsH,EAAA1F,KAAA,GAAA0F,EAAAO,GAAAP,EAAA,SAEX1R,EAAAA,MAAMiD,MAAM,2CAA0CyO,EAAAO,GAAS,GAC/D1T,KAAK2T,2BAA0BR,EAAAO,IAAQP,EAAAO,GAAA,yBAAAP,EAAAvF,OAAA,GAAAsF,EAAA,mBAG9C,WA/Be,OAAAD,EAAA7E,MAAC,KAADtI,UAAA,IAiChB,CAAAnE,IAAA,6BAAAC,MAIA,SAA2B8C,GACvBjD,EAAAA,MAAMiD,MAAM,oDAAqDA,EAAO,GAGxE,IACMkP,EADqB7C,EAAAA,mBAAmBC,cACTrL,IAAI,qBAAuB,4BAG1DkO,EAAejP,SAASkP,cAAc,OAC5CD,EAAaE,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQC,aAAa/S,OAAM,YACjE2S,EAAaK,UAAY,qBAAH1R,OACZoR,EAAS,0BAAApR,OACVkC,EAAMyP,SAAW,gCAA+B,kBAIrDnU,KAAKmR,YAELnR,KAAKmR,UAAUiD,YAAYP,GAG3B7T,KAAKmR,UAAUkD,MAAMC,QAAU,OAEvC,GAEA,CAAA3S,IAAA,kBAAAC,OAAA2S,EAAApG,EAAA/F,IAAA4E,MAIA,SAAAwH,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAvM,IAAAmB,MAAA,SAAAqL,GAAA,cAAAA,EAAAnH,KAAAmH,EAAA5I,MAAA,OAEIhM,KAAKiG,aAAa4O,WAAW7U,KAAKoQ,aAAavO,UAE/CJ,EAAAA,MAAMC,IAAI,sBAADc,QAAwD,QAAjCiS,EAAAzU,KAAKoQ,aAAavO,SAASzB,cAAM,IAAAqU,OAAA,EAAjCA,EAAmCrS,SAAU,EAAC,oCAAAI,QAAiE,QAA9BkS,EAAA1U,KAAKoQ,aAAavO,SAASM,WAAG,IAAAuS,OAAA,EAA9BA,EAAgCtS,SAAU,EAAC,UAAAI,QAAuC,QAA9BmS,EAAA3U,KAAKoQ,aAAavO,SAAQ,WAAI,IAAA8S,OAAA,EAA9BA,EAAgCvS,SAAU,GAAK,KAAM,GAAG,wBAAAwS,EAAAhH,OAAA,GAAA4G,EAAA,UAChO,WALoB,OAAAD,EAAAnG,MAAC,KAADtI,UAAA,IAOrB,CAAAnE,IAAA,iBAAAC,OAAAkT,EAAA3G,EAAA/F,IAAA4E,MAIA,SAAA+H,IAAA,IAAAC,EAAA,OAAA5M,IAAAmB,MAAA,SAAA0L,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAjJ,MAAA,UAEShM,KAAKgS,kBAAkBkD,kBAAmB,CAAFD,EAAAjJ,KAAA,eAAAiJ,EAAAjJ,KAAA,EACnChM,KAAKgS,kBAAkBhP,aAAY,cAAAiS,EAAAjJ,KAAA,EACnChM,KAAKgS,kBAAkBmD,kBAAiB,OAIM,OAAlDH,EAAehV,KAAK0R,aAAa0D,kBAAiBH,EAAAjJ,KAAA,EAClDhM,KAAK0R,aAAa2D,WAAWL,EAAaM,OAAQN,EAAaO,MAAK,wBAAAN,EAAArH,OAAA,GAAAmH,EAAA,UAC7E,WAVmB,OAAAD,EAAA1G,MAAC,KAADtI,UAAA,IAYpB,CAAAnE,IAAA,YAAAC,OAAA4T,EAAArH,EAAA/F,IAAA4E,MAIA,SAAAyI,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3N,IAAAmB,MAAA,SAAAyM,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAhK,MAAA,OAEQhM,KAAKmR,YACLnR,KAAKmR,UAAUkD,MAAMC,QAAU,QAInC7S,EAAAA,MAAMC,IAAI,yBAADc,QAA2D,QAAjCkT,EAAA1V,KAAKoQ,aAAavO,SAASzB,cAAM,IAAAsV,OAAA,EAAjCA,EAAmCtT,SAAU,EAAC,WAAW,KAAM,GAClGpC,KAAKiG,aAAanD,eAGlB9C,KAAKgS,kBAAkBiE,aAAajW,KAAKmR,WAGzCnR,KAAKkS,YAAYlP,aAGbhD,KAAKwP,OAAOM,MAAMG,cAClBjQ,KAAK4R,cAAc5O,aAIvBkT,EAAAA,SAASC,YAAYpV,EAAAA,QAAUC,KAAKuR,UAAUrR,OAAQ,UAAU,GAI5D2U,OADEA,EAAmBjR,SAASwM,cAAcrQ,EAAAA,QAAUwR,UAAUC,WAChEqD,EAAkBO,UAAUC,SAAS,eACrCR,EAAiBO,UAAUE,OAAO,cAIhCR,EAAgBlR,SAASwM,cAAcrQ,EAAAA,QAAUsR,MAAMkE,UAE7DR,OADMA,EAAgBnR,SAASwM,cAAcrQ,EAAAA,QAAUC,KAAKuR,aACnC,QAAZoD,EAAbI,EAAeS,kBAAU,IAAAb,GAAc,QAAdC,EAAzBD,EAA2Bc,oBAAY,IAAAb,GAAvCA,EAAA9L,KAAA6L,EAA0CG,EAAeC,GACrDD,GAAiBC,GACjBtU,EAAAA,MAAMC,IAAI,+DAAgE,KAAM,GACnF,yBAAAsU,EAAApI,OAAA,GAAA6H,EAAA,UACJ,WArCc,OAAAD,EAAApH,MAAC,KAADtI,UAAA,IAuCf,CAAAnE,IAAA,mBAAAC,OAAA8U,EAAAvI,EAAA/F,IAAA4E,MAIA,SAAA2J,IAAA,IAAAC,EAAA,OAAAxO,IAAAmB,MAAA,SAAAsN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA7K,MAAA,OAEIhM,KAAK2S,mBAAmBmE,6BAGxB9W,KAAK+S,cAAc/P,aAGnBhD,KAAK6S,kBAAkBkE,wBAGnB/W,KAAKyC,gBACLhB,EAAAA,MAAMC,IAAI,yDAA0D,KAAM,GAC1E1B,KAAKyC,cAAc+D,kBAKjBoQ,EAAkB,IAAII,YAAY,kBAAmB,CACvDC,OAAQ,CACJC,UAAW,IAAIC,KACfC,OAAQpX,QAGhB4E,SAASyS,cAAcT,GACvBnV,EAAAA,MAAMC,IAAI,+CAAgD,KAAM,GAEhED,EAAAA,MAAMC,IAAI,kDAAmD,KAAM,GAAG,wBAAAmV,EAAAjJ,OAAA,GAAA+I,EAAA,UACzE,WA5BqB,OAAAD,EAAAtI,MAAC,KAADtI,UAAA,IA8BtB,CAAAnE,IAAA,uBAAAC,MAIA,WAAuB,IAAA0V,EACnB7V,EAAAA,MAAMC,IAAI,wCAAyC,KAAM,GAGzD,IAAM6V,EAAepH,OAAOoH,eAAsC,QAA1BD,EAAKtX,KAAKoS,wBAAgB,IAAAkF,OAAA,EAArBA,EAAuBC,cAEpE,GAAIA,EAAc,CACd,IAAMC,EAAeD,EAAavG,cAG5ByG,EAAiB7S,SAASwM,cAAc,6BAG9CoG,EAAaE,UAAU,8NAGnB,UACA,CACIC,aAAa,EACb5D,UAAW,WACX6D,WAAW,EACXC,cAAeJ,EACfK,UAAW,SACXC,QAAS,IAIjBtW,EAAAA,MAAMC,IAAI,2DAA4D,KAAM,EAChF,CACJ,GAEA,CAAAC,IAAA,eAAAC,MAIA,SAAaoW,GACJA,IAGLhY,KAAKwP,OAASC,EAAAA,YAAYC,oBAAoB1P,KAAKwP,OAAQwI,GAE3DvW,EAAAA,MAAMC,IAAI,oCAAqCsW,EAAW,GAC9D,GAEA,CAAArW,IAAA,qBAAAC,MAIA,SAAmBqW,GACVA,IAGLjY,KAAKoQ,aAAY7K,EAAAA,EAAA,GAAOvF,KAAKoQ,cAAiB6H,GAE9CxW,EAAAA,MAAMC,IAAI,yCAA0CuW,EAAO,GAC/D,GAEA,CAAAtW,IAAA,YAAAC,MAIA,WACI,OAAA2D,EAAA,GAAWvF,KAAKwP,OACpB,GAEA,CAAA7N,IAAA,kBAAAC,MAIA,WAAkB,IAAAsW,EAAAC,EAAAC,EAAAC,EAoBd,OAlBA5W,EAAAA,MAAMC,IAAI,oCAAqC,CAC3C4O,UAAWtQ,KAAKoQ,aAAaE,WAAa,SAC1CC,aAAcvQ,KAAKoQ,aAAaG,cAAgB,SAChDC,YAAaxQ,KAAKoQ,aAAaI,aAAe,SAC9CC,YAAazQ,KAAKoQ,aAAaK,aAAe,SAE9C6H,iBAAkB,CACdC,aAAcpI,OAAOxJ,YAAc,cAAewJ,OAAOxJ,WACzD2J,WAA4B,QAAjB4H,EAAA/H,OAAOxJ,kBAAU,IAAAuR,OAAA,EAAjBA,EAAmB5H,YAAa,SAC3CkI,gBAAiBrI,OAAOxJ,YAAc,iBAAkBwJ,OAAOxJ,WAC/D4J,cAA+B,QAAjB4H,EAAAhI,OAAOxJ,kBAAU,IAAAwR,OAAA,EAAjBA,EAAmB5H,eAAgB,SACjDkI,eAAgBtI,OAAOxJ,YAAc,gBAAiBwJ,OAAOxJ,WAC7D6J,aAA8B,QAAjB4H,EAAAjI,OAAOxJ,kBAAU,IAAAyR,OAAA,EAAjBA,EAAmB5H,cAAe,SAC/CkI,eAAgBvI,OAAOxJ,YAAc,gBAAiBwJ,OAAOxJ,WAC7D8J,aAA8B,QAAjB4H,EAAAlI,OAAOxJ,kBAAU,IAAA0R,OAAA,EAAjBA,EAAmB5H,cAAe,WAEpD,GAEHlL,EAAA,GAAWvF,KAAKoQ,aACpB,GAEA,CAAAzO,IAAA,UAAAC,MAGA,WAEQ5B,KAAK+S,eACL/S,KAAK+S,cAAc5K,UAInBnI,KAAKyC,eACLzC,KAAKyC,cAAc0F,UAIvB+N,EAAAA,SAASC,YAAYpV,EAAAA,QAAUC,KAAKuR,UAAUrR,OAAQ,UAAU,GAGhEO,EAAAA,MAAMC,IAAI,kCAAmC,KAAM,EACvD,GAEA,CAAAC,IAAA,yBAAAC,MAGA,WAAyB,IAAA+W,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAErBhZ,KAAKoQ,aAAe,CAChBvO,SAAU7B,KAAKuP,QAAQ1N,UAAY,CAAC,EACpCwO,kBAAmBrQ,KAAKuP,QAAQc,oBAAqB,EAErDC,UAAWtQ,KAAKuP,QAAQe,YAA8B,QAArBqI,EAAIxI,OAAOxJ,kBAAU,IAAAgS,OAAA,EAAjBA,EAAmBrI,YAAa,GACrEC,aAAcvQ,KAAKuP,QAAQgB,eAAiC,QAArBqI,EAAIzI,OAAOxJ,kBAAU,IAAAiS,OAAA,EAAjBA,EAAmBrI,eAAgB,GAC9EC,YAAaxQ,KAAKuP,QAAQiB,cAAgC,QAArBqI,EAAI1I,OAAOxJ,kBAAU,IAAAkS,OAAA,EAAjBA,EAAmBrI,cAAe,GAC3EC,YAAazQ,KAAKuP,QAAQkB,cAAgC,QAArBqI,EAAI3I,OAAOxJ,kBAAU,IAAAmS,OAAA,EAAjBA,EAAmBrI,cAAe,GAC3EC,YAAa1Q,KAAKuP,QAAQmB,cAAgC,QAArBqI,EAAI5I,OAAOxJ,kBAAU,IAAAoS,OAAA,EAAjBA,EAAmBrI,eAAe,EAC3EC,SAAU3Q,KAAKuP,QAAQoB,WAA6B,QAArBqI,EAAI7I,OAAOxJ,kBAAU,IAAAqS,OAAA,EAAjBA,EAAmBrI,WAAY,IAGtElP,EAAAA,MAAMC,IAAI,6CAA8C1B,KAAKoQ,aAAc,EAC/E,GAEA,CAAAzO,IAAA,sBAAAC,MAIA,WAGI,OAAO5B,KAAKoQ,aAAa6I,eAAgB,CAC7C,GAEA,CAAAtX,IAAA,cAAAC,OAAAsX,EAAA/K,EAAA/F,IAAA4E,MAKA,SAAAmM,EAAkBC,GAAY,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApR,IAAAmB,MAAA,SAAAkQ,GAAA,cAAAA,EAAAhM,KAAAgM,EAAAzN,MAAA,OAKmC,OAJ7DvK,EAAAA,MAAMC,IAAI,oCAADc,OAAqC4W,GAAgB,KAAM,GAAGK,EAAAhM,KAAA,EAI7D4L,EAAoBK,EAAAA,kBAAkB1I,cAAayI,EAAAzN,KAAA,EAClCqN,EAAkBM,YAAYP,GAAa,OAEO,OAFnEE,EAAQG,EAAA/N,KAEdjK,EAAAA,MAAMC,IAAI,kCAADc,OAAmC4W,GAAgBE,EAAU,GAAGG,EAAA5N,OAAA,SAClEyN,GAAQ,QAKf,GALeG,EAAAhM,KAAA,GAAAgM,EAAA/F,GAAA+F,EAAA,SAGfhY,EAAAA,MAAM6C,KAAK,0CAAD9B,OAA2C4W,EAAY,oBAAAK,EAAA/F,GAA2B,GAG7E,QADf6F,EACIvZ,KAAKwP,cAAM,IAAA+J,IAAXA,EAAaK,aAAaR,GAAa,CAAAK,EAAAzN,KAAA,gBAAAyN,EAAA5N,OAAA,SAChC7L,KAAKwP,OAAOoK,aAAaR,IAAa,QAOhD,OAHKI,EAAmB,CACrB,cAAiB,6BACjB,cAAiB,6BACpBC,EAAA5N,OAAA,SAEM2N,EAAiBJ,IAAiB,UAAYA,EAAe,QAAM,yBAAAK,EAAA7L,OAAA,GAAAuL,EAAA,mBAEjF,SA3BgBU,GAAA,OAAAX,EAAA9K,MAAC,KAADtI,UAAA,IA6BjB,CAAAnE,IAAA,sBAAAC,MAKA,SAAoBwQ,GAahB,OAZApS,KAAKoS,iBAAmBA,EAGpBpS,KAAKkS,aACLlS,KAAKkS,YAAY4H,oBAAoB1H,GAGrCpS,KAAK4R,eACL5R,KAAK4R,cAAckI,oBAAoB1H,GAG3C3Q,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,GACvD1B,IACX,IA5gBJuI,GAAAgG,EAAAlG,EAAAI,UAAAF,GAAAD,GAAAiG,EAAAlG,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAiB,UAAA,IAAAjB,EAAA,IAAAA,EAAAE,EAAAD,EAudI4Q,EArLAxC,EA3CAlB,EAhBAV,EAXAP,EAjEAtB,CAiXC,CAtfkB,E,0/BCXhB,IAAMP,EAAY,WAsBrB,O,EAjBA,SAAAA,EAAYxS,I,4FAAYC,CAAA,KAAAuS,GACpB1S,KAAKE,WAAaA,EAGlBF,KAAK8R,aAAe9R,KAAKE,WAAW4R,aAGpC9R,KAAK+Z,eAAiB,IAAIC,EAAAA,oBAAoBha,MAC9CA,KAAKia,aAAe,IAAIC,EAAAA,kBAAkBla,MAC1CA,KAAKma,iBAAmB,IAAIC,EAAAA,sBAAsBpa,MAGlDA,KAAKgD,aAELvB,EAAAA,MAAMC,IAAI,sCAAuC,KAAM,EAC3D,G,EAEA,EAAAC,IAAA,aAAAC,MAGA,WAEI,IAAMwO,EAAepQ,KAAKE,WAAWma,kBAC/BhK,EAAoBD,GAAgBA,EAAaC,kBAEvD5O,EAAAA,MAAMC,IAAI,qDAADc,OAAsD6N,GAAqB,KAAM,GAG1FrQ,KAAKia,aAAajX,cAGQ,IAAtBqN,IACA5O,EAAAA,MAAMC,IAAI,mEAAoE,KAAM,GACpF1B,KAAKia,aAAaK,0BAItBta,KAAK+Z,eAAe/W,aAEpBvB,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,EACnE,GAEA,CAAAC,IAAA,eAAAC,MAIA,WACI5B,KAAK+Z,eAAeQ,oBACxB,GAEA,CAAA5Y,IAAA,mBAAAC,MAIA,WACI,OAAO5B,KAAKE,WAAW+F,aAAarC,uBACxC,GAEA,CAAAjC,IAAA,mBAAAC,MAMA,SAAiB4Y,GACb,OAAOxa,KAAKma,iBAAiBM,iBAAiBD,EAClD,GAEA,CAAA7Y,IAAA,2BAAAC,MAKA,WACI,OAAO5B,KAAKia,aAAaS,0BAC7B,GAEA,CAAA/Y,IAAA,oBAAAC,MAKA,SAAkB+Y,GACd3a,KAAKia,aAAaW,kBAAkBD,EACxC,GAEA,CAAAhZ,IAAA,4BAAAC,MAIA,WACI,OAAO5B,KAAKia,aAAaY,2BAC7B,GAEA,CAAAlZ,IAAA,qBAAAC,MAOA,SAAmBkZ,EAAUC,EAAiB5G,GAC1C,IAAMqD,EAAeD,EAAAA,QAAavG,cAElC,OAAI8J,EACOtD,EAAawD,YAAYD,EAAiB,CAC7ChD,QAAS,EACTH,WAAW,IAGRJ,EAAayD,YAAY9G,EAAS,CACrC4D,QAAS,EACTH,WAAW,GAGvB,M,yFAAC,CAxHoB,E,qqBCXzBxP,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA6F,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,gBAAAE,EAAAlG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAnG,OAAAkG,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,IAAAA,EAAAU,UAAA,GAAAd,OAAAK,eAAAR,EAAAmG,EAAA5F,EAAAjH,KAAAiH,EAAA,WAAA4F,EAAAlG,GAAA,IAAAvI,EAAA,SAAAuI,EAAAC,GAAA,aAAAyC,EAAA1C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAQ,OAAA2F,aAAA,YAAApG,EAAA,KAAAtI,EAAAsI,EAAAyB,KAAAxB,EAAAC,GAAA,wBAAAyC,EAAAjL,GAAA,OAAAA,EAAA,UAAA+L,UAAA,kEAAAvD,EAAAmG,OAAAC,QAAArG,EAAA,CAAAsG,CAAAtG,EAAA,0BAAA0C,EAAAjL,GAAAA,EAAAA,EAAA,GAcO,IAAMkS,EAAiB,WAkB1B,OAhCJ5J,EAkBI,SAAA4J,EAAY/R,IAlBhB,SAAAJ,EAAA4I,GAAA,KAAA5I,aAAA4I,GAAA,UAAAoD,UAAA,qCAkB4B3L,CAAA,KAAA8R,GACpBjS,KAAKE,WAAaA,EAClBF,KAAKkV,mBAAoB,EACzBlV,KAAKwR,eAAiBC,EAAAA,eAAeT,cACrChR,KAAK0R,aAAeC,EAAAA,aAAaX,cACjChR,KAAKkb,SAAW,YAGhB,IAAMlG,EAAehV,KAAK0R,aAAa0D,kBACvCpV,KAAK8P,MAAQkF,EAAaO,MAAQ,QAElC9T,EAAAA,MAAMC,IAAI,iCAAkC,KAAM,EACtD,EA9BJ6G,EAgCI,EAAA5G,IAAA,aAAAC,OAAAqR,EAAA9E,EAAA/F,IAAA4E,MAGA,SAAAkG,IAAA,IAAAvC,EAAA,OAAAvI,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,cAAAmH,EAAAnH,KAAA,EAEUhM,KAAKmV,kBAAiB,WAGxBnV,KAAKkV,kBAAmB,CAAF/B,EAAAnH,KAAA,QAItB,OAFM2E,EAAW3Q,KAAKE,WAAWma,kBAAkB1J,UAAY,GAE/DwC,EAAAnH,KAAA,EACMhM,KAAKmb,YAAYxK,GAAS,OAEhClP,EAAAA,MAAMC,IAAI,gDAAiD1B,KAAKkb,SAAU,GAAG/H,EAAAnH,KAAA,gBAE7EvK,EAAAA,MAAM6C,KAAK,6EAA8E,KAAM,GAAG,yBAAA6O,EAAAvF,OAAA,GAAAsF,EAAA,UAEzG,WAhBe,OAAAD,EAAA7E,MAAC,KAADtI,UAAA,IAkBhB,CAAAnE,IAAA,kBAAAC,OAAAwZ,EAAAjN,EAAA/F,IAAA4E,MAGA,SAAAwH,IAAA,OAAApM,IAAAmB,MAAA,SAAAqL,GAAA,cAAAA,EAAAnH,KAAAmH,EAAA5I,MAAA,OAIQ,OAJR4I,EAAAnH,KAAA,EAEQhM,EAAAA,MAAMC,IAAI,+CAAgD,KAAM,GAEhEkT,EAAA5I,KAAA,EACMhM,KAAKE,WAAWsR,eAAe6J,4BAA2B,OAGU,OAD1Erb,KAAKkV,mBAAoB,EACzBzT,EAAAA,MAAMC,IAAI,sDAAuD,KAAM,GAAGkT,EAAA/I,OAAA,UACnE,GAAI,OAE8D,OAF9D+I,EAAAnH,KAAA,EAAAmH,EAAAlB,GAAAkB,EAAA,SAEXnT,EAAAA,MAAMiD,MAAM,kDAAiDkQ,EAAAlB,GAAS,GAAGkB,EAAA/I,OAAA,UAClE,GAAK,yBAAA+I,EAAAhH,OAAA,GAAA4G,EAAA,kBAEnB,WAdoB,OAAA4G,EAAAhN,MAAC,KAADtI,UAAA,IAgBrB,CAAAnE,IAAA,eAAAC,MAIA,WAAmC,IAAAmC,EAAA,KAAtBoN,EAASrL,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAGlB,SACrB,GAAK5E,KAAKkV,mBAAsB/E,OAAOmL,KAAvC,CAMA,IAAMrX,EAAWiS,EAAAA,SAASqF,YAAY,GAAD/Y,OAC9BzB,EAAAA,QAAUC,KAAKwa,aAAY,SAAAhZ,OAAQzB,EAAAA,QAAUC,KAAKya,mBAAkB,UAAAjZ,OAASzB,EAAAA,QAAUC,KAAK0a,iBAAgB,KAC/GvK,GAGJ,GAAKlN,EAAL,CAKA,IAAM0X,EAAeC,MAAMC,KAAK5X,GAAUO,QAAO,SAAAsX,GAAE,OAAIA,EAAGtU,YAAYuU,MAAM,IAC5Eta,EAAAA,MAAMC,IAAI,4BAADc,OAA6BmZ,EAAavZ,OAAM,+BAA+B,KAAM,GAG9F,IAAI4Z,EAAW,KACf,GAAIL,EAAavZ,OAAS,IAAK,CAE3B,IAAM0O,EAAqBC,EAAAA,mBAAmBC,cACxCiL,EAAgBC,EAAAA,cAAclL,cAC9BmL,EAAiBrL,EAAmBnL,IAAI,6BAA8B,mCAG5EqW,EAAWC,EAAcG,WAAWD,EAAgB,CAChDE,YAAY,EACZC,OAAQ,MAGZ7a,EAAAA,MAAMC,IAAI,gEAAiE,KAAM,EACrF,CAGA,IACIsC,EAAQ,EAGNlC,EAAYC,YAAYC,MAGxBua,EAAe,WACjB,GAAIvY,GAAS2X,EAAavZ,OAEtB,GAAI4Z,EAAU,CACYE,EAAAA,cAAclL,cACtBwL,WAAWR,GAGzB,IACMS,EADU1a,YAAYC,MACDF,EAC3BL,EAAAA,MAAMC,IAAI,gDAADc,OAAiDmZ,EAAavZ,OAAM,iBAAAI,OAAgBia,EAAS7Z,QAAQ,GAAE,MAAM,KAAM,EAChI,MACInB,EAAAA,MAAMC,IAAI,2CAA4C,KAAM,OAXpE,CAkBA,IADA,IAAMgb,EAAMtZ,KAAKuZ,IAAI3Y,EAzBP,GAyB0B2X,EAAavZ,QAC5CrC,EAAIiE,EAAOjE,EAAI2c,EAAK3c,IACzBgE,EAAK6Y,iBAAiBjB,EAAa5b,IAIvC,GAAIic,GAAYhY,EAAQ,KAAoB,EAAG,CAC3C,IAAMiY,EAAgBC,EAAAA,cAAclL,cAC9BF,EAAqBC,EAAAA,mBAAmBC,cACxC6L,EAAWzZ,KAAK0Z,MAAO9Y,EAAQ2X,EAAavZ,OAAU,KACtD2a,EAAkBjM,EAAmBnL,IAAI,qCAC3C,uCAAuCqX,QAAQ,MAAOH,GAE1DZ,EAAcgB,oBAAoBjB,EAAUe,EAChD,CAGA/Y,EAAQ0Y,EAGRQ,uBAAsB,WAClBC,WAAWZ,EAAc,EAC7B,GAzBA,CA0BJ,EAGAA,GA1EA,MAFI9a,EAAAA,MAAMC,IAAI,yDAA0D,KAAM,EAT9E,MAFID,EAAAA,MAAM6C,KAAK,qEAAsE,KAAM,EAwF/F,GAEA,CAAA3C,IAAA,mBAAAC,MAKA,SAAiBwb,GAAkC,IAAzBC,EAAevX,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GACrC,GAAK9F,KAAKkV,mBAAsB/E,OAAOmL,MAAS8B,EAEhD,IAESA,EAAQhH,UAAUC,SAASrW,KAAKkb,YAETkC,EAAQrJ,UAAUuJ,MAAM,KAC3C9Y,QAAO,SAAA+Y,GAAG,OAAIA,EAAIC,WAAW,YAAY,IAE9Bnb,SAAQ,SAAAkb,GACpBH,EAAQhH,UAAUE,OAAOiH,EAC7B,IAGAH,EAAQhH,UAAUqH,IAAIzd,KAAKkb,WAI/BwC,EAAAA,sBAAsBC,kBAAkBP,GAGxCjN,OAAOmL,KAAKsB,iBAAiBQ,GAGzBC,GAAmBlN,OAAOmL,KAAKsC,kBAC/BzN,OAAOmL,KAAKsC,iBAAiBR,EAErC,CAAE,MAAO1Y,GACLjD,EAAAA,MAAMiD,MAAM,iDAAkDA,EAAO,EACzE,CACJ,GAEA,CAAA/C,IAAA,cAAAC,OAAAic,EAAA1P,EAAA/F,IAAA4E,MAIA,SAAA+H,EAAkBpE,GAAQ,IAAAmN,EAAA1N,EAAA2N,EAAAC,EAAAC,EAAAnN,EAAAmL,EAAAE,EAAAtL,EAAA,OAAAzI,IAAAmB,MAAA,SAAA0L,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAjJ,MAAA,OA8BtB,GA5BMoE,EAAepQ,KAAKE,WAAWma,kBAGjC0D,EAAc,YACdC,EAAa,UAGbrN,GAAgC,iBAAbA,GAAyBA,EAASuN,SAAS,OACxDD,EAAYtN,EAAS2M,MAAM,KAAK9P,MAAM2Q,iBAExCJ,EAAcK,EAAYH,IAAcA,EACxCD,EAAa,WACbvc,EAAAA,MAAMC,IAAI,mEAADc,OAAoEyb,GAAa,KAAM,IAKpF,cAAhBF,GAA8C,YAAfC,GAAiD,QAAzBF,EAAI1N,EAAavO,gBAAQ,IAAAic,GAArBA,EAAuB5C,WAClF6C,EAAc3N,EAAavO,SAASqZ,SACpC8C,EAAa,WACbvc,EAAAA,MAAMC,IAAI,yDAADc,OAA0Dub,GAAe,KAAM,IAIxE,cAAhBA,GAA8C,YAAfC,GAC/Bvc,EAAAA,MAAMC,IAAI,kFAAmF,KAAM,GAInG1B,KAAKkb,WAAa6C,EAAW,CAAA9I,EAAAjJ,KAAA,SAK7B,GAJAhM,KAAKkb,SAAW6C,EAEhBtc,EAAAA,MAAMC,IAAI,0CAADc,OAA2Cub,EAAW,cAAAvb,OAAawb,EAAU,KAAK,KAAM,IAG7Fhe,KAAKkV,mBAAsBlV,KAAKwR,eAAe6M,gBAAgBC,IAAIP,GAAY,CAAA9I,EAAAjJ,KAAA,SAsB3E,OArBJvK,EAAAA,MAAMC,IAAI,uCAADc,OAAwCub,GAAe,KAAM,GAGhEjN,EAAqBC,EAAAA,mBAAmBC,cACxCiL,EAAgBC,EAAAA,cAAclL,cAC9BmL,EAAiBrL,EAAmBnL,IAAI,kBAAmB,yBAC5DqX,QAAQ,MAAOe,IAGdlN,EAAe7Q,KAAKE,WAAW2Q,eAGjCpP,EAAAA,MAAM6C,KAAK,sFAAuF,KAAM,GAC3G2Q,EAAAxH,KAAA,GAIOoD,GACAoL,EAAcgB,oBAAoBpM,EAAcsL,GAGpDlH,EAAAjJ,KAAA,GACMhM,KAAKwR,eAAe+M,aAAaR,GAAY,QAAA9I,EAAAjJ,KAAA,iBAAAiJ,EAAAxH,KAAA,GAAAwH,EAAAvB,GAAAuB,EAAA,UAInDxT,EAAAA,MAAMiD,MAAM,6CAADlC,OAA8Cub,EAAW,KAAA9I,EAAAvB,GAAY,GAAG,QAAAuB,EAAAjJ,KAAA,iBAGvFvK,EAAAA,MAAMC,IAAI,+BAADc,OAAgCub,EAAW,mBAAmB,KAAM,GAAG,QAGpFtc,EAAAA,MAAMC,IAAI,sCAADc,OAAuCxC,KAAKkb,UAAY,KAAM,GAAGjG,EAAAjJ,KAAA,iBAE1EvK,EAAAA,MAAMC,IAAI,8CAADc,OAA+CxC,KAAKkb,UAAY,KAAM,GAAG,yBAAAjG,EAAArH,OAAA,GAAAmH,EAAA,oBAEzF,SA1EgB8E,GAAA,OAAAgE,EAAAzP,MAAC,KAADtI,UAAA,KAlNrByC,GAAAgG,EAAAlG,EAAAI,UAAAF,GAAAD,GAAAiG,EAAAlG,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAiB,UAAA,IAAAjB,EAAA,IAAAA,EAAAE,EAAAD,EA8MIuV,EAzJAzC,EArBAnI,CAkLiB,CApMS,E,wwBCd9B7K,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA6F,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,gBAAAE,EAAAlG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAnG,OAAAkG,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,IAAAA,EAAAU,UAAA,GAAAd,OAAAK,eAAAR,EAAAmG,EAAA5F,EAAAjH,KAAAiH,EAAA,WAAA4F,EAAAlG,GAAA,IAAAvI,EAAA,SAAAuI,EAAAC,GAAA,aAAAyC,EAAA1C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAQ,OAAA2F,aAAA,YAAApG,EAAA,KAAAtI,EAAAsI,EAAAyB,KAAAxB,EAAAC,GAAA,wBAAAyC,EAAAjL,GAAA,OAAAA,EAAA,UAAA+L,UAAA,kEAAAvD,EAAAmG,OAAAC,QAAArG,EAAA,CAAAsG,CAAAtG,EAAA,0BAAA0C,EAAAjL,GAAAA,EAAAA,EAAA,YAAAye,EAAAlW,EAAAD,GAAA,GAAAA,IAAA,UAAA2C,EAAA3C,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAAyD,UAAA,4EAAAzD,GAAA,YAAAA,EAAA,UAAAoW,eAAA,oEAAApW,CAAA,CAAAqW,CAAApW,EAAA,UAAAqW,IAAA,QAAArW,GAAA7D,QAAAgE,UAAAmW,QAAA9U,KAAA+U,QAAAC,UAAAra,QAAA,0BAAA6D,GAAA,QAAAqW,EAAA,mBAAArW,CAAA,cAAAyW,EAAAzW,GAAA,OAAAyW,EAAAvW,OAAAyE,eAAAzE,OAAAgC,eAAAwU,OAAA,SAAA1W,GAAA,OAAAA,EAAA4E,WAAA1E,OAAAgC,eAAAlC,EAAA,EAAAyW,EAAAzW,EAAA,UAAA2W,EAAA3W,EAAAD,GAAA,OAAA4W,EAAAzW,OAAAyE,eAAAzE,OAAAyE,eAAA+R,OAAA,SAAA1W,EAAAD,GAAA,OAAAC,EAAA4E,UAAA7E,EAAAC,CAAA,EAAA2W,EAAA3W,EAAAD,EAAA,CAIA,IAAI6W,EAAW,KAEFvN,EAAY,SAAAwN,GAerB,SAAAxN,IAAc,IAAA5N,EArBlBuE,EAAAM,EAAAP,EAwBQ,OAxBR,SAAAvI,EAAA4I,GAAA,KAAA5I,aAAA4I,GAAA,UAAAoD,UAAA,qCAqBkB3L,CAAA,KAAAwR,GArBlBrJ,EAsBQ,KAtBRM,EAAAmW,EAAAnW,EAsBQ+I,IAAA5N,EAtBRya,EAAAlW,EAAAqW,IAAAE,QAAAC,UAAAlW,EAAAP,GAAA,GAAA0W,EAAAzW,GAAAyE,aAAAnE,EAAAwF,MAAA9F,EAAAD,KAwBkB+W,iBAAiBF,IAK3Bnb,EAAKsb,aAAc,EACnBtb,EAAKub,gBAAkB,KACvBvb,EAAKiR,aAAe,CAAEM,OAAQ,KAAMC,KAAM,MAC1CxR,EAAKwb,aAAe,CAAEjK,OAAQ,WAAYC,KAAM,QAChDxR,EAAKyb,UAAY,GACjBzb,EAAKyN,eAAiB,KAGtB0N,EAAQnb,EAAQA,GAZZya,EAAAza,EAaR,CAEA,OAxCJ,SAAAuE,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAyD,UAAA,sDAAAxD,EAAAG,UAAAD,OAAAiB,OAAApB,GAAAA,EAAAI,UAAA,CAAAsE,YAAA,CAAAnL,MAAA0G,EAAAgB,UAAA,EAAAD,cAAA,KAAAb,OAAAK,eAAAP,EAAA,aAAAgB,UAAA,IAAAjB,GAAA4W,EAAA3W,EAAAD,EAAA,CAwCIoX,CAAA9N,EAAAwN,GAxCJ9W,EAwCIsJ,EAxCJpJ,EAwCI,EAAA5G,IAAA,aAAAC,MAMA,SAAW4N,EAAQgC,GAGf,GAFA/P,EAAAA,MAAMC,IAAI,6BAA8B,CAAE8N,OAAAA,GAAU,GAEhDxP,KAAKqf,YAAa,OAAO,EAG7Brf,KAAKwP,QAASA,aAAM,EAANA,EAAQM,QAAS,CAAC,EAChC9P,KAAKwR,eAAiBA,EAGtBxR,KAAKsf,gBAAkB9N,EAAehC,OAAO8P,gBAG7Ctf,KAAKuf,aAAajK,OAAStV,KAAKwP,OAAOO,eAAiB/P,KAAKuf,aAAajK,OAC1EtV,KAAKuf,aAAahK,KAAOvV,KAAKwP,OAAOQ,aAAehQ,KAAKuf,aAAahK,KAGtE,IAAMmK,EAAcC,aAAaC,QAAQ,0BAA4B5f,KAAKuf,aAAajK,OACjFuK,EAAYF,aAAaC,QAAQ,oBAAsB5f,KAAKuf,aAAahK,KAW/E,OATAvV,KAAKgV,aAAe,CAChBM,OAAQoK,EACRnK,KAAMsK,GAGVpe,EAAAA,MAAMC,IAAI,kCAADc,OAAmCkd,EAAW,MAAAld,OAAKqd,EAAS,KAAK,KAAM,GAChF7f,KAAKqf,aAAc,EAEnB5d,EAAAA,MAAMC,IAAI,yCAA0C,KAAM,IACnD,CACX,GAEA,CAAAC,IAAA,cAAAC,MAOA,SAAY0T,EAAQC,GAAiC,IAAAuK,EAAAC,EAA3BC,IAAkBla,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,KAAAA,UAAA,GAExC,GAAwB,QAAxBga,EAAI9f,KAAKsf,uBAAe,IAAAQ,GAAU,QAAVA,EAApBA,EAAuBxK,UAAO,IAAAwK,GAA9BA,EAAiCvK,GACjC,OAAOvV,KAAKsf,gBAAgBhK,GAAQC,GAIxC,IAAKyK,EACD,OAAO,KAIX,IAAMC,EAAyB,SAAT1K,EAAkB,QAAU,OAClD,OAAwB,QAAxBwK,EAAI/f,KAAKsf,uBAAe,IAAAS,GAAU,QAAVA,EAApBA,EAAuBzK,UAAO,IAAAyK,GAA9BA,EAAiCE,IACjCxe,EAAAA,MAAMC,IAAI,uBAADc,OAAwB8S,EAAM,kBAAA9S,OAAiB+S,EAAI,iBAAA/S,OAAgByd,EAAa,YAAY,KAAM,GACpGjgB,KAAKsf,gBAAgBhK,GAAQ2K,KAIxCxe,EAAAA,MAAMC,IAAI,gDAADc,OAAiDxC,KAAKuf,aAAajK,OAAM,MAAA9S,OAAK+S,EAAI,KAAK,KAAM,GAC/FvV,KAAKsf,gBAAgBtf,KAAKuf,aAAajK,QAAQC,IAC/CvV,KAAKsf,gBAAgBtf,KAAKuf,aAAajK,QAAQ2K,GAC1D,GAEA,CAAAte,IAAA,cAAAC,MAMA,SAAY0T,EAAQC,GAAM,IAAA2K,EACtB,QAA6B,QAArBA,EAAClgB,KAAKsf,uBAAe,IAAAY,GAAU,QAAVA,EAApBA,EAAuB5K,UAAO,IAAA4K,IAA9BA,EAAiC3K,GAC9C,GAEA,CAAA5T,IAAA,4BAAAC,MAIA,WACI,OAAO4G,OAAO8E,KAAKtN,KAAKsf,iBAAmB,CAAC,EAChD,GAEA,CAAA3d,IAAA,6BAAAC,MAKA,SAA2B0T,GAAQ,IAAA6K,EAC/B,OAAyB,QAArBA,EAACngB,KAAKsf,uBAAe,IAAAa,GAApBA,EAAuB7K,GAGrB9M,OAAO8E,KAAKtN,KAAKsf,gBAAgBhK,IAF7B,EAGf,GAEA,CAAA3T,IAAA,qBAAAC,MAIA,WACI,MAAO,SACX,GAEA,CAAAD,IAAA,kBAAAC,MAIA,WACI,MAAO,qDACX,GAEA,CAAAD,IAAA,sBAAAC,MAMA,SAAoB0T,EAAQC,GACxB,MAAO,GAAP/S,OAAUxC,KAAKogB,kBAAiB,KAAA5d,OAAIxC,KAAKqgB,qBAAoB,mBAAA7d,OAAkB8S,EAAM,KAAA9S,OAAI+S,EAAI,WACjG,GAEA,CAAA5T,IAAA,aAAAC,OAAA0e,EAAAnS,EAAA/F,IAAA4E,MAMA,SAAAkG,EAAiBoC,EAAQC,GAAI,IAAAgL,EAAAC,EAAAC,EAAA,OAAArY,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,UACpBhM,KAAKqf,aAAgBrf,KAAKwR,eAAc,CAAA2B,EAAAnH,KAAA,QACqB,OAA9DvK,EAAAA,MAAM6C,KAAK,yCAA0C,KAAM,GAAG6O,EAAAtH,OAAA,UACvD,GAAK,OAI+B,GAAzC0U,EAAWvgB,KAAK0gB,YAAYpL,EAAQC,GAC3B,CAAFpC,EAAAnH,KAAA,QAC+E,OAAxFvK,EAAAA,MAAMiD,MAAM,iDAADlC,OAAkD8S,EAAM,KAAA9S,OAAI+S,GAAQ,KAAM,GAAGpC,EAAAtH,OAAA,UACjF,GAAK,OAQf,GALDpK,EAAAA,MAAMC,IAAI,gCAADc,OAAiC8S,EAAM,KAAA9S,OAAI+S,GAAQ,KAAM,KAG5DiL,EAAc5b,SAASwM,cACzB,oFAGeoP,EAAYG,aAAa,UAAYJ,EAAQ,CAAApN,EAAAnH,KAAA,SACe,OAA3EvK,EAAAA,MAAMC,IAAI,uBAADc,OAAwB8S,EAAM,KAAA9S,OAAI+S,EAAI,mBAAmB,KAAM,GAAGpC,EAAAtH,OAAA,UACpE,GAAI,WAAAsH,EAAA1F,KAAA,GAKN7I,SAASwM,cAAc,cAAD5O,OAAe+d,EAAQ,OAAO,CAAFpN,EAAAnH,KAAA,gBAAAmH,EAAAnH,KAAA,GAC7ChM,KAAKwR,eAAeoP,QAAQL,GAAS,QA0BmC,OAtBlF3b,SAASC,iBAAiB,kFAAkFxC,SAAQ,SAAAwe,GAChHA,EAAKtZ,UAAW,CACpB,KAGMkZ,EAAY7b,SAASwM,cAAc,cAAD5O,OAAe+d,EAAQ,UAE3DE,EAAUlZ,UAAW,EACrB9F,EAAAA,MAAMC,IAAI,gCAADc,OAAiC8S,EAAM,MAAA9S,OAAK+S,EAAI,KAAK,KAAM,IAIxEvV,KAAK8gB,0BAA0BvL,GAG/BvV,KAAKgV,aAAe,CAAEM,OAAAA,EAAQC,KAAAA,GAC9BoK,aAAaoB,QAAQ,wBAAyBzL,GAC9CqK,aAAaoB,QAAQ,kBAAmBxL,GAGxCvV,KAAKghB,kBAELvf,EAAAA,MAAMC,IAAI,6CAADc,OAA8C8S,EAAM,KAAA9S,OAAI+S,GAAQ,KAAM,GAAGpC,EAAAtH,OAAA,UAC3E,GAAI,QAE0D,OAF1DsH,EAAA1F,KAAA,GAAA0F,EAAAO,GAAAP,EAAA,UAEX1R,EAAAA,MAAMiD,MAAM,8CAA6CyO,EAAAO,GAAS,GAAGP,EAAAtH,OAAA,UAC9D,GAAK,yBAAAsH,EAAAvF,OAAA,GAAAsF,EAAA,oBAEnB,SA5De2G,EAAAoH,GAAA,OAAAX,EAAAlS,MAAC,KAADtI,UAAA,IA8DhB,CAAAnE,IAAA,4BAAAC,MAIA,SAA0B2T,GACtB,IAAMpE,EAAYvM,SAASsc,eAAengB,EAAAA,QAAUwR,UAAUC,QAAQtR,QAClEiQ,IACAA,EAAUiF,UAAUE,OAAOvV,EAAAA,QAAUsR,MAAM8O,KAAKjgB,OAAQH,EAAAA,QAAUsR,MAAM+O,MAAMlgB,QAC9EiQ,EAAUiF,UAAUqH,IAAI1c,EAAAA,QAAUsR,MAAMgP,YAAYngB,OAAS,KAAOqU,GAE5E,GAEA,CAAA5T,IAAA,eAAAC,OAAA0f,EAAAnT,EAAA/F,IAAA4E,MAKA,SAAAwH,EAAmBe,GAAI,OAAAnN,IAAAmB,MAAA,SAAAqL,GAAA,cAAAA,EAAAnH,KAAAmH,EAAA5I,MAAA,OAC+C,OAAlEvK,EAAAA,MAAMC,IAAI,uCAADc,OAAwC+S,GAAQ,KAAM,GAAGX,EAAA/I,OAAA,SAC3D7L,KAAKqV,WAAWrV,KAAKgV,aAAaM,OAAQC,IAAK,wBAAAX,EAAAhH,OAAA,GAAA4G,EAAA,UACzD,SAHiB+M,GAAA,OAAAD,EAAAlT,MAAC,KAADtI,UAAA,IAKlB,CAAAnE,IAAA,iBAAAC,OAAA4f,EAAArT,EAAA/F,IAAA4E,MAKA,SAAA+H,EAAqBO,GAAM,OAAAlN,IAAAmB,MAAA,SAAA0L,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAjJ,MAAA,OAC+C,OAAtEvK,EAAAA,MAAMC,IAAI,yCAADc,OAA0C8S,GAAU,KAAM,GAAGL,EAAApJ,OAAA,SAC/D7L,KAAKqV,WAAWC,EAAQtV,KAAKgV,aAAaO,OAAK,wBAAAN,EAAArH,OAAA,GAAAmH,EAAA,UACzD,SAHmB0M,GAAA,OAAAD,EAAApT,MAAC,KAADtI,UAAA,IAKpB,CAAAnE,IAAA,cAAAC,MAIA,SAAY8f,GACgB,mBAAbA,GACP1hB,KAAKwf,UAAUhT,KAAKkV,EAE5B,GAEA,CAAA/f,IAAA,kBAAAC,MAGA,WAAkB,IAAA+f,EAAA,KACd3hB,KAAKwf,UAAUnd,SAAQ,SAAAqf,GACnB,IACIA,EAASC,EAAK3M,aAClB,CAAE,MAAOtQ,GACLjD,EAAAA,MAAMiD,MAAM,yCAA0CA,EAAO,EACjE,CACJ,GACJ,GAEA,CAAA/C,IAAA,kBAAAC,MAIA,WACI,O,+VAAA2D,CAAA,GAAYvF,KAAKgV,aACrB,GAEA,CAAArT,IAAA,mBAAAC,OAAAggB,EAAAzT,EAAA/F,IAAA4E,MAIA,SAAAyI,IAAA,IAAAH,EAAAC,EAAAgL,EAAAE,EAAA,OAAArY,IAAAmB,MAAA,SAAAyM,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAhK,MAAA,UACShM,KAAKqf,aAAgBrf,KAAKwR,eAAc,CAAAwE,EAAAhK,KAAA,QACqB,OAA9DvK,EAAAA,MAAM6C,KAAK,yCAA0C,KAAM,GAAG0R,EAAAnK,OAAA,UACvD,GAAK,OAWmC,GAP7CyJ,EAAStV,KAAKgV,aAAaM,QAAUtV,KAAKuf,aAAajK,OACvDC,EAAOvV,KAAKgV,aAAaO,MAAQvV,KAAKuf,aAAahK,KAEzD9T,EAAAA,MAAMC,IAAI,uCAADc,OAAwC8S,EAAM,KAAA9S,OAAI+S,GAAQ,KAAM,GAAGS,EAAAvI,KAAA,EAIlE8S,EAAWvgB,KAAK0gB,YAAYpL,EAAQC,GAC3B,CAAFS,EAAAhK,KAAA,SAC+E,OAAxFvK,EAAAA,MAAMiD,MAAM,iDAADlC,OAAkD8S,EAAM,KAAA9S,OAAI+S,GAAQ,KAAM,GAAGS,EAAAnK,OAAA,UACjF,GAAK,WAIXjH,SAASwM,cAAc,cAAD5O,OAAe+d,EAAQ,OAAO,CAAFvK,EAAAhK,KAAA,gBAAAgK,EAAAhK,KAAA,GAC7ChM,KAAKwR,eAAeoP,QAAQL,GAAS,QA0B2C,OAtB1F3b,SAASC,iBAAiB,kFAAkFxC,SAAQ,SAAAwe,GAChHA,EAAKtZ,UAAW,CACpB,KAGMkZ,EAAY7b,SAASwM,cAAc,cAAD5O,OAAe+d,EAAQ,UAE3DE,EAAUlZ,UAAW,EACrB9F,EAAAA,MAAMC,IAAI,gCAADc,OAAiC8S,EAAM,MAAA9S,OAAK+S,EAAI,KAAK,KAAM,IAIxEvV,KAAK8gB,0BAA0BvL,GAG/BvV,KAAKgV,aAAe,CAAEM,OAAAA,EAAQC,KAAAA,GAC9BoK,aAAaoB,QAAQ,wBAAyBzL,GAC9CqK,aAAaoB,QAAQ,kBAAmBxL,GAGxCvV,KAAKghB,kBAELvf,EAAAA,MAAMC,IAAI,qDAADc,OAAsD8S,EAAM,KAAA9S,OAAI+S,GAAQ,KAAM,GAAGS,EAAAnK,OAAA,UACnF,GAAI,QAEgE,OAFhEmK,EAAAvI,KAAA,GAAAuI,EAAAtC,GAAAsC,EAAA,SAEXvU,EAAAA,MAAMiD,MAAM,oDAAmDsR,EAAAtC,GAAS,GAAGsC,EAAAnK,OAAA,UACpE,GAAK,yBAAAmK,EAAApI,OAAA,GAAA6H,EAAA,mBAEnB,WAtDqB,OAAAmM,EAAAxT,MAAC,KAADtI,UAAA,KA5S1BwC,EA4S0B,EAAA3G,IAAA,cAAAC,MAjStB,WAII,OAHKsd,IACDA,EAAW,IAAIvN,GAEZuN,CACX,IAhBJ3W,GAAAgG,EAAAlG,EAAAI,UAAAF,GAAAD,GAAAiG,EAAAlG,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAiB,UAAA,IAAAjB,EAAA,IAAAA,EAAAE,EAAAD,EAwSIsZ,EAzCAJ,EAVAF,EAhFAhB,CArJC,CAVoB,CAASuB,EAAAA,c,6qDCElC,IAAI3C,EAAW,KAKFrN,EAAa,SAAAsN,GAqBtB,SAAAtN,EAAY3R,GAAY,IAAA6D,E,MAGpB,O,4FAHoB5D,CAAA,KAAA0R,G,EACpB,K,MAAAA,IAAA9N,E,mEAEUqb,iBAAiBF,IAI3Bzd,EAAAA,MAAMC,IAAI,kCAAmC,KAAM,GAGnDqC,EAAK7D,WAAaA,EAClB6D,EAAKoN,UAAY,KACjBpN,EAAK+d,cAAgB,KACrB/d,EAAK2N,aAAeC,EAAAA,aAAaX,cACjCjN,EAAK+M,mBAAqBC,EAAAA,mBAAmBC,cAC7CjN,EAAKqO,iBAAmB,KACxBrO,EAAKge,uBAAyBhe,EAAKie,kBAAkBhD,KAAIjb,GAGzDmb,EAAQnb,EAAQA,GAfZya,EAAAza,EAgBR,CAEA,O,qRAAA0b,CAAA5N,EAAAsN,G,EAAAtN,E,EAoRC,EAAAlQ,IAAA,cAAAC,MAzTD,WAAsC,IAAnB1B,EAAU4F,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAQ5B,OAPArE,EAAAA,MAAMC,IAAI,iDAAkD,KAAM,GAC7Dwd,EAEMhf,IAAegf,EAAShf,aAE/Bgf,EAAShf,WAAaA,GAHtBgf,EAAW,IAAIrN,EAAc3R,GAK1Bgf,CACX,K,EA4BA,EAAAvd,IAAA,aAAAC,MAGA,WAAa,IAAA+f,EAAA,KAET,IAAK3hB,KAAKiiB,0BAEN,OADAxgB,EAAAA,MAAMC,IAAI,0DAA2D,KAAM,IACpE,EAGXD,EAAAA,MAAMC,IAAI,8BAA+B,KAAM,GAG/C,IAAMwgB,EAAmBtd,SAASsc,eAAengB,EAAAA,QAAUsR,MAAM8P,SAASjhB,QAC1E,GAAIghB,EAaA,OAZAzgB,EAAAA,MAAMC,IAAI,kDAAmD,KAAM,GACnE1B,KAAK8hB,cAAgBI,EACrBliB,KAAKmR,UAAY+Q,EAAiB1L,WAGlCxW,KAAKoiB,iBAGLpiB,KAAK8hB,cAAcO,oBAAoB,SAAUriB,KAAK+hB,wBACtD/hB,KAAK8hB,cAAcra,iBAAiB,SAAUzH,KAAK+hB,wBAEnDtgB,EAAAA,MAAMC,IAAI,uDAAwD,KAAM,IACjE,EAIX,GAAI1B,KAAKoS,iBAAkB,CACvB,IAAMkQ,EAAmBtiB,KAAKoS,iBAAiBmQ,wBAC/C,GAAID,EAoBA,OAnBA7gB,EAAAA,MAAMC,IAAI,4DAA6D,KAAM,GAC7E1B,KAAKmR,UAAYmR,EAAiBnR,UAClCnR,KAAK8hB,cAAgBQ,EAAiBR,cAGpB9hB,KAAKwiB,4BAGnB/gB,EAAAA,MAAMC,IAAI,iEAAkE,KAAM,GAClFyb,YAAW,WACPwE,EAAKa,0BACLb,EAAKS,gBACT,GAAG,MAGPpiB,KAAKoiB,iBACLpiB,KAAK8hB,cAAcra,iBAAiB,SAAUzH,KAAK+hB,wBAEnDtgB,EAAAA,MAAMC,IAAI,yEAA0E,KAAM,IACnF,CAEf,CAuBA,OApBA1B,KAAKyiB,wBAGLziB,KAAK0iB,mBAGL1iB,KAAKoiB,iBAGLpiB,KAAK0R,aAAaiR,YAAY3iB,KAAKoiB,eAAepD,KAAKhf,OAGvDA,KAAK0R,aAAaiR,aAAY,WACtBhB,EAAKG,eAAuD,IAAtCH,EAAKG,cAAcvS,QAAQnN,SACjDX,EAAAA,MAAMC,IAAI,+DAAgE,KAAM,GAChFigB,EAAKa,0BAEb,IAEA/gB,EAAAA,MAAMC,IAAI,0CAA2C,KAAM,IACpD,CACX,GAEA,CAAAC,IAAA,0BAAAC,MAKA,WAA0B,IAAAghB,EAAAC,EAAA/T,EAEtB,YAAsD/I,KAAnC,QAAf6c,EAAA5iB,KAAKE,kBAAU,IAAA0iB,GAAa,QAAbA,EAAfA,EAAiBE,mBAAW,IAAAF,GAAO,QAAPA,EAA5BA,EAA8B9S,aAAK,IAAA8S,OAAA,EAAnCA,EAAqCG,YAC5B/iB,KAAKE,WAAW4iB,YAAYhT,MAAMiT,cAIChd,KAA7B,QAAf8c,EAAA7iB,KAAKE,kBAAU,IAAA2iB,GAAS,QAATA,EAAfA,EAAiBtT,eAAO,IAAAsT,OAAA,EAAxBA,EAA0BjR,iBACjB5R,KAAKE,WAAWqP,QAAQqC,mBAIM7L,KAAtB,QAAjB+I,EAAAqB,OAAOxJ,kBAAU,IAAAmI,GAAO,QAAPA,EAAjBA,EAAmBgB,aAAK,IAAAhB,OAAA,EAAxBA,EAA0BiU,aACjB5S,OAAOxJ,WAAWmJ,MAAMiT,QAKzC,GAEA,CAAAphB,IAAA,0BAAAC,MAGA,WAA0B,IAAAohB,EAAA,KAGtB,GAFAvhB,EAAAA,MAAMC,IAAI,uDAAwD,KAAM,IAEnE1B,KAAK8hB,cAEN,OADArgB,EAAAA,MAAM6C,KAAK,4DAA6D,KAAM,IACvE,EAGX,IAAKtE,KAAK0R,aAEN,OADAjQ,EAAAA,MAAM6C,KAAK,2DAA4D,KAAM,IACtE,EAGX,IAAM0Q,EAAehV,KAAK0R,aAAa0D,kBACvC3T,EAAAA,MAAMC,IAAI,+BAAgCsT,EAAc,GAGxDhV,KAAK8hB,cAAc5N,UAAY,GAG/B,IAAMoL,EAAkBtf,KAAK0R,aAAauR,4BAG1C,OAFAxhB,EAAAA,MAAMC,IAAI,kCAAmC,CAAE4d,gBAAAA,EAAiB4D,OAAO5D,aAAe,EAAfA,EAAiBld,SAAU,GAAK,GAElGkd,GAA8C,IAA3BA,EAAgBld,QAKxCkd,EAAgBjd,SAAQ,SAAA8gB,GACpBjN,EAAAA,SAASkN,uBAAuB,SAAUJ,EAAKlB,cAAe,CAC1DuB,WAAY,CACRzhB,MAAOuhB,EACPG,SAAUH,IAAanO,EAAaM,QAExCiO,QAASP,EAAKQ,gBAAgBL,IAEtC,IAEA1hB,EAAAA,MAAMC,IAAI,iDACA,CAAEwhB,MAAO5D,EAAgBld,QAAU,IACtC,IAhBHX,EAAAA,MAAM6C,KAAK,2CAA4C,KAAM,IACtD,EAgBf,GAEA,CAAA3C,IAAA,wBAAAC,MAGA,WACIH,EAAAA,MAAMC,IAAI,+CAAgD,KAAM,GAGhE1B,KAAKmR,UAAY+E,EAAAA,SAASpC,cAAc,MAAO,KAAM,CAAC/S,EAAAA,QAAU0iB,eAAejR,QAAQtR,OAAQH,EAAAA,QAAUiT,QAAQ0P,aAAaxiB,SAG9HlB,KAAK8hB,cAAgB5L,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKmR,UAAW,CAC3EhN,GAAIpD,EAAAA,QAAUsR,MAAM8P,SAASjhB,OAC7ByiB,QAAS,CAAC5iB,EAAAA,QAAUiT,QAAQ4P,YAAY1iB,OAAQH,EAAAA,QAAUiT,QAAQ4P,YAAY1iB,UAIlFlB,KAAKwiB,0BAGLxiB,KAAK8hB,cAAcra,iBAAiB,SAAUzH,KAAK+hB,uBACvD,GAEA,CAAApgB,IAAA,kBAAAC,MAKA,SAAgBiiB,GACZ,OAAOA,EACFvG,MAAM,KACNwG,KAAI,SAAAC,GAAI,OAAIA,EAAKrW,OAAO,GAAGsW,cAAgBD,EAAKpW,MAAM,EAAE,IACxDsW,KAAK,IACd,GAEA,CAAAtiB,IAAA,mBAAAC,MAGA,WAEI,IAAMsiB,EAAyBhO,EAAAA,SAASiO,WAAWpjB,EAAAA,QAAUsR,MAAMkE,SAASrV,QAC5E,OAAKgjB,GAMLA,EAAuBzN,aAAazW,KAAKmR,UAAW+S,EAAuBE,YAE3E3iB,EAAAA,MAAMC,IAAI,uCAAwC,KAAM,IACjD,IARHD,EAAAA,MAAM6C,KAAK,mDAAoD,KAAM,IAC9D,EAQf,GAEA,CAAA3C,IAAA,iBAAAC,MAIA,SAAekO,GACX,GAAK9P,KAAK8hB,cAAV,CAG0C,IAAtC9hB,KAAK8hB,cAAcvS,QAAQnN,SAC3BX,EAAAA,MAAMC,IAAI,iEAAkE,KAAM,GAClF1B,KAAKwiB,2BAGT,IAAMxN,EAAelF,GAAS9P,KAAK0R,aAAa0D,kBAC5CpV,KAAK8hB,cAAcvS,QAAQnN,OAAS,IACpCpC,KAAK8hB,cAAclgB,MAAQoT,EAAaM,QAG5C7T,EAAAA,MAAMC,IAAI,sCAADc,QAAuCsN,aAAK,EAALA,EAAOwF,SAAUN,EAAaM,QACrE,CAAE+O,aAAcrkB,KAAK8hB,cAAcvS,QAAQnN,QAAU,EAd/B,CAenC,GAEA,CAAAT,IAAA,oBAAAC,MAIA,SAAkB8F,GAAO,IAAA4c,EAAAC,EAAA,KACfC,EAAgB9c,EAAMC,OAAO/F,OAG9B5B,KAAKoS,kBAAmC,QAAnBkS,EAAItkB,KAAKE,kBAAU,IAAAokB,GAAfA,EAAiBlS,mBAC3CpS,KAAKoS,iBAAmBpS,KAAKE,WAAWkS,kBAIxCpS,KAAKoS,kBACLpS,KAAKoS,iBAAiBqS,mBAG1B,IAEIzkB,KAAK0R,aAAagT,eAAeF,GAC5BrZ,MAAK,WAEEoZ,EAAKnS,kBACLmS,EAAKnS,iBAAiBuS,mBAE1BljB,EAAAA,MAAMC,IAAI,mCAADc,OAAoCgiB,GAAiB,KAAM,EACxE,IAAE,OACK,SAAA9f,GAEC6f,EAAKnS,kBACLmS,EAAKnS,iBAAiBuS,mBAE1BljB,EAAAA,MAAMiD,MAAM,uCAAwCA,EAAO,EAC/D,GACR,CAAE,MAAOA,GAED1E,KAAKoS,kBACLpS,KAAKoS,iBAAiBuS,mBAE1BljB,EAAAA,MAAMiD,MAAM,uCAAwCA,EAAO,EAC/D,CACJ,GAEA,CAAA/C,IAAA,sBAAAC,MAIA,SAAoBwQ,GAChBpS,KAAKoS,iBAAmBA,EACxB3Q,EAAAA,MAAMC,IAAI,gDAAiD,KAAM,EACrE,M,yFAhTC,CAfqB,CAASmgB,EAAAA,c,08BCJ5B,IAAM1P,EAAW,WAoBpB,O,EAdA,SAAAA,IAAwI,IAA5HC,EAAgBtM,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAM8e,EAAe9e,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG/E,EAAAA,QAAUsR,MAAMC,OAAOpR,OAAQ2jB,EAAW/e,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG/E,EAAAA,QAAUwR,UAAUC,QAAQtR,Q,4FAAMf,CAAA,KAAAgS,GAClInS,KAAK4kB,gBAAkBA,EACvB5kB,KAAK6kB,YAAcA,EAGnB7kB,KAAK8kB,cAAgB5O,EAAAA,SAASiO,WAAWS,GACzC5kB,KAAKmR,UAAY+E,EAAAA,SAASiO,WAAWU,GACrC7kB,KAAK0R,aAAeC,EAAAA,aAAaX,cACjChR,KAAK8Q,mBAAqBC,EAAAA,mBAAmBC,cAC7ChR,KAAKoS,iBAAmBA,EAExB3Q,EAAAA,MAAMC,IAAI,iCAAkC,KAAM,EACtD,G,EAEA,EAAAC,IAAA,aAAAC,MAGA,WAGI,GAFAH,EAAAA,MAAMC,IAAI,4BAA6B,KAAM,IAExC1B,KAAK8kB,gBAAkB9kB,KAAKmR,UAE7B,OADA1P,EAAAA,MAAM6C,KAAK,gEAAD9B,SAAmExC,KAAK8kB,cAAa,iBAAAtiB,SAAkBxC,KAAKmR,WAAa,KAAM,IAClI,EAIX,IAAM6D,EAAehV,KAAK0R,aAAa0D,kBAgBvC,OAfApV,KAAK8kB,cAAcC,QAAgC,SAAtB/P,EAAaO,KAG1CvV,KAAK0R,aAAaoP,0BAA0B9L,EAAaO,MAGzDvV,KAAK8kB,cAAcrd,iBAAiB,SAAUzH,KAAKglB,aAAahG,KAAKhf,OAGrEA,KAAK0R,aAAaiR,YAAY3iB,KAAKilB,aAAajG,KAAKhf,OAGrDyB,EAAAA,MAAMC,IAAI,2CAADc,OAA4CxC,KAAKoS,iBAAmB,eAAiB,oBAAsB,KAAM,GAE1H3Q,EAAAA,MAAMC,IAAI,wCAAyC,KAAM,IAClD,CACX,GAEA,CAAAC,IAAA,sBAAAC,MAKA,SAAoBwQ,GAGhB,OAFApS,KAAKoS,iBAAmBA,EACxB3Q,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GACxD1B,IACX,GAEA,CAAA2B,IAAA,eAAAC,MAIA,SAAa8F,GAAO,IAAA3D,EAAA,KAEVmhB,EADSxd,EAAMC,OAAOod,QACH,OAAS,QAG9B/kB,KAAKoS,iBACLpS,KAAKoS,iBAAiBqS,mBAEtBhjB,EAAAA,MAAMC,IAAI,kFAAmF,KAAM,GAGvG,IAEI1B,KAAK0R,aAAayT,aAAaD,GAC1B/Z,MAAK,WAEEpH,EAAKqO,kBACLrO,EAAKqO,iBAAiBuS,mBAE1BljB,EAAAA,MAAMC,IAAI,iCAADc,OAAkC0iB,EAAO,SAAS,KAAM,EACrE,IAAE,OACK,SAAAxgB,GAECX,EAAKqO,kBACLrO,EAAKqO,iBAAiBuS,mBAE1BljB,EAAAA,MAAMiD,MAAM,qCAAsCA,EAAO,EAC7D,GACR,CAAE,MAAOA,GAED1E,KAAKoS,kBACLpS,KAAKoS,iBAAiBuS,mBAE1BljB,EAAAA,MAAMiD,MAAM,qCAAsCA,EAAO,EAC7D,CACJ,GAEA,CAAA/C,IAAA,eAAAC,MAIA,SAAakO,GACT,GAAK9P,KAAK8kB,cAAV,CAEA,IAAM9P,EAAelF,GAAS9P,KAAK0R,aAAa0D,kBAChDpV,KAAK8kB,cAAcC,QAAgC,SAAtB/P,EAAaO,KAItCvV,KAAKmR,WACLnR,KAAK0R,aAAaoP,0BAA0B9L,EAAaO,KAR9B,CAUnC,M,yFAAC,CAtHmB,E,y8DCDjB,IAAM9U,EAAa,WAQtB,O,EAJA,SAAAA,EAAYwF,I,4FAAc9F,CAAA,KAAAM,GACtBT,KAAKiG,aAAeA,CACxB,G,EAEA,EAAAtE,IAAA,eAAAC,MAGA,WACIH,EAAAA,MAAMC,IAAI,2CAA4C,KAAM,GAG5D,IAAIsa,EAAW,KACf,GAAIhc,KAAKiG,aAAa7F,OAAOgC,OAAS,IAAK,CACvC,IAAM0O,EAAqBC,EAAAA,mBAAmBC,cACxCiL,EAAgBC,EAAAA,cAAclL,cAC9BmL,EAAiBrL,EAAmBnL,IAAI,gBAAiB,qBAE/DqW,EAAWC,EAAcG,WAAWD,EAAgB,CAChDE,YAAY,EACZC,OAAQ,MAGZ7a,EAAAA,MAAMC,IAAI,yDAA0D,KAAM,EAC9E,CAGA,IAAMI,EAAYC,YAAYC,MAGxBojB,EAAWplB,KAAKqlB,kBAAkBrlB,KAAKiG,aAAa5F,WAAY,QAChEilB,EAAYtlB,KAAKqlB,kBAAkBrlB,KAAKiG,aAAa3F,WAAY,SAgBvE,GAZAN,KAAKiG,aAAa/F,WAAWiR,UAAU+C,UAAY,6BAAH1R,OAC9BzB,EAAAA,QAAUC,KAAKukB,gBAAgBrkB,OAAM,oCAAAsB,OACjCzB,EAAAA,QAAUC,KAAKwkB,KAAKtkB,OAAM,UAAAsB,OAASzB,EAAAA,QAAUC,KAAKykB,UAAUvkB,OAAM,6CAAAsB,OAC1E4iB,EAAQ,0DAAA5iB,OAEAzB,EAAAA,QAAUC,KAAKwkB,KAAKtkB,OAAM,UAAAsB,OAASzB,EAAAA,QAAUC,KAAK0kB,WAAWxkB,OAAM,8CAAAsB,OAC3E8iB,EAAS,0DAMnBtJ,EAAU,CACYE,EAAAA,cAAclL,cACtBwL,WAAWR,GAGzB,IACMS,EADU1a,YAAYC,MACDF,EAC3BL,EAAAA,MAAMC,IAAI,2BAADc,OAA4BxC,KAAKiG,aAAa7F,OAAOgC,OAAM,eAAAI,OAAcia,EAAS7Z,QAAQ,GAAE,MAAM,KAAM,EACrH,MACInB,EAAAA,MAAMC,IAAI,2BAADc,OAA4BxC,KAAKiG,aAAa7F,OAAOgC,OAAM,wBAAwB,KAAM,EAE1G,GAEA,CAAAT,IAAA,oBAAAC,MAMA,SAAkBiC,EAAON,GAErB,IACwBoiB,EADlBC,EAAyB,IAAIC,IAAMC,EAAAC,EACtBliB,GAAK,IAAxB,IAAAiiB,EAAA5b,MAAAyb,EAAAG,EAAApd,KAAA4C,MAA0B,KAAf0a,EAAIL,EAAA/jB,MACO,gBAAdokB,EAAK9gB,MAA0B8gB,EAAK1iB,SACpCsiB,EAAuBnI,IAAIuI,EAAK1iB,QAExC,CAEA,OAAA2iB,GAAAH,EAAAzd,EAAA4d,EAAA,SAAAH,EAAA7b,GAAA,CACA,IAAIic,EAAO,eAAH1jB,OAAkBzB,EAAAA,QAAUC,KAAKmlB,aAAajlB,OAAM,WAC5DglB,GAAQ,eAAJ1jB,OAAmBzB,EAAAA,QAAUC,KAAKolB,cAAcllB,OAAM,MAC1DglB,GAAQ,iBAAJ1jB,OAAqBzB,EAAAA,QAAUslB,KAAKC,MAAMplB,OAAM,aAEpD,IAEwBqlB,EAFpBC,EAAc,EAAEC,EAAAV,EAEDliB,GAAK,IAAxB,IAAA4iB,EAAAvc,MAAAqc,EAAAE,EAAA/d,KAAA4C,MAA0B,KAAf0a,EAAIO,EAAA3kB,MACXskB,GAAQlmB,KAAK0mB,gBAAgBV,EAAMziB,IAAQijB,EAAaZ,EAC5D,CAAC,OAAAK,GAAAQ,EAAApe,EAAA4d,EAAA,SAAAQ,EAAAxc,GAAA,CAMD,OAJAic,GAAQ,mBACRA,GAAQ,SACRA,GAAQ,QAGZ,GAEA,CAAAvkB,IAAA,kBAAAC,MAIA,SAAgBokB,EAAMziB,EAAMojB,EAAYf,GACpC,IAAIM,EAAO,OAEL5iB,OAA2ByC,IAAjBigB,EAAK1iB,QAAwB0iB,EAAK1iB,QAAU,GAGxDsjB,EAAY,GAChB,GAAgB,KAAZtjB,EAAgB,CAChB,IAAMhB,EAAQtC,KAAKiG,aAAa7F,OAAOymB,MAAK,SAAA7d,GAAC,OAAIA,EAAE7E,KAAOb,CAAO,IACjEsjB,EAAYtkB,EAAQA,EAAM4C,KAAO,EACrC,CAGAghB,GAAQ,cAAJ1jB,OAAkBzB,EAAAA,QAAUslB,KAAKS,YAAY5lB,OAAM,MAAAsB,OAAKmkB,EAAU,SAGtE,IAAMI,EAA6B,KAAZzjB,GAAkBsiB,EAAuBtH,IAAIhb,GASpE,MAPkB,gBAAd0iB,EAAK9gB,KACLghB,GAAQlmB,KAAKgnB,uBAAuBhB,EAAM1iB,EAASsjB,EAAWrjB,EAAMojB,GAEpET,GAAQlmB,KAAKinB,mBAAmBjB,EAAM1iB,EAASsjB,EAAWrjB,EAAMojB,EAAYI,GAGhFb,GAAQ,OAEZ,GAEA,CAAAvkB,IAAA,yBAAAC,MAIA,SAAuBokB,EAAM1iB,EAASsjB,EAAWrjB,EAAMojB,GAEnD,IAAIO,EAAkB,GAUtB,MATgB,KAAZ5jB,IAEA4jB,GAAmB,IAAJ1kB,OAAQzB,EAAAA,QAAUC,KAAK8D,MAAM5D,SAExC8kB,EAAKzjB,UAA0B,YAAdqkB,GAAyC,QAAdA,GAAqC,WAAdA,KACnEM,GAAmB,IAAJ1kB,OAAQzB,EAAAA,QAAUomB,OAAOC,WAAWlmB,UAIpD,cAAPsB,OAAqBzB,EAAAA,QAAUslB,KAAK7K,aAAata,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUC,KAAKya,mBAAmBva,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUC,KAAK0a,iBAAiBxa,QAAMsB,OAAG0kB,EAAe,yCAAA1kB,OACnIc,EAAO,2CAAAd,OACLokB,EAAS,qCAAApkB,OACfe,EAAI,iDAAAf,OACQwjB,EAAKqB,iBAAmB,UAAS,wCAAA7kB,OAC1Ce,EAAI,KAAAf,OAAImkB,EAAU,gEAEjD,GAEA,CAAAhlB,IAAA,qBAAAC,MAIA,SAAmBokB,EAAM1iB,EAASsjB,EAAWrjB,EAAMojB,EAAYI,GAC3D,IAAMO,EAActB,EAAKA,KACnBuB,GAAWD,GAA+B,OAAhBA,GAAwC,OAAhBA,EAGpDJ,EAAkB,GAatB,GAZgB,KAAZ5jB,IACA4jB,EAAkBlnB,KAAKwnB,eAAeZ,EAAWrjB,GAGjD2jB,GAAmB,IAAJ1kB,OAAQzB,EAAAA,QAAUC,KAAK8D,MAAM5D,SAGxC8kB,EAAKzjB,UAA0B,YAAdqkB,GAAyC,QAAdA,GAAqC,WAAdA,KACnEM,GAAmB,IAAJ1kB,OAAQzB,EAAAA,QAAUomB,OAAOC,WAAWlmB,UAIvDqmB,EAEA,OADAL,GAAmB,IAAJ1kB,OAAQzB,EAAAA,QAAUslB,KAAKoB,WAAWvmB,QAC1C,cAAPsB,OAAqBzB,EAAAA,QAAUslB,KAAK7K,aAAata,QAAMsB,OAAG0kB,EAAe,6CAAA1kB,OAC7Cc,EAAO,+CAAAd,OACLokB,EAAS,yCAAApkB,OACfe,EAAI,4CAAAf,OACDe,EAAI,KAAAf,OAAImkB,EAAU,8BAAAnkB,OAChCukB,EAAiB,8BAAgC,GAAE,gBAGhE,IAAMW,EAAiBC,EAAAA,YAAYC,WACZD,EAAAA,YAAYC,WAAWN,GACvBA,EAAYtK,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAGjE6K,EAAwB,KAAZvkB,EAAiB,4BAA8B,GAEjE,MAAO,cAAPd,OAAqBzB,EAAAA,QAAUslB,KAAK7K,aAAata,QAAMsB,OAAG0kB,EAAe,6CAAA1kB,OAC7Cc,EAAO,+CAAAd,OACLokB,EAAS,yCAAApkB,OACfe,EAAI,4CAAAf,OACDe,EAAI,KAAAf,OAAImkB,EAAU,8BAAAnkB,OAChCukB,EAAiB,8BAAgC,IAAEvkB,OAAGqlB,EAAS,KAAArlB,OAAIklB,EAAc,QAEtG,GAEA,CAAA/lB,IAAA,iBAAAC,MAIA,SAAeglB,EAAWrjB,GACtB,GAAkB,WAAdqjB,GAAmC,SAATrjB,EAC1B,MAAO,IAAPf,OAAWzB,EAAAA,QAAUC,KAAK8mB,YAAY5mB,QACnC,GAAkB,QAAd0lB,GAAgC,UAATrjB,EAC9B,MAAO,IAAPf,OAAWzB,EAAAA,QAAUC,KAAK+mB,SAAS7mB,QAChC,GAAkB,YAAd0lB,EAAyB,CAChC,IAAIrJ,EAAM,IAAH/a,OAAOzB,EAAAA,QAAUC,KAAK+mB,SAAS7mB,QAMtC,OAJIqc,GAAO,IAAJ/a,OADM,SAATe,EACWxC,EAAAA,QAAUC,KAAKgnB,kBAAkB9mB,OAEjCH,EAAAA,QAAUC,KAAKinB,mBAAmB/mB,OAGrD,CACA,MAAO,EACX,M,yFAAC,CA5NqB,E,07CCInB,IAAMP,EAAqB,WAoB9B,O,EAhBA,SAAAA,EAAYsF,I,4FAAc9F,CAAA,KAAAQ,GACtBX,KAAKiG,aAAeA,EACpBjG,KAAK0D,WAAa,CAAC,EACnB1D,KAAK+C,mBAAqB,IAAImlB,EAAAA,wBAAwBjiB,GAGtDjG,KAAKmoB,SAAWpnB,EAAAA,QAAUC,KAAKC,eAAeC,OAC9ClB,KAAKooB,WAAarnB,EAAAA,QAAUC,KAAKI,iBAAiBF,OAGlDlB,KAAKqB,oBAAsB,CACvBgnB,kBAAmB,EACnBC,eAAgB,EAExB,E,EAEA,EAAA3mB,IAAA,sBAAAC,MAGA,WAAsB,IAAAmC,EAAA,KAElB/D,KAAKuoB,mBAAqB,SAAC7gB,GAAK,OAAK3D,EAAKykB,aAAa9gB,EAAM,EAC7D1H,KAAKyoB,sBAAwB,SAAC/gB,GAAK,OAAK3D,EAAK2kB,gBAAgBhhB,EAAM,EAInEwO,EAAAA,SAASyS,mBACL,0CACA,QACA3oB,KAAKuoB,mBACL,CACIK,gBAAgB,EAChBC,OAAQ,CAAEC,OAAQ,aAK1B9oB,KAAK+oB,wBAGL9mB,EAAAA,WAAWC,aAEXT,EAAAA,MAAMC,IAAI,+EAAgF,KAAM,EACpG,GAEA,CAAAC,IAAA,wBAAAC,MAIA,WAEI,IAAMonB,EAAQhpB,KAAKiG,aAAa/F,WAAWiR,UAAUtM,iBAAiB9D,EAAAA,QAAUC,KAAKwkB,MAErF,GAAqB,IAAjBwD,EAAM5mB,OAAV,CAKA,IAAM6mB,EAAWD,EAAM,GACjBE,EAAYF,EAAM,GAGxBhpB,KAAKmpB,4BAA4BF,EAAU,QAC3CjpB,KAAKmpB,4BAA4BD,EAAW,QAP5C,MAFIznB,EAAAA,MAAMC,IAAI,gFAAiF,KAAM,EAUzG,GAEA,CAAAC,IAAA,8BAAAC,MAIA,SAA4BwnB,EAAM7lB,GAE9B,IAAMuN,EAAqBC,EAAAA,mBAAmBC,cAGxCqY,EAASzkB,SAASkP,cAAc,OACtCuV,EAAOtV,UAAYhT,EAAAA,QAAUC,KAAKsoB,YAAYpoB,OAG9CmoB,EAAOjT,UAAUqH,IAAI,aAAc,8BAA+B,0BAGlE,IAAMvC,EAAWlb,KAAKiG,aAAa/F,WAAWkQ,aAAavO,SAASqZ,UAAY,OAG1EqO,EAAY3kB,SAASkP,cAAc,QACzCyV,EAAUxV,UAAY,4BACtBwV,EAAU/hB,YAAc0T,EAGxB,IAAMsO,EAAiB5kB,SAASkP,cAAc,UAC9C0V,EAAezV,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0V,mBAAmBxoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ2V,iBAAiBzoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUC,KAAK4oB,cAAc1oB,QAC1LsoB,EAAeK,aAAa,YAAatmB,GACzCimB,EAAeK,aAAa,kBAAmB,aAC/CL,EAAeM,MAAQ,+BAAHtnB,OAAkCe,EAAI,SAC1DimB,EAAenV,MAAMC,QAAU,cAC/BkV,EAAenV,MAAM0V,WAAa,SAClCP,EAAenV,MAAM2V,cAAgB,SAGrC,IAAMC,EAAcrlB,SAASkP,cAAc,QAC3CmW,EAAYlW,UAAY,mBACxBkW,EAAY5V,MAAM6V,YAAc,MAChCD,EAAY5V,MAAMC,QAAU,cAC5B2V,EAAY5V,MAAM0V,WAAa,SAC/BE,EAAY5V,MAAM2V,cAAgB,SAClCC,EAAY5V,MAAM8V,OAAS,OAC3BF,EAAY5V,MAAM+V,WAAa,IAG/B,IAAMC,EAAcC,EAAAA,aAAaC,WAAW,qBAAsB,CAC9DC,MAAO,GACPL,OAAQ,GACRxG,QAAS,sBAGbsG,EAAY7V,YAAYiW,GAGxB,IAAMI,EAAW7lB,SAASkP,cAAc,QACxC2W,EAASpW,MAAMC,QAAU,eACzBmW,EAASpW,MAAM2V,cAAgB,SAC/BS,EAASpW,MAAM+V,WAAa,IAC5BK,EAASrW,YAAYxP,SAAS8lB,eAAe5Z,EAAmBnL,IAAI,cAGpE6jB,EAAepV,YAAY6V,GAC3BT,EAAepV,YAAYqW,GAG3BpB,EAAOjV,YAAYmV,GACnBF,EAAOjV,YAAYoV,GAGnBJ,EAAK3S,aAAa4S,EAAQD,EAAKhF,YAG/BoF,EAAe/hB,iBAAiB,QAASzH,KAAKyoB,sBAClD,GAEA,CAAA9mB,IAAA,kBAAAC,MAIA,SAAgB8F,GAAO,IAAAia,EAAA,KACbgJ,EAASjjB,EAAMkjB,cACfrnB,EAAOonB,EAAOhK,aAAa,aAC3BkK,EAAYF,EAAOhK,aAAa,mBAChCmK,EAAiB9qB,KAAK+qB,mBAAmBxnB,GAGzCuN,EAAqBC,EAAAA,mBAAmBC,cACxCiL,EAAgBC,EAAAA,cAAclL,cAEpC,GAAKzN,EAAL,CAGA,IAAM4Q,EAAUrD,EAAmBnL,IAAI,qBAAuB,uBACxDqW,EAAWC,EAAcG,WAAWjI,EAAS,CAC/CkI,YAAY,EACZC,OAAQ,OAIZtc,KAAKgrB,0BAA0BL,GAAQ,GAGvC,IAAM7oB,EAAYC,YAAYC,MAG9Bmb,YAAW,WAEW,YAAd0N,GACAppB,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,GAGpEigB,EAAKsJ,uBAAuBN,EAAQ,WAGhCG,GAAqE,YAAnDA,EAAenK,aAAa,oBAC9CgB,EAAKsJ,uBAAuBH,EAAgB,WAIhDnJ,EAAKuJ,oBAAmB,IAGnBJ,GAAqE,YAAnDA,EAAenK,aAAa,oBAEnDgB,EAAKsJ,uBAAuBH,EAAgB,WAG5CnJ,EAAKsJ,uBAAuBN,EAAQ,aAGpChJ,EAAKwJ,gBAAgB5nB,GAAM,KAI3Boe,EAAKsJ,uBAAuBN,EAAQ,aACpChJ,EAAKwJ,gBAAgB5nB,GAAM,IAI/Boe,EAAKqJ,0BAA0BL,GAAQ,GAGvC1O,EAAcO,WAAWR,GAGzB2F,EAAKyJ,0BAA0BtpB,EACnC,GAAG,GAzDc,CA0DrB,GAEA,CAAAH,IAAA,4BAAAC,MAIA,SAA0B+oB,EAAQU,GAC1BA,GACAV,EAAOvU,UAAUqH,IAAI,cACrBkN,EAAOtW,MAAMiX,QAAU,MACvBX,EAAOtW,MAAMyU,OAAS,SAEtB6B,EAAOvU,UAAUE,OAAO,cACxBqU,EAAOtW,MAAMiX,QAAU,GACvBX,EAAOtW,MAAMyU,OAAS,GAE9B,GAEA,CAAAnnB,IAAA,4BAAAC,MAIA,SAA0BE,GACtB,IACMypB,EADUxpB,YAAYC,MACIF,EAEhC9B,KAAKqB,oBAAoBgnB,kBAAoBkD,EAC7CvrB,KAAKqB,oBAAoBinB,iBAGzB,IAAM7iB,EAAaxD,EAAAA,WAAWyD,gBACxB8lB,EAAkB/lB,EAAWgmB,kBAC9BhmB,EAAWgmB,iBAAmBhmB,EAAWimB,oBAAsB,KAAO,EACrEC,EAAelmB,EAAWmmB,qBAC3BnmB,EAAWmmB,oBAAsBnmB,EAAWomB,uBAAyB,KAAO,EAEjFpqB,EAAAA,MAAMC,IAAI,iDAADc,OAAkD+oB,EAAc3oB,QAAQ,GAAE,MAC/E,CACIkpB,gBAAiB9rB,KAAKqB,oBAAoBinB,eAC1C7iB,WAAY,CACRgmB,iBAAkBhmB,EAAWgmB,iBAC7BC,mBAAoBjmB,EAAWimB,mBAC/BF,gBAAiB,GAAFhpB,OAAKgpB,EAAgB5oB,QAAQ,GAAE,KAC9CgpB,oBAAqBnmB,EAAWmmB,oBAChCC,sBAAuBpmB,EAAWomB,sBAClCF,aAAc,GAAFnpB,OAAKmpB,EAAa/oB,QAAQ,GAAE,OAE7C,EACX,GAEA,CAAAjB,IAAA,qBAAAC,MAMA,SAAmBmqB,GACf,IAAMC,EAA+B,SAAhBD,EAAyB,QAAU,OACxD,OAAO/rB,KAAKiG,aAAa/F,WAAWiR,UAAUC,cAAc,IAAD5O,OACnDzB,EAAAA,QAAUC,KAAK4oB,cAAc1oB,OAAM,gBAAAsB,OAAewpB,EAAY,MAE1E,GAEA,CAAArqB,IAAA,yBAAAC,MAMA,SAAuB+oB,EAAQsB,GAC3B,IAOIC,EAPEjC,EAAcU,EAAOvZ,cAAc,qBACpC6Y,IAGLA,EAAY/V,UAAY,GAIH,cAAjB+X,GACAC,EAAe,UACfjC,EAAY7V,YAAYkW,EAAAA,aAAaC,WAAW,mBAAoB,CAChEC,MAAO,GACPL,OAAQ,GACRxG,QAAS,yBAGbuI,EAAe,YACfjC,EAAY7V,YAAYkW,EAAAA,aAAaC,WAAW,qBAAsB,CAClEC,MAAO,GACPL,OAAQ,GACRxG,QAAS,wBAKjBgH,EAAOd,aAAa,kBAAmBqC,GAC3C,GAEA,CAAAvqB,IAAA,kBAAAC,MAKA,SAAgB2B,GAAwB,IAAAyf,EAAA,KAAlBmJ,EAAQrmB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GACpBkmB,EAAwB,SAATzoB,EAAkB,QAAU,OAEjD9B,EAAAA,MAAMC,IAAI,kDAADc,OAAmDe,EAAI,SAAAf,OAAQ2pB,EAAW,aAAe,IAAM,KAAM,GAG9G,IAAMC,EAAiBpsB,KAAKiG,aAAa7F,OAAOoE,QAAO,SAAAlC,GAAK,OACxDA,EAAMC,UAA2B,YAAfD,EAAM4C,MAAqC,QAAf5C,EAAM4C,MAAiC,WAAf5C,EAAM4C,IAAiB,IAI3FmnB,EAAYD,EAAehqB,OAAS,GAItC4Z,EAAW,KACf,IAJAmQ,EAAWA,GAAYE,IAIPD,EAAehqB,OAAS,GAAI,CACxC,IAAM0O,EAAqBC,EAAAA,mBAAmBC,cACxCiL,EAAgBC,EAAAA,cAAclL,cAC9BmD,EAAUrD,EAAmBnL,IAAI,qBAAuB,uBAC9DqW,EAAWC,EAAcG,WAAWjI,EAAS,CACzCkI,YAAY,EACZC,OAAQ,MAEhB,CAGA,IAAMxa,EAAYC,YAAYC,MAE9B,GAAImqB,EAAU,CAEVC,EAAe/pB,SAAQ,SAAAC,GAEnB0gB,EAAKtf,WAAWpB,EAAM6B,IAAMZ,EAG5Byf,EAAKsJ,oBAAoBhqB,EAAM6B,GAAIZ,EACvC,IAGA,IAAMgpB,EAAe,IAAIC,IAGzBJ,EAAe/pB,SAAQ,SAAAC,GAMnB,GAJA0gB,EAAKjgB,mBAAmB0pB,kBAAkBnqB,EAAM6B,GAAIZ,EAAMyf,EAAKmF,UAAU,GACzEnF,EAAKjgB,mBAAmB0pB,kBAAkBnqB,EAAM6B,GAAI6nB,EAAchJ,EAAKoF,YAAY,IAG9EmE,EAAajO,IAAIhc,EAAM6B,IAAK,CAC7B,IAAMF,EAAWhC,EAAAA,WAAWiC,iBAAiB5B,EAAM6B,IACnDooB,EAAaG,IAAIpqB,EAAM6B,GAAIF,EAC/B,CACJ,IAGAjE,KAAK+C,mBAAmB4pB,YAAW,GAGnCzP,uBAAsB,WAElB8F,EAAK4J,mBAAmBrpB,EAAM6oB,GAE9BG,EAAalqB,SAAQ,SAAC4B,GAClBA,EAAS5B,SAAQ,SAAA+a,GACbA,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAO0F,SAAS3rB,QAChDkc,EAAQhH,UAAUE,OAAOvV,EAAAA,QAAUomB,OAAOC,WAAWlmB,OACzD,GACJ,IAGA8hB,EAAK8J,2BAG8C,mBAAxC9J,EAAK/c,aAAa8mB,mBACzB/J,EAAK/c,aAAa8mB,oBAIlB/Q,GACsBE,EAAAA,cAAclL,cACtBwL,WAAWR,GAI7BgH,EAAKoI,0BAA0BtpB,EACnC,GACJ,MAEIsqB,EAAe/pB,SAAQ,SAAAC,GACnB0gB,EAAKvf,qBAAqBnB,EAAM6B,GAAIZ,EAAMyf,EAAKmF,UAC/CnF,EAAKvf,qBAAqBnB,EAAM6B,GAAI6nB,EAAchJ,EAAKoF,WAC3D,IAGmD,mBAAxCpoB,KAAKiG,aAAa8mB,mBACzB/sB,KAAKiG,aAAa8mB,oBAItB/sB,KAAKorB,0BAA0BtpB,EAEvC,GAEA,CAAAH,IAAA,qBAAAC,MAKA,SAAmBorB,EAAc5sB,GAC7B,IAAM4rB,EAAgC,SAAjBgB,EAA0B,QAAU,OAGzD5sB,EAAOiC,SAAQ,SAAAC,GAEX,IAAM2qB,EAAmBhrB,EAAAA,WAAWiC,iBAAiB5B,EAAM6B,GAAI6oB,GACzDE,EAAmBjrB,EAAAA,WAAWiC,iBAAiB5B,EAAM6B,GAAI6nB,GAG/D,GAAIiB,EAAiB7qB,OAAS,EAAG,CAE7B,IACM+qB,EADiBlrB,EAAAA,WAAWoC,yBAAyB4oB,GACvB,GAEpC,GAAIE,EAAc,CACd,IAAMC,EAASD,EAAaE,QAAQD,OACpC,GAAIA,EAAQ,CAER,IAAME,EAAarrB,EAAAA,WAAWsrB,cAAcH,GACxCE,IAEAA,EAAWlX,UAAUE,OACjBvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,OAChCH,EAAAA,QAAUysB,MAAMC,OAAOvsB,OACvBH,EAAAA,QAAUysB,MAAME,YAAYxsB,OAC5BH,EAAAA,QAAUysB,MAAMG,aAAazsB,QAIjCosB,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKC,eAAeC,QAGlC,SAAjB8rB,EACAM,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAME,YAAYxsB,QAErDosB,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAMG,aAAazsB,QAGlE,CACJ,CAGA+rB,EAAiB5qB,SAAQ,SAAA+a,GAErBA,EAAQhH,UAAUE,OACdvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,QAIpCkc,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKC,eAAeC,QAGpD,IAAM0sB,EAAM3rB,EAAAA,WAAW4rB,aAAazQ,GAChCwQ,IACAA,EAAIxX,UAAUE,OACVvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,QAEpC0sB,EAAIxX,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKC,eAAeC,QAExD,GACJ,CAGA,GAAIgsB,EAAiB9qB,OAAS,EAAG,CAE7B,IACM0rB,EADyB7rB,EAAAA,WAAWoC,yBAAyB6oB,GACf,GAEpD,GAAIY,EAAsB,CACtB,IAAMC,EAAiBD,EAAqBT,QAAQD,OACpD,GAAIW,EAAgB,CAChB,IAAMC,EAAqB/rB,EAAAA,WAAWsrB,cAAcQ,GACpD,GAAIC,EAAoB,CAEpBA,EAAmB5X,UAAUE,OACzBvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,OAChCH,EAAAA,QAAUysB,MAAMC,OAAOvsB,OACvBH,EAAAA,QAAUysB,MAAME,YAAYxsB,OAC5BH,EAAAA,QAAUysB,MAAMG,aAAazsB,QAOjC,IAAM6lB,EAAiE,SAAhD+G,EAAqBT,QAAQtG,eAC9CkH,EAAoBH,EAAqB1X,UAAUC,SAAStV,EAAAA,QAAUC,KAAK0a,iBAAiBxa,QAC5FgtB,EAAiBF,EAAmB5X,UAAUC,SAAStV,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,QAG1FylB,EAAaoH,EAAezQ,MAAM,KAAK,GACvC8Q,EAAiB,GAAH5rB,OAAMwqB,EAAY,KAAAxqB,OAAImkB,GACpC0H,EAAkBzpB,SAASwM,cAAc,kBAAD5O,OAAmB4rB,EAAc,OAGzEE,EAAqE,UAA5CD,aAAe,EAAfA,EAAiBhB,QAAQtG,gBAClDwH,EAA4BF,aAAe,EAAfA,EAAiBjY,UAAUC,SAAStV,EAAAA,QAAUC,KAAK0a,iBAAiBxa,QAGlG6lB,GAAkBkH,GAAqBC,GACvCI,GAA0BC,GAE1BP,EAAmB5X,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,QACpEO,EAAAA,MAAMC,IAAI,8CAADc,OAA+CurB,EAAc,wCAAwC,KAAM,IAGpHC,EAAmB5X,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKI,iBAAiBF,OAEzE,CACJ,CACJ,CAGAgsB,EAAiB7qB,SAAQ,SAAA+a,GAErBA,EAAQhH,UAAUE,OACdvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,QAIpCkc,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKI,iBAAiBF,QAGtD,IAAM0sB,EAAM3rB,EAAAA,WAAW4rB,aAAazQ,GAChCwQ,IACAA,EAAIxX,UAAUE,OACVvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,QAEpC0sB,EAAIxX,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKI,iBAAiBF,QAE1D,GACJ,CACJ,GACJ,GAEA,CAAAS,IAAA,eAAAC,MAIA,SAAa8F,GACT,IAAM0V,EAAU1V,EAAMkjB,cAChBtnB,EAAU8Z,EAAQuD,aAAa,iBAC/Bpd,EAAO6Z,EAAQuD,aAAa,aAMlC,GAJAlf,EAAAA,MAAMC,IAAI,iDAADc,OAAkDe,EAAI,eAAAf,OAAcc,GAAW,CACpF8Z,QAASA,EAAQoR,UAAUC,UAAU,EAAG,KAAO,OAChD,GAECnrB,GAAWC,EAKX,GAH0BvD,KAAK0D,WAAWJ,KAAaC,GACnD6Z,EAAQhH,UAAUC,SAAStV,EAAAA,QAAUC,KAAKC,eAAeC,QAEtC,KAAAwtB,EAEnBjtB,EAAAA,MAAMC,IAAI,4CAADc,OAA6Cc,EAAO,+BAA+B,KAAM,UAG3FtD,KAAK0D,WAAWJ,GAGS,QAAhCorB,EAAI1uB,KAAKiG,aAAa/F,kBAAU,IAAAwuB,GAAY,QAAZA,EAA5BA,EAA8B/nB,kBAAU,IAAA+nB,GAAxCA,EAA0CC,wBACnC3uB,KAAKiG,aAAa/F,WAAWyG,WAAWgoB,gBAAgBrrB,GAInEtD,KAAK+C,mBAAmB6rB,iBAAiBtrB,GAGnBrB,EAAAA,WAAWiC,iBAAiBZ,GACpCjB,SAAQ,SAAA+a,GAClBA,EAAQhH,UAAUE,OAAOvV,EAAAA,QAAUomB,OAAO0F,SAAS3rB,QACnDkc,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAOC,WAAWlmB,OACtD,IAGAlB,KAAK8sB,2BAG8C,mBAAxC9sB,KAAKiG,aAAa8mB,mBACzB/sB,KAAKiG,aAAa8mB,mBAE1B,KAAO,CAEH,IAAMf,EAAwB,SAATzoB,EAAkB,QAAU,OAGjD9B,EAAAA,MAAMC,IAAI,yCAADc,OAA0Cc,GAAW,CAC1D0pB,aAAczpB,EACdyoB,aAAcA,GACf,GAGHhsB,KAAKyD,qBAAqBH,EAASC,EAAMvD,KAAKmoB,UAC9CnoB,KAAKyD,qBAAqBH,EAAS0oB,EAAchsB,KAAKooB,WAC1D,CAER,GAEA,CAAAzmB,IAAA,uBAAAC,MAOA,SAAqB0B,EAASC,EAAMC,GAAsB,IAAfqrB,EAAK/oB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GAExCtC,IAAUxD,KAAKmoB,WACfnoB,KAAK0D,WAAWJ,GAAWC,EAG3BvD,KAAKssB,oBAAoBhpB,EAASC,GAGlCvD,KAAK8sB,2BAEA+B,GAEqB5sB,EAAAA,WAAWiC,iBAAiBZ,GACpCjB,SAAQ,SAAA+a,GAClBA,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAO0F,SAAS3rB,QAChDkc,EAAQhH,UAAUE,OAAOvV,EAAAA,QAAUomB,OAAOC,WAAWlmB,OACzD,KAKRlB,KAAK+C,mBAAmB0pB,kBAAkBnpB,EAASC,EAAMC,EAAOqrB,EACpE,GAEA,CAAAltB,IAAA,sBAAAC,MAIA,SAAoB0B,EAASC,GAAM,IAAAurB,EACC,QAAhCA,EAAI9uB,KAAKiG,aAAa/F,kBAAU,IAAA4uB,GAAY,QAAZA,EAA5BA,EAA8BnoB,kBAAU,IAAAmoB,GAAxCA,EAA0CH,kBAC1C3uB,KAAKiG,aAAa/F,WAAWyG,WAAWgoB,gBAAgBrrB,GAAWC,EAE3E,GAEA,CAAA5B,IAAA,2BAAAC,MAIA,WAA2B,IAAAmtB,EACS,QAAhCA,EAAI/uB,KAAKiG,aAAa/F,kBAAU,IAAA6uB,GAA5BA,EAA8BtsB,eAC9BzC,KAAKiG,aAAa/F,WAAWuC,cAAcC,eAEnD,GAEA,CAAAf,IAAA,gBAAAC,MAIA,WACI,O,+VAAA2D,CAAA,GAAWvF,KAAK0D,WACpB,GAEA,CAAA/B,IAAA,kBAAAC,MAKA,SAAgB0B,GACZ,QAAStD,KAAK0D,WAAWJ,EAC7B,GAEA,CAAA3B,IAAA,qBAAAC,MAIA,WAEI,OADuB5B,KAAKiG,aAAa7F,OAAOoE,QAAO,SAAAwE,GAAC,OAAIA,EAAEzG,QAAQ,IAChDH,OAASoG,OAAO8E,KAAKtN,KAAK0D,YAAYtB,MAChE,GAEA,CAAAT,IAAA,qBAAAC,MAIA,WAAqC,IAAA2iB,EAAA,KAAlB4H,EAAQrmB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GAEjBsmB,EAAiBpsB,KAAKiG,aAAa7F,OAAOoE,QAAO,SAAAlC,GAAK,OACxDA,EAAMC,UAA2B,YAAfD,EAAM4C,MAAqC,QAAf5C,EAAM4C,MAAiC,WAAf5C,EAAM4C,IAAiB,IAI3FmnB,EAAYD,EAAehqB,OAAS,GAItC4Z,EAAW,KACf,IAJAmQ,EAAWA,GAAYE,IAKID,EAAe5nB,QAAO,SAAAlC,GAAK,OAAIiiB,EAAKyK,gBAAgB1sB,EAAM6B,GAAG,IACjE/B,OAAS,GAAI,CAC5B,IAAM0O,EAAqBC,EAAAA,mBAAmBC,cACxCiL,EAAgBC,EAAAA,cAAclL,cAC9BmD,EAAUrD,EAAmBnL,IAAI,qBAAuB,uBAC9DqW,EAAWC,EAAcG,WAAWjI,EAAS,CACzCkI,YAAY,EACZC,OAAQ,MAEhB,CAIJ,IAAMxa,EAAYC,YAAYC,MAE9B,GAAImqB,EAAU,CACV1qB,EAAAA,MAAMC,IAAI,wEAAyE,KAAM,GAGzF,IAAMutB,EAAiB7C,EAAe5nB,QAAO,SAAAlC,GAAK,OAAIiiB,EAAKyK,gBAAgB1sB,EAAM6B,GAAG,IAG9E+qB,EAAmB,IAAIrJ,IAAIoJ,EAAenL,KAAI,SAAAxhB,GAAK,OAAIA,EAAM6B,EAAE,KAG/DgrB,EAAmB,IAAI3C,IAG7B0C,EAAiB7sB,SAAQ,SAAAiB,GAAW,IAAA8rB,SAEzB7K,EAAK7gB,WAAWJ,GAGS,QAAhC8rB,EAAI7K,EAAKte,aAAa/F,kBAAU,IAAAkvB,GAAY,QAAZA,EAA5BA,EAA8BzoB,kBAAU,IAAAyoB,GAAxCA,EAA0CT,wBACnCpK,EAAKte,aAAa/F,WAAWyG,WAAWgoB,gBAAgBrrB,GAInEihB,EAAKxhB,mBAAmB6rB,iBAAiBtrB,GAAS,GAGlD,IAAMW,EAAWhC,EAAAA,WAAWiC,iBAAiBZ,GAC7C6rB,EAAiBzC,IAAIppB,EAASW,EAClC,IAGAjE,KAAK+C,mBAAmB4pB,YAAW,GAGnCzP,uBAAsB,WAClBiS,EAAiB9sB,SAAQ,SAAC4B,EAAUorB,GAChCprB,EAAS5B,SAAQ,SAAA+a,GACbA,EAAQhH,UAAUE,OAAOvV,EAAAA,QAAUomB,OAAO0F,SAAS3rB,QACnDkc,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAOC,WAAWlmB,OACtD,GACJ,IAGAqjB,EAAKuI,2BAG8C,mBAAxCvI,EAAKte,aAAa8mB,mBACzBxI,EAAKte,aAAa8mB,oBAIlB/Q,GACsBE,EAAAA,cAAclL,cACtBwL,WAAWR,GAI7BuI,EAAK6G,0BAA0BtpB,EACnC,GACJ,MAEIsqB,EAAe/pB,SAAQ,SAAAC,GAAS,IAAAgtB,EAEvB/K,EAAKyK,gBAAgB1sB,EAAM6B,MAGVlC,EAAAA,WAAWiC,iBAAiB5B,EAAM6B,IAC1C9B,SAAQ,SAAA+a,GAClBA,EAAQhH,UAAUE,OAAOvV,EAAAA,QAAUomB,OAAO0F,SAAS3rB,QACnDkc,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAOC,WAAWlmB,OACtD,WAGOqjB,EAAK7gB,WAAWpB,EAAM6B,IAGG,QAAhCmrB,EAAI/K,EAAKte,aAAa/F,kBAAU,IAAAovB,GAAY,QAAZA,EAA5BA,EAA8B3oB,kBAAU,IAAA2oB,GAAxCA,EAA0CX,wBACnCpK,EAAKte,aAAa/F,WAAWyG,WAAWgoB,gBAAgBrsB,EAAM6B,IAIzEogB,EAAKxhB,mBAAmB6rB,iBAAiBtsB,EAAM6B,IACnD,IAGAnE,KAAK8sB,2BAG8C,mBAAxC9sB,KAAKiG,aAAa8mB,mBACzB/sB,KAAKiG,aAAa8mB,oBAItB/sB,KAAKorB,0BAA0BtpB,EAEvC,I,4FAAC,CAv0B6B,E,mmFCN3B,IAAMomB,EAAuB,WAkBhC,O,EAdA,SAAAA,EAAYjiB,I,4FAAc9F,CAAA,KAAA+nB,GACtBloB,KAAKiG,aAAeA,EAEpBjG,KAAKuvB,mBAAqB,GAE1BvvB,KAAKwvB,aAAc,EAEnBxvB,KAAKyvB,SAAW,CACZC,cAAe,EACfC,cAAe,GAEnBluB,EAAAA,MAAMC,IAAI,uCAAwC,KAAM,EAC5D,E,EAEA,EAAAC,IAAA,aAAAC,MAIA,WAEIK,EAAAA,WAAW2tB,gBACXnuB,EAAAA,MAAMC,IAAI,6DAA8D,KAAM,EAClF,GAEA,CAAAC,IAAA,oBAAAC,MAOA,SAAkB0B,EAASC,EAAMC,GAAsB,IAAfqrB,EAAK/oB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GACzCrE,EAAAA,MAAMC,IAAI,4DAADc,OAA6Dc,EAAO,WAAAd,OAAUe,EAAI,YAAAf,OAAWgB,GAAS,KAAM,GAGrH,IAAMS,EAAWhC,EAAAA,WAAWiC,iBAAiBZ,EAASC,GACtD9B,EAAAA,MAAMC,IAAI,kCAADc,OAAmCyB,EAAS7B,OAAM,wBAAAI,OAAuBc,GAAW,KAAM,GAGnG,IAAMc,EAAiBnC,EAAAA,WAAWoC,yBAAyBJ,GAGrD+nB,EAAwB,SAATzoB,EAAkB,QAAU,OAEjD,GAAIsrB,EAEA7uB,KAAKuvB,mBAAmB/iB,KAAK,CACzBtH,KAAM,cACN5B,QAAAA,EACAC,KAAAA,EACAU,SAAUA,EACVkpB,aAAc/oB,EAAehC,OAAS,EAAIgC,EAAe,GAAK,KAC9DZ,MAAOA,EACPwoB,aAAcA,QAEf,CAKH,GAHAhsB,KAAK6vB,sBAAsB5rB,EAAUT,GAGjCY,EAAehC,OAAS,EAAG,CAC3BX,EAAAA,MAAMC,IAAI,4EAADc,OAA6Ec,GAAW,KAAM,GAGvG,IAAM6pB,EAAe/oB,EAAe,GAChC+oB,GAA0B,aAAV3pB,GAEhBxD,KAAK8vB,kBAAkB3C,EAAc3pB,GAGrCxD,KAAK+vB,sBAAsB5C,EAAcnB,IAGzChsB,KAAK8vB,kBAAkB3C,EAAc3pB,EAE7C,MACI/B,EAAAA,MAAM6C,KAAK,uEAAD9B,OAAwEc,GAAW,KAAM,GAIvGtD,KAAKgwB,wBACT,CACJ,GAEA,CAAAruB,IAAA,wBAAAC,MAMA,SAAsBwb,EAAS4O,GAAc,IAAAiE,EACzC,GAAK7S,SAAgB,QAAT6S,EAAP7S,EAASiQ,eAAO,IAAA4C,GAAhBA,EAAkB7C,OAAvB,CAGA,IAAM8C,EAAc9S,EAAQiQ,QAAQD,OAAO9P,MAAM,KACjD,GAA2B,IAAvB4S,EAAY9tB,OAAhB,CAEA,IAAMukB,EAAauJ,EAAY,GACzBnC,EAAiB,GAAHvrB,OAAMwpB,EAAY,KAAAxpB,OAAImkB,GAGpCwJ,EAAiBluB,EAAAA,WAAWsrB,cAAcQ,GAC3CoC,GAKL1uB,EAAAA,MAAMC,IAAI,qDAADc,OAAsDurB,GAAkB,CAC7EqC,eAAgBxU,MAAMC,KAAKsU,EAAe/Z,YAC3C,GAGH+Z,EAAe/Z,UAAUE,OACrBvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,OAChCH,EAAAA,QAAUysB,MAAMC,OAAOvsB,OACvBH,EAAAA,QAAUysB,MAAME,YAAYxsB,OAC5BH,EAAAA,QAAUysB,MAAMG,aAAazsB,QAOVivB,EAAe/Z,UAAUC,SAAStV,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,SAIxFivB,EAAe/Z,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,QAChEO,EAAAA,MAAMC,IAAI,6DAADc,OAA8DurB,GAAkB,KAAM,KAG/FoC,EAAe/Z,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKI,iBAAiBF,QAC7DO,EAAAA,MAAMC,IAAI,gDAADc,OAAiDurB,EAAc,kBAAkB,KAAM,KA9BhGtsB,EAAAA,MAAM6C,KAAK,+DAAD9B,OAAgEurB,GAAkB,KAAM,EARlE,CAJC,CA4CzC,GAEA,CAAApsB,IAAA,mBAAAC,MAKA,SAAiB0B,GAAwB,IAAfurB,EAAK/oB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GAC3BrE,EAAAA,MAAMC,IAAI,6DAADc,OAA8Dc,GAAW,KAAM,GAGxF,IAAMW,EAAWhC,EAAAA,WAAWiC,iBAAiBZ,GAC7C7B,EAAAA,MAAMC,IAAI,kCAADc,OAAmCyB,EAAS7B,OAAM,wBAAAI,OAAuBc,GAAW,KAAM,GAGnG,IAAM+sB,EAAcpuB,EAAAA,WAAWquB,oBAAoBhtB,GAE/CurB,EAEA7uB,KAAKuvB,mBAAmB/iB,KAAK,CACzBtH,KAAM,aACN5B,QAAAA,EACAW,SAAUA,EACVosB,YAAaA,KAIjBrwB,KAAKuwB,sBAAsBtsB,EAAUosB,GAErC5uB,EAAAA,MAAMC,IAAI,kCAADc,OAAmC6tB,EAAYjuB,OAAM,4BAAAI,OAA2Bc,GAAW,KAAM,GAG1GtD,KAAKgwB,yBAEb,GAEA,CAAAruB,IAAA,aAAAC,MAIA,WAA0B,IAAAmC,EAAA,KAAfysB,IAAM1qB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,KAAAA,UAAA,GACb,GAAuC,IAAnC9F,KAAKuvB,mBAAmBntB,OAA5B,CAKApC,KAAKwvB,aAAc,EACnB,IAAMiB,EAAYzwB,KAAKuvB,mBAAmBntB,OAC1CpC,KAAKyvB,SAASC,cAAgBe,EAG9BvT,uBAAsB,WAClB,IAAMpb,EAAYC,YAAYC,MAC9BP,EAAAA,MAAMC,IAAI,8CAADc,OAA+CiuB,EAAS,eAAe,KAAM,GAEtF,IAEI,IAAMC,EAAmB,GACnBC,EAAkB,GAGxB5sB,EAAKwrB,mBAAmBltB,SAAQ,SAAAuuB,GACL,gBAAnBA,EAAU1rB,KACVwrB,EAAiBlkB,KAAKokB,GACI,eAAnBA,EAAU1rB,MACjByrB,EAAgBnkB,KAAKokB,EAE7B,IAGID,EAAgBvuB,OAAS,GACzB2B,EAAK8sB,sBAAsBF,GAI3BD,EAAiBtuB,OAAS,GAC1B2B,EAAK+sB,uBAAuBJ,GAIhC,IACMK,EADUhvB,YAAYC,MACKF,EACjCiC,EAAK0rB,SAASE,cAAgBoB,EAE9BtvB,EAAAA,MAAMC,IAAI,0DAADc,OAA2DuuB,EAAenuB,QAAQ,GAAE,MACzF,CACIouB,WAAYP,EACZQ,SAAUN,EAAgBvuB,OAC1B8uB,UAAWR,EAAiBtuB,OAC5B+uB,gBAAiBJ,EAAiBN,GAAW7tB,QAAQ,IACtD,EACX,CACA,MAAO8B,GACHjD,EAAAA,MAAMiD,MAAM,kCAADlC,OAAmCkC,EAAMyP,SAAWzP,EAAO,EAC1E,CAAC,QAGGX,EAAKwrB,mBAAqB,GAG1BxrB,EAAKyrB,aAAc,EAGfgB,GACAzsB,EAAKisB,wBAEb,CACJ,GAhEA,CAiEJ,GAEA,CAAAruB,IAAA,wBAAAC,MAIA,SAAsBovB,GAClB,GAA0B,IAAtBA,EAAW5uB,OAAf,CAGA,IAAMgvB,EAAc,GACdC,EAAiB,GAGvBL,EAAW3uB,SAAQ,SAAAuuB,GACXA,EAAU3sB,UACVmtB,EAAY5kB,KAAI4B,MAAhBgjB,EAAWE,EAASV,EAAU3sB,WAE9B2sB,EAAUP,aACVgB,EAAe7kB,KAAI4B,MAAnBijB,EAAcC,EAASV,EAAUP,aAEzC,IAGArwB,KAAKuwB,sBAAsBa,EAAaC,EAjBL,CAkBvC,GAEA,CAAA1vB,IAAA,yBAAAC,MAIA,SAAuBovB,GAAY,IAAArP,EAAA,KAC/B,GAA0B,IAAtBqP,EAAW5uB,OAAf,CAGA,IAAMmvB,EAAkB,CACpB,SAAY,GACZ,WAAc,IAIZC,EAAuB,CACzB,SAAY,CAAC,EACb,WAAc,CAAC,GAInBR,EAAW3uB,SAAQ,SAAAuuB,GACf,IAGwDa,EAHhDxtB,EAA+D2sB,EAA/D3sB,SAAUkpB,EAAqDyD,EAArDzD,aAAc3pB,EAAuCotB,EAAvCptB,MAAOF,EAAgCstB,EAAhCttB,QAASC,EAAuBqtB,EAAvBrtB,KAAMyoB,EAAiB4E,EAAjB5E,aAElD/nB,GAAYA,EAAS7B,OAAS,IAChB,aAAVoB,GAAkC,eAAVA,IACxBiuB,EAAAF,EAAgB/tB,IAAOgJ,KAAI4B,MAAAqjB,EAAAH,EAAIrtB,KAKnCkpB,GAAgB7pB,IACF,aAAVE,GAAkC,eAAVA,IACxBguB,EAAqBhuB,GAAOF,GAAW,CACnC8Z,QAAS+P,EACT5pB,KAAMA,EACNyoB,aAAcA,IAI9B,IAGAxjB,OAAOkpB,QAAQH,GAAiBlvB,SAAQ,SAAAsvB,GAAuB,IAAAC,EAAAC,EAAAF,EAAA,GAArBnuB,EAAKouB,EAAA,GAAE3tB,EAAQ2tB,EAAA,GACjD3tB,EAAS7B,OAAS,GAClBuf,EAAKkO,sBAAsB5rB,EAAUT,EAE7C,IAGAgF,OAAOkpB,QAAQF,GAAsBnvB,SAAQ,SAAAyvB,GAAwB,IAAAC,EAAAF,EAAAC,EAAA,GAAtBtuB,EAAKuuB,EAAA,GAAEC,EAASD,EAAA,GAC3DvpB,OAAOkpB,QAAQM,GAAW3vB,SAAQ,SAAA4vB,GAAsB,IAAAC,EAAAL,EAAAI,EAAA,GAAVE,GAAFD,EAAA,GAAMA,EAAA,IAE9CvQ,EAAKmO,kBAAkBqC,EAAK/U,QAAS5Z,GAGvB,aAAVA,GAAwB2uB,EAAKnG,cAC7BrK,EAAKoO,sBAAsBoC,EAAK/U,QAAS+U,EAAKnG,aAEtD,GACJ,IAGIpnB,SAASwtB,MACTxtB,SAASwtB,KAAKC,uBA1DiB,CA4DvC,GAEA,CAAA1wB,IAAA,wBAAAC,MAIA,SAAsBqC,EAAUT,GAC5B,GAAKS,GAAgC,IAApBA,EAAS7B,OAA1B,CAGA,IAAMkwB,EAAgB,CAClBvxB,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,QAGhCqxB,EAAW,GAEXA,EADU,aAAV/uB,EACWzC,EAAAA,QAAUC,KAAKC,eAAeC,OACxB,eAAVsC,EACIzC,EAAAA,QAAUC,KAAKI,iBAAiBF,OAGhCsC,EAIf,IAAMgvB,EAAO,IAAI3M,IAGjB5hB,EAAS5B,SAAQ,SAAA+a,GAAW,IAAAqV,GAExBA,EAAArV,EAAQhH,WAAUE,OAAMlI,MAAAqkB,EAAIH,GAG5BlV,EAAQhH,UAAUqH,IAAI8U,GAGlBnV,EAAQhH,UAAUC,SAAStV,EAAAA,QAAUC,KAAK0a,iBAAiBxa,SAC3Dkc,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAK0xB,YAAYxxB,QAIrD,IAAM0sB,EAAM3rB,EAAAA,WAAW4rB,aAAazQ,GAChCwQ,GACA4E,EAAK/U,IAAImQ,EAEjB,IAGA4E,EAAKnwB,SAAQ,SAAAurB,GAAO,IAAA+E,GAChBA,EAAA/E,EAAIxX,WAAUE,OAAMlI,MAAAukB,EAAIL,GACxB1E,EAAIxX,UAAUqH,IAAI8U,EACtB,GA7C8C,CA8ClD,GAEA,CAAA5wB,IAAA,wBAAAC,MAIA,SAAsBqC,EAAUosB,GAC5B,GAAMpsB,GAAgC,IAApBA,EAAS7B,QAAmBiuB,GAAsC,IAAvBA,EAAYjuB,OAAzE,CAGA,IAAMkwB,EAAgB,CAClBvxB,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,QAG9B0xB,EAAoB,CACtB7xB,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,OAChCH,EAAAA,QAAUysB,MAAMC,OAAOvsB,OACvBH,EAAAA,QAAUysB,MAAME,YAAYxsB,OAC5BH,EAAAA,QAAUysB,MAAMG,aAAazsB,QAI3BsxB,EAAO,IAAI3M,IAGb5hB,GAAYA,EAAS7B,OAAS,IAC9B6B,EAAS5B,SAAQ,SAAAyZ,GAAM,IAAA+W,EAEnB,GAAK/W,EAAL,EAGA+W,EAAA/W,EAAG1F,WAAUE,OAAMlI,MAAAykB,EAAIP,GAGvB,IAAM1E,EAAM3rB,EAAAA,WAAW4rB,aAAa/R,GAChC8R,GACA4E,EAAK/U,IAAImQ,EARE,CAUnB,IAGA4E,EAAKnwB,SAAQ,SAAAurB,GAAO,IAAAkF,GAChBA,EAAAlF,EAAIxX,WAAUE,OAAMlI,MAAA0kB,EAAIR,EAC5B,KAIAjC,GAAeA,EAAYjuB,OAAS,GACpCiuB,EAAYhuB,SAAQ,SAAA0wB,GAChB,GAAIA,EAAQ,KAAAC,EAEFC,EAAgBF,EAAO3c,UAAUC,SAAStV,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,SAGnF8xB,EAAAD,EAAO3c,WAAUE,OAAMlI,MAAA4kB,EAAIJ,GAGvBK,GACAF,EAAO3c,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,OAEhE,CACJ,GAxD0F,CA0DlG,GAEA,CAAAS,IAAA,oBAAAC,MAIA,SAAkBwb,EAAS5Z,GACvB,GAAK4Z,EAAL,CAEA,IAAMgQ,EAAShQ,EAAQiQ,QAAQD,OAC/B,GAAKA,EAAL,CAEA3rB,EAAAA,MAAMC,IAAI,gEAADc,OAAiE4qB,GAAU,KAAM,GAE1F,IAAME,EAAarrB,EAAAA,WAAWsrB,cAAcH,GAE5C,GAAIE,EAAY,CACZ7rB,EAAAA,MAAMC,IAAI,0DAADc,OAA2DgB,GAAS,CACzE4pB,OAAQA,EACRgD,eAAgBxU,MAAMC,KAAKyR,EAAWlX,YACvC,GAGH,IAAM6c,EAAgB3F,EAAWlX,UAAUC,SAAStV,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,QAGvFosB,EAAWlX,UAAUE,OACjBvV,EAAAA,QAAUC,KAAKC,eAAeC,OAC9BH,EAAAA,QAAUC,KAAKI,iBAAiBF,OAChCH,EAAAA,QAAUysB,MAAMC,OAAOvsB,OACvBH,EAAAA,QAAUysB,MAAME,YAAYxsB,OAC5BH,EAAAA,QAAUysB,MAAMG,aAAazsB,QAInB,aAAVsC,GACA8pB,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKC,eAAeC,QAG1B,SAAzBkc,EAAQiQ,QAAQ9pB,KAChB+pB,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAME,YAAYxsB,QAErDosB,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAMG,aAAazsB,SAEzC,eAAVsC,EACP8pB,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUC,KAAKI,iBAAiBF,QAGzDosB,EAAWlX,UAAUqH,IAAIja,GAIzByvB,IAAkB3F,EAAWlX,UAAUC,SAAStV,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,UACnFosB,EAAWlX,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,QAC5DO,EAAAA,MAAMC,IAAI,+DAAgE,KAAM,GAExF,MACID,EAAAA,MAAM6C,KAAK,0DAAD9B,OAA2D4qB,GAAU,KAAM,EA/CtE,CAHC,CAoDxB,GAEA,CAAAzrB,IAAA,yBAAAC,MAIA,WACIH,EAAAA,MAAMC,IAAI,4DAA6D,KAAM,GAC1B,mBAAxC1B,KAAKiG,aAAa8mB,kBACzB/sB,KAAKiG,aAAa8mB,oBAElBtrB,EAAAA,MAAMC,IAAI,gEAAiE,KAAM,EAEzF,GAEA,CAAAC,IAAA,aAAAC,MAIA,WACI,O,+VAAA2D,CAAA,GAAWvF,KAAKyvB,SACpB,I,4FAAC,CAzhB+B,E,u2DCD7B,IAAM5uB,EAAqB,WAQ1B,O,EAJJ,SAAAA,EAAYoF,I,4FAAc9F,CAAA,KAAAU,GACtBb,KAAKiG,aAAeA,CACxB,G,EAEI,EAAAtE,IAAA,oBAAAC,MAMJ,SAAkB0B,EAASC,GAEvB,IADcvD,KAAKiG,aAAa7F,OAAOymB,MAAK,SAAA7d,GAAC,OAAIA,EAAE7E,KAAOb,CAAO,IAG7D,OADA7B,EAAAA,MAAMC,IAAI,2CAADc,OAA4Cc,GAAW,KAAM,GAC/D,GAIX,IAAM4vB,EAAwB,QAAT3vB,EAAiBvD,KAAKiG,aAAa5F,WAAaL,KAAKiG,aAAa3F,WAGjFuD,EAAQqvB,EAAa1uB,QAAO,SAAAwhB,GAAI,OAAIA,EAAK1iB,UAAYA,CAAO,IAUlE,OARA7B,EAAAA,MAAMC,IAAI,oCAADc,OAAqCqB,EAAMzB,OAAM,sBAAAI,OAAqBc,EAAO,MAAAd,OAAKe,EAAI,KAAK,CAChGD,QAAAA,EACAC,KAAAA,EACA4vB,WAAYtvB,EAAMzB,OAClBgxB,kBAAmBF,EAAa9wB,OAChCixB,YAAaxvB,EAAM8J,MAAM,EAAG,IAC7B,GAEI9J,CACX,GAEA,CAAAlC,IAAA,wBAAAC,MAKA,SAAsB8B,GAOlB,GANAjC,EAAAA,MAAMC,IAAI,mDAAoD,CAC1D4xB,YAAatzB,KAAKiG,aAAa7F,OAAOgC,OACtCsB,WAAY8E,OAAO8E,KAAK5J,GAAYtB,QACrC,GAGoC,IAAnCoG,OAAO8E,KAAK5J,GAAYtB,OAExB,OADAX,EAAAA,MAAMC,IAAI,8DAA+D,KAAM,GACxEO,EAAAA,WAAWsxB,oBAAoBvzB,KAAKiG,aAAa3F,YAG5D,IAAMkzB,EAAc,GAGdC,EAAgB,CAAC,EACjBC,EAAgB,CAAC,EAGvB1zB,KAAKiG,aAAa5F,WAAWgC,SAAQ,SAAA2jB,GAC7BA,EAAK1iB,UACAmwB,EAAczN,EAAK1iB,WACpBmwB,EAAczN,EAAK1iB,SAAW,IAElCmwB,EAAczN,EAAK1iB,SAASkJ,KAAKwZ,GAEzC,IAEAhmB,KAAKiG,aAAa3F,WAAW+B,SAAQ,SAAA2jB,GAC7BA,EAAK1iB,UACAowB,EAAc1N,EAAK1iB,WACpBowB,EAAc1N,EAAK1iB,SAAW,IAElCowB,EAAc1N,EAAK1iB,SAASkJ,KAAKwZ,GAEzC,IAGA,IAG+CL,EAHzCgO,EAAkB,IAAI9N,IAE5BC,EAAAC,EACmB/lB,KAAKiG,aAAa3F,YAAU,IAA/C,IAAAwlB,EAAA5b,MAAAyb,EAAAG,EAAApd,KAAA4C,MAAiD,KAAtC0a,EAAIL,EAAA/jB,MACPokB,EAAK1iB,SAAWI,EAAWsiB,EAAK1iB,SAE3BqwB,EAAgBrV,IAAI0H,EAAK1iB,WAIL,SAFAI,EAAWsiB,EAAK1iB,UAIdmwB,EAAczN,EAAK1iB,UAAY,IACvCjB,SAAQ,SAAAuxB,GACQ,YAAnBA,EAAU1uB,MACVsuB,EAAYhnB,KAAKonB,EAEzB,KAGmBF,EAAc1N,EAAK1iB,UAAY,IACvCjB,SAAQ,SAAAuxB,GACQ,YAAnBA,EAAU1uB,MACVsuB,EAAYhnB,KAAKonB,EAEzB,IAEJD,EAAgBlW,IAAIuI,EAAK1iB,UAGrB0iB,EAAK1iB,SAEK,YAAd0iB,EAAK9gB,MACLsuB,EAAYhnB,KAAKwZ,EAI7B,CAAC,OAAAC,GAAAH,EAAAzd,EAAA4d,EAAA,SAAAH,EAAA7b,GAAA,CAEDxI,EAAAA,MAAMC,IAAI,6CAA8C,CACpDmyB,iBAAkBL,EAAYpxB,OAC9BuxB,gBAAiB/X,MAAMC,KAAK8X,GAC5BN,YAAaG,EAAY7lB,MAAM,EAAG,GAAGmW,KAAI,SAAA9Z,GAAC,IAAA8pB,EAAA,OAAU,QAANA,EAAA9pB,EAAEgc,YAAI,IAAA8N,OAAA,EAANA,EAAQrF,UAAU,EAAG,KAAM,OAAS,CAAO,KAC1F,GAEH,IAAMsF,EAAgB9xB,EAAAA,WAAWsxB,oBAAoBC,GAOrD,OALA/xB,EAAAA,MAAMC,IAAI,mDAAoD,CAC1DsyB,WAAYR,EAAYpxB,OACxB6xB,cAAeF,EAAc3xB,QAC9B,GAEI2xB,CACX,GAEA,CAAApyB,IAAA,wBAAAC,MAKA,SAAsBiC,GAClB,OAAO5B,EAAAA,WAAWsxB,oBAAoB1vB,EAC1C,M,yFAAC,CA/I6B,E,6eCLlCuE,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA6F,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,gBAAAE,EAAAlG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAnG,OAAAkG,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,IAAAA,EAAAU,UAAA,GAAAd,OAAAK,eAAAR,EAAAmG,EAAA5F,EAAAjH,KAAAiH,EAAA,WAAA4F,EAAAlG,GAAA,IAAAvI,EAAA,SAAAuI,EAAAC,GAAA,aAAAyC,EAAA1C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAQ,OAAA2F,aAAA,YAAApG,EAAA,KAAAtI,EAAAsI,EAAAyB,KAAAxB,EAAAC,GAAA,wBAAAyC,EAAAjL,GAAA,OAAAA,EAAA,UAAA+L,UAAA,kEAAAvD,EAAAmG,OAAAC,QAAArG,EAAA,CAAAsG,CAAAtG,EAAA,0BAAA0C,EAAAjL,GAAAA,EAAAA,EAAA,GAOO,IAAMqa,EAAqB,WAS9B,OAhBJ/R,EAWI,SAAA+R,EAAY3H,IAXhB,SAAA3S,EAAA4I,GAAA,KAAA5I,aAAA4I,GAAA,UAAAoD,UAAA,qCAW8B3L,CAAA,KAAAia,GACtBpa,KAAKyS,aAAeA,EACpBzS,KAAKE,WAAauS,EAAavS,UACnC,EAdJqI,EAgBI,EAAA5G,IAAA,mBAAAC,OAAAsyB,EAAA/lB,EAAA/F,IAAA4E,MAKA,SAAAkG,EAAuBsH,GAAS,IAAApK,EAAAE,EAAAC,EAAAO,EAAAqL,EAAAF,EAAAD,EAAA+X,EAAAI,EAAAC,EAAA5c,EAAA6c,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7gB,EAAA8gB,EAAA,OAAAvsB,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,OAoCxB,GAnCJvK,EAAAA,MAAMC,IAAI,+CAAgD,CAAE8Y,UAAAA,GAAa,GAGnEpK,EAAepQ,KAAKE,WAAWma,kBAC/B/J,EAAYF,EAAaE,WAAa,GACtCC,EAAeH,EAAaG,cAAgB,GAI/B,QAAdiK,GAAqC,eAAdA,GAAgClK,EAGlC,QAAdkK,GAAqC,eAAdA,GAAgCjK,EAGzC,SAAdiK,GAAsC,gBAAdA,GAAkClK,GAAcC,IAChF9O,EAAAA,MAAMC,IAAI,kFAAmF,KAAM,GACnG8Y,EAAY,cAJZ/Y,EAAAA,MAAMC,IAAI,iFAAkF,KAAM,GAClG8Y,EAAY,cAJZ/Y,EAAAA,MAAMC,IAAI,8EAA+E,KAAM,GAC/F8Y,EAAY,aAUV1J,EAAqBC,EAAAA,mBAAmBC,cACxCmL,EAAiBrL,EAAmBnL,IAAI,iBAAkB,uBAG1DsW,EAAgBC,EAAAA,cAAclL,cAC9BgL,EAAWC,EAAcG,WAAWD,EAAgB,CACtDE,YAAY,EACZC,OAAQ,MACVnJ,EAAA1F,KAAA,EAIQsmB,EAAgB/zB,KAAKE,WAAW+F,aAAarC,wBAIjC,cAAd4W,EAAyB,CAAArH,EAAAnH,KAAA,SAEzBmoB,EAAS,CACLS,SAAS,EACTzgB,QAASrD,EAAmBnL,IAAI,wBAAyB,+DAC3DwN,EAAAnH,KAAA,wBAAAmH,EAAAnH,KAAA,GAGahM,KAAK60B,WAAWd,EAAevZ,GAAU,QAAxD2Z,EAAMhhB,EAAAzH,KAAA,QA6CT,OAzCDuQ,EAAcO,WAAWR,GAGrBmY,EAAOS,SAEDR,EAAkBxvB,SAASsc,eAAe,wBAE5CkT,EAAgBlgB,UAAY,GAC5BkgB,EAAgBhe,UAAUE,OAAO,cAG3BkB,EAAeD,EAAAA,QAAavG,cAC5BqjB,EAAe7c,EAAawD,YAAYmZ,EAAOhgB,QAAS,CAC1D4D,QAAS,EACTH,WAAW,IAGfwc,EAAgBhgB,YAAYigB,GAG5Br0B,KAAK80B,wBAIHV,EAAkBxvB,SAASsc,eAAe,wBAE5CkT,EAAgBlgB,UAAY,GAC5BkgB,EAAgBhe,UAAUE,OAAO,cAG3BkB,EAAeD,EAAAA,QAAavG,cAC5BqjB,EAAe7c,EAAaud,UAAUZ,EAAOhgB,SAAW,gDAAiD,CAC3G4D,QAAS,EACTH,WAAW,IAGfwc,EAAgBhgB,YAAYigB,GAG5Br0B,KAAK80B,uBAEZ3hB,EAAAtH,OAAA,SAEMsoB,GAAM,QAsBZ,OAtBYhhB,EAAA1F,KAAA,GAAA0F,EAAAO,GAAAP,EAAA,SAGb8I,EAAcO,WAAWR,GAEzBva,EAAAA,MAAMiD,MAAM,kDAAiDyO,EAAAO,GAAS,IAGhE0gB,EAAkBxvB,SAASsc,eAAe,wBAE5CkT,EAAgBlgB,UAAY,GAC5BkgB,EAAgBhe,UAAUE,OAAO,cAG3BkB,EAAeD,EAAAA,QAAavG,cAC5B6C,EAAe,UAAHrR,OAAa2Q,EAAAO,GAAMS,SAAW,8CAC1CkgB,EAAe7c,EAAaud,UAAUlhB,EAAc,CACtDkE,QAAS,EACTH,WAAW,IAGfwc,EAAgBhgB,YAAYigB,IAC/BlhB,EAAAtH,OAAA,SAEM,CACH+oB,SAAS,EACTzgB,QAAShB,EAAAO,GAAMS,SAAW,8CAC7B,yBAAAhB,EAAAvF,OAAA,GAAAsF,EAAA,mBAER,SA1HqB2G,GAAA,OAAAqa,EAAA9lB,MAAC,KAADtI,UAAA,IA4HtB,CAAAnE,IAAA,aAAAC,OAAAozB,EAAA7mB,EAAA/F,IAAA4E,MAMA,SAAAwH,EAAiBuf,EAAevZ,GAAS,IAAApK,EAAAE,EAAAC,EAAA7M,EAAAuxB,EAAAC,EAAA5b,EAAA6b,EAAAhB,EAAA,OAAA/rB,IAAAmB,MAAA,SAAAqL,GAAA,cAAAA,EAAAnH,KAAAmH,EAAA5I,MAAA,OAcrC,GAZMoE,EAAepQ,KAAKE,WAAWma,kBAG/B/J,EAAYF,EAAaE,WAAa,GACtCC,EAAeH,EAAaG,cAAgB,GAElD9O,EAAAA,MAAMC,IAAI,6DAA8D,CACpE4O,UAAAA,EACAC,aAAAA,EACAiK,UAAAA,GACD,IAGiB,QAAdA,GAAqC,eAAdA,GAAgClK,KACzC,QAAdkK,GAAqC,eAAdA,GAAgCjK,KACzC,SAAdiK,GAAsC,gBAAdA,GAAkClK,GAAcC,GAAc,CAAAqE,EAAA5I,KAAA,QAEyB,OAAjHvK,EAAAA,MAAMC,IAAI,6FAA8F,KAAM,GAAGkT,EAAA/I,OAAA,SAC1G,CACH+oB,SAAS,EACTzgB,QAASpD,EAAAA,mBAAmBC,cAAcrL,IAAI,wBAAyB,gEAC1E,UAIc,QAAd6U,GAAqC,eAAdA,GAAgClK,EAAS,CAAAsE,EAAA5I,KAAA,SAC0B,OAA3FvK,EAAAA,MAAMiD,MAAM,qEAAsE,KAAM,GAAGkQ,EAAA/I,OAAA,SACpF,CACH+oB,SAAS,EACTzgB,QAAS,+DACZ,WACqB,QAAdqG,GAAqC,eAAdA,GAAgCjK,EAAY,CAAAqE,EAAA5I,KAAA,SACgB,OAA3FvK,EAAAA,MAAMiD,MAAM,qEAAsE,KAAM,GAAGkQ,EAAA/I,OAAA,SACpF,CACH+oB,SAAS,EACTzgB,QAAS,+DACZ,WACqB,SAAdqG,GAAsC,gBAAdA,GAAkClK,GAAcC,EAAa,CAAAqE,EAAA5I,KAAA,SACJ,OAAzFvK,EAAAA,MAAMiD,MAAM,mEAAoE,KAAM,GAAGkQ,EAAA/I,OAAA,SAClF,CACH+oB,SAAS,EACTzgB,QAAS,6DACZ,QA4BD,OAxBEzQ,EAAa0xB,KAAKC,UAAUr1B,KAAKE,WAAW+F,aAAavC,YACzDuxB,EAAgBj1B,KAAKE,WAAWo1B,sBAAwB,EAAI,EAAC1gB,EAAAnH,KAAA,GAIzDynB,EAAa,CACfK,OAAQ,wBACRhS,QAASwQ,EACTrwB,WAAAA,EACA8W,UAAAA,EACAya,cAAAA,GAIc,QAAdza,GAAqC,eAAdA,GAA4C,SAAdA,GAAsC,gBAAdA,IAC7E0a,EAAW5kB,UAAYA,GAGT,QAAdkK,GAAqC,eAAdA,GAA4C,SAAdA,GAAsC,gBAAdA,IAC7E0a,EAAW3kB,aAAeA,GAG9B9O,EAAAA,MAAMC,IAAI,0DAA2DwzB,EAAY,GAEjFtgB,EAAA5I,KAAA,GACuBhM,KAAKE,WAAWyZ,YAAY,iBAAgB,QAGnE,OAHML,EAAQ1E,EAAAlJ,KACdjK,EAAAA,MAAMC,IAAI,wCAAyC,CAAE4X,SAAAA,GAAY,GAEjE1E,EAAA5I,KAAA,GACuBwpB,MAAMlc,EAAU,CACnC/N,OAAQ,OACRkqB,QAAS,CACL,eAAgB,qCAEpBrD,KAAM,IAAIsD,gBAAgBR,KAC5B,QANY,OAARC,EAAQvgB,EAAAlJ,KAAAkJ,EAAA5I,KAAG,GASImpB,EAASQ,OAAM,QACwB,OADtDxB,EAAMvf,EAAAlJ,KACZjK,EAAAA,MAAMC,IAAI,sCAAuCyyB,EAAQ,GAAGvf,EAAA/I,OAAA,SAErDsoB,GAAM,QAEyD,OAFzDvf,EAAAnH,KAAA,GAAAmH,EAAAlB,GAAAkB,EAAA,UAEbnT,EAAAA,MAAMiD,MAAM,+CAA8CkQ,EAAAlB,GAAS,GAAGkB,EAAA/I,OAAA,SAC/D,CACH+oB,SAAS,EACTzgB,QAAS,yBAAF3R,OAA2BoS,EAAAlB,GAAMS,WAC3C,yBAAAS,EAAAhH,OAAA,GAAA4G,EAAA,oBAER,SAjGeyM,EAAAM,GAAA,OAAAyT,EAAA5mB,MAAC,KAADtI,UAAA,IAmGhB,CAAAnE,IAAA,sBAAAC,MAGA,WACI,IAAMg0B,EAAgBhxB,SAASsc,eAAe,qBAC1C0U,IAEAA,EAAcC,eAAe,CACzBC,SAAU,SACVC,MAAO,WAGXt0B,EAAAA,MAAMC,IAAI,kDAAmD,KAAM,GAE3E,IAxQJ6G,GAAAgG,EAAAlG,EAAAI,UAAAF,GAAAD,GAAAiG,EAAAlG,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAiB,UAAA,IAAAjB,EAAA,IAAAA,EAAAE,EAAAD,EAiJI0sB,EAjIAd,CAwPC,CAjQ6B,E,ulCCI3B,IAAMla,EAAmB,WAW5B,O,EANA,SAAAA,EAAYvH,I,4FAActS,CAAA,KAAA6Z,GACtBha,KAAKyS,aAAeA,EACpBzS,KAAKE,WAAauS,EAAavS,WAC/BF,KAAK8R,aAAeW,EAAaX,YACrC,G,EAEA,EAAAnQ,IAAA,aAAAC,MAIA,WAEI5B,KAAKg2B,qBACLv0B,EAAAA,MAAMC,IAAI,mCAAoC,KAAM,EACxD,GAEA,CAAAC,IAAA,qBAAAC,MAIA,WAEI,IAAMq0B,EAAgBrxB,SAASsc,eAAengB,EAAAA,QAAUm1B,MAAMC,eAAej1B,QAGvEk1B,EAAyBH,EAC6C,KAAxErxB,SAASsc,eAAengB,EAAAA,QAAUm1B,MAAMG,sBAAsBn1B,QAG5Do1B,EAAcL,GAAiBG,EAErC,GAAKE,EAAL,CAMA,IAAMC,EAASD,EAAYE,WAAU,GACjCF,EAAY9f,YACZ8f,EAAY9f,WAAWigB,aAAaF,EAAQD,GAI5CA,IAAgBL,GAAmBM,EAAOriB,WAAyC,KAA5BqiB,EAAOriB,UAAU6H,SACxEwa,EAAOriB,UAAYgC,EAAAA,SAASwgB,YAAY,MAAO,CAAE/S,QAAS,SAAY,WAI1E4S,EAAO9uB,iBAAiB,QAASzH,KAAKua,mBAAmByE,KAAKhf,OAC9DyB,EAAAA,MAAMC,IAAI,wBAADc,OAAyB8zB,IAAgBL,EAAgB,UAAY,oBAAmB,0BAA0B,KAAM,EAfjI,MAFIx0B,EAAAA,MAAM6C,KAAK,gDAAiD,KAAM,EAkB1E,GAEA,CAAA3C,IAAA,qBAAAC,MAIA,WACIH,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GAG/D,IACMya,EADqBpL,EAAAA,mBAAmBC,cACJrL,IAAI,iBAAkB,yBAG1DsW,EAAgBC,EAAAA,cAAclL,cAC9BgL,EAAWC,EAAcG,WAAWD,EAAgB,CACtDE,YAAY,EACZC,OAAQ,MAGZ,IAAI,IAAAqa,EAEM5C,EAAgB/zB,KAAKyS,aAAamkB,mBAIlC3Y,IAD0C,QAA5B0Y,EAAA32B,KAAKE,WAAWkQ,oBAAY,IAAAumB,OAAA,EAA5BA,EAA8BhmB,WAAY,IAChC2M,MAAM,KAAK9P,MAAM2Q,cAGzC0Y,EAAmBnZ,EAAAA,sBAAsBoZ,cAAc/C,EAAe9V,GAAW,GAGvFhC,EAAcO,WAAWR,GAGzB9F,EAAAA,SAAS6gB,WACLh2B,EAAAA,QAAUi2B,MAAMC,iBAAiB/1B,OACjClB,KAAKE,WAAWkQ,aAAaO,UAAY,eAI7C3Q,KAAK8R,aAAailB,WACdh2B,EAAAA,QAAUi2B,MAAME,QAAQh2B,OACxB21B,EACA91B,EAAAA,QAAUi2B,MAAMG,mBAAmBj2B,QAIvC,IAAMk2B,EAAoBxyB,SAASkP,cAAc,OACjDsjB,EAAkBhhB,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OACxBH,EAAAA,QAAUiT,QAAQsjB,wBAAwBp2B,OAC1CH,EAAAA,QAAUiT,QAAQujB,aAAar2B,OAC/BH,EAAAA,QAAUiT,QAAQwjB,UAAUt2B,QAG3D,IAAMu2B,EAAc7yB,SAASkP,cAAc,OAC3C2jB,EAAYtzB,GAAK,wBACjBszB,EAAYrhB,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OACxBH,EAAAA,QAAUiT,QAAQ0jB,mBAAmBx2B,QAC9Dk2B,EAAkBhjB,YAAYqjB,GAG9Bz3B,KAAK8R,aAAa6lB,KAAK52B,EAAAA,QAAUi2B,MAAME,QAAQh2B,QAG/ClB,KAAK43B,0BAGLC,EAAAA,WAAWC,wBAAwB/2B,EAAAA,QAAUi2B,MAAMG,mBAAmBj2B,QAEtEO,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,EACxE,CAAE,MAAOgD,GAELuX,EAAcO,WAAWR,GAEzBva,EAAAA,MAAMiD,MAAM,6CAA8CA,EAAO,GACjE1E,KAAK+3B,iBAAiBrzB,EAC1B,CACJ,GAEA,CAAA/C,IAAA,0BAAAC,MAIA,WACI,GAAKuO,OAAOmL,KAKZ,IAAI,IAAA0c,EAEMC,EAA2E,QAAjED,EAAG9hB,EAAAA,SAASiO,WAAWpjB,EAAAA,QAAUi2B,MAAMG,mBAAmBj2B,eAAO,IAAA82B,OAAA,EAA9DA,EAAgE5mB,cAAc,OAC3F8mB,EAAcD,aAAU,EAAVA,EAAY7mB,cAAc,QAE9C,IAAK8mB,EAED,YADAz2B,EAAAA,MAAM6C,KAAK,8DAA+D,KAAM,GAKpF6L,OAAOmL,KAAKsB,iBAAiBsb,GAGwB,SAAjDD,EAAWtX,aAAa,sBAAmCxQ,OAAOmL,KAAKsC,mBACvEzN,OAAOmL,KAAKsC,iBAAiBsa,GAC7Bz2B,EAAAA,MAAMC,IAAI,qDAAsD,KAAM,IAG1ED,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,EACxE,CAAE,MAAOgD,GACLjD,EAAAA,MAAM6C,KAAK,2DAA4DI,EAAO,EAClF,MA1BIjD,EAAAA,MAAMC,IAAI,kDAAmD,KAAM,EA2B3E,GAEA,CAAAC,IAAA,mBAAAC,MAIA,SAAiB8C,GACb,IAAMmP,EAAenP,aAAiB2G,MAAQ3G,EAAMyP,QAAUzF,OAAOhK,GAC/DyzB,EAAexQ,EAAAA,YAAYC,WAAW/T,GAG5C7T,KAAK8R,aAAailB,WACdh2B,EAAAA,QAAUi2B,MAAME,QAAQh2B,OACxB,GACAH,EAAAA,QAAUi2B,MAAMG,mBAAmBj2B,QAIvCgV,EAAAA,SAASkiB,YACLr3B,EAAAA,QAAUi2B,MAAMG,mBAAmBj2B,OAAM,uCAAAsB,OACF21B,EAAY,QACnD,SACA,CAAEpkB,UAAW,KAGjB/T,KAAK8R,aAAa6lB,KAAK52B,EAAAA,QAAUi2B,MAAME,QAAQh2B,OACnD,M,yFAAC,CAlM2B,E,2/DCFzB,IAAMgZ,EAAiB,WAkB1B,O,EAbA,SAAAA,EAAYzH,I,4FAActS,CAAA,KAAA+Z,GACtBla,KAAKyS,aAAeA,EACpBzS,KAAKE,WAAauS,EAAavS,WAC/BF,KAAK8R,aAAeW,EAAaX,aACjC9R,KAAK8Q,mBAAqBC,EAAAA,mBAAmBC,cAG7ChR,KAAKq4B,iBAAmB,KACxBr4B,KAAKs4B,eAAiB,KACtBt4B,KAAKu4B,gBAAkB,KACvBv4B,KAAKw4B,gBAAkB,IAC3B,E,EAEA,EAAA72B,IAAA,aAAAC,MAGA,WAEI5B,KAAKy4B,6BAGLz4B,KAAK04B,oBAGL14B,KAAK24B,wBAELl3B,EAAAA,MAAMC,IAAI,iCAAkC,KAAM,EACtD,GAEA,CAAAC,IAAA,6BAAAC,MAGA,WASI,GAPA5B,KAAKq4B,iBAAmBniB,EAAAA,SAASiO,WAAWpjB,EAAAA,QAAUm1B,MAAM0C,sBAC5D54B,KAAKs4B,eAAiBpiB,EAAAA,SAASiO,WAAWpjB,EAAAA,QAAUm1B,MAAM2C,oBAG1D74B,KAAKu4B,gBAAkB3zB,SAASsc,eAAe,mCAC/ClhB,KAAKw4B,gBAAkB5zB,SAASsc,eAAe,mCAE1ClhB,KAAKq4B,kBAAqBr4B,KAAKs4B,eAApC,CAMIt4B,KAAKs4B,gBACLt4B,KAAKs4B,eAAezO,aAAa,OAAQ,UAK7CpoB,EAAAA,MAAMC,IAAI,0DAA2D,KAAM,GAC3E1B,KAAK84B,4BAOL,IAJA,IAAMC,EAAmBpZ,aAAaC,QAAQ,8BAAgC,MAG1EoZ,GAAc,EACTj5B,EAAI,EAAGA,EAAIC,KAAKq4B,iBAAiB9oB,QAAQnN,OAAQrC,IACtD,GAAIC,KAAKq4B,iBAAiB9oB,QAAQxP,GAAG6B,QAAUm3B,EAAkB,CAC7DC,GAAc,EACd,KACJ,CAIAA,EACAh5B,KAAKq4B,iBAAiBz2B,MAAQm3B,EACvB/4B,KAAKq4B,iBAAiB9oB,QAAQnN,OAAS,IAC9CpC,KAAKq4B,iBAAiBY,cAAgB,GAG1Cx3B,EAAAA,MAAMC,IAAI,uDAADc,OAAwDxC,KAAKq4B,iBAAiBz2B,OAAS,KAAM,GAGtG5B,KAAKk5B,yBAELz3B,EAAAA,MAAMC,IAAI,0DAA2D,KAAM,EApC3E,MAFID,EAAAA,MAAM6C,KAAK,wDAAyD,KAAM,EAuClF,GAEA,CAAA3C,IAAA,4BAAAC,MAGA,WAA4B,IAAAu3B,EAAAC,EAAAC,EAElBjpB,EAAepQ,KAAKE,WAAWma,kBAG/BxY,EAAWuO,EAAavO,UAAY,CAAC,EAIrC2O,EAAcJ,EAAaI,cAA2B,QAAhB2oB,EAAIt3B,EAAQ,WAAI,IAAAs3B,OAAA,EAAZA,EAAcG,YAAiC,QAAzBF,EAAIhpB,EAAaO,gBAAQ,IAAAyoB,OAAA,EAArBA,EAAuB9b,MAAM,KAAK9P,QAAS,WAC/GiD,EAAcL,EAAaK,cAA2B,QAAhB4oB,EAAIx3B,EAASM,WAAG,IAAAk3B,OAAA,EAAZA,EAAcC,WAAY,WAGpEC,EAAU/oB,EAAY8M,MAAM,UAAU9P,MACtCgsB,EAAU/oB,EAAY6M,MAAM,UAAU9P,MAE5C/L,EAAAA,MAAMC,IAAI,uDAAwD,CAC9D8O,YAAAA,EACAC,YAAAA,EACA8oB,QAAAA,EACAC,QAAAA,GACD,GAGH,IAAMC,EAAoBF,EAAQ9K,UAAU,EAAG8K,EAAQG,YAAY,OAASH,EACtEI,EAAoBH,EAAQ/K,UAAU,EAAG+K,EAAQE,YAAY,OAASF,EACtEI,EAAaL,EAAQ9K,UAAU8K,EAAQG,YAAY,OAAS,GAC5DG,EAAaL,EAAQ/K,UAAU+K,EAAQE,YAAY,OAAS,GAE5DI,EAAgB,GAAHt3B,OAAMi3B,EAAiB,WAAAj3B,OAAUo3B,GAC9CG,EAAgB,GAAHv3B,OAAMm3B,EAAiB,WAAAn3B,OAAUq3B,GAG9CrqB,EAASxP,KAAKE,WAAW4iB,YACzBkX,GAAcxqB,aAAM,EAANA,EAAQwqB,cAAe,CACvCC,gBAAgB,EAChBC,gBAAgB,EAChBC,WAAW,EACXC,qBAAqB,EACrBC,YAAY,EACZC,sBAAsB,GAM1B,IAHA74B,EAAAA,MAAMC,IAAI,gDAAiDs4B,EAAa,GAGjEh6B,KAAKq4B,iBAAiB9oB,QAAQnN,OAAS,GAC1CpC,KAAKq4B,iBAAiB/hB,OAAO,GAIjCtW,KAAKq4B,iBAAiBnkB,UAAY,GAElCzS,EAAAA,MAAMC,IAAI,uDAAwD,KAAM,GAExE,IAAI64B,EAAc,EAGdP,EAAYC,iBACZ/jB,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKq4B,iBAAkB,CAC7DhV,WAAY,CACRzhB,MAAO,MACP,eAAgB5B,KAAK8Q,mBAAmBnL,IAAI,wBAAyB,iDAEzE4d,QAAS,GAAF/gB,OAAK+2B,EAAO,YAEvBgB,KAGAP,EAAYE,iBACZhkB,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKq4B,iBAAkB,CAC7DhV,WAAY,CACRzhB,MAAO,aACP,eAAgB5B,KAAK8Q,mBAAmBnL,IAAI,wBAAyB,0DAEzE4d,QAAS,GAAF/gB,OAAKs3B,EAAa,YAE7BS,KAGAP,EAAYG,YACZjkB,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKq4B,iBAAkB,CAC7DhV,WAAY,CACRzhB,MAAO,MACP,eAAgB5B,KAAK8Q,mBAAmBnL,IAAI,mBAAoB,6CAEpE4d,QAAS,GAAF/gB,OAAKg3B,EAAO,YAEvBe,KAGAP,EAAYI,sBACZlkB,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKq4B,iBAAkB,CAC7DhV,WAAY,CACRzhB,MAAO,aACP,eAAgB5B,KAAK8Q,mBAAmBnL,IAAI,6BAA8B,0EAE9E4d,QAAS,GAAF/gB,OAAKu3B,EAAa,YAE7BQ,KAGAP,EAAYK,aACZnkB,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKq4B,iBAAkB,CAC7DhV,WAAY,CACRzhB,MAAO,OACP,eAAgB5B,KAAK8Q,mBAAmBnL,IAAI,oBAAqB,uDAErE4d,QAASvjB,KAAK8Q,mBAAmBnL,IAAI,aAAc,0BAEvD40B,KAGAP,EAAYM,uBACZpkB,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKq4B,iBAAkB,CAC7DhV,WAAY,CACRzhB,MAAO,cACP,eAAgB5B,KAAK8Q,mBAAmBnL,IAAI,8BAA+B,2EAE/E4d,QAASvjB,KAAK8Q,mBAAmBnL,IAAI,uBAAwB,8BAEjE40B,KAIgB,IAAhBA,IACA94B,EAAAA,MAAMC,IAAI,oEAAqE,KAAM,GACrFwU,EAAAA,SAASkN,uBAAuB,SAAUpjB,KAAKq4B,iBAAkB,CAC7DhV,WAAY,CACRzhB,MAAO,MACP,eAAgB5B,KAAK8Q,mBAAmBnL,IAAI,wBAAyB,iDAEzE4d,QAAS,GAAF/gB,OAAK+2B,EAAO,YAEvBgB,EAAc,GAGlB94B,EAAAA,MAAMC,IAAI,wDAADc,OAAyD+3B,EAAW,YAAY,KAAM,EACnG,GAEA,CAAA54B,IAAA,yBAAAC,MAGA,WAAyB,IAAAmC,EAAA,KA0Dfy2B,EAAex6B,KAAKs4B,eAAe9B,WAAU,GAC7CiE,EAAsBz6B,KAAKq4B,iBAAiB7B,WAAU,GAGxDx2B,KAAKs4B,gBAAkBt4B,KAAKs4B,eAAe9hB,YAC3CxW,KAAKs4B,eAAe9hB,WAAWigB,aAAa+D,EAAcx6B,KAAKs4B,gBAG/Dt4B,KAAKq4B,kBAAoBr4B,KAAKq4B,iBAAiB7hB,YAC/CxW,KAAKq4B,iBAAiB7hB,WAAWigB,aAAagE,EAAqBz6B,KAAKq4B,kBAI5Er4B,KAAKs4B,eAAiBkC,EACtBx6B,KAAKq4B,iBAAmBoC,EAGnBz6B,KAAKs4B,eAAelnB,cAAc,oCAMnCpR,KAAKu4B,gBAAkBv4B,KAAKs4B,eAAelnB,cAAc,qCALzDpR,KAAKu4B,gBAAkBriB,EAAAA,SAASkN,uBAAuB,IAAKpjB,KAAKs4B,eAAgB,CAC7En0B,GAAI,oCAERnE,KAAKs4B,eAAe7hB,aAAazW,KAAKu4B,gBAAiBv4B,KAAKs4B,eAAelU,aAK1EpkB,KAAKs4B,eAAelnB,cAAc,oCAKnCpR,KAAKw4B,gBAAkBx4B,KAAKs4B,eAAelnB,cAAc,oCAJzDpR,KAAKw4B,gBAAkBtiB,EAAAA,SAASkN,uBAAuB,OAAQpjB,KAAKs4B,eAAgB,CAChFn0B,GAAI,oCAOZnE,KAAKq4B,iBAAiBjiB,UAAUqH,IAAI,wBACpCzd,KAAKq4B,iBAAiBhkB,MAAMyU,OAAS,UAGrC,IAAM4R,EAAe91B,SAASkP,cAAc,QAC5C4mB,EAAa3mB,UAAYhT,EAAAA,QAAUiT,QAAQ2mB,eAAez5B,OAC1Dw5B,EAAaxmB,UAAYgC,EAAAA,SAASwgB,YAAY,eAAgB,CAAElM,MAAO,GAAIL,OAAQ,KACnFnqB,KAAKs4B,eAAelkB,YAAYsmB,GAGhC16B,KAAKs4B,eAAe7wB,iBAAiB,SArGf,SAACC,GAMnB,GAJAA,EAAMK,iBACNL,EAAMkzB,kBAGF72B,EAAKs0B,iBAAkB,CAMvB,GAHAt0B,EAAKs0B,iBAAiBwC,QAG0B,mBAArC92B,EAAKs0B,iBAAiByC,WAC7B,IAGI,OAFA/2B,EAAKs0B,iBAAiByC,kBACtBr5B,EAAAA,MAAMC,IAAI,wDAAyD,KAAM,EAE7E,CAAE,MAAO2G,GACL5G,EAAAA,MAAMC,IAAI,oEAAqE2G,EAAG,EACtF,CAIJ8U,YAAW,WACP,IAEI,IAAM4d,EAAa,IAAIC,WAAW,YAAa,CAC3CC,SAAS,EACTC,YAAY,EACZC,KAAMhrB,SAEVpM,EAAKs0B,iBAAiBhhB,cAAc0jB,EACxC,CAAE,MAAO1yB,GACL5G,EAAAA,MAAMC,IAAI,8DAA+D2G,EAAG,EAChF,CACJ,GAAG,IAGHtE,EAAKs0B,iBAAiBjiB,UAAUqH,IAAI,0BACpCN,YAAW,WACPpZ,EAAKs0B,iBAAiBjiB,UAAUE,OAAO,yBAC3C,GAAG,IACP,CAEA7U,EAAAA,MAAMC,IAAI,wEAAyE,KAAM,EAC7F,IAyDA1B,KAAKq4B,iBAAiB5wB,iBAAiB,UAvDjB,WAElB1D,EAAKq3B,kBAAkBr3B,EAAKs0B,iBAAiBz2B,OAC7C+d,aAAaoB,QAAQ,4BAA6Bhd,EAAKs0B,iBAAiBz2B,OAExEH,EAAAA,MAAMC,IAAI,2CAADc,OAA4CuB,EAAKs0B,iBAAiBz2B,OAAS,KAAM,EAC9F,IAoDA5B,KAAKq4B,iBAAiBhkB,MAAMgnB,aAAe,SAC3Cr7B,KAAKq4B,iBAAiBhkB,MAAMinB,WAAa,WACzCt7B,KAAKq4B,iBAAiBhkB,MAAMyU,OAAS,UAGrC9oB,KAAKq4B,iBAAiBvO,MAAQ,mDAG9B9pB,KAAKq4B,iBAAiB5wB,iBAAiB,aAAa,WAChD1D,EAAKs0B,iBAAiBhkB,MAAMknB,YAAc,6BAC9C,IACAv7B,KAAKq4B,iBAAiB5wB,iBAAiB,YAAY,WAC/C1D,EAAKs0B,iBAAiBhkB,MAAMknB,YAAc,kCAC9C,IAGAv7B,KAAKo7B,kBAAkBp7B,KAAKq4B,iBAAiBz2B,MACjD,GAEA,CAAAD,IAAA,oBAAAC,MAGA,SAAkBA,GAEd,IAAM45B,EAAoB,mBAKpBC,EAAkB16B,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OACnDy6B,EAAkB56B,EAAAA,QAAUiT,QAAQ4nB,eAAe16B,OACnD26B,EAAoB96B,EAAAA,QAAUiT,QAAQ8nB,YAAY56B,OAIpD66B,EAAW,GACXC,EAAa,GACbC,EAAc,GAGlB,OAAQr6B,GACJ,IAAK,MACL,IAAK,aAuBL,QAEIm6B,EAAW,OACXC,EAAaR,EACbS,EAAcR,EACd,MArBJ,IAAK,MACL,IAAK,aAEDM,EAAW,aACXC,EA5BkB,mBA6BlBC,EAAcN,EACd,MAEJ,IAAK,OACL,IAAK,cAEDI,EAAW,YACXC,EAnCoB,gBAoCpBC,EAAcJ,EAYtB,IAAMK,EAAc,GAAH15B,OAAMzB,EAAAA,QAAUiT,QAAQmoB,aAAaj7B,OAAM,KAAAsB,OAAIw5B,GAChEh8B,KAAKu4B,gBAAgBrkB,UAAYgC,EAAAA,SAASwgB,YAAYqF,EAAU,CAAEpY,QAASuY,IAG3E,IAAME,EAAcx3B,SAASsc,eAAengB,EAAAA,QAAUm1B,MAAMmG,aAAan7B,QAmBzE,OAlBIk7B,IAEAA,EAAYhmB,UAAUE,OAClBvV,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OACjCH,EAAAA,QAAUiT,QAAQ4nB,eAAe16B,OACjCH,EAAAA,QAAUiT,QAAQ8nB,YAAY56B,OAC9BH,EAAAA,QAAUiT,QAAQsoB,eAAep7B,OACjCH,EAAAA,QAAUiT,QAAQuoB,cAAcr7B,OAChCH,EAAAA,QAAUiT,QAAQ2V,iBAAiBzoB,QAIvCk7B,EAAYhmB,UAAUqH,IAAIwe,GAE1Bx6B,EAAAA,MAAMC,IAAI,oDAADc,OAAqDy5B,GAAe,KAAM,IAI/Er6B,GACJ,IAAK,MA0CL,QAEI5B,KAAKw4B,gBAAgBhxB,YAAcxH,KAAK8Q,mBAAmBnL,IAAI,iBAAkB,oBACjF3F,KAAKs4B,eAAexO,MAAQ9pB,KAAK8Q,mBAAmBnL,IAAI,wBAAyB,IACjF3F,KAAKs4B,eAAezO,aAAa,aAAc,OAC/C,MAxCJ,IAAK,aAED7pB,KAAKw4B,gBAAgBhxB,YAAcxH,KAAK8Q,mBAAmBnL,IAAI,iBAAkB,oBACjF3F,KAAKs4B,eAAexO,MAAQ9pB,KAAK8Q,mBAAmBnL,IAAI,wBAAyB,IACjF3F,KAAKs4B,eAAezO,aAAa,aAAc,cAC/C,MAEJ,IAAK,MAED7pB,KAAKw4B,gBAAgBhxB,YAAcxH,KAAK8Q,mBAAmBnL,IAAI,YAAa,oBAC5E3F,KAAKs4B,eAAexO,MAAQ9pB,KAAK8Q,mBAAmBnL,IAAI,mBAAoB,IAC5E3F,KAAKs4B,eAAezO,aAAa,aAAc,OAC/C,MAEJ,IAAK,aAED7pB,KAAKw4B,gBAAgBhxB,YAAcxH,KAAK8Q,mBAAmBnL,IAAI,sBAAuB,2BACtF3F,KAAKs4B,eAAexO,MAAQ9pB,KAAK8Q,mBAAmBnL,IAAI,6BAA8B,IACtF3F,KAAKs4B,eAAezO,aAAa,aAAc,cAC/C,MAEJ,IAAK,OAED7pB,KAAKw4B,gBAAgBhxB,YAAcxH,KAAK8Q,mBAAmBnL,IAAI,aAAc,sBAC7E3F,KAAKs4B,eAAexO,MAAQ9pB,KAAK8Q,mBAAmBnL,IAAI,oBAAqB,IAC7E3F,KAAKs4B,eAAezO,aAAa,aAAc,QAC/C,MAEJ,IAAK,cAED7pB,KAAKw4B,gBAAgBhxB,YAAcxH,KAAK8Q,mBAAmBnL,IAAI,uBAAwB,4BACvF3F,KAAKs4B,eAAexO,MAAQ9pB,KAAK8Q,mBAAmBnL,IAAI,8BAA+B,IACvF3F,KAAKs4B,eAAezO,aAAa,aAAc,eAWvDpoB,EAAAA,MAAMC,IAAI,wCAADc,OAAyCZ,GAAS,KAAM,EACrE,GAEA,CAAAD,IAAA,oBAAAC,MAGA,WAAoB,IAAA+f,EAAA,KAEhB/c,SAAS6C,iBAAiB,SAAS,SAACC,GAEhC,GAAIA,EAAMC,OAAO60B,SAAW90B,EAAMC,OAAO60B,QAAQ,IAADh6B,OAAKzB,EAAAA,QAAUi2B,MAAMyF,aAAav7B,SAAW,CACzFO,EAAAA,MAAMC,IAAI,oEAAqE,KAAM,GACrFigB,EAAK7P,aAAa4qB,MAAM37B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QAGvD,IAAM07B,EAAiB77B,EAAAA,QAAUi2B,MAAME,QAAQh2B,OAC/CO,EAAAA,MAAMC,IAAI,sDAADc,OAAuDo6B,EAAc,KAAK,KAAM,GACzFjb,EAAK7P,aAAa4qB,MAAME,GAExBzf,YAAW,WACPwE,EAAK9G,2BACT,GAAG,IACP,CAGInT,EAAMC,OAAO60B,SAAW90B,EAAMC,OAAO60B,QAAQ,IAADh6B,OAAKzB,EAAAA,QAAUi2B,MAAM6F,UAAU37B,WAC3EO,EAAAA,MAAMC,IAAI,gEAAiE,KAAM,GACjFigB,EAAK7P,aAAa4qB,MAAM37B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QACvDygB,EAAKlP,aAAagI,iBAAiBkH,EAAKmb,gBAEhD,IAGI98B,KAAK8R,cAAwE,mBAAjD9R,KAAK8R,aAAairB,4BAC9C/8B,KAAK8R,aAAairB,2BAA2Bh8B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QAAQ,WAEhF,IAAM87B,EAAcp4B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAMyF,aAAav7B,QACnE+7B,EAAWr4B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAM6F,UAAU37B,QAEnEO,EAAAA,MAAMC,IAAI,iEAADc,SAAoEw6B,EAAW,eAAAx6B,SAAgBy6B,GAAY,KAAM,GAGtHD,IACAA,EAAYE,QAAU,WAClBz7B,EAAAA,MAAMC,IAAI,iEAAkE,KAAM,GAClFigB,EAAK7P,aAAa4qB,MAAM37B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QAGvD,IAAM07B,EAAiB77B,EAAAA,QAAUi2B,MAAME,QAAQh2B,OAO/C,OANAO,EAAAA,MAAMC,IAAI,sDAADc,OAAuDo6B,EAAc,KAAK,KAAM,GACzFjb,EAAK7P,aAAa4qB,MAAME,GAExBzf,YAAW,WACPwE,EAAK9G,2BACT,GAAG,MACI,CACX,GAGAoiB,IACAA,EAASC,QAAU,WAIf,OAHAz7B,EAAAA,MAAMC,IAAI,6DAA8D,KAAM,GAC9EigB,EAAK7P,aAAa4qB,MAAM37B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QACvDygB,EAAKlP,aAAagI,iBAAiBkH,EAAKmb,iBACjC,CACX,EAER,GAER,GAEA,CAAAn7B,IAAA,wBAAAC,MAGA,WAAwB,IAAAohB,EAAA,KAEdoZ,EAAcx3B,SAASsc,eAAengB,EAAAA,QAAUm1B,MAAMmG,aAAan7B,QACzE,GAAKk7B,EAAL,CAMA,IAAMe,EAAuBv4B,SAASwM,cAAcrQ,EAAAA,QAAUm1B,MAAMkH,iBAAiBC,YACrF,GAAKF,EAAL,CAMA,IAAMG,EAAsB14B,SAASsc,eAAengB,EAAAA,QAAUm1B,MAAM0C,qBAAqB13B,QACnFq8B,EAAe34B,SAASsc,eAAengB,EAAAA,QAAUm1B,MAAM2C,mBAAmB33B,QAG1Es8B,EAAO54B,SAASkP,cAAc,QAQpC,GAPA0pB,EAAKr5B,GAAK,kBACVq5B,EAAKzpB,UAAYopB,EAAqBppB,UACtCypB,EAAKnpB,MAAMC,QAAU,OACrBkpB,EAAKnpB,MAAMopB,eAAiB,gBAC5BD,EAAKnpB,MAAMmW,MAAQ,OAGf2S,EAAqB3mB,WAAY,CAIjC,IAHA2mB,EAAqB3mB,WAAWigB,aAAa+G,EAAML,GAG5CA,EAAqB/Y,YACxBoZ,EAAKppB,YAAY+oB,EAAqB/Y,YAI1C,GAAIkZ,IAAwBE,EAAKnnB,SAASinB,GAAsB,CAC5D,IAAMI,EAAuB94B,SAASwM,cAAc,oCAChDssB,GACAF,EAAK/mB,aAAainB,EAAsBF,EAAKpZ,WAErD,CAEA3iB,EAAAA,MAAMC,IAAI,6DAA8D,KAAM,EAClF,CAGA87B,EAAK/1B,iBAAiB,UAAU,SAACC,GAC7BA,EAAMK,iBACNib,EAAK2a,mBACLl8B,EAAAA,MAAMC,IAAI,oCAAqC,KAAM,EACzD,IAGI67B,IACAA,EAAar4B,KAAO,SAGpBq4B,EAAa91B,iBAAiB,SAAS,SAACC,GACpCA,EAAMK,iBACNL,EAAMkzB,kBAINn5B,EAAAA,MAAMC,IAAI,gFAAiF,KAAM,EACrG,KAIJ06B,EAAY30B,iBAAiB,SAAS,SAACC,GACnCA,EAAMK,iBAEFq0B,EAAYoB,KACZpB,EAAYoB,KAAKnmB,cAAc,IAAIumB,MAAM,WAEzC5a,EAAK2a,mBAETl8B,EAAAA,MAAMC,IAAI,yCAA0C,KAAM,EAC9D,GAlEA,MAFID,EAAAA,MAAM6C,KAAK,wDAAyD,KAAM,EAL9E,MAFI7C,EAAAA,MAAM6C,KAAK,kDAAmD,KAAM,EA4E5E,GAEA,CAAA3C,IAAA,mBAAAC,MAGA,WAEI,IAAM+Y,EAAkB3a,KAAK0a,2BAE7B,GAAIC,EAAkB,EAClB3a,KAAK4a,kBAAkBD,OACpB,CAEH,IAAMvK,EAAepQ,KAAKE,WAAWma,kBAC/B/J,EAAYF,EAAaE,WAAa,GACtCC,EAAeH,EAAaG,cAAgB,GAI7CD,GAAcC,GAMf9O,EAAAA,MAAMC,IAAI,qEAAsE,KAAM,GACtF1B,KAAKyS,aAAagI,iBAAiBza,KAAK88B,kBALxCr7B,EAAAA,MAAMC,IAAI,0EAA2E,KAAM,GAC3F1B,KAAKyS,aAAagI,iBAAiB,aAM3C,CACJ,GAEA,CAAA9Y,IAAA,2BAAAC,MAIA,WACI,IAAMwqB,EAAiBpsB,KAAKE,WAAW+F,aAAa7F,OAAOoE,QAAO,SAAAwE,GAAC,OAAIA,EAAEzG,QAAQ,IAC3EmB,EAAa1D,KAAKE,WAAW+F,aAAavC,YAAc,CAAC,EAC/D,OAAO0oB,EAAehqB,OAASoG,OAAO8E,KAAK5J,GAAYtB,MAC3D,GAEA,CAAAT,IAAA,oBAAAC,MAIA,SAAkB+Y,GAAiB,IAAA4J,EAAA,KAEzBrT,EAAelR,KAAKE,WAAW4iB,YAAY5R,cAAgB,CAAC,EAG5DiD,EAAUuJ,EAAAA,sBAAsBmgB,sBAAsBljB,EAAiBzJ,GAG7ElR,KAAK8R,aAAa6lB,KAAK52B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QAGtDic,YAAW,WACPjH,EAAAA,SAASkiB,YAAYr3B,EAAAA,QAAUi2B,MAAM8G,QAAQ58B,OAAQiT,EAAS,UAAW,CACrEJ,UAAW,KAEftS,EAAAA,MAAMC,IAAI,yDAA0D,KAAM,EAC9E,GAAG,IAGHyb,YAAW,WACP,IAAM6f,EAAcp4B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAMyF,aAAav7B,QACnE+7B,EAAWr4B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAM6F,UAAU37B,QAGnE,GAAI87B,EAAa,CAEb,IAAMe,EAAiBf,EAAYxG,WAAU,GAC7CwG,EAAYxmB,WAAWigB,aAAasH,EAAgBf,GAGpDe,EAAet2B,iBAAiB,SAAS,WACrChG,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,GAG9D6iB,EAAKzS,aAAa4qB,MAAM37B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QAGvD,IAAM07B,EAAiB77B,EAAAA,QAAUi2B,MAAME,QAAQh2B,OAC/CO,EAAAA,MAAMC,IAAI,iDAADc,OAAkDo6B,EAAc,KAAK,KAAM,GACpFrY,EAAKzS,aAAa4qB,MAAME,GAGxBzf,YAAW,WACPoH,EAAK1J,2BACT,GAAG,IACP,GACJ,CAGA,GAAIoiB,EAAU,CAEV,IAAMe,EAAcf,EAASzG,WAAU,GACvCyG,EAASzmB,WAAWigB,aAAauH,EAAaf,GAG9Ce,EAAYv2B,iBAAiB,SAAS,WAClChG,EAAAA,MAAMC,IAAI,iDAAkD,KAAM,GAClE6iB,EAAKzS,aAAa4qB,MAAM37B,EAAAA,QAAUm1B,MAAMyG,eAAez7B,QACvDqjB,EAAK9R,aAAagI,iBAAiB8J,EAAKuY,eAC5C,GACJ,CACJ,GAAG,GACP,GAEA,CAAAn7B,IAAA,eAAAC,MAIA,WAAe,IAAAq8B,EACX,OAA4B,QAArBA,EAAAj+B,KAAKq4B,wBAAgB,IAAA4F,OAAA,EAArBA,EAAuBr8B,QAAS,UAC3C,GAEA,CAAAD,IAAA,4BAAAC,MAIA,WACIH,EAAAA,MAAMC,IAAI,uDAAwD,KAAM,GAGxE,IAI0BikB,EAJpBvlB,EAASJ,KAAKE,WAAW+F,aAAa7F,OACtCsD,EAAa1D,KAAKE,WAAW+F,aAAavC,YAAc,CAAC,EAE/DoiB,EAAAC,EACoB3lB,GAAM,IAA1B,IAAA0lB,EAAA5b,MAAAyb,EAAAG,EAAApd,KAAA4C,MAA4B,KAAjBhJ,EAAKqjB,EAAA/jB,MACZ,GAAIU,EAAMC,WAAamB,EAAWpB,EAAM6B,IAAK,CAEzC,IAAM+5B,EAAa99B,EAAO+9B,QAAQ77B,GAClC,GAAItC,KAAKE,WAAWuC,cAAe,CAE/BzC,KAAKE,WAAWuC,cAAcyF,gBAAgBg2B,GAG9C,IAAME,EAAex5B,SAASwM,cAAc,mBAAD5O,OAAoBF,EAAM6B,GAAE,OAMvE,OALIi6B,GACAC,EAAAA,gBAAgBC,mBAAmBF,EAAc,KAGrD38B,EAAAA,MAAMC,IAAI,mDAADc,OAAoDF,EAAM6B,IAAM,KAAM,IACxE,CACX,CACJ,CACJ,CAAC,OAAA8hB,GAAAH,EAAAzd,EAAA4d,EAAA,SAAAH,EAAA7b,GAAA,CAGD,OADAxI,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,IAC7D,CACX,GAEA,CAAAC,IAAA,yBAAAC,MAIA,WAAyB,IAAA28B,EAAA,KACrB98B,EAAAA,MAAMC,IAAI,2EAA4E,KAAM,GAG5FD,EAAAA,MAAMC,IAAI,kEAAmE1B,KAAK8Q,mBAAoB,GACtG,IAAM0tB,EAAsBx+B,KAAK8Q,mBAAmBnL,IAAI,kBAAmB,qBACrE84B,EAAyBz+B,KAAK8Q,mBAAmBnL,IAAI,yBAA0B,wCAG/Ew3B,EAAuBv4B,SAASwM,cAAcrQ,EAAAA,QAAUm1B,MAAMkH,iBAAiBC,YAErF,GAAKF,EAAL,CAMAA,EAAqBjpB,UAAY,GAGjC,IAAMwqB,EAAqB95B,SAASkP,cAAc,UAClD4qB,EAAmBv6B,GAAKpD,EAAAA,QAAUm1B,MAAMG,sBAAsBn1B,OAC9Dw9B,EAAmB3qB,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,QACtGw9B,EAAmB5U,MAAQ2U,EAG3B,IAAME,EAAmBzoB,EAAAA,SAASwgB,YAAY,WAAY,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQmoB,aAAaj7B,SACpGw9B,EAAmBxqB,UAAY,GAAH1R,OAAMm8B,EAAgB,KAAAn8B,OAAIg8B,GAGtD,IAAMI,EAAkBh6B,SAASkP,cAAc,OAC/C8qB,EAAgB7qB,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQsjB,wBAAwBp2B,OAAM,UAChH09B,EAAgBvqB,MAAMmW,MAAQ,OAG9B,IAAMqU,EAASj6B,SAASkP,cAAc,OACtC+qB,EAAOxqB,MAAMyqB,KAAO,IAEpBF,EAAgBxqB,YAAYyqB,GAC5BD,EAAgBxqB,YAAYsqB,GAC5BvB,EAAqB/oB,YAAYwqB,GAGjCF,EAAmBj3B,iBAAiB,SAAS,SAACC,GAC1CA,EAAMK,iBAGNw2B,EAAK9rB,aAAagI,iBAAiB,aAEnChZ,EAAAA,MAAMC,IAAI,mFAAoF,KAAM,EACxG,IAEAD,EAAAA,MAAMC,IAAI,wDAAyD,KAAM,EAtCzE,MAFID,EAAAA,MAAMiD,MAAM,6DAA8D,KAAM,EAyCxF,I,4FAAC,CAr1ByB,E,o+FCH9B,IAAIwa,EAAW,KAKFnN,EAAY,SAAAoN,GAiBrB,SAAApN,IAA0B,IAAAhO,E,MAAdwL,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAInB,O,4FAJoB3F,CAAA,KAAA4R,G,EACpB,K,MAAAA,IAAAhO,E,mEAGUqb,iBAAiBF,IAI3Bnb,EAAKwL,Q,+VAAOhK,CAAA,CACRqK,OAAO,EACPsB,aAAc,CAAC,GACZ3B,GAGPxL,EAAKg7B,OAAS,CAAC,EACfh7B,EAAKi7B,YAAc,KACnBj7B,EAAKsb,aAAc,EAEnB5d,EAAAA,MAAMC,IAAI,4BAA6B,KAAM,GAAGqC,GAb5Cya,EAAAza,EAcR,CAEA,O,qRAAA0b,CAAA1N,EAAAoN,G,EAAApN,E,EAAA,EAAApQ,IAAA,aAAAC,MAIA,WACI,IACI,GAAI5B,KAAKqf,YAEL,OADA5d,EAAAA,MAAMC,IAAI,oCAAqC,KAAM,IAC9C,EAGX,IAAMoP,EAAqBC,EAAAA,mBAAmBC,cA0D9C,OAvDAhR,KAAKi/B,YAAY,CACb96B,GAAIpD,EAAAA,QAAUi2B,MAAMkI,QAAQh+B,OAC5B4oB,MAAOhZ,EAAmBnL,IAAI,gBAC9Bw5B,UAAWp+B,EAAAA,QAAUi2B,MAAM8G,QAAQ58B,OACnCk+B,aAAcr+B,EAAAA,QAAUiT,QAAQqrB,UAAUn+B,OAC1Co+B,cAAe,CACX,CACIn7B,GAAIpD,EAAAA,QAAUi2B,MAAMyF,aAAav7B,OACjCq+B,KAAMzuB,EAAmBnL,IAAI,qBAC7B65B,MAAOz+B,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAS,IAAMH,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAAS,IAAMH,EAAAA,QAAUiT,QAAQyrB,aAAav+B,QAElI,CACIiD,GAAIpD,EAAAA,QAAUi2B,MAAM6F,UAAU37B,OAC9Bq+B,KAAMzuB,EAAmBnL,IAAI,eAC7B65B,MAAOz+B,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAS,IAAMH,EAAAA,QAAUiT,QAAQ4nB,eAAe16B,WAM5FlB,KAAKi/B,YAAY,CACb96B,GAAIpD,EAAAA,QAAUi2B,MAAME,QAAQh2B,OAC5B4oB,MAAO,aAAe/oB,EAAAA,QAAUi2B,MAAMC,iBAAiB/1B,OAAS,YAChEi+B,UAAWp+B,EAAAA,QAAUi2B,MAAMG,mBAAmBj2B,OAC9Ck+B,aAAcr+B,EAAAA,QAAUi2B,MAAM0I,gBAAgBx+B,OAC9Cy+B,YAAa5+B,EAAAA,QAAUi2B,MAAM4I,aAAa1+B,OAC1C2+B,WAAY,0BACZxjB,YAAY,IAIhBrc,KAAKi/B,YAAY,CACb96B,GAAIpD,EAAAA,QAAUm1B,MAAMyG,eAAez7B,OACnC4oB,MAAOhZ,EAAmBnL,IAAI,uBAC9Bw5B,UAAWp+B,EAAAA,QAAUi2B,MAAM8G,QAAQ58B,OACnCk+B,aAAcr+B,EAAAA,QAAUiT,QAAQqrB,UAAUn+B,OAC1Co+B,cAAe,CACX,CACIn7B,GAAIpD,EAAAA,QAAUi2B,MAAMyF,aAAav7B,OACjCq+B,KAAMzuB,EAAmBnL,IAAI,qBAC7B65B,MAAOz+B,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAS,IAAMH,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAAS,IAAMH,EAAAA,QAAUiT,QAAQyrB,aAAav+B,QAElI,CACIiD,GAAIpD,EAAAA,QAAUi2B,MAAM6F,UAAU37B,OAC9Bq+B,KAAMzuB,EAAmBnL,IAAI,eAC7B65B,MAAOz+B,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAS,IAAMH,EAAAA,QAAUiT,QAAQ4nB,eAAe16B,WAM5FlB,KAAK8/B,uBAEL9/B,KAAKqf,aAAc,EACnB5d,EAAAA,MAAMC,IAAI,mCAAoC,KAAM,IAC7C,CACX,CAAE,MAAOgD,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,0CAA2CA,EAAO,IACvD,CACX,CACJ,GAEA,CAAA/C,IAAA,cAAAC,MAeA,SAAY4N,GACR,IACI,IAAMuwB,EAAUvwB,EAAOrL,GAGvB,GAAIS,SAASsc,eAAe6e,GAExB,OADAt+B,EAAAA,MAAMC,IAAI,uBAADc,OAAwBu9B,EAAO,0BAA0B,KAAM,IACjE,EAIX,IAAMJ,EAAcnwB,EAAOmwB,aAAe5+B,EAAAA,QAAUi2B,MAAMgJ,OAAO9+B,OAG7D++B,EAAY,8BAAHz9B,OACEu9B,EAAO,aAAAv9B,OAAYzB,EAAAA,QAAUi2B,MAAMzkB,UAAUrR,QAAMsB,OAAwBgN,EAAOqwB,WAAa,IAAMrwB,EAAOqwB,WAAa,GAAE,4BAsG1I,GAnGIrwB,EAAO0wB,MACP13B,OAAOkpB,QAAQliB,EAAO0wB,MAAM79B,SAAQ,SAAAsvB,GAAkB,IAAAC,EAAAC,EAAAF,EAAA,GAAhBhwB,EAAGiwB,EAAA,GAAEhwB,EAAKgwB,EAAA,GAC5CqO,GAAa,IAAJz9B,OAAQb,EAAG,MAAAa,OAAKZ,EAAK,IAClC,IAGJq+B,GAAa,sCAAJz9B,OACazB,EAAAA,QAAUi2B,MAAMmJ,QAAQj/B,OAAM,4CAAAsB,OAC1Bm9B,EAAW,+CAAAn9B,OACRzB,EAAAA,QAAUi2B,MAAMoJ,MAAMl/B,OAAM,MAAAsB,OAAKgN,EAAOsa,MAAK,sDAAAtnB,OACzCzB,EAAAA,QAAUi2B,MAAMqJ,MAAMn/B,OAAM,sDAIzDsO,EAAO2vB,UACPc,GAAa,YAAJz9B,OAAgBgN,EAAO2vB,UAAS,aAAA38B,OAAYgN,EAAO4vB,cAAgB,GAAE,YAE9Ea,GAAa,eAAJz9B,OAAmBgN,EAAO4vB,cAAgB,GAAE,YAIrD5vB,EAAO8vB,eAAiB9vB,EAAO8vB,cAAcl9B,OAAS,IACtD69B,GAAa,eAAJz9B,OAAmBzB,EAAAA,QAAUi2B,MAAMsJ,OAAOp/B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQsjB,wBAAwBp2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQqrB,UAAUn+B,OAAM,MACpLsO,EAAO8vB,cAAcj9B,SAAQ,SAAAsoB,GAEzB,IAAM4V,EAAgB5V,aAAM,EAANA,EAAM,MAAQrN,MAAM,KAAKY,SAASnd,EAAAA,QAAUi2B,MAAMqJ,MAAMn/B,QAG1Es/B,EAAW,gBAEf,GAAI7V,EAAM,MAAQ,CACd,IAAM8V,EAAa9V,EAAM,MAAOrN,MAAM,KAGlCmjB,EAAWC,MAAK,SAAAnjB,GAAG,OAAIA,EAAIW,SAAS,UAAU,KAEvCuiB,EAAWC,MAAK,SAAAnjB,GAAG,OAAIA,EAAIW,SAAS,UAAU,IADrDsiB,EAAW,eAGJC,EAAWC,MAAK,SAAAnjB,GAAG,OAAIA,EAAIW,SAAS,SAAS,IACpDsiB,EAAW,uBACJC,EAAWC,MAAK,SAAAnjB,GAAG,OAAIA,EAAIW,SAAS,UAAU,IACrDsiB,EAAW,qBACJC,EAAWC,MAAK,SAAAnjB,GAAG,OAAIA,EAAIW,SAAS,OAAO,MAClDsiB,EAAW,cAEnB,CAGI7V,EAAOxmB,KACHwmB,EAAOxmB,GAAGga,cAAcD,SAAS,QACjCsiB,EAAW,OACJ7V,EAAOxmB,KAAOpD,EAAAA,QAAUi2B,MAAMyF,aAAav7B,OAClDs/B,EAAW,gBACJ7V,EAAOxmB,KAAOpD,EAAAA,QAAUi2B,MAAM6F,UAAU37B,SAC/Cs/B,EAAW,uBAKnB,IAAIzE,EAAW,GACVwE,IACDxE,EAAW7lB,EAAAA,SAASwgB,YAAY8J,EAAU,CAAE7c,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,UAGxF++B,GAAa,eAAJz9B,OAAmBmoB,EAAOxmB,GAAE,aAAA3B,OAAYmoB,EAAM,OAAU5pB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAS,IAAMH,EAAAA,QAAUiT,QAAQ2V,iBAAiBzoB,OAAM,KAG9IypB,EAAOwH,MACP3pB,OAAOkpB,QAAQ/G,EAAOwH,MAAM9vB,SAAQ,SAAAyvB,GAAkB,IAAAC,EAAAF,EAAAC,EAAA,GAAhBnwB,EAAGowB,EAAA,GAAEnwB,EAAKmwB,EAAA,GAC5CkO,GAAa,SAAJz9B,OAAab,EAAG,MAAAa,OAAKZ,EAAK,IACvC,IAIA2+B,IAAkB5V,EAAO4U,KAEzBU,GAAa,aAGbA,GAAa,IAAJz9B,OAAQu5B,EAAQ,UAAAv5B,OAASmoB,EAAO4U,MAAQ,GAAE,mBAE3D,IACAU,GAAa,UAIjBA,GAAa,qEAKbjgC,KAAK2gC,cAAcZ,EAASE,GAC5BjgC,KAAK++B,OAAOgB,GAAW,CACnB3iB,QAASxY,SAASsc,eAAe6e,GACjCa,QAAQ,EACRpxB,OAAQA,GAIRA,EAAO6M,WAAY,CACnB,IAAMwkB,EAAej8B,SAASsc,eAAe6e,GACzCc,GACA7gC,KAAK8gC,kBAAkBD,EAE/B,CAGA,GAAIrxB,EAAOuxB,OAAQ,CACf,IAAMF,EAAej8B,SAASsc,eAAe6e,GAE7Cv3B,OAAOkpB,QAAQliB,EAAOuxB,QAAQ1+B,SAAQ,SAAA4vB,GAAwB,IAAAC,EAAAL,EAAAI,EAAA,GAAtBlP,EAAQmP,EAAA,GAAE6O,EAAM7O,EAAA,IAInC,UAAbnP,EACW,CAAC8d,GACQ,UAAb9d,EACInH,MAAMC,KAAKglB,EAAah8B,iBAAiB9D,EAAAA,QAAUi2B,MAAMqJ,QAGzDzkB,MAAMC,KAAKglB,EAAah8B,iBAAiBke,KAI/C1gB,SAAQ,SAAA+a,GACTA,GACA5U,OAAOkpB,QAAQqP,GAAQ1+B,SAAQ,SAAA2+B,GAA0B,IAAAC,EAAApP,EAAAmP,EAAA,GAAxBE,EAASD,EAAA,GAAEE,EAAOF,EAAA,GAC/C7jB,EAAQ3V,iBAAiBy5B,EAAWC,GACpC1/B,EAAAA,MAAMC,IAAI,0BAADc,OAA2B0+B,EAAS,cAAA1+B,OAAaugB,EAAQ,cAAAvgB,OAAau9B,GAAW,KAAM,EACpG,GAER,GACJ,GACJ,CAGA,OADAt+B,EAAAA,MAAMC,IAAI,iCAADc,OAAkCu9B,GAAW,KAAM,IACrD,CACX,CAAE,MAAOr7B,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,wCAADlC,OAAyCgN,EAAOrL,IAAMO,EAAO,IACjE,CACX,CACJ,GAEA,CAAA/C,IAAA,wBAAAC,MAMA,SAAsB+oB,GAIlB,IAAMyW,EAAazW,EAAO4U,KAAKphB,cAE/B,GAAIijB,EAAWljB,SAAS,YAAa,MAAO,gBAC5C,GAAIkjB,EAAWljB,SAAS,SAAU,MAAO,QACzC,GAAIkjB,EAAWljB,SAAS,UAAYkjB,EAAWljB,SAAS,UAAW,MAAO,qBAC1E,GAAIkjB,EAAWljB,SAAS,YAAckjB,EAAWljB,SAAS,MAAO,MAAO,eACxE,GAAIkjB,EAAWljB,SAAS,QAAS,MAAO,OACxC,GAAIkjB,EAAWljB,SAAS,YAAa,MAAO,OAC5C,GAAIkjB,EAAWljB,SAAS,UAAW,MAAO,mBAC1C,GAAIkjB,EAAWljB,SAAS,QAAS,MAAO,eACxC,GAAIkjB,EAAWljB,SAAS,UAAW,MAAO,uBAC1C,GAAIkjB,EAAWljB,SAAS,QAAS,MAAO,MAGxC,GAAIyM,EAAM,MAAQ,CACd,IAAMsR,EAActR,EAAM,MAAOxM,cAEjC,GAAI8d,EAAY/d,SAAS,WAAY,MAAO,QAC5C,GAAI+d,EAAY/d,SAAS,aAAc,MAAO,gBAC9C,GAAI+d,EAAY/d,SAAS,WAAY,MAAO,eAC5C,GAAI+d,EAAY/d,SAAS,UAAW,MAAO,uBAC3C,GAAI+d,EAAY/d,SAAS,WAAY,MAAO,qBAC5C,GAAI+d,EAAY/d,SAAS,QAAS,MAAO,aAC7C,CAGA,MAAO,eACX,GAEA,CAAAvc,IAAA,gBAAAC,MAMA,SAAcm+B,EAAS7Z,GAGnB,IADYthB,SAASsc,eAAe6e,GACxB,CAER,IAAMsB,EAAgBz8B,SAASkP,cAAc,OAC7CutB,EAAcntB,UAAYgS,EAC1BthB,SAASwtB,KAAKhe,YAAYitB,EAAcC,kBAC5C,CAGA,IAAIC,EAAW38B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAMwK,SAAStgC,QAC3DqgC,KACDA,EAAW38B,SAASkP,cAAc,QACzB3P,GAAKpD,EAAAA,QAAUi2B,MAAMwK,SAAStgC,OACvCqgC,EAASltB,MAAMC,QAAU,OACzB1P,SAASwtB,KAAKhe,YAAYmtB,GAElC,GAEA,CAAA5/B,IAAA,uBAAAC,MAIA,WAAuB,IAAA+f,EAAA,KAEnB/c,SAAS6C,iBAAiB,SAAS,SAACC,GAEhC,GAAIA,EAAMC,OAAO85B,QAAQ1gC,EAAAA,QAAUi2B,MAAMqJ,OAAQ,CAC7C,IAAMqB,EAAQh6B,EAAMC,OAAO60B,QAAQz7B,EAAAA,QAAUi2B,MAAMzkB,WAC/CmvB,SAAAA,EAAOv9B,IACPwd,EAAK+a,MAAMgF,EAAMv9B,GAEzB,CACJ,IAGA,IAAMo9B,EAAW38B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAMwK,SAAStgC,QAC9DqgC,GACAA,EAAS95B,iBAAiB,SAAS,WAC3Bka,EAAKqd,aACLrd,EAAK+a,MAAM/a,EAAKqd,YAExB,IAIJp6B,SAAS6C,iBAAiB,WAAW,SAACC,GAChB,WAAdA,EAAM/F,KAAoBggB,EAAKqd,aAC/Brd,EAAK+a,MAAM/a,EAAKqd,YAExB,GACJ,GAEA,CAAAr9B,IAAA,WAAAC,MAMA,SAASm+B,GAAuB,IAAdxwB,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzB,IACI,IAAMsX,EAAUxY,SAASsc,eAAe6e,GACxC,OAAK3iB,GAKLpd,KAAK++B,OAAOgB,GAAW,CACnB3iB,QAASA,EACTwjB,QAAQ,EACRrxB,QAASA,GAGb9N,EAAAA,MAAMC,IAAI,oCAADc,OAAqCu9B,GAAW,KAAM,IACxD,IAXHt+B,EAAAA,MAAM6C,KAAK,gDAAD9B,OAAiDu9B,GAAW,KAAM,IACrE,EAWf,CAAE,MAAOr7B,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,2CAADlC,OAA4Cu9B,GAAWr7B,EAAO,IAClE,CACX,CACJ,GAEA,CAAA/C,IAAA,6BAAAC,MAMA,SAA2Bm+B,EAAS4B,GAChC,IAeI,OAdK3hC,KAAK++B,OAAOgB,KACb//B,KAAK++B,OAAOgB,GAAW,CACnB3iB,QAASxY,SAASsc,eAAe6e,GACjCa,QAAQ,EACRpxB,OAAQ,CAAC,IAIZxP,KAAK++B,OAAOgB,GAAS6B,sBACtB5hC,KAAK++B,OAAOgB,GAAS6B,oBAAsB,IAG/C5hC,KAAK++B,OAAOgB,GAAS6B,oBAAoBp1B,KAAKm1B,GAC9ClgC,EAAAA,MAAMC,IAAI,2DAADc,OAA4Du9B,GAAW,KAAM,IAC/E,CACX,CAAE,MAAOr7B,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,kEAADlC,OAAmEu9B,GAAWr7B,EAAO,IACzF,CACX,CACJ,GAEA,CAAA/C,IAAA,OAAAC,MAKA,SAAKm+B,GACD,IACI,IAAM2B,EAAQ1hC,KAAK++B,OAAOgB,GAC1B,IAAK2B,EAAO,CACRjgC,EAAAA,MAAM6C,KAAK,mCAAD9B,OAAoCu9B,EAAO,qBAAqB,KAAM,GAGhF,IAAM3iB,EAAUxY,SAASsc,eAAe6e,GACxC,QAAI3iB,IACA3b,EAAAA,MAAMC,IAAI,kDAADc,OAAmDu9B,EAAO,qBAAqB,KAAM,GAC9F//B,KAAK6hC,SAAS9B,EAAS,CAAE3iB,QAAAA,IACzBpd,KAAK8hC,WAAW/B,IACT,EAIf,CAeA,OAZI2B,EAAME,qBAAuBF,EAAME,oBAAoBx/B,OAAS,IAChEX,EAAAA,MAAMC,IAAI,2BAADc,OAA4Bk/B,EAAME,oBAAoBx/B,OAAM,qCAAAI,OAAoCu9B,GAAW,KAAM,GAC1H2B,EAAME,oBAAoBv/B,SAAQ,SAAAs/B,GAC9B,IACIA,GACJ,CAAE,MAAO1b,GACLxkB,EAAAA,MAAMiD,MAAM,yDAADlC,OAA0Du9B,GAAW9Z,EAAK,EACzF,CACJ,KAGJjmB,KAAK8hC,WAAW/B,IACT,CACX,CAAE,MAAOr7B,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,qCAADlC,OAAsCu9B,EAAO,KAAKr7B,EAAO,IAC7D,CACX,CACJ,GAEA,CAAA/C,IAAA,aAAAC,MAKA,SAAWm+B,GACP,IAAM2B,EAAQ1hC,KAAK++B,OAAOgB,GAC1B,GAAK2B,EAAL,CAMA1hC,KAAKg/B,YAAce,EAGnB,IAAMwB,EAAW38B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAMwK,SAAStgC,QAC9DqgC,IACAA,EAASltB,MAAMC,QAAU,QACzB6I,YAAW,WACPokB,EAASltB,MAAMiX,QAAU,GAC7B,GAAG,KAKPoW,EAAMtkB,QAAQ/I,MAAMC,QAAU,QAC9BotB,EAAMtkB,QAAQ/I,MAAMiX,QAAU,IAG9B7pB,EAAAA,MAAMC,IAAI,+BAADc,OAAgCu9B,EAAO,qBAAqB,CACjEc,aAAca,EAAMtkB,QAAQjZ,GAC5B49B,cAAeL,EAAMtkB,QAAQ/I,MAAMC,SACpC,GAGH6I,YAAW,WACPukB,EAAMtkB,QAAQ/I,MAAMiX,QAAU,IAC9B7pB,EAAAA,MAAMC,IAAI,iCAADc,OAAkCu9B,GAAW,KAAM,EAChE,GAAG,IAEH2B,EAAMd,QAAS,EAGXb,IAAYh/B,EAAAA,QAAUi2B,MAAME,QAAQh2B,QACpClB,KAAK8gC,kBAAkBY,EAAMtkB,SAIjCxY,SAASwtB,KAAK/d,MAAM2tB,SAAW,QAvC/B,MAFIvgC,EAAAA,MAAM6C,KAAK,uBAAD9B,OAAwBu9B,EAAO,cAAc,KAAM,EA0CrE,GAEA,CAAAp+B,IAAA,aAAAC,MAKA,SAAWm+B,GAAS,IAAA/c,EAAA,KACV0e,EAAQ1hC,KAAK++B,OAAOgB,GACrB2B,IAGLA,EAAMtkB,QAAQ/I,MAAMiX,QAAU,IAG9BnO,YAAW,WAKP,GAJAukB,EAAMtkB,QAAQ/I,MAAMC,QAAU,OAC9BotB,EAAMd,QAAS,EAGX5d,EAAKgc,cAAgBe,EAAS,CAC9B,IAAMwB,EAAW38B,SAASsc,eAAengB,EAAAA,QAAUi2B,MAAMwK,SAAStgC,QAC9DqgC,IACAA,EAASltB,MAAMiX,QAAU,IAGzBnO,YAAW,WACPokB,EAASltB,MAAMC,QAAU,MAC7B,GAAG,MAIP1P,SAASwtB,KAAK/d,MAAM2tB,SAAW,GAC/Bhf,EAAKgc,YAAc,IACvB,CACJ,GAAG,KACP,GAEA,CAAAr9B,IAAA,QAAAC,MAKA,SAAMm+B,GACF,IACI,OAAK//B,KAAK++B,OAAOgB,IAKjB//B,KAAKiiC,WAAWlC,GAEhBt+B,EAAAA,MAAMC,IAAI,gCAADc,OAAiCu9B,GAAW,KAAM,IACpD,IAPHt+B,EAAAA,MAAM6C,KAAK,mCAAD9B,OAAoCu9B,GAAW,KAAM,IACxD,EAOf,CAAE,MAAOr7B,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,uCAADlC,OAAwCu9B,GAAWr7B,EAAO,IAC9D,CACX,CACJ,GAEA,CAAA/C,IAAA,aAAAC,MAOA,SAAWm+B,EAASxc,GAAiC,IAAxB2e,EAAep8B,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC3C,IACIrE,EAAAA,MAAMC,IAAI,2CAADc,OAA4Cu9B,GAAW,CAC5DoC,YAAWn3B,EAASuY,GACpB0Q,cAAkC,iBAAZ1Q,EAAuBA,EAAQnhB,OAAS,UAC9DggC,eAAmC,iBAAZ7e,EAAuBA,EAAQkL,UAAU,EAAG,KAAO,MAAQ,iBAClF4T,eAAgBH,GACjB,GAEH,IAOI/wB,EACiBmxB,EARfZ,EAAQ1hC,KAAK++B,OAAOgB,GAC1B,IAAK2B,EAED,OADAjgC,EAAAA,MAAMiD,MAAM,mCAADlC,OAAoCu9B,GAAW,KAAM,IACzD,EAKX,GAAImC,EACAzgC,EAAAA,MAAMC,IAAI,8DAADc,OAA+D0/B,GAAmB,KAAM,GAE5FA,EAAgB1kB,WAAW,MAAS0kB,EAAgB1kB,WAAW,OAChErM,EAAYvM,SAASsc,eAAeghB,GACpCzgC,EAAAA,MAAMC,IAAI,4CAADc,OAA6C0/B,EAAe,aAAA1/B,SAAc2O,GAAa,KAAM,IAIrGA,IACDA,EAAYvM,SAASwM,cAAc8wB,GACnCzgC,EAAAA,MAAMC,IAAI,2CAADc,OAA4C0/B,EAAe,aAAA1/B,SAAc2O,GAAa,KAAM,IAIzG1P,EAAAA,MAAMC,IAAI,yCAA0C,CAChD6gC,QAASpxB,EACThN,IAAa,QAATm+B,EAAAnxB,SAAS,IAAAmxB,OAAA,EAATA,EAAWn+B,KAAM,OACrBiS,UAAWjF,EAAYyK,MAAMC,KAAK1K,EAAUiF,WAAa,IAC1D,QAQH,GANAjF,EAAYuwB,EAAMtkB,QAAQhM,cAAcrQ,EAAAA,QAAUi2B,MAAMmJ,SACxD1+B,EAAAA,MAAMC,IAAI,iDAAkD,CACxD6gC,QAASpxB,EACT4R,SAAUhiB,EAAAA,QAAUi2B,MAAMmJ,SAC3B,IAEEhvB,EAED,OADA1P,EAAAA,MAAMiD,MAAM,+CAADlC,OAAgDu9B,GAAW,KAAM,IACrE,EAIf,IAAK5uB,EAED,OADA1P,EAAAA,MAAMiD,MAAM,iEAADlC,OAAkE0/B,GAAmB,KAAM,IAC/F,EAIX,GAAuB,iBAAZ3e,EAAsB,CAC7B9hB,EAAAA,MAAMC,IAAI,gDAADc,OAAiDu9B,GAAW,CACjE9L,cAAe1Q,EAAQnhB,OACvBogC,YAAajf,EAAQrF,SAAS,QAC9B/M,UAAWA,EAAUhN,IAAMgN,EAAU4C,WACtC,GAEH5C,EAAU+C,UAAYqP,EAGtB,IAAMkf,EAAiBtxB,EAAUtM,iBAAiB,OAAOzC,OAAS,EAClEX,EAAAA,MAAMC,IAAI,0CAA2C,CACjD+gC,eAAAA,EACAvuB,UAAW/C,EAAU+C,UAAUua,UAAU,EAAG,KAAO,OACpD,GAEClL,EAAQrF,SAAS,UAAYukB,GAC7BhhC,EAAAA,MAAM6C,KAAK,mFAAoF,CAC3Fo+B,gBAAiBvxB,EAAU+C,UAAU9R,QACtC,EAEX,KAAO,MAAImhB,aAAmBof,SAS1B,OADAlhC,EAAAA,MAAMiD,MAAM,wCAADlC,OAAAwI,EAAgDuY,IAAW,KAAM,IACrE,EARP9hB,EAAAA,MAAMC,IAAI,mDAADc,OAAoDu9B,GAAW,CACpE6C,YAAarf,EAAQ3b,QACrBi7B,UAAWtf,EAAQpf,IAAM,QAC1B,GACHgN,EAAU+C,UAAY,GACtB/C,EAAUiD,YAAYmP,EAI1B,CAGA,OADA9hB,EAAAA,MAAMC,IAAI,yCAADc,OAA0Cu9B,GAAW,KAAM,IAC7D,CACX,CAAE,MAAOr7B,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,yCAADlC,OAA0Cu9B,GAAWr7B,EAAO,IAChE,CACX,CACJ,GAEA,CAAA/C,IAAA,oBAAAC,MAKA,SAAkBi/B,GACd,IACI,IAAKA,EAED,OADAp/B,EAAAA,MAAM6C,KAAK,0DAA2D,KAAM,IACrE,EAIXu8B,EAAazqB,UAAUqH,IAAI1c,EAAAA,QAAUi2B,MAAM8L,WAAW5hC,QAGtD,IAAM6hC,EAAelC,EAAazvB,cAAcrQ,EAAAA,QAAUi2B,MAAMgJ,QAC5Da,EAAazvB,cAAcrQ,EAAAA,QAAUi2B,MAAMgJ,QAAQgD,aAAe,EAEhEzf,EAAUsd,EAAazvB,cAAcrQ,EAAAA,QAAUi2B,MAAMmJ,SAM3D,OALI5c,IACAA,EAAQlP,MAAM8V,OAAS,eAAH3nB,OAAkBugC,EAAY,QAGtDthC,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,IACvD,CACX,CAAE,MAAOgD,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,8CAA+CA,EAAO,IAC3D,CACX,CACJ,GAEA,CAAA/C,IAAA,kBAAAC,MAKA,SAAgBqhC,GAAU,IAAA1e,EAAA,KAChBwb,EAAUh/B,EAAAA,QAAUi2B,MAAMkM,UAAUhiC,OAEpC4P,EAAqBC,EAAAA,mBAAmBC,cAGzChR,KAAK++B,OAAOgB,IACb//B,KAAKi/B,YAAY,CACb96B,GAAI47B,EACJjW,MAAOhZ,EAAmBnL,IAAI,YAC9Bw5B,UAAWp+B,EAAAA,QAAUi2B,MAAMmM,aAAajiC,OACxC2+B,WAAY9+B,EAAAA,QAAUi2B,MAAMoM,aAAaliC,OACzCy+B,YAAa5+B,EAAAA,QAAUi2B,MAAM4I,aAAa1+B,OAC1Co+B,cAAe,CACX,CACIE,MAAA,GAAAh9B,OAAUzB,EAAAA,QAAUi2B,MAAMqJ,MAAMn/B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ2V,iBAAiBzoB,YAOhI,IAAMmiC,EAAWrjC,KAAKsjC,YAAYL,GAC5B1f,EAAU,6BAAH/gB,OACKzB,EAAAA,QAAUwiC,KAAKvM,MAAMwM,OAAOtiC,OAAM,kCAAAsB,OAChCzB,EAAAA,QAAUwiC,KAAKvM,MAAMyM,aAAaviC,OAAM,MAAAsB,OAAKsO,EAAmBnL,IAAI,oBAAmB,sCAAAnD,OACrFzB,EAAAA,QAAUwiC,KAAKvM,MAAM0M,SAASxiC,OAAM,0CAAAsB,OAC9BzB,EAAAA,QAAUwiC,KAAKvM,MAAM2M,cAAcziC,OAAM,aAAAsB,OAAYzB,EAAAA,QAAUwiC,KAAKvM,MAAM2M,cAAcziC,OAAM,MAAAsB,OAAK6gC,EAAQ,qEAAA7gC,OAEjHzB,EAAAA,QAAUwiC,KAAKvM,MAAM4M,QAAQ1iC,OAAM,wCAAAsB,OAC/BzB,EAAAA,QAAUwiC,KAAKvM,MAAMvN,OAAOvoB,OAAM,aAAAsB,OAAYzB,EAAAA,QAAUwiC,KAAKvM,MAAMvN,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAAM,gCAAAsB,OACtK0T,EAAAA,SAASwgB,YAAY,OAAQ,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAAS,oCAAAsB,OAC1EsO,EAAmBnL,IAAI,mBAAkB,gGAuEjE,OAhEA3F,KAAK+2B,WAAWgJ,EAASxc,EAASxiB,EAAAA,QAAUi2B,MAAMmM,aAAajiC,QAG/Dic,YAAW,WACP,IAAM0mB,EAAWj/B,SAASsc,eAAengB,EAAAA,QAAUwiC,KAAKvM,MAAM2M,cAAcziC,QACtE4iC,EAAUl/B,SAASsc,eAAengB,EAAAA,QAAUwiC,KAAKvM,MAAMvN,OAAOvoB,QAEhE2iC,IAEAA,EAASp8B,iBAAiB,SAAS,WAC/BzH,KAAK+jC,QACT,IAGAF,EAASE,UAGTD,GAAWD,GACXC,EAAQr8B,iBAAiB,QAAS,WAAW,IAAA82B,EAAA,KAEzCsF,EAASE,SAET,IAAI,IAAAC,EAIuB,QAAvBA,EAAIC,UAAUC,iBAAS,IAAAF,GAAnBA,EAAqBG,UACrBF,UAAUC,UAAUC,UAAUN,EAASjiC,OAClCuJ,MAAK,WACFozB,EAAK6F,iBAAiBN,GACtBriC,EAAAA,MAAMC,IAAI,wDAAyD,KAAM,EAC7E,IAAE,OACK,SAAA2iC,GAGOz/B,SAAS0/B,YAAY,SAE3B/F,EAAK6F,iBAAiBN,GACtBriC,EAAAA,MAAMC,IAAI,+DAAgE,KAAM,KAEhF68B,EAAKgG,iBAAiBT,GACtBriC,EAAAA,MAAM6C,KAAK,sDAAuD,KAAM,GAEhF,IAIMM,SAAS0/B,YAAY,SAE3BtkC,KAAKokC,iBAAiBN,GACtBriC,EAAAA,MAAMC,IAAI,sDAAuD,KAAM,KAEvE1B,KAAKukC,iBAAiBT,GACtBriC,EAAAA,MAAM6C,KAAK,6CAA8C,KAAM,GAG3E,CAAE,MAAO2hB,GACLjmB,KAAKukC,iBAAiBT,GACtBriC,EAAAA,MAAMiD,MAAM,4CAA6CuhB,EAAK,EAClE,CACJ,EAAEjH,KAAKuF,GAEf,GAAG,KAEIwb,CACX,GAEA,CAAAp+B,IAAA,mBAAAC,MAKA,SAAiB+oB,GACb,IAAM7Z,EAAqBC,EAAAA,mBAAmBC,cAC9C2Z,EAAOzW,UAAYgC,EAAAA,SAASwgB,YAAY,eAAgB,CAAE/S,QAAS,qBAAuB5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAAS,SAAAsB,OACrHsO,EAAmBnL,IAAI,UAAS,WAC7CglB,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,QACzDypB,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQsoB,eAAep7B,QAEtDic,YAAW,WACPwN,EAAOzW,UAAYgC,EAAAA,SAASwgB,YAAY,OAAQ,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAAS,SAAAsB,OACtFsO,EAAmBnL,IAAI,mBAAkB,WACtDglB,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUiT,QAAQsoB,eAAep7B,QACzDypB,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAC1D,GAAG,IACP,GAEA,CAAAS,IAAA,mBAAAC,MAKA,SAAiB+oB,GACb,IAAM7Z,EAAqBC,EAAAA,mBAAmBC,cAC9C2Z,EAAOzW,UAAYgC,EAAAA,SAASwgB,YAAY,uBAAwB,CAAE/S,QAAS,oBAAsB5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAAS,SAAAsB,OAC5HsO,EAAmBnL,IAAI,cAAa,WACjDglB,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,QACzDypB,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQuoB,cAAcr7B,QAErDic,YAAW,WACPwN,EAAOzW,UAAYgC,EAAAA,SAASwgB,YAAY,OAAQ,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAAS,SAAAsB,OACtFsO,EAAmBnL,IAAI,YAAW,WAC/CglB,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUiT,QAAQuoB,cAAcr7B,QACxDypB,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAC1D,GAAG,IACP,GAEA,CAAAS,IAAA,cAAAC,MAMA,SAAYskB,GACR,OAAKA,EAEEA,EACFlJ,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAPD,EAQtB,GAEA,CAAArb,IAAA,qBAAAC,MAOA,SAAmB4N,EAAQ+T,GAAiC,IAAxB2e,EAAep8B,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAClD,IAiBI,OAfK0J,EAAOrL,KACRqL,EAAOrL,GAAK,sBAAwBgT,KAAKnV,OAI7ChC,KAAKi/B,YAAYzvB,GAGb+T,GACAvjB,KAAK+2B,WAAWvnB,EAAOrL,GAAIof,EAAS2e,GAAmB1yB,EAAO2vB,WAIlEn/B,KAAK23B,KAAKnoB,EAAOrL,IAEVqL,EAAOrL,EAClB,CAAE,MAAOO,GAEL,OADAjD,EAAAA,MAAMiD,MAAM,iDAAkDA,EAAO,GAC9D,IACX,CACJ,GAEA,CAAA/C,IAAA,0BAAAC,MAWA,SAAwB2N,GAAS,IAAAi1B,EAAA,KACvBzE,EAAU,2BAA6B5oB,KAAKnV,MA8ClD,OA3CAhC,KAAKi/B,YAAY,CACb96B,GAAI47B,EACJjW,MAAOva,EAAQua,OAAS,eACxBqV,UAAW,kCACXC,aAAcr+B,EAAAA,QAAUiT,QAAQqrB,UAAUn+B,OAC1Co+B,cAAe,CACX,CACIn7B,GAAI,GAAF3B,OAAKu9B,EAAO,eACdR,KAAMhwB,EAAQk1B,YAAc,SAC5BjF,MAAA,GAAAh9B,OAAUzB,EAAAA,QAAUi2B,MAAMqJ,MAAMn/B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ2V,iBAAiBzoB,OAAM,UAE1H,CACIiD,GAAI,GAAF3B,OAAKu9B,EAAO,gBACdR,KAAMhwB,EAAQm1B,aAAe,UAC7BlF,MAAA,GAAAh9B,OAAUzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,UAGtF6/B,OAAM4D,EAAAA,EAAA,OAAAniC,OACGu9B,EAAO,gBAAiB,CACzB6E,MAAO,WAC8B,mBAAtBr1B,EAAQs1B,WACft1B,EAAQs1B,YAEZL,EAAK9H,MAAMqD,EACf,IACH,IAAAv9B,OACIu9B,EAAO,eAAgB,CACxB6E,MAAO,WAC6B,mBAArBr1B,EAAQu1B,UACfv1B,EAAQu1B,WAEZN,EAAK9H,MAAMqD,EACf,MAMZ//B,KAAK+2B,WAAWgJ,EAAS,MAAFv9B,OAAQ+M,EAAQ4E,SAAW,GAAE,QAAQ,mCAG5DnU,KAAK23B,KAAKoI,GAEHA,CACX,GAEA,CAAAp+B,IAAA,mBAAAC,MAUA,SAAiB2N,GAAS,IAAAw1B,EAAA,KAChBhF,EAAU,GAAHv9B,OAAMzB,EAAAA,QAAUi2B,MAAMzkB,UAAUrR,OAAM,YAAAsB,OAAW2U,KAAKnV,OAG7DgjC,EAAaz1B,EAAQrK,KAAI,GAAA1C,OACxBzB,EAAAA,QAAUiT,QAAQixB,MAAK,KAAAziC,OAAIzB,EAAAA,QAAUiT,QAAQkxB,cAAY1iC,OAAG+M,EAAQrK,MAAI,GAAA1C,OACxEzB,EAAAA,QAAUiT,QAAQixB,MAAK,KAAAziC,OAAIzB,EAAAA,QAAUiT,QAAQmxB,YAGpDnlC,KAAKi/B,YAAY,CACb96B,GAAI47B,EACJjW,MAAOva,EAAQua,OAAS,QACxBqV,UAAW,GAAF38B,OAAKzB,EAAAA,QAAUi2B,MAAMzkB,UAAUrR,OAAM,mBAC9Ck+B,aAAcr+B,EAAAA,QAAUiT,QAAQqrB,UAAUn+B,OAC1Co+B,cAAe,CACX,CACIn7B,GAAI,GAAF3B,OAAKu9B,EAAO,WACdR,KAAMhwB,EAAQ6xB,YAAc,KAC5B5B,MAAA,GAAAh9B,OAAUzB,EAAAA,QAAUi2B,MAAMqJ,MAAMn/B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,UAGtH6/B,OAAM4D,EAAA,OAAAniC,OACGu9B,EAAO,WAAY,CACpB6E,MAAO,SAACv8B,GAC2B,mBAApBkH,EAAQ61B,SACf71B,EAAQ61B,QAAQ/8B,GAEpB08B,EAAKrI,MAAMqD,EACf,MAMZ,IAAMsF,EAAe,6BAAH7iC,OACAwiC,EAAU,6BAAAxiC,OAClB+M,EAAQ4E,SAAW,GAAE,kCAU/B,OALAnU,KAAK+2B,WAAWgJ,EAASsF,EAAc,GAAF7iC,OAAKzB,EAAAA,QAAUi2B,MAAMzkB,UAAUrR,OAAM,oBAG1ElB,KAAK23B,KAAKoI,GAEHA,CACX,GAEA,CAAAp+B,IAAA,UAAAC,MAGA,WACI,IAEQ5B,KAAKg/B,aACLh/B,KAAK08B,MAAM18B,KAAKg/B,aAIpBh/B,KAAK++B,OAAS,CAAC,EACf/+B,KAAKg/B,YAAc,KAEnBv9B,EAAAA,MAAMC,IAAI,0BAA2B,KAAM,EAC/C,CAAE,MAAOgD,GACLjD,EAAAA,MAAMiD,MAAM,qCAAsCA,EAAO,EAC7D,CACJ,I,EAAC,EAAA/C,IAAA,cAAAC,MA3iCD,WAII,OAHKsd,IACDA,EAAW,IAAInN,EAFGjM,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,IAInBoZ,CACX,I,4FAAC,CAXoB,CAAS2C,EAAAA,c,unDCL3B,IAAMtb,EAAiB,WAS1B,O,EALA,SAAAA,EAAY09B,I,4FAAW9jC,CAAA,KAAAoG,GACnBvG,KAAKikC,UAAYA,EACjBjkC,KAAKE,WAAa+jC,EAAU/jC,UAChC,E,EAEA,EAAAyB,IAAA,0BAAAC,MAIA,WAEI,IAAM0jC,EAAqB1pB,MAAMC,KAAKjX,SAASC,iBAAiB,4CAE7DL,QAAO,SAAAsX,GAAE,OAAIA,EAAG1F,UAAUC,SAAStV,EAAAA,QAAUomB,OAAOC,WAAWlmB,OAAO,IAEzE,GAAkC,IAA9BokC,EAAmBljC,OAEnB,OADAX,EAAAA,MAAMC,IAAI,kDAAmD,KAAM,GAC5D,CAAE6jC,mBAAoB,GAAIriB,MAAO,GAI5C,IAAMqiB,EAAkBjU,EAAO,IAAIzL,IAC/Byf,EAAmBxhB,KAAI,SAAAhI,GAAE,OAAIA,EAAG6E,aAAa,gBAAgB,MAKjE,OAFAlf,EAAAA,MAAMC,IAAI,4BAADc,OAA6B+iC,EAAmBnjC,OAAM,sBAAsB,KAAM,GAEpF,CAAEmjC,mBAAAA,EAAoBriB,MAAOqiB,EAAmBnjC,OAC3D,GAEA,CAAAT,IAAA,0BAAAC,MAGA,WACI,IAAA4jC,EAAsCxlC,KAAKylC,0BAAnCF,EAAkBC,EAAlBD,mBAER,GAAc,IAFmBC,EAALtiB,MAIxB,OADAzhB,EAAAA,MAAMC,IAAI,gDAAiD,KAAM,IAC1D,EAIX,IACMgkC,EADS1lC,KAAKE,WAAW+F,aAAa7F,OACRulC,WAAU,SAAArjC,GAAK,OAC/CijC,EAAmBrnB,SAASxP,OAAOpM,EAAM6B,IAAI,IAGjD,OAAIuhC,GAAwB,GACxBjkC,EAAAA,MAAMC,IAAI,oEAADc,OAAqEkjC,GAAwB,KAAM,GACrG1lC,KAAKikC,UAAU/7B,gBAAgBw9B,KAG1CjkC,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,IACvD,EACX,GAEA,CAAAC,IAAA,yBAAAC,MAGA,WACI,IAAMgkC,EAAe5lC,KAAKikC,UAAUj+B,kBACpCvE,EAAAA,MAAMC,IAAI,6CAADc,OAA8CojC,GAAgB,KAAM,GAE7E,IAAAC,EAAsC7lC,KAAKylC,0BAAnCF,EAAkBM,EAAlBN,mBAER,GAAc,IAFmBM,EAAL3iB,MAIxB,OADAzhB,EAAAA,MAAMC,IAAI,gDAAiD,KAAM,IAC1D,EAGX,IAAMtB,EAASJ,KAAKE,WAAW+F,aAAa7F,OAGtC0lC,EAAY9lC,KAAK+lC,oBAAoB3lC,EAAQmlC,EAAoBK,GAEvE,OAAIE,GAAa,GACbrkC,EAAAA,MAAMC,IAAI,mEAADc,OAAoEsjC,GAAa,KAAM,GACzF9lC,KAAKikC,UAAU/7B,gBAAgB49B,KAG1CrkC,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,IACvD,EACX,GAEA,CAAAC,IAAA,sBAAAC,MAIA,SAAoBxB,EAAQmlC,EAAoBK,GAC5C,IAAMI,EAAWhmC,KAAKimC,qBAAqB7lC,EAAQmlC,GAGnD,GAAsB,IAAlBS,EAASE,KACT,OAAQ,EAIZ,IAG2BvgB,EAHrBwgB,EAAUvqB,MAAMC,KAAKmqB,EAASt7B,UAAU07B,MAAK,SAACtmC,EAAGumC,GAAC,OAAKvmC,EAAIumC,CAAC,IAElEvgB,E,goBAAAC,CACoBogB,GAAO,IAA3B,IAAArgB,EAAA5b,MAAAyb,EAAAG,EAAApd,KAAA4C,MAA6B,KAAlBtH,EAAK2hB,EAAA/jB,MACZ,GAAIoC,EAAQ4hC,EACR,OAAO5hC,CAEf,CAEA,OAAAiiB,GAAAH,EAAAzd,EAAA4d,EAAA,SAAAH,EAAA7b,GAAA,CACA,OAAOk8B,EAAQ,EACnB,GAEA,CAAAxkC,IAAA,yBAAAC,MAGA,WACI,IAAMgkC,EAAe5lC,KAAKikC,UAAUj+B,kBAEpCsgC,EAAsCtmC,KAAKylC,0BAAnCF,EAAkBe,EAAlBf,mBAER,GAAc,IAFmBe,EAALpjB,MAIxB,OADAzhB,EAAAA,MAAMC,IAAI,gDAAiD,KAAM,IAC1D,EAGX,IAAMtB,EAASJ,KAAKE,WAAW+F,aAAa7F,OAGtCmmC,EAAYvmC,KAAKwmC,oBAAoBpmC,EAAQmlC,EAAoBK,GAEvE,OAAIW,GAAa,GACb9kC,EAAAA,MAAMC,IAAI,uEAADc,OAAwE+jC,GAAa,KAAM,GAC7FvmC,KAAKikC,UAAU/7B,gBAAgBq+B,KAG1C9kC,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,IACvD,EACX,GAEA,CAAAC,IAAA,sBAAAC,MAIA,SAAoBxB,EAAQmlC,EAAoBK,GAC5C,IAAMI,EAAWhmC,KAAKimC,qBAAqB7lC,EAAQmlC,GAGnD,GAAsB,IAAlBS,EAASE,KACT,OAAQ,EAOZ,IAHA,IAAMC,EAAUvqB,MAAMC,KAAKmqB,EAASt7B,UAAU07B,MAAK,SAACtmC,EAAGumC,GAAC,OAAKvmC,EAAIumC,CAAC,IAGzDtmC,EAAIomC,EAAQ/jC,OAAS,EAAGrC,GAAK,EAAGA,IACrC,GAAIomC,EAAQpmC,GAAK6lC,EACb,OAAOO,EAAQpmC,GAKvB,OAAOomC,EAAQA,EAAQ/jC,OAAS,EACpC,GAEA,CAAAT,IAAA,uBAAAC,MAIA,SAAqBxB,EAAQmlC,GACzB,IAAMS,EAAW,IAAIxZ,IASrB,OAPApsB,EAAOiC,SAAQ,SAACC,EAAO0B,GAEf1B,GAASA,EAAM6B,IAAMohC,EAAmBrnB,SAASxP,OAAOpM,EAAM6B,MAC9D6hC,EAAStZ,IAAIhe,OAAOpM,EAAM6B,IAAKH,EAEvC,IAEOgiC,CACX,GAEA,CAAArkC,IAAA,kBAAAC,MAKA,SAAgBoC,GAEZhE,KAAKikC,UAAUj+B,kBAAoBhC,EAGnC,IAAMo6B,EAAep+B,KAAKE,WAAW+F,aAAa1F,cAAcyD,GAGhE,IAAIo6B,EAiBA,OADA38B,EAAAA,MAAM6C,KAAK,4CAAD9B,OAA6CwB,EAAK,cAAc,KAAM,IACzE,EAhBPvC,EAAAA,MAAMC,IAAI,0CAADc,OAA2CwB,GAAS,KAAM,GAGnE,IAAMyiC,EAAcrI,EAAa5B,QAAQz7B,EAAAA,QAAUC,KAAKmlB,cACxD,OAAIsgB,GAEApI,EAAAA,gBAAgBqI,sBAAsBtI,EAAcqI,GAGpDpI,EAAAA,gBAAgBC,mBAAmBF,EAAc,KAWzDp+B,KAAKikC,UAAU/9B,kBAAkBxD,gBACjCjB,EAAAA,MAAMC,IAAI,yCAA0C,KAAM,IAEnD,IAZCD,EAAAA,MAAM6C,KAAK,8CAAD9B,OAA+CwB,EAAK,qBAAqB,KAAM,IAClF,EAYnB,I,4FAAC,CA9NyB,E,4yBCHvB,IAAMmC,EAAiB,WAW1B,O,EAPA,SAAAA,EAAY89B,I,4FAAW9jC,CAAA,KAAAgG,GACnBnG,KAAKikC,UAAYA,EACjBjkC,KAAK2mC,eAAiB,KACtB3mC,KAAKqH,WAAa,KAClBrH,KAAKsH,WAAa,IACtB,G,EAEA,EAAA3F,IAAA,oBAAAC,MAIA,SAAkBwb,GACdpd,KAAK2mC,eAAiBvpB,CAC1B,GAEA,CAAAzb,IAAA,aAAAC,MAKA,SAAWyF,EAAYC,GACnBtH,KAAKqH,WAAaA,EAClBrH,KAAKsH,WAAaA,CACtB,GAEA,CAAA3F,IAAA,gBAAAC,MAIA,WAAgB,IAAAmC,EAAA,KACZ,IAAK/D,KAAK2mC,eAAgB,MAAO,GAEjC,IAAMvmC,EAASJ,KAAKikC,UAAU/jC,WAAW+F,aAAa7F,OAChDsD,EAAa1D,KAAKikC,UAAU/jC,WAAW+F,aAAavC,WACtDkjC,EAAgB,EAChBhB,EAAe,EACfiB,EAAkB,GAYtB,GATAzmC,EAAOiC,SAAQ,SAACC,EAAO0B,GACf1B,EAAMC,WAAamB,EAAWpB,EAAM6B,MAEpC0iC,EAAgBr6B,KAAKxI,GACrB4iC,IAER,IAGI5mC,KAAKikC,UAAUj+B,mBAAqB,EAAG,CACvC,IAAM8gC,EAAWD,EAAgBlB,WAAU,SAAA3hC,GAAK,OAAIA,GAASD,EAAKkgC,UAAUj+B,iBAAiB,KAC3E,IAAd8gC,IACAlB,EAAekB,EAAW,EAElC,CAkBA,OAfsB,IAAlBF,GAEA5mC,KAAK2mC,eAAen/B,YAAc,IAClCxH,KAAK2mC,eAAe7c,MAAQ,4BAE5B9pB,KAAK2mC,eAAen/B,YAAc,GAAHhF,OAAMojC,GAAgB,EAAC,KAAApjC,OAAIokC,GAC1D5mC,KAAK2mC,eAAe7c,MAAQ,GAAHtnB,OAAMokC,EAAa,yBAI5C5mC,KAAKqH,YAAcrH,KAAKsH,aACxBtH,KAAKqH,WAAWE,SAA6B,IAAlBq/B,EAC3B5mC,KAAKsH,WAAWC,SAA6B,IAAlBq/B,GAGxBC,CACX,M,yFAAC,CA5EyB,E,m5BCGvB,IAAMxgC,EAAmB,WAQ5B,O,EAJA,SAAAA,EAAY49B,I,4FAAW9jC,CAAA,KAAAkG,GACnBrG,KAAKikC,UAAYA,CACrB,G,EAEA,EAAAtiC,IAAA,qBAAAC,MAIA,WACIH,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GAG/D,IAAIyP,EAAYvM,SAASwM,cAAcrQ,EAAAA,QAAUgmC,WAAWx0B,WAG5D,GAAKpB,EAuBD1P,EAAAA,MAAMC,IAAI,2DAA4D,KAAM,GAC5EyP,EAAU+C,UAAY,GACtBlU,KAAKgnC,gBAAgB71B,OAzBT,CACZ1P,EAAAA,MAAMC,IAAI,mEAAoE,KAAM,GAGpF,IAAMsnB,EAAQpkB,SAASC,iBAAiB9D,EAAAA,QAAUC,KAAKwkB,MACvD,IAAKwD,GAA0B,IAAjBA,EAAM5mB,OAEhB,OADAX,EAAAA,MAAM6C,KAAK,2EACJ,MAIX6M,EAAYvM,SAASkP,cAAc,QACzBC,UAAYhT,EAAAA,QAAUgmC,WAAWx0B,UAAUrR,OAGrDlB,KAAKgnC,gBAAgB71B,GAGjB6X,EAAM,GAAGxS,YACTwS,EAAM,GAAGxS,WAAWC,aAAatF,EAAW6X,EAAM,GAE1D,CAQA,MAAO,CACH7hB,QAASvC,SAASsc,eAAengB,EAAAA,QAAUgmC,WAAWE,QAAQ/lC,QAC9DmG,WAAYzC,SAASsc,eAAengB,EAAAA,QAAUgmC,WAAWG,YAAYhmC,QACrEoG,WAAY1C,SAASsc,eAAengB,EAAAA,QAAUgmC,WAAWI,YAAYjmC,QAE7E,GAEA,CAAAS,IAAA,kBAAAC,MAKA,SAAiBuP,GAAW,IAAApN,EAAA,KAElBqjC,EAAWxiC,SAASkP,cAAc,OACxCszB,EAASrzB,UAAYhT,EAAAA,QAAUgmC,WAAWM,UAAUnmC,OAGpD,IAAMiG,EAAUvC,SAASkP,cAAc,QACvC3M,EAAQhD,GAAKpD,EAAAA,QAAUgmC,WAAWE,QAAQ/lC,OAC1CiG,EAAQ4M,UAAYhT,EAAAA,QAAUgmC,WAAWO,gBAAgBpmC,OAGzD,IAAMmG,EAAazC,SAASkP,cAAc,UAC1CzM,EAAWlD,GAAKpD,EAAAA,QAAUgmC,WAAWG,YAAYhmC,OACjDmG,EAAW+O,UAAUqH,IACjB1c,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OACzBH,EAAAA,QAAUiT,QAAQuzB,YAAYrmC,OAC9BH,EAAAA,QAAUiT,QAAQwzB,aAAatmC,QAEnCmG,EAAW6M,UAAYgC,EAAAA,SAASwgB,YAAY,cAC5CrvB,EAAWyiB,MAAQ,kBACnBziB,EAAWI,iBAAiB,SAAS,kBAAM1D,EAAKkgC,UAAUh8B,wBAAwB,IAGlF,IAAMX,EAAa1C,SAASkP,cAAc,UAC1CxM,EAAWnD,GAAKpD,EAAAA,QAAUgmC,WAAWI,YAAYjmC,OACjDoG,EAAW8O,UAAUqH,IACjB1c,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OACzBH,EAAAA,QAAUiT,QAAQuzB,YAAYrmC,OAC9BH,EAAAA,QAAUiT,QAAQwzB,aAAatmC,QAEnCoG,EAAW4M,UAAYgC,EAAAA,SAASwgB,YAAY,gBAC5CpvB,EAAWwiB,MAAQ,cACnBxiB,EAAWG,iBAAiB,SAAS,kBAAM1D,EAAKkgC,UAAUj8B,wBAAwB,IAGlFo/B,EAAShzB,YAAY/M,GACrB+/B,EAAShzB,YAAYjN,GACrBigC,EAAShzB,YAAY9M,GAGrB6J,EAAUiD,YAAYgzB,GAEtB3lC,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,EACxE,GAEA,CAAAC,IAAA,UAAAC,MAGA,WAEI,IAAMyF,EAAazC,SAASsc,eAAengB,EAAAA,QAAUgmC,WAAWG,YAAYhmC,QACtEoG,EAAa1C,SAASsc,eAAengB,EAAAA,QAAUgmC,WAAWI,YAAYjmC,QAG5E,GAAImG,EAAY,CACZ,IAAMogC,EAAgBpgC,EAAWmvB,WAAU,GAC3CnvB,EAAWmP,WAAWigB,aAAagR,EAAepgC,EACtD,CAEA,GAAIC,EAAY,CACZ,IAAMogC,EAAgBpgC,EAAWkvB,WAAU,GAC3ClvB,EAAWkP,WAAWigB,aAAaiR,EAAepgC,EACtD,CAEA7F,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,EACnE,M,yFAAC,CA7H2B,E,q9BCGzB,IAAMm2B,EAAU,oBAAAA,K,4FAAA13B,CAAA,KAAA03B,EAAA,Q,EAAAA,E,EAAA,EAAAl2B,IAAA,0BAAAC,MAMnB,WAAwF,IAAzDijB,EAAW/e,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG/E,EAAAA,QAAUi2B,MAAMG,mBAAmBj2B,OAEtE4P,EAAqBC,EAAAA,mBAAmBC,cAExCG,EAAY+E,EAAAA,SAASiO,WAAWU,GAEtC,IAAK1T,EAAW,CAEZ,IAAMw2B,EAAgB/iC,SAASsc,eAAe2D,GACxC+iB,EAAuBhjC,SAASwM,cAAc,IAAMyT,GAQ1D,OANApjB,EAAAA,MAAMC,IAAI,mDAAoD,CAC1Dwf,iBAAkBymB,EAClBv2B,gBAAiBw2B,GAClB,GAEHnmC,EAAAA,MAAM6C,KAAK,0CAA2C,KAAM,IACrD,CACX,CAGA,IAAMujC,EAAc12B,EAAUtM,iBAAiB,OAE/C,OAAKgjC,GAAsC,IAAvBA,EAAYzlC,QAMhCylC,EAAYxlC,SAAQ,SAAAylC,GAEhB,IAAIA,EAAI12B,cAAcrQ,EAAAA,QAAUwiC,KAAK9Z,QAArC,CAKA,IAAMkB,EAASzU,EAAAA,SAASpC,cAAc,SAAU,KAAM/S,EAAAA,QAAUwiC,KAAK9Z,OAAOvoB,OAAQ,CAChFgE,KAAM,SACN4kB,MAAOhZ,EAAmBnL,IAAI,cAIlCglB,EAAOzW,UAAY,gBAAH1R,OAAmBzB,EAAAA,QAAUwiC,KAAKwE,KAAK7mC,OAAM,0BAAAsB,OAAyBzB,EAAAA,QAAUwiC,KAAKyE,KAAK9mC,OAAM,MAAAsB,OAAKsO,EAAmBnL,IAAI,QAAO,WAGnJmiC,EAAIzzB,MAAMyyB,SAAW,WAGrB,IAAMmB,EAASH,EAAI12B,cAAc,QAC7B62B,EACAH,EAAIrxB,aAAakU,EAAQsd,GAGzBH,EAAI1zB,YAAYuW,GAIpBA,EAAOljB,iBAAiB,SAAS,SAASY,GACtCA,EAAEN,iBACFM,EAAEuyB,kBAEF,IAQIsN,EARED,EAASH,EAAI12B,cAAc,QAC5B62B,IAILpQ,EAAWsQ,mBAAqBF,EAI5BA,EAAOG,aAAa,uBACpBF,EAAarQ,EAAWwQ,oBAAoBJ,EAAOtnB,aAAa,uBAChElf,EAAAA,MAAMC,IAAI,iDAAkD,KAAM,KAGlEwmC,GADAA,EAAaD,EAAOzgC,aAAe,IACXwV,QAAQ,SAAU,MAC1Cvb,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,IAGxED,EAAAA,MAAMC,IAAI,4BAA8BwmC,EAAW9lC,OAAQ,KAAM,GAIjEy1B,EAAWyQ,qBAAqBJ,GAGhCrQ,EAAW0Q,qBAAqB5d,GACpC,GAtDA,CAuDJ,IAEAlpB,EAAAA,MAAMC,IAAI,qCAADc,OAAsCqlC,EAAYzlC,OAAM,gBAAgB,KAAM,IAChF,IAnEHX,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,IACxD,EAmEf,GAEA,CAAAC,IAAA,uBAAAC,MAKA,SAA4B+oB,GACxBA,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUwiC,KAAKiF,WAAWtnC,QAC/C,IAAMupB,EAAWE,EAAOvZ,cAAc,IAAD5O,OAAKzB,EAAAA,QAAUwiC,KAAKyE,KAAK9mC,SAC1DupB,IACAA,EAASjjB,YAAc,uBAG3B2V,YAAW,WACPwN,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUwiC,KAAKiF,WAAWtnC,QAC9CupB,IACAA,EAASjjB,YAAc,OAE/B,GAAG,IACP,GAEA,CAAA7F,IAAA,mBAAAC,MAKA,SAAwB+oB,GACpBA,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUwiC,KAAKkF,OAAOvnC,QAC3C,IAAMupB,EAAWE,EAAOvZ,cAAc,IAAD5O,OAAKzB,EAAAA,QAAUwiC,KAAKyE,KAAK9mC,SAC1DupB,IACAA,EAASjjB,YAAc,WAG3B2V,YAAW,WACPwN,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUwiC,KAAKkF,OAAOvnC,QAC1CupB,IACAA,EAASjjB,YAAc,OAE/B,GAAG,IACP,GAEA,CAAA7F,IAAA,uBAAAC,MAKA,SAA4B29B,GAExB,IAAMztB,EAAeC,EAAAA,aAAaf,cAG5B+uB,EAAUjuB,EAAa42B,gBAAgBnJ,GAG7CztB,EAAa6lB,KAAKoI,GAElBt+B,EAAAA,MAAMC,IAAI,wCAAyC,KAAM,EAC7D,GAEA,CAAAC,IAAA,mBAAAC,MAKA,SAAwB+oB,GACpBA,EAAOzW,UAAYgC,EAAAA,SAASwgB,YAAY,uBAAwB,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAAY,cACtHypB,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAAQH,EAAAA,QAAUiT,QAAQsoB,eAAep7B,QAClGypB,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQuoB,cAAcr7B,QAErDic,YAAW,WACPwN,EAAOzW,UAAYgC,EAAAA,SAASwgB,YAAY,OAAQ,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAAY,YACtGypB,EAAOvU,UAAUE,OAAOvV,EAAAA,QAAUiT,QAAQuoB,cAAcr7B,QACxDypB,EAAOvU,UAAUqH,IAAI1c,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAC1D,GAAG,IACP,GAEA,CAAAS,IAAA,sBAAAC,MAMA,SAA2BskB,GACvB,IAAKA,EAAM,MAAO,GAElB,IAAM2d,EAAWj/B,SAASkP,cAAc,YAExC,OADA+vB,EAAS3vB,UAAYgS,EACd2d,EAASjiC,KACpB,K,EA3LmB,O,yFA2LlB,CA3LkB,E,m7BCAhB,IAAM+mC,EAAgB,WA+CzB,O,EA3CA,SAAAA,EAAazoC,GAAY,IAAA4O,EAAA85B,EAqBjBC,G,4FArBiB1oC,CAAA,KAAAwoC,GAEjBzoC,GAAcA,EAAWqP,SACzBvP,KAAKE,WAAaA,EAClBF,KAAKuP,QAAUrP,EAAWqP,UAE1BvP,KAAKE,WAAa,KAClBF,KAAKuP,QAAUrP,GAAc,CAAC,GAGlCF,KAAKmR,UAAY,KACjBnR,KAAKiE,SAAW,CACZ6R,cAAe,KACfC,cAAe,KACf+yB,cAAe,MAInB9oC,KAAK8Q,mBAAqBC,EAAAA,mBAAmBC,cAM7C,IAAM+3B,IAAqC,QAAlBj6B,EAACqB,OAAOxJ,kBAAU,IAAAmI,IAAjBA,EAAmBoC,cACvC83B,IAAuC,QAAbJ,EAAC5oC,KAAKuP,eAAO,IAAAq5B,IAAZA,EAAc13B,cAG3C23B,EADA7oC,KAAK8Q,mBAAmBG,gBACH,qBACd83B,EACc,oBACdC,EACc,UAEA,OAGzB,IAAMr5B,EAAO3P,KAAK8Q,mBAAmBm4B,cAErCxnC,EAAAA,MAAMC,IAAI,mCAADc,OAAoCmN,EAAI,wBAAAnN,OAAuBqmC,GAC/D7oC,KAAK8Q,mBAAmBo4B,qBAAsB,EAC3D,E,EAEA,EAAAvnC,IAAA,gBAAAC,MAIA,SAAc1B,GACV,SAAIA,IAAcA,EAAWqP,UACzBvP,KAAKE,WAAaA,EAClBF,KAAKuP,QAAUrP,EAAWqP,QAC1B9N,EAAAA,MAAMC,IAAI,iDAAkD,KAAM,GAC3D,GAGf,GAEA,CAAAC,IAAA,kBAAAC,MAIA,WAAkB,IAAAmN,EAAAo6B,EAEd,OAAInpC,KAAK8Q,oBAAsB9Q,KAAK8Q,mBAAmBG,iBACnDxP,EAAAA,MAAMC,IAAI,+DAAgE1B,KAAK8Q,mBAAmBo4B,qBAAsB,GACjHlpC,KAAK8Q,mBAAmBo4B,sBAId,QAAjBn6B,EAAAoB,OAAOxJ,kBAAU,IAAAoI,GAAjBA,EAAmBmC,cAA0D,WAA1ClG,EAAOmF,OAAOxJ,WAAWuK,eAC5DzP,EAAAA,MAAMC,IAAI,gFAAiFyO,OAAOxJ,WAAWuK,aAAc,GAC3HlR,KAAK8Q,mBAAmB9N,WACpBmN,OAAOxJ,WAAWgJ,MAAQ,KAC1BQ,OAAOxJ,WAAWuK,cAEflR,KAAK8Q,mBAAmBo4B,sBAInB,QAAZC,EAAAnpC,KAAKuP,eAAO,IAAA45B,GAAZA,EAAcj4B,cAAqD,WAArClG,EAAOhL,KAAKuP,QAAQ2B,eAClDzP,EAAAA,MAAMC,IAAI,0DAA2D1B,KAAKuP,QAAQ2B,aAAc,GACzFlR,KAAKuP,QAAQ2B,eAGxBzP,EAAAA,MAAMC,IAAI,8DAA+D,KAAM,GACxE,CAAC,EACZ,GAEA,CAAAC,IAAA,aAAAC,MAIA,WAA4D,IAAjDwnC,EAAiBtjC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG/E,EAAAA,QAAUwR,UAAUC,QAK/C,OAJA/Q,EAAAA,MAAMC,IAAI,+CAAgD,KAAM,GAEhE1B,KAAKmR,UAAYvM,SAASwM,cAAcg4B,GAEnCppC,KAAKmR,WAMVnR,KAAKqpC,wBACLrpC,KAAKspC,wBACLtpC,KAAKuiB,wBACLviB,KAAKupC,wBAEL9nC,EAAAA,MAAMC,IAAI,4CAA6C,KAAM,IACtD,IAXHD,EAAAA,MAAMiD,MAAM,gDAAiD,KAAM,IAC5D,EAWf,GAEA,CAAA/C,IAAA,wBAAAC,MAGA,WACIH,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GAG/D,IAAM8nC,EAAkBzoC,EAAAA,QAAUsR,MAAMkE,SAASrV,OAC3CuoC,EAAiB1oC,EAAAA,QAAUsR,MAAMq3B,kBAAkBxoC,OACnDyoC,EAAgB5oC,EAAAA,QAAUsR,MAAMC,OAAOpR,OAGzC4U,EAAgBlR,SAASsc,eAAesoB,GAE5C,GAAI1zB,EAAe,CAKf,GAFsBlR,SAASsc,eAAengB,EAAAA,QAAUC,KAAKuR,UAAUrR,SAElDlB,KAAKmR,UAAUkF,SAASP,GAazC,OAZArU,EAAAA,MAAMC,IAAI,oDAAqD8nC,EAAiB,GAEhFxpC,KAAKiE,SAAS6R,cAAgBA,EAG1BA,EAAcU,aAAexW,KAAKmR,WAClCnR,KAAKmR,UAAUiD,YAAY0B,QAK/BA,EAAczB,MAAMyyB,SAAW,YAI/BrlC,EAAAA,MAAMC,IAAI,qDAAsD8nC,EAAiB,GACjF1zB,EAAcQ,SACdR,EAAgB,IAExB,CAGArU,EAAAA,MAAMC,IAAI,gDAAiD8nC,EAAiB,IAC5E1zB,EAAgBlR,SAASkP,cAAc,QACzB3P,GAAKqlC,EACnB1zB,EAAc/B,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQsjB,wBAAwBp2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQwjB,UAAUt2B,QAC9I4U,EAAczB,MAAMu1B,QAAU,gDAG9B,IAAMC,EAAkBjlC,SAASkP,cAAc,OAC/C+1B,EAAgB91B,UAAYhT,EAAAA,QAAU+oC,eAAet3B,QAAQtR,OAG7D,IAAM6oC,EAAU7zB,EAAAA,SAASwgB,YAAY,MAAO,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAChF8oC,EAAW9zB,EAAAA,SAASwgB,YAAY,OAAQ,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQ2mB,eAAez5B,SAG1F2oC,EAAgB31B,UAAY,8BAAH1R,OACNzB,EAAAA,QAAU+oC,eAAeG,MAAM/oC,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,OAAM,MAAAsB,OAAKunC,EAAO,uCAAAvnC,OACzFzB,EAAAA,QAAU+oC,eAAeI,QAAQhpC,OAAM,WAAAsB,OAAUmnC,EAAa,mDAAAnnC,OAC7CmnC,EAAa,6CAAAnnC,OAC3BzB,EAAAA,QAAU+oC,eAAeK,OAAOjpC,OAAM,KAAAsB,OAAIzB,EAAAA,QAAU+oC,eAAeM,aAAalpC,OAAM,8DAAAsB,OAE1FzB,EAAAA,QAAU+oC,eAAeG,MAAM/oC,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ2mB,eAAez5B,OAAM,OAAAsB,OAAMwnC,EAAQ,qBAIjHl0B,EAAc1B,YAAYy1B,GAG1B,IAAMQ,EAAmBzlC,SAASkP,cAAc,OAChDu2B,EAAiBlmC,GAAKslC,EACtBY,EAAiBh2B,MAAMC,QAAU,OACjC+1B,EAAiBh2B,MAAMyyB,SAAW,WAClCuD,EAAiBh2B,MAAMiI,OAAS,OAGhCtc,KAAKmR,UAAUiD,YAAY0B,GAG3BlR,SAASwtB,KAAKhe,YAAYi2B,GAG1BrqC,KAAKiE,SAAS6R,cAAgBA,EAC9B9V,KAAKiE,SAASqmC,sBAAwBD,EAGtC,IAAME,EAAW,IAAIC,kBAAiB,SAACC,GACnCA,EAAUpoC,SAAQ,WACd,IAAM0T,EAAgBnR,SAASsc,eAAengB,EAAAA,QAAUC,KAAKuR,UAAUrR,QACnE6U,GAAiBA,EAAcK,UAAUC,SAAS,YAE9CP,IACAA,EAAczB,MAAMu1B,QAAU,iDAGlCW,EAASG,aAEjB,GACJ,IAGMC,EAAkB3qC,KAAKmR,WAAavM,SAASwtB,KACnDmY,EAASK,QAAQD,EAAiB,CAC9BE,SAAS,EACTC,WAAW,EACXznB,YAAY,EACZ0nB,gBAAiB,CAAC,UAE1B,GAEA,CAAAppC,IAAA,wBAAAC,MAIA,WACIH,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GAG/D,IAAMspC,EAAkBjqC,EAAAA,QAAUsR,MAAM8P,SAASjhB,OAC3CsoC,EAAkBzoC,EAAAA,QAAUsR,MAAMkE,SAASrV,OAG7CghB,EAAmBtd,SAASsc,eAAe8pB,GAC3CC,EAAoB,KAExB,GAAI/oB,EAAkB,CAClB+oB,EAAoB/oB,EAAiB1L,WAErC,IAAMV,EAAgBlR,SAASsc,eAAesoB,GAE9C,GAAI1zB,GAAiBA,EAAcO,SAAS40B,GAKxC,OAJAxpC,EAAAA,MAAMC,IAAI,oDAAqDspC,EAAiB,GAEhFhrC,KAAKiE,SAAS2N,cAAgBsQ,EAC9BliB,KAAKiE,SAASinC,uBAAyBD,EAChC,CAAE95B,UAAW85B,EAAmBnpB,cAAeI,GAGtDzgB,EAAAA,MAAMC,IAAI,qDAAsDspC,EAAiB,GAC7EC,GAAqBA,EAAkBz0B,YACvCy0B,EAAkBz0B,WAAW20B,YAAYF,GAE7C/oB,EAAmB,KACnB+oB,EAAoB,IAE5B,CAGA,IAAM/mB,EAAyBtf,SAASsc,eAAesoB,GACvD,IAAKtlB,EAED,OADAziB,EAAAA,MAAM6C,KAAK,yEAA0E,KAAM,GACpF,KAIX7C,EAAAA,MAAMC,IAAI,gDAAiDspC,EAAiB,IAG5EC,EAAoBrmC,SAASkP,cAAc,QACzBC,UAAY,GAAHvR,OAAMzB,EAAAA,QAAU0iB,eAAejR,QAAQtR,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0P,aAAaxiB,QAG3G,IAAM4gB,EAAgBld,SAASkP,cAAc,UAe7C,OAdAgO,EAAc3d,GAAK6mC,EACnBlpB,EAAc/N,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQ4P,YAAY1iB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ4P,YAAY1iB,QAGnG+pC,EAAkB72B,YAAY0N,GAG9BoC,EAAuBzN,aAAaw0B,EAAmB/mB,EAAuBE,YAG9EpkB,KAAKiE,SAAS2N,cAAgBkQ,EAC9B9hB,KAAKiE,SAASinC,uBAAyBD,EAEvCxpC,EAAAA,MAAMC,IAAI,4DAA6D,KAAM,GACtE,CAAEyP,UAAW85B,EAAmBnpB,cAAeA,EAC1D,GAEA,CAAAngB,IAAA,wBAAAC,MAGA,WAAwB,IAAAmC,EAAA,KACpBtC,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GAG/D,IAAM0pC,EAAkBrqC,EAAAA,QAAUC,KAAKuR,UAAUrR,OAC3CmqC,EAAWtqC,EAAAA,QAAUC,KAAKqQ,OAAOnQ,OAGjC6U,EAAgBnR,SAASkP,cAAc,OAC7CiC,EAAc5R,GAAKinC,EAGnB,IAAME,EAAgB1mC,SAASkP,cAAc,OAC7Cw3B,EAAcnnC,GAAKknC,EACnBC,EAAcv3B,UAAYhT,EAAAA,QAAUiT,QAAQujB,aAAar2B,OACzDoqC,EAAcj3B,MAAMC,QAAU,OAGb,IAAIk2B,kBAAiB,SAACC,GACnCA,EAAUpoC,SAAQ,SAACkpC,GACO,eAAlBA,EAASrmC,MACkB,UAA3BqmC,EAASC,eACuB,SAAhCF,EAAcj3B,MAAMC,SAEhBvQ,EAAKE,SAAS6R,gBACd/R,EAAKE,SAAS6R,cAAczB,MAAMC,QAAU,OAGxD,GACJ,IAGSs2B,QAAQU,EAAe,CAAEjoB,YAAY,IAG9CtN,EAAc3B,YAAYk3B,GAG1BtrC,KAAKmR,UAAUiD,YAAY2B,GAG3B/V,KAAKiE,SAAS8R,cAAgBA,EAG9B,IAAM01B,EAAgB7mC,SAASsc,eAAemqB,GAC9C5pC,EAAAA,MAAMC,IAAI,qCAADc,OAAsC6oC,EAAQ,4BAAA7oC,SAA6BipC,GAAiB,KAAM,EAC/G,GAEA,CAAA9pC,IAAA,wBAAAC,MAGA,WACIH,EAAAA,MAAMC,IAAI,6DAA8D,KAAM,GAG9E,IAAMwP,EAAelR,KAAK0rC,kBAGpBC,EAAkB5qC,EAAAA,QAAUm1B,MAAMC,eAAej1B,OACjD0qC,EAAiB7qC,EAAAA,QAAUm1B,MAAM2C,mBAAmB33B,OACpD2qC,EAAe9qC,EAAAA,QAAUm1B,MAAM4V,YAAY5qC,OAC3C6qC,EAAehrC,EAAAA,QAAUm1B,MAAM8V,YAAY9qC,OAC3C+qC,EAAalrC,EAAAA,QAAUm1B,MAAM0C,qBAAqB13B,OAClDgrC,EAAgBnrC,EAAAA,QAAUm1B,MAAMmG,aAAan7B,OAG7C4nC,EAAgBlkC,SAASkP,cAAc,OAC7Cg1B,EAAc/0B,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUm1B,MAAMkH,iBAAiBl8B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0jB,mBAAmBx2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQsjB,wBAAwBp2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQm4B,WAAWjrC,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQwjB,UAAUt2B,QAG/Q,IAAMkrC,EAAiBxnC,SAASkP,cAAc,OAExCmiB,EAAgBrxB,SAASkP,cAAc,UAC7CmiB,EAAc9xB,GAAKwnC,EACnB1V,EAAcliB,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ8nB,YAAY56B,QAC9F+0B,EAAc/wB,KAAO,SACrB+wB,EAAc/hB,UAAY,GAAH1R,OAAM0T,EAAAA,SAASwgB,YAAY,MAAO,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,UAASsB,OAAG0O,EAAam7B,SAAW,WAEvID,EAAeh4B,YAAY6hB,GAG3B,IAAMqW,EAAe1nC,SAASkP,cAAc,OAC5Cw4B,EAAav4B,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0jB,mBAAmBx2B,QAGlG,IAAMqrC,EAAc3nC,SAASkP,cAAc,OAC3Cy4B,EAAYx4B,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQqjB,KAAKn2B,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQw4B,oBAAoBtrC,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0P,aAAaxiB,QAE3IqrC,EAAYn2B,UAAUqH,IAAI,mBAG1B,IAAM8f,EAAe34B,SAASkP,cAAc,UAC5CypB,EAAap5B,GAAKynC,EAClBrO,EAAaxpB,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQuzB,YAAYrmC,OAAM,6BACnGq8B,EAAar4B,KAAO,SAEpB,IAAMunC,EAAa7nC,SAASkP,cAAc,QAC1C24B,EAAWtoC,GAAK0nC,EAChBY,EAAWv4B,UAAYgC,EAAAA,SAASwgB,YAAY,cAAe,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQyrB,aAAav+B,SAErG,IAAMwrC,EAAa9nC,SAASkP,cAAc,QAC1C44B,EAAWvoC,GAAK4nC,EAChBW,EAAW7iB,aAAa,QAAS3Y,EAAay7B,uBAAyB,gDACvED,EAAWllC,YAAc0J,EAAa+oB,gBAAkB,mBAExDsD,EAAanpB,YAAYq4B,GACzBlP,EAAanpB,YAAYs4B,GAGzB,IAAME,EAAWhoC,SAASkP,cAAc,UACxC84B,EAASzoC,GAAK8nC,EACdW,EAAS74B,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQ4P,YAAY1iB,OAAM,kDAI5DqrC,EAAYn4B,YAAYmpB,GACxBgP,EAAYn4B,YAAYw4B,GAGxB,IAAMxQ,EAAcx3B,SAASkP,cAAc,UAC3CsoB,EAAYj4B,GAAK+nC,EACjB9P,EAAYroB,UAAY,GAAHvR,OAAMzB,EAAAA,QAAUiT,QAAQyV,OAAOvoB,OAAM,KAAAsB,OAAIzB,EAAAA,QAAUiT,QAAQ0nB,eAAex6B,OAAM,eACrGk7B,EAAYl3B,KAAO,SACnBk3B,EAAYloB,WAAahD,EAAa2jB,YAAc,eAAiB,IAAJryB,OAAQ0T,EAAAA,SAASwgB,YAAY,mBAAoB,CAAE/S,QAAS5iB,EAAAA,QAAUiT,QAAQ2mB,eAAez5B,UAC9Jk7B,EAAY/nB,MAAMw4B,WAAa,SAC/BzQ,EAAY/nB,MAAMC,QAAU,cAC5B8nB,EAAY/nB,MAAM0V,WAAa,SAG/BuiB,EAAal4B,YAAYm4B,GACzBD,EAAal4B,YAAYgoB,GAGzB0M,EAAc10B,YAAYg4B,GAC1BtD,EAAc10B,YAAYk4B,GAG1BtsC,KAAKmR,UAAUiD,YAAY00B,GAG3B9oC,KAAKiE,SAAS6kC,cAAgBA,EAE9BrnC,EAAAA,MAAMC,IAAI,4GAA6G,KAAM,EACjI,GAEA,CAAAC,IAAA,mBAAAC,MAGA,WACI,IAAMyoC,EAAmBrqC,KAAKiE,SAASqmC,sBACjCx0B,EAAgB9V,KAAKiE,SAAS6R,cAEpC,GAAIu0B,GAAoBv0B,EAAe,CAEnC,IAAM3B,EAAUpD,EAAAA,mBAAmBC,cAAcrL,IAAI,eAAgB,oBAGrE0kC,EAAiBn2B,UAAY,2FAAH1R,OAEd2R,EAAO,yBAInBk2B,EAAiBt2B,UAAY,+BAG7B,IAAM+4B,EAAOh3B,EAAcuc,wBACrB0a,EAAY58B,OAAO68B,aAAepoC,SAASqoC,gBAAgBF,UAGjE1C,EAAiBh2B,MAAM64B,IAAOJ,EAAKI,IAAMH,EAAY,GAAM,KAG3D1C,EAAiBh2B,MAAMC,QAAU,MACrC,CACJ,GAEA,CAAA3S,IAAA,mBAAAC,MAGA,WACI,IAAMyoC,EAAmBrqC,KAAKiE,SAASqmC,sBACnCD,IACAA,EAAiBh2B,MAAMC,QAAU,OAEzC,GAEA,CAAA3S,IAAA,UAAAC,MAGA,WACIH,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,GAG9D1B,KAAK2kB,mBAQD3kB,KAAKiE,SAAS8R,eAAiB/V,KAAKiE,SAAS8R,cAAcS,YAC3DxW,KAAKiE,SAAS8R,cAAcS,WAAW20B,YAAYnrC,KAAKiE,SAAS8R,eAGjE/V,KAAKiE,SAAS6kC,eAAiB9oC,KAAKiE,SAAS6kC,cAActyB,YAC3DxW,KAAKiE,SAAS6kC,cAActyB,WAAW20B,YAAYnrC,KAAKiE,SAAS6kC,eAIrE,IAAMqE,EAAwBvoC,SAASsc,eAAengB,EAAAA,QAAUsR,MAAMkE,SAASrV,QACzEksC,EAAwBxoC,SAASsc,eAAengB,EAAAA,QAAUsR,MAAM8P,SAASjhB,QACzEmsC,EAAiCD,EAAwBA,EAAsB52B,WAAa,KAElGxW,KAAKiE,SAAW,CACZ6R,cAAeq3B,GAAyB,KACxCv7B,cAAew7B,GAAyB,KACxClC,uBAAwBmC,GAAkC,KAC1Dt3B,cAAe,KACf+yB,cAAe,MAInB9oC,KAAKE,WAAa,KAElBuB,EAAAA,MAAMC,IAAI,4CAA6C,KAAM,EACjE,GAEA,CAAAC,IAAA,oBAAAC,MAGA,WACIH,EAAAA,MAAMC,IAAI,gEAAiE,KAAM,GAE7E1B,KAAKiE,SAAS6R,gBAEd9V,KAAKiE,SAAS6R,cAAczB,MAAMu1B,QAAU,gDAC5CnoC,EAAAA,MAAMC,IAAI,0CAA2C1B,KAAKiE,SAAS6R,cAAc3R,GAAI,IAIzF,IAAMyN,EAAgBhN,SAASsc,eAAengB,EAAAA,QAAUsR,MAAM8P,SAASjhB,QACnE0Q,IACAA,EAAcyC,MAAMC,QAAU,OAC9B7S,EAAAA,MAAMC,IAAI,qDAAsDkQ,EAAczN,GAAI,GAE1F,GAEA,CAAAxC,IAAA,oBAAAC,MAGA,WACIH,EAAAA,MAAMC,IAAI,4DAA6D,KAAM,GAEzE1B,KAAKiE,SAAS6R,gBAEd9V,KAAKiE,SAAS6R,cAAczB,MAAMu1B,QAAU,gDAC5CnoC,EAAAA,MAAMC,IAAI,yCAA0C1B,KAAKiE,SAAS6R,cAAc3R,GAAI,IAIxF,IAAMyN,EAAgBhN,SAASsc,eAAengB,EAAAA,QAAUsR,MAAM8P,SAASjhB,QACnE0Q,IACAA,EAAcyC,MAAMC,QAAU,QAC9B7S,EAAAA,MAAMC,IAAI,oDAAqDkQ,EAAczN,GAAI,GAEzF,I,4FAAC,CAvjBwB,E,62BCJtB,IAAM2O,EAAiB,WAQ1B,O,EAJA,SAAAA,EAAY5S,I,4FAAYC,CAAA,KAAA2S,GACpB9S,KAAKE,WAAaA,CACtB,G,EAEA,EAAAyB,IAAA,wBAAAC,MAGA,WAAwB,IAAAmC,EAAA,KAEdupC,EAAattC,KAAKutC,uBACxB3oC,SAASqoC,gBAAgB54B,MAAMm5B,YAAY,gBAAiB,GAAFhrC,OAAK8qC,EAAU,OAG3DttC,KAAKE,WAAWiR,UAAUtM,iBAAiB9D,EAAAA,QAAUC,KAAKwkB,MAElEnjB,SAAQ,SAAA+mB,GACVrlB,EAAK0pC,iBAAiBrkB,EAC1B,IAGAppB,KAAK0tC,2BAGL1tC,KAAK2tC,yBACT,GAEA,CAAAhsC,IAAA,mBAAAC,MAIA,SAAiBwnB,GAAM,IAAAzH,EAAA,KAEb4B,EAAU6F,EAAKhY,cAAcrQ,EAAAA,QAAUC,KAAKmlB,cAClD,GAAK5C,EAAL,CAGA,IAAMqqB,EAAmBrqB,EAAQnS,cAAcrQ,EAAAA,QAAUC,KAAKolB,eAC9D,GAAKwnB,EAAL,CAMA,IAAIC,EAAazkB,EAAKhY,cAAc,YAAD5O,OAAazB,EAAAA,QAAUysB,MAAMsgB,SAC3DD,KACDA,EAAajpC,SAASkP,cAAc,QACzBC,UAAYhT,EAAAA,QAAUysB,MAAMsgB,OAAO5sC,OAC9CkoB,EAAKhV,YAAYy5B,IAIrB,IAAME,EAAaxqB,EAAQ1e,iBACvB,GAAArC,OAAGzB,EAAAA,QAAUC,KAAKwa,aAAY,gDAAAhZ,OAC3BzB,EAAAA,QAAUC,KAAK0a,iBAAgB,6CAA2C,GAAAlZ,OAC1EzB,EAAAA,QAAUC,KAAKya,mBAAkB,4CAIlCuyB,EAAc,CAAC,EA2BrB,GA1BAD,EAAW1rC,SAAQ,SAAA4rC,GACf,IAAM3qC,EAAU2qC,EAAK5gB,QAAQ/pB,QACxB0qC,EAAY1qC,KACb0qC,EAAY1qC,GAAW,IAE3B0qC,EAAY1qC,GAASkJ,KAAKyhC,EAC9B,IAGAzlC,OAAO8E,KAAK0gC,GAAa3rC,SAAQ,SAAAiB,GAE7B0qC,EAAY1qC,GAAS8iC,MAAK,SAACtmC,EAAGumC,GAG1B,OAFiB6H,SAASpuC,EAAEutB,QAAQD,OAAO9P,MAAM,KAAK9P,MAAO,IAC5C0gC,SAAS7H,EAAEhZ,QAAQD,OAAO9P,MAAM,KAAK9P,MAAO,GAEjE,IAGA,IAAM2gC,EAAYH,EAAY1qC,GAAS,GAEnC6qC,GACAxsB,EAAKysB,kBAAkBD,EAAWN,EAE1C,IAGID,EAAkB,CAClB,IAAMS,EAAcT,EAAiBU,aACrCllB,EAAKiE,QAAQghB,YAAcA,CAC/B,CAGA9qB,EAAQ9b,iBAAiB,UAAU,WAE/ByV,uBAAsB,WAClB2wB,EAAWx5B,MAAMk6B,UAAY,eAAH/rC,OAAkB+gB,EAAQwpB,UAAS,MACjE,IAGIxpB,EAAQirB,WAAa,EACrBplB,EAAKhT,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAOsnB,SAASvtC,QAE7CkoB,EAAKhT,UAAUE,OAAOvV,EAAAA,QAAUomB,OAAOsnB,SAASvtC,OAExD,GAAG,CAAEwtC,SAAS,IAGdb,EAAWx5B,MAAMk6B,UAAY,eAAH/rC,OAAkB+gB,EAAQwpB,UAAS,MAlE7D,MAFItrC,EAAAA,MAAM6C,KAAK,kDAAmD,KAAM,EALpD,CA0ExB,GAEA,CAAA3C,IAAA,oBAAAC,MAIA,SAAkBqsC,EAAMJ,GACpB,IAAMzgB,EAAS6gB,EAAK5gB,QAAQD,OAC5B,GAAKA,EAAL,CAGA,IAAI2F,EAAS8a,EAAWz8B,cAAc,GAAD5O,OAAIzB,EAAAA,QAAUysB,MAAMmhB,OAAM,mBAAAnsC,OAAkB4qB,EAAM,OAGvF,IAAK2F,EAAQ,EACTA,EAASnuB,SAASkP,cAAc,QACzBC,UAAYhT,EAAAA,QAAUysB,MAAMmhB,OAAOztC,OAGtC+sC,EAAK73B,UAAUC,SAAStV,EAAAA,QAAUC,KAAK0a,iBAAiBxa,SACxD6xB,EAAO3c,UAAUqH,IAAI1c,EAAAA,QAAUysB,MAAMW,mBAAmBjtB,QAI5D6xB,EAAO1F,QAAQD,OAASA,EAGxB,IAAMzG,EAAayG,EAAO9P,MAAM,KAAK9P,MACrCulB,EAAO1F,QAAQuhB,UAAYjoB,EAC3BoM,EAAO1e,MAAMm5B,YAAY,eAAgB7mB,GAMzCknB,EAAWz5B,YAAY2e,EAC3B,CA5BmB,CA6BvB,GAEA,CAAApxB,IAAA,uBAAAC,MAKA,WAEI,IAAMitC,EAAkB7uC,KAAKE,WAAWiR,UAAUtM,iBAAiB9D,EAAAA,QAAUslB,KAAKS,aAElF,IAAK+nB,GAA8C,IAA3BA,EAAgBzsC,OAEpC,OADAX,EAAAA,MAAMC,IAAI,sEAAuE,KAAM,GAChF,KAOX,IAHA,IAAMotC,EAAU,GACVC,EAAa3rC,KAAKuZ,IAAI,EAAGkyB,EAAgBzsC,QAEtCrC,EAAI,EAAGA,EAAIgvC,EAAYhvC,IAC5B+uC,EAAQtiC,KAAKqiC,EAAgB9uC,GAAGsyB,wBAAwBlI,QAI5D2kB,EAAQ1I,MAAK,SAACtmC,EAAGumC,GAAC,OAAKvmC,EAAIumC,CAAC,IAC5B,IAAM2I,EAAeF,EAAQ1rC,KAAK6rC,MAAMH,EAAQ1sC,OAAS,IAIzD,OAFAX,EAAAA,MAAMC,IAAI,uCAADc,OAAwCssC,EAAQ7qB,KAAK,MAAK,oBAAAzhB,OAAmBwsC,EAAY,MAAM,KAAM,GAEvGA,CACX,GAEA,CAAArtC,IAAA,0BAAAC,MAIA,WAA0B,IAElBstC,EAFkBlsB,EAAA,KAKtB7S,OAAO1I,iBAAiB,UAAU,WAC9B0nC,aAAaD,GACbA,EAAc/xB,YAAW,WACrB6F,EAAK0qB,0BACT,GAAG,IACP,IAGA1tC,KAAK0tC,0BACT,GAEA,CAAA/rC,IAAA,2BAAAC,MAIA,WACI,IAAMonB,EAAQhpB,KAAKE,WAAWiR,UAAUtM,iBAAiB9D,EAAAA,QAAUC,KAAKwkB,MAClEspB,EAAU,CAAC,EAEjB9lB,EAAM3mB,SAAQ,SAAA+mB,GACV,IAAM7F,EAAU6F,EAAKhY,cAAcrQ,EAAAA,QAAUC,KAAKmlB,cAC5C0nB,EAAazkB,EAAKhY,cAAcrQ,EAAAA,QAAUysB,MAAMsgB,QAChDF,EAAmBrqB,aAAO,EAAPA,EAASnS,cAAcrQ,EAAAA,QAAUC,KAAKolB,eAE/D,GAAIynB,GAAcD,EAAkB,CAChC,IAAMS,EAAcT,EAAiBU,aAC/Bc,EAAgBlB,SAASL,EAAWx5B,MAAM8V,SAAW,EAGvD/mB,KAAKisC,IAAID,EAAgBf,GAAe,IACxCR,EAAWx5B,MAAM8V,OAAS,GAAH3nB,OAAM6rC,EAAW,MACxCS,EAAQ1lB,EAAKiE,QAAQ9pB,MAAQ,QAAU8qC,EAE/C,CACJ,IAGI7lC,OAAO8E,KAAKwhC,GAAS1sC,OAAS,GAC9BX,EAAAA,MAAMC,IAAI,kDAAmDotC,EAAS,EAE9E,M,yFAAC,CAtOyB,E,y3DCCvB,IAAM97B,EAAa,WAStB,O,EALA,SAAAA,EAAY9S,I,4FAAYC,CAAA,KAAA6S,GACpBhT,KAAKE,WAAaA,EAClBF,KAAKsvC,UAAY,CACrB,G,EAEA,EAAA3tC,IAAA,aAAAC,MAGA,WAAa,IAAAmC,EAAA,KAET/D,KAAKuvC,kBAGLp/B,OAAO1I,iBAAiB,UAAU,WAC9B1D,EAAKwrC,iBACT,IAGAvvC,KAAKwvC,qBAEL/tC,EAAAA,MAAMC,IAAI,6BAA8B,KAAM,EAClD,GAEA,CAAAC,IAAA,kBAAAC,MAGA,WAEI,IAAMonB,EAAQ9S,EAAAA,SAASqF,YAAYxa,EAAAA,QAAUC,KAAKwkB,KAAMxlB,KAAKE,WAAWiR,WACxE,GAAK6X,GAA0B,IAAjBA,EAAM5mB,OAApB,CAEA,IACMqtC,EADOzmB,EAAM,GACG0mB,YAElBD,IAAazvC,KAAKsvC,YAClBtvC,KAAKsvC,UAAYG,EAGjBzvC,KAAK2vC,eAAe,oBAAqB,GAAFntC,OAAKxC,KAAKsvC,UAAS,OAE1D7tC,EAAAA,MAAMC,IAAI,sCAADc,OAAuCxC,KAAKsvC,UAAS,MAAM,KAAM,GAXtC,CAa5C,GAEA,CAAA3tC,IAAA,iBAAAC,MAKA,SAAeV,EAAMU,GACjBgD,SAASqoC,gBAAgB54B,MAAMm5B,YAAYtsC,EAAMU,EACrD,GAEA,CAAAD,IAAA,qBAAAC,MAGA,WAAqB,IAAA+f,EAAA,KAEX4oB,EAAW,IAAIC,kBAAiB,SAACC,GACnC,IAEgC9kB,EAF5BiqB,GAAe,EAAM9pB,EAAAC,EAEF0kB,GAAS,IAAhC,IAAA3kB,EAAA5b,MAAAyb,EAAAG,EAAApd,KAAA4C,MAAkC,KAAvBigC,EAAQ5lB,EAAA/jB,MACf,GAAsB,cAAlB2pC,EAASrmC,MACU,eAAlBqmC,EAASrmC,OACmB,UAA3BqmC,EAASC,eAAwD,UAA3BD,EAASC,eAA6B,CAC9EoE,GAAe,EACf,KACJ,CACJ,CAAC,OAAA3pB,GAAAH,EAAAzd,EAAA4d,EAAA,SAAAH,EAAA7b,GAAA,CAEG2lC,GACAjuB,EAAK4tB,iBAEb,IAGAhF,EAASK,QAAQ5qC,KAAKE,WAAWiR,UAAW,CACxC25B,WAAW,EACXD,SAAS,EACTxnB,YAAY,EACZ0nB,gBAAiB,CAAC,QAAS,WAI/B/qC,KAAKuqC,SAAWA,EAEhB9oC,EAAAA,MAAMC,IAAI,+CAAgD,KAAM,EACpE,GAEA,CAAAC,IAAA,UAAAC,MAGA,WACQ5B,KAAKuqC,WACLvqC,KAAKuqC,SAASG,aACd1qC,KAAKuqC,SAAW,MAGpB9oC,EAAAA,MAAMC,IAAI,2BAA4B,KAAM,EAChD,M,yFAAC,CAvGqB,E,+2BCDnB,IAAMkR,EAAkB,WAS3B,O,EALA,SAAAA,EAAY1S,I,4FAAYC,CAAA,KAAAyS,GACpB5S,KAAKE,WAAaA,EAClBF,KAAK6vC,WAAY,CACrB,G,EAEA,EAAAluC,IAAA,6BAAAC,MAGA,WAA6B,IAAAmC,EAAA,KAEnBilB,EAAQhpB,KAAKE,WAAWiR,UAAUtM,iBAAiB9D,EAAAA,QAAUC,KAAKwkB,MAExE,GAAqB,IAAjBwD,EAAM5mB,OAAV,CAKA,IAAM6mB,EAAWD,EAAM,GACjBE,EAAYF,EAAM,GAGlB8mB,EAAc7mB,EAAS7X,cAAcrQ,EAAAA,QAAUC,KAAKmlB,cACpD4pB,EAAe7mB,EAAU9X,cAAcrQ,EAAAA,QAAUC,KAAKmlB,cAEvD2pB,GAAgBC,GAMrB/vC,KAAK8vC,YAAcA,EACnB9vC,KAAK+vC,aAAeA,EAGpBD,EAAYroC,iBAAiB,UAAU,kBAAM1D,EAAKisC,cAAcF,EAAaC,EAAa,GAAE,CAAErB,SAAS,IACvGqB,EAAatoC,iBAAiB,UAAU,kBAAM1D,EAAKisC,cAAcD,EAAcD,EAAY,GAAE,CAAEpB,SAAS,IAGxGv+B,OAAO1I,iBAAiB,UAAU,WAC9B1D,EAAKksC,mBAAmBH,GACxB/rC,EAAKksC,mBAAmBF,EAC5B,IAEAtuC,EAAAA,MAAMC,IAAI,4EAA6E,KAAM,IAlBzFD,EAAAA,MAAMC,IAAI,qEAAsE,KAAM,EAV1F,MAFID,EAAAA,MAAMC,IAAI,8DAADc,OAA+DwmB,EAAM5mB,QAAU,KAAM,EA+BtG,GAEA,CAAAT,IAAA,gBAAAC,MAIA,SAAcsuC,EAAer4B,GAAe,IAAA8J,EAAA,KAEnC3hB,KAAK6vC,YACN7vC,KAAK6vC,WAAY,EAGjBh4B,EAAck1B,UAAYmD,EAAcnD,UAGxCl1B,EAAc22B,WAAa0B,EAAc1B,WAEzCxuC,KAAKiwC,mBAAmBC,GAGxB/yB,YAAW,WACPwE,EAAKkuB,WAAY,CACrB,GAAG,IAEX,GAEA,CAAAluC,IAAA,qBAAAC,MAIA,SAAmBuuC,GACf,IAAMC,EAAcD,EAAe/5B,UAAUC,SAAStV,EAAAA,QAAUomB,OAAOsnB,SAASvtC,QAC1EmvC,EAAaF,EAAe3B,WAAa,EAG3C4B,IAAgBC,IACZA,EACAF,EAAe/5B,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAOsnB,SAASvtC,QAEvDivC,EAAe/5B,UAAUE,OAAOvV,EAAAA,QAAUomB,OAAOsnB,SAASvtC,QAGtE,M,yFAAC,CA1F0B,E,+UCI/B,IAAMovC,EAAkB,CACtB3qC,IAAG,SAACgC,EAAQ4oC,GAEV,MAAa,SAATA,EACK,WACL,OAAI5oC,EAAO6V,WAAW,MAAQ7V,EAAO6V,WAAW,KACvC7V,EAAO8mB,UAAU,IAExBhtB,EAAAA,MAAM6C,KAAK,aAAD9B,OAAcmF,EAAM,gEACvBA,EAEX,EAIW,aAAT4oC,GAAuBA,IAASznC,OAAO2F,YAClC,WACL,OAAOC,OAAO/G,EAChB,EAIKA,EAAO4oC,EAChB,GAIIC,EAAmB,SAACC,GACxB,IAAMtc,EAAS,CAAC,EAEhB,IAAK,IAAMxyB,KAAO8uC,EACQ,WAApBzlC,EAAOylC,EAAI9uC,KAAkC,OAAb8uC,EAAI9uC,GACtCwyB,EAAOxyB,GAAO6uC,EAAiBC,EAAI9uC,IACN,iBAAb8uC,EAAI9uC,GAEpBwyB,EAAOxyB,GAAO,IAAI+uC,MAAMloC,OAAOkG,OAAO+hC,EAAI9uC,KAAQ2uC,GAElDnc,EAAOxyB,GAAO8uC,EAAI9uC,GAItB,OAAOwyB,CACT,EAkGMwc,EAAgB,CAElBtqB,KAAM,CACF7K,aAAc,0BACdiM,WAAY,yBACZX,YAAa,yBACbR,MAAO,oBAIX/T,UAAW,CACPq+B,KAAM,iBACNp+B,QAAS,2BAIb+wB,KAAM,CACF9Z,OAAQ,sBACRgf,OAAQ,0BACRV,KAAM,uBACN/Q,MAAO,CACH4M,QAAS,2BACTna,OAAQ,uBACR+Z,OAAQ,0BACRC,aAAc,gCACdC,SAAU,sCACVC,cAAe,6BAEnB6E,WAAY,8BACZR,KAAM,wBAIVhnC,KAAM,CACF4oB,cAAe,qBACf9kB,MAAO,mBACP7D,eAAgB,6BAChBG,iBAAkB,+BAClBmR,UAAW,uBACXs+B,gBAAiB,6BACjB9oB,SAAU,uBACVvM,aAAc,0BACdC,mBAAoB,iCACpBqM,YAAa,0BACbpM,iBAAkB,+BAClBsM,kBAAmB,gCACnBC,mBAAoB,iCAEpBzC,KAAM,kBACNW,aAAc,0BACdmD,YAAa,mBACb7D,UAAW,wBACXC,WAAY,yBACZH,gBAAiB,6BACjBmN,YAAa,yBACbtM,cAAe,2BACf/U,OAAQ,qBAIZmc,MAAO,CACHsgB,OAAQ,oBACRa,OAAQ,oBACRxgB,mBAAoB,iCACpBV,OAAQ,oBACRC,YAAa,0BACbC,aAAc,4BAIlBmjB,OAAQ,CACJC,OAAQ,sBACRx+B,UAAW,yBACXuwB,WAAY,0BACZkO,UAAW,yBACXC,OAAQ,sBACRC,KAAM,qBACNC,QAAS,uBACTnJ,KAAM,oBACNx1B,QAAS,wBAIb0jB,MAAO,CACHmG,aAAc,4BACdlG,eAAgB,8BAChBwG,eAAgB,6BAChBS,iBAAkB,+BAClBxE,qBAAsB,mCACtBC,mBAAoB,iCACpBxC,sBAAuB,oCACvBW,MAAO,oBACP0I,gBAAiB,8BACjB0R,cAAe,4BACftF,YAAa,mCACbE,YAAa,oCAIjBhV,MAAO,CACHwK,SAAU,sBACVnB,MAAO,oBACPgR,UAAW,oBACXnO,UAAW,wBACXhE,QAAS,sBACToS,qBAAsB,mCACtB/+B,UAAW,aACX4tB,QAAS,sBACT1D,aAAc,2BACd0G,aAAc,2BACdC,aAAc,2BACd9C,OAAQ,qBACRwC,WAAY,yBACZ9C,OAAQ,qBACRJ,aAAc,4BACd/C,UAAW,wBACXiB,QAAS,sBACT5G,QAAS,sBACTwI,gBAAiB,8BACjBvI,mBAAoB,8BACpBF,iBAAkB,+BAClBmJ,MAAO,qBAIX2G,WAAY,CACRx0B,UAAW,qBACX00B,QAAS,oBACTK,gBAAiB,0BACjBiK,UAAW,iBACXlK,UAAW,kBACXF,YAAa,yBACbD,YAAa,0BAIjB/f,OAAQ,CACJqqB,OAAQ,sBACR3kB,SAAU,wBACV4hB,SAAU,qCACVrnB,WAAY,2BAIhB/U,MAAO,CACH8O,KAAM,mBACNC,MAAO,oBACPsoB,kBAAmB,gCACnBroB,YAAa,aACbc,SAAU,uBACV5L,SAAU,sBACVjE,OAAQ,sBAIZw3B,eAAgB,CACZI,QAAS,+BACTD,MAAO,6BACPE,OAAQ,8BACRC,aAAc,qCACd53B,QAAS,gCAIbiR,eAAgB,CACZjR,QAAS,gCAIbi/B,QAAS,CACLC,MAAO,sBACPn/B,UAAW,eACX4tB,QAAS,yBAIbnsB,QA/QwB,WAE1B,IAAM29B,EAA0B,CAC9BloB,OAAQ,WACRiS,eAAgB,oBAChB/R,iBAAkB,sBAClBmS,YAAa,iBACbQ,eAAgB,oBAChBV,eAAgB,oBAChBW,cAAe,mBACfgL,YAAa,iBACbC,aAAc,cACd9d,mBAAoB,cACpBkoB,aAAc,cACd3M,MAAO,aACPC,aAAc,eACdC,WAAY,mBACZ0M,cAAe,sBACfC,cAAe,sBACf79B,aAAc,qBACd2P,YAAa,cACbmuB,eAAgB,iBAChB1a,KAAM,cACN2a,YAAa,mBACb1a,wBAAyB,+BACzB2a,uBAAwB,8BACxBva,mBAAoB,0BACpB8U,oBAAqB,2BACrBhV,UAAW,WACX6H,UAAW,WACX6S,SAAU,WACV3a,aAAc,YACd4a,gBAAiB,YACjBC,eAAgB,YAChBzX,eAAgB,YAChB8E,aAAc,YACd/b,aAAc,YACd2uB,WAAY,YACZlG,WAAY,YACZhQ,aAAc,aAIhB,GAAIhsB,OAAOxJ,YAAcwJ,OAAOxJ,WAAWK,GACzC,IAEMmJ,OAAOxJ,WAAWK,GAAG2jB,SACvBgnB,EAAwBloB,OAAS,IAAMtZ,OAAOxJ,WAAWK,GAAG2jB,QAE1Dxa,OAAOxJ,WAAWK,GAAGsrC,gBACvBX,EAAwBjW,eAAiB,IAAMvrB,OAAOxJ,WAAWK,GAAGsrC,eAElEniC,OAAOxJ,WAAWK,GAAGurC,kBACvBZ,EAAwBhoB,iBAAmB,IAAMxZ,OAAOxJ,WAAWK,GAAGurC,iBAEpEpiC,OAAOxJ,WAAWK,GAAGwrC,aACvBb,EAAwB7V,YAAc,IAAM3rB,OAAOxJ,WAAWK,GAAGwrC,YAE/DriC,OAAOxJ,WAAWK,GAAGyrC,gBACvBd,EAAwBrV,eAAiB,IAAMnsB,OAAOxJ,WAAWK,GAAGyrC,eAElEtiC,OAAOxJ,WAAWK,GAAG0rC,gBACvBf,EAAwB/V,eAAiB,IAAMzrB,OAAOxJ,WAAWK,GAAG0rC,eAElEviC,OAAOxJ,WAAWK,GAAG2rC,eACvBhB,EAAwBpV,cAAgB,IAAMpsB,OAAOxJ,WAAWK,GAAG2rC,cAEjExiC,OAAOxJ,WAAWK,GAAG4rC,aACvBjB,EAAwBpK,YAAc,IAAMp3B,OAAOxJ,WAAWK,GAAG4rC,YAE/DziC,OAAOxJ,WAAWK,GAAG6rC,QACvBlB,EAAwB1M,MAAQ,IAAM90B,OAAOxJ,WAAWK,GAAG6rC,OAEzD1iC,OAAOxJ,WAAWK,GAAG8rC,YACvBnB,EAAwBxM,WAAa,IAAMh1B,OAAOxJ,WAAWK,GAAG8rC,WAE9D3iC,OAAOxJ,WAAWK,GAAG+rC,eACvBpB,EAAwBE,cAAgB,IAAM1hC,OAAOxJ,WAAWK,GAAG+rC,cAEjE5iC,OAAOxJ,WAAWK,GAAGgsC,eACvBrB,EAAwBG,cAAgB,IAAM3hC,OAAOxJ,WAAWK,GAAGgsC,cAEjE7iC,OAAOxJ,WAAWK,GAAGisC,cACvBtB,EAAwB19B,aAAe,IAAM9D,OAAOxJ,WAAWK,GAAGisC,aAGpExxC,EAAAA,MAAMC,IAAI,6CAA8CyO,OAAOxJ,WAAWK,GAAI,EAChF,CAAE,MAAOqB,GACP5G,EAAAA,MAAMiD,MAAM,mDAAoD2D,EAAG,EACrE,CAGF,OAAOspC,CACT,CAkLauB,IAMb,QAFkB1C,EAAiBG,E,w8lBC3TnC,IAAIzxB,EAAW,KAOF3H,EAAY,SAAA4H,GAAA,SAAA5H,IAAA,O,4FAAApX,CAAA,KAAAoX,GAAA47B,EAAA,KAAA57B,EAAAzR,UAAA,Q,qRAAA2Z,CAAAlI,EAAA4H,G,EAAA5H,E,EAAA,EAAA5V,IAAA,aAAAC,MAIrB,WAEQ5B,KAAKqf,cAITrf,KAAK6kB,YAAc,sBACnB7kB,KAAKozC,YAAc,KACnBpzC,KAAKqzC,UAAY,KAGjBrzC,KAAKmR,UAAYnR,KAAKszC,mBAGtBtzC,KAAKqf,aAAc,EAEnB5d,EAAAA,MAAMC,IAAI,4BAA6B,KAAM,GACjD,GAEA,CAAAC,IAAA,mBAAAC,MAgBA,WACI,IAAIuP,EAAYvM,SAASsc,eAAelhB,KAAK6kB,aAkB7C,OAhBK1T,KACDA,EAAYvM,SAASkP,cAAc,QACzB3P,GAAKnE,KAAK6kB,YACpB1T,EAAU4C,UAAY,sBACtB5C,EAAUkD,MAAMyyB,SAAW,QAC3B31B,EAAUkD,MAAM64B,IAAM,OACtB/7B,EAAUkD,MAAMk/B,KAAO,MACvBpiC,EAAUkD,MAAMk6B,UAAY,mBAC5Bp9B,EAAUkD,MAAMiI,OAAS,OACzBnL,EAAUkD,MAAMmW,MAAQ,OACxBrZ,EAAUkD,MAAMm/B,SAAW,MAE3B5uC,SAASwtB,KAAKhe,YAAYjD,GAC1B1P,EAAAA,MAAMC,IAAI,wCAAyC,KAAM,IAGtDyP,CACX,GAEA,CAAAxP,IAAA,YAAAC,MAOA,SAAUuS,EAASjP,GAAoB,IAAAnB,EAAA,KAAdwL,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChCrE,EAAAA,MAAMC,IAAI,0CAA2CwD,EAAM,GAC3DzD,EAAAA,MAAMC,IAAI,iCAAkCyS,EAAS,GAGrD,IAUMs/B,EAAaluC,EAAAA,EAAA,GAVI,CACnBwS,QAAS,IACTJ,aAAa,EACbC,WAAW,EACX7D,UAAW,GACX5C,UAAW,KACX0G,cAAe,KACfC,UAAW,WAG+BvI,GAGxCmkC,GAAgBD,EAAc57B,gBAAkB47B,EAActiC,WAAanR,KAAKmR,WAEtF1P,EAAAA,MAAMC,IAAI,iCAAkC,CACxCiyC,mBAAoBF,EAAc57B,cAClCC,UAAW27B,EAAc37B,UACzB47B,eAAgBA,GACjB,GAGH,IAAMrf,EAAezvB,SAASkP,cAAc,OAGtC8/B,EAAiB7yC,EAAAA,QAAUiT,QAAQixB,MACrClkC,EAAAA,QAAUiT,QAAQixB,MAAM5H,WAAW5O,UAAU,GAC7C,YAGAuW,EAAa4O,EAGjB,GAAI1uC,EAAM,CAEN,IAAM2uC,EAAqB,SAAT3uC,GAAmBnE,EAAAA,QAAUiT,QAAQmxB,WACnDpkC,EAAAA,QAAUiT,QAAQmxB,WAAW9H,WAAW5O,UAAU,GAAK,GAAAjsB,OACpDoxC,EAAc,MAAApxC,OAAK0C,GAE1B8/B,GAAc,IAAJxiC,OAAQqxC,EACtB,CAGIJ,EAAc1/B,YACdixB,GAAc,IAAJxiC,OAAQixC,EAAc1/B,YAGpCsgB,EAAatgB,UAAYixB,EACzBvjC,EAAAA,MAAMC,IAAI,mBAAoB2yB,EAAatgB,UAAW,GACtDtS,EAAAA,MAAMC,IAAI,wBAAyB,CAC/BoyC,aAAc/yC,EAAAA,QAAUiT,QAAQixB,MAAQlkC,EAAAA,QAAUiT,QAAQixB,MAAM5H,WAAa,YAC7E0W,aAAc7uC,EAAO,GAAH1C,OAAMoxC,EAAc,MAAApxC,OAAK0C,GAAS,QACrD,GAGH,IAAI8uC,EAAe7/B,EACnB,GAAIs/B,EAAc77B,gBAA2C,IAAvB7G,EAAAA,mBAAoC,CACtE,IAAMD,EAAqBC,EAAAA,mBAAmBC,cAC1CF,GAAwD,mBAA3BA,EAAmBnL,MAChDquC,EAAeljC,EAAmBnL,IAAIwO,EAASA,GAEvD,CAMA,GAHAkgB,EAAangB,UAAY8/B,EAGrBP,EAAc97B,YAAa,CAC3B,IAAMs8B,EAAcrvC,SAASkP,cAAc,UAE3CmgC,EAAYlgC,UAAY,mBACxBkgC,EAAY//B,UAAY,UACxB+/B,EAAYpqB,aAAa,aAAc,SACvCoqB,EAAYpqB,aAAa,OAAQ,UACjCwK,EAAajgB,YAAY6/B,GAGzBA,EAAYxsC,iBAAiB,SAAS,kBAAM1D,EAAKmwC,UAAU7f,EAAa,IACxE5yB,EAAAA,MAAMC,IAAI,eAAgBuyC,EAAc,QAAU,YAAa,EACnE,CAyCA,OAtCIR,EAAc57B,eACdpW,EAAAA,MAAMC,IAAI,yDAA0D,CAChEiG,OAAQ8rC,EAAc57B,cACtBC,UAAW27B,EAAc37B,WAC1B,GAE6B,WAA5B27B,EAAc37B,UAEd27B,EAAc57B,cAAcrB,WAAWC,aAAa4d,EAAcof,EAAc57B,eAC7C,UAA5B47B,EAAc37B,YAEjB27B,EAAc57B,cAAcs8B,YAC5BV,EAAc57B,cAAcrB,WAAWC,aAAa4d,EAAcof,EAAc57B,cAAcs8B,aAE9FV,EAAc57B,cAAcrB,WAAWpC,YAAYigB,KAGpDqf,GAEPA,EAAat/B,YAAYigB,GACzB5yB,EAAAA,MAAMC,IAAI,8BAA+B,KAAM,KAG/CkD,SAASwtB,KAAKhe,YAAYigB,GAC1B5yB,EAAAA,MAAMC,IAAI,yBAA0B,KAAM,IAI9C1B,KAAKozC,YAAc/e,EAGfof,EAAc17B,QAAU,IACxB/X,KAAKqzC,UAAYl2B,YAAW,WACxBpZ,EAAKmwC,UAAU7f,EACnB,GAAGof,EAAc17B,UAGrBtW,EAAAA,MAAMC,IAAI,0BAA2B2yB,EAAc,GAC5CA,CACX,GAEA,CAAA1yB,IAAA,YAAAC,MAIA,WAA+B,IAAAwyC,EAArB/f,EAAYvuB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAQrB,GANI9F,KAAKqzC,YACLlE,aAAanvC,KAAKqzC,WAClBrzC,KAAKqzC,UAAY,MAIjBhf,SAAAA,EAAc7d,WAQd,OAPA6d,EAAa7d,WAAW20B,YAAY9W,GACpC5yB,EAAAA,MAAMC,IAAI,sCAAuC,KAAM,QAGnD1B,KAAKozC,cAAgB/e,IACrBr0B,KAAKozC,YAAc,OAMP,QAApBgB,EAAIp0C,KAAKozC,mBAAW,IAAAgB,GAAhBA,EAAkB59B,aAClBxW,KAAKozC,YAAY58B,WAAW20B,YAAYnrC,KAAKozC,aAC7CpzC,KAAKozC,YAAc,KACnB3xC,EAAAA,MAAMC,IAAI,oCAAqC,KAAM,GAE7D,GAEA,CAAAC,IAAA,WAAAC,MAOA,SAASuS,GAAuB,IAAd5E,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzB,OAAO9F,KAAK0X,UAAUvD,EAAS,OAAQ5E,EAC3C,GAEA,CAAA5N,IAAA,cAAAC,MAOA,SAAYuS,GAAuB,IAAd5E,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5B,OAAO9F,KAAK0X,UAAUvD,EAAS,UAAW5E,EAC9C,GAEA,CAAA5N,IAAA,cAAAC,MAOA,SAAYuS,GAAuB,IAAd5E,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5B,OAAO9F,KAAK0X,UAAUvD,EAAS,UAAW5E,EAC9C,GAEA,CAAA5N,IAAA,YAAAC,MAOA,SAAUuS,GAAuB,IAAd5E,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1B,OAAO9F,KAAK0X,UAAUvD,EAAS,SAAU5E,EAC7C,I,EAAC,EAAA5N,IAAA,cAAAC,MAlPD,WAKI,OAJKsd,IACDA,EAAW,IAAI3H,GACNvU,aAENkc,CACX,I,4FAAC,CAjCoB,CAAS2C,EAAAA,eAgRlC,S,qxBCnSO,IAAMA,EAAa,kB,EAAA,SAAAA,K,4FAAA1hB,CAAA,KAAA0hB,EAAA,E,EAiBrB,EAAAlgB,IAAA,cAAAC,MAZD,WACI,MAAM,IAAIyJ,MAAM,gDACpB,K,EAPsB,EAAA1J,IAAA,mBAAAC,MAetB,SAAiByyC,GACb,OAAQA,CACZ,M,yFAVC,CAPqB,E,8qCCC1B,IAAMC,EAAgB,CAAC,EACjBC,EAAmB,CAAC,EACpBC,EAAY,CAAC,EACfC,EAAc,KAGZC,EAAc,CAChBjpB,iBAAkB,EAClBC,mBAAoB,EACpBE,oBAAqB,EACrBC,sBAAuB,EACvB8oB,aAAc,EACdC,eAAgB,GAMP3yC,EAAU,oBAAAA,K,4FAAA9B,CAAA,KAAA8B,EAAA,Q,EAAAA,E,EAAA,EAAAN,IAAA,aAAAC,MAKnB,WACI4G,OAAO8E,KAAKgnC,GAAejyC,SAAQ,SAAAV,GAAG,cAAW2yC,EAAc3yC,EAAI,IACnE6G,OAAO8E,KAAKinC,GAAkBlyC,SAAQ,SAAAV,GAAG,cAAW4yC,EAAiB5yC,EAAI,IACzE6G,OAAO8E,KAAKknC,GAAWnyC,SAAQ,SAAAV,GAAG,cAAW6yC,EAAU7yC,EAAI,IAC3D8yC,EAAc,KACdhzC,EAAAA,MAAMC,IAAI,4BAA6B,KAAM,EACjD,GAEA,CAAAC,IAAA,gBAAAC,MAIA,WACI,O,+VAAA2D,CAAA,GAAWmvC,EACf,GAEA,CAAA/yC,IAAA,gBAAAC,MAKA,WACI,IAAME,EAAYC,YAAYC,MAG9BC,EAAWC,aAGXuyC,EAAc,CACVI,KAAM,CAAC,EACPC,SAAU,CAAC,EACXC,YAAa,IAAIlvB,KAIrB,IAAMmvB,EAAmBpwC,SAASC,iBAAiB,GAADrC,OAAIzB,EAAAA,QAAUC,KAAK8D,MAAK,oBAC1ErD,EAAAA,MAAMC,IAAI,0BAADc,OAA2BwyC,EAAiB5yC,OAAM,mBAAmB,KAAM,GAGpF4yC,EAAiB3yC,SAAQ,SAAA+a,GACrB,IAAM9Z,EAAU8Z,EAAQuD,aAAa,iBAC/Bpd,EAAO6Z,EAAQuD,aAAa,aAC5ByM,EAAShQ,EAAQuD,aAAa,gBAEpC,GAAKrd,EAAL,CA0BA,GAvBAmxC,EAAYM,YAAYt3B,IAAIna,GAGvBmxC,EAAYI,KAAKvxC,KAClBmxC,EAAYI,KAAKvxC,GAAW,CACxBW,SAAU,CACNgxC,IAAK,GACL1B,KAAM,GACN2B,MAAO,IAEXC,QAAS,IAAItvB,MAKrB4uB,EAAYI,KAAKvxC,GAASW,SAASgxC,IAAIzoC,KAAK4Q,GAC/B,SAAT7Z,EACAkxC,EAAYI,KAAKvxC,GAASW,SAASsvC,KAAK/mC,KAAK4Q,GAC7B,UAAT7Z,GACPkxC,EAAYI,KAAKvxC,GAASW,SAASixC,MAAM1oC,KAAK4Q,GAI9CgQ,EAAQ,CACRqnB,EAAYI,KAAKvxC,GAAS6xC,QAAQ13B,IAAI2P,GAGtCqnB,EAAYK,SAAS1nB,GAAU,CAC3B9pB,QAASA,EACT8Z,QAASA,GAIb,IAAMwQ,EAAMxQ,EAAQof,QAAQ,MACxB5O,IACA4mB,EAAUp3B,EAAQiQ,QAAQD,QAAUQ,EAE5C,CAIA,IAAMwnB,EAAc,GAAH5yC,OAAMc,EAAO,SAO9B,GANKgxC,EAAcc,KACfd,EAAcc,GAAe,IAEjCd,EAAcc,GAAa5oC,KAAK4Q,GAG5B7Z,EAAM,CACN,IAAM8xC,EAAe,GAAH7yC,OAAMc,EAAO,KAAAd,OAAIe,GAC9B+wC,EAAce,KACff,EAAce,GAAgB,IAElCf,EAAce,GAAc7oC,KAAK4Q,EACrC,CAzDoB,CA0DxB,IAGA,IAAMiU,EAAiBzsB,SAASC,iBAAiB,GAADrC,OAAIzB,EAAAA,QAAUysB,MAAMmhB,OAAM,mBAC1EltC,EAAAA,MAAMC,IAAI,0BAADc,OAA2B6uB,EAAejvB,OAAM,iBAAiB,KAAM,GAEhFivB,EAAehvB,SAAQ,SAAA0wB,GACnB,IAAM3F,EAAS2F,EAAOpS,aAAa,gBACnC,GAAIyM,IACAmnB,EAAiBnnB,GAAU2F,EAGvB0hB,EAAYK,SAAS1nB,IAAS,CAC9B,IAAM9pB,EAAUmxC,EAAYK,SAAS1nB,GAAQ9pB,QACxCmxC,EAAYI,KAAKvxC,GAAS+sB,cAC3BokB,EAAYI,KAAKvxC,GAAS+sB,YAAc,IAE5CokB,EAAYI,KAAKvxC,GAAS+sB,YAAY7jB,KAAKumB,EAC/C,CAER,IAEA,IAAMtW,EAAW1a,YAAYC,MAAQF,EAGrC,OAFAL,EAAAA,MAAMC,IAAI,yBAADc,OAA0BgG,OAAO8E,KAAKmnC,EAAYI,MAAMzyC,OAAM,eAAAI,OAAcia,EAAS7Z,QAAQ,GAAE,MAAM,KAAM,GAE7G6xC,CACX,GAEA,CAAA9yC,IAAA,iBAAAC,MAIA,WAMI,OAJK6yC,GACDxyC,EAAW2tB,gBAGRhU,MAAMC,KAAK44B,EAAYM,YAClC,GAEA,CAAApzC,IAAA,2BAAAC,MAKA,SAAgCqC,GAC5B,OAAO2X,MAAMC,KAAK5X,GAAUmiC,MAAK,SAACtmC,EAAGumC,GAAM,IAAAiP,EAAAC,EAGvC,OAFiBrH,UAAyB,QAAhBoH,EAAAx1C,EAAEutB,QAAQD,cAAM,IAAAkoB,OAAA,EAAhBA,EAAkBh4B,MAAM,KAAK9P,QAAS,IAAK,IACpD0gC,UAAyB,QAAhBqH,EAAAlP,EAAEhZ,QAAQD,cAAM,IAAAmoB,OAAA,EAAhBA,EAAkBj4B,MAAM,KAAK9P,QAAS,IAAK,GAEzE,GACJ,GAEA,CAAA7L,IAAA,mBAAAC,MAMA,SAAwB0B,GAAsB,IAAbC,EAAIuC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACpC,IAAKxC,EAAS,MAAO,GAGrB,IAYQW,EAeJA,EA3BEuxC,EAAW,GAAHhzC,OAAMc,EAAO,KAAAd,OAAIe,GAAQ,QAGvC,OAAI+wC,EAAckB,IACdd,EAAYjpB,mBACL6oB,EAAckB,KAGzBd,EAAYhpB,qBAGR+oB,GAAeA,EAAYI,KAAKvxC,IAG5BW,EADS,SAATV,EACWkxC,EAAYI,KAAKvxC,GAASW,SAASsvC,KAC9B,UAAThwC,EACIkxC,EAAYI,KAAKvxC,GAASW,SAASixC,MAEnCT,EAAYI,KAAKvxC,GAASW,SAASgxC,IAIlDX,EAAckB,GAAYvxC,EACnBA,IAMPA,EADAV,EACWqY,MAAMC,KAAKjX,SAASC,iBAAiB,GAADrC,OAAIzB,EAAAA,QAAUC,KAAK8D,MAAK,oBAAAtC,OAAmBc,EAAO,kBAAAd,OAAiBe,EAAI,QAE3GqY,MAAMC,KAAKjX,SAASC,iBAAiB,GAADrC,OAAIzB,EAAAA,QAAUC,KAAK8D,MAAK,oBAAAtC,OAAmBc,EAAO,QAIrGgxC,EAAckB,GAAYvxC,EACnBA,GACX,GAEA,CAAAtC,IAAA,sBAAAC,MAKA,SAA2B0B,GACvB,IAAKA,EAAS,MAAO,GAGrB,GAAImxC,GAAeA,EAAYI,KAAKvxC,GAChC,OAAOmxC,EAAYI,KAAKvxC,GAAS+sB,aAAe,GAIpD,IAAMpsB,EAAWhC,EAAWiC,iBAAiBZ,GACvCmyC,EAAU,GAYhB,OAVAxxC,EAAS5B,SAAQ,SAAA+a,GACb,IAAMgQ,EAAShQ,EAAQiQ,QAAQD,OAC/B,GAAIA,EAAQ,CACR,IAAM2F,EAAS9wB,EAAWsrB,cAAcH,GACpC2F,GACA0iB,EAAQjpC,KAAKumB,EAErB,CACJ,IAEO0iB,CACX,GAEA,CAAA9zC,IAAA,gBAAAC,MAKA,SAAqBwrB,GACjB,IAAKA,EAAQ,OAAO,KAGpB,GAAImnB,EAAiBnnB,GAEjB,OADAsnB,EAAY9oB,sBACL2oB,EAAiBnnB,GAM5B,GAHAsnB,EAAY7oB,wBAGR4oB,GAAeA,EAAYK,SAAS1nB,GAAS,CAE7C,IAAM9pB,EAAUmxC,EAAYK,SAAS1nB,GAAQ9pB,QAC7C,GAAImxC,EAAYI,KAAKvxC,GAAS+sB,YAAa,CAEvC,IAAM0C,EAAS0hB,EAAYI,KAAKvxC,GAAS+sB,YAAYxJ,MAAK,SAAA6uB,GAAC,OACvDA,EAAE/0B,aAAa,kBAAoByM,CAAM,IAE7C,GAAI2F,EAEA,OADAwhB,EAAiBnnB,GAAU2F,EACpBA,CAEf,CACJ,CAGA,IAAMzF,EAAa1oB,SAASwM,cAAc,GAAD5O,OAAIzB,EAAAA,QAAUysB,MAAMmhB,OAAM,mBAAAnsC,OAAkB4qB,EAAM,OAO3F,OAJIE,IACAinB,EAAiBnnB,GAAUE,GAGxBA,CACX,GAEA,CAAA3rB,IAAA,eAAAC,MAKA,SAAoBwb,GAChB,IAAKA,EAAS,OAAO,KAErB,IAAMgQ,EAAShQ,EAAQiQ,QAAQD,OAG/B,GAAIA,GAAUonB,EAAUpnB,GAEpB,OADAsnB,EAAYC,eACLH,EAAUpnB,GAGrBsnB,EAAYE,iBACZ,IAAMhnB,EAAMxQ,EAAQof,QAAQ,MAO5B,OAJIpP,GAAUQ,IACV4mB,EAAUpnB,GAAUQ,GAGjBA,CACX,GAEA,CAAAjsB,IAAA,sBAAAC,MAKA,SAA2BiC,GACvB,OAAOA,EACFW,QAAO,SAAAwhB,GAAI,MAAkB,YAAdA,EAAK9gB,IAAkB,IACtC4e,KAAI,SAAAkC,GAAI,OAAIA,EAAKA,IAAI,IACrB/B,KAAK,KACd,K,EAhUmB,O,yFAgUlB,CAhUkB,E,ixBCnBhB,IAAMxU,EAAW,kB,EAAA,SAAAA,K,4FAAAtP,CAAA,KAAAsP,EAAA,E,EAAA,EAAA9N,IAAA,sBAAAC,MAMpB,WAII,IAFA,IAAMuyB,EAAS,CAAC,EAEhBwhB,EAAA7vC,UAAA1D,OAJ0BwzC,EAAO,IAAAh6B,MAAA+5B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPD,EAAOC,GAAA/vC,UAAA+vC,GAKjC,IAAK,IAALC,EAAA,EAAAC,EAAqBH,EAAOE,EAAAC,EAAA3zC,OAAA0zC,IAAE,CAAzB,IAAMtmC,EAAMumC,EAAAD,GACb,GAAKtmC,GAA4B,WAAlBxE,EAAOwE,GAKtB,IAAK,IAAM7N,KAAO6N,EACVhH,OAAOC,UAAUE,eAAemB,KAAK0F,EAAQ7N,KAGlB,WAAvBqJ,EAAOmpB,EAAOxyB,KACE,OAAhBwyB,EAAOxyB,IACNia,MAAMo6B,QAAQ7hB,EAAOxyB,KACC,WAAvBqJ,EAAOwE,EAAO7N,KACE,OAAhB6N,EAAO7N,IACNia,MAAMo6B,QAAQxmC,EAAO7N,IAKtBwyB,EAAOxyB,GAAO6N,EAAO7N,GAHrBwyB,EAAOxyB,GAAO3B,KAAK0P,oBAAoBykB,EAAOxyB,GAAM6N,EAAO7N,IAO3E,CAEA,OAAOwyB,CACX,GAEA,CAAAxyB,IAAA,iBAAAC,MAKA,SAAsB4N,GAClB,IAAM2kB,EAAS,CACX8hB,SAAS,EACTvxC,MAAO,MAGX,OAAK8K,GAMAA,EAAO3N,SAiBA2N,EAAO3N,SAASzB,SACxB+zB,EAAO8hB,SAAU,EACjB9hB,EAAOzvB,MAAQ,8BAGf8K,EAAO3N,SAASzB,OAAS,GAEzB81C,QAAQ5xC,KAAK,0CAA2C,CACpD6xC,aAAc3tC,OAAO8E,KAAKkC,EAAO3N,cAxBrCsyB,EAAO8hB,SAAU,EACjB9hB,EAAOzvB,MAAQ,gCAGf8K,EAAO3N,SAAW,CACdM,IAAK,GACLi0C,IAAK,GACLh2C,OAAQ,IAIZ81C,QAAQ5xC,KAAK,iDAAkD,CAC3D+xC,WAAY7tC,OAAO8E,KAAKkC,GACxB8mC,QAAS9mC,EAAOrN,IAAM,UAAY,UAClCo0C,QAAS/mC,EAAM,IAAO,UAAY,aAcnC2kB,IAlCHA,EAAO8hB,SAAU,EACjB9hB,EAAOzvB,MAAQ,4DACRyvB,EAiCf,GAEA,CAAAxyB,IAAA,mBAAAC,MAKA,SAAwB4N,GAAQ,IAAAgnC,EAC5B,MAAO,CACH5mC,QAASJ,UAAAA,EAAQI,OACjBxP,OAAQwb,MAAMo6B,QAAQxmC,SAAgB,QAAVgnC,EAANhnC,EAAQ3N,gBAAQ,IAAA20C,OAAA,EAAhBA,EAAkBp2C,QACpCoP,EAAO3N,SAASzB,OAAOgC,OAAS,EAE5C,GAEA,CAAAT,IAAA,mBAAAC,MAMA,SAAwB+O,GAAoC,IAA1B8lC,EAAgB3wC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,MACjD,OAAK6K,GACEA,EAAS2M,MAAM,KAAK9P,OADLipC,CAE1B,GAEA,CAAA90C,IAAA,sBAAAC,MAKA,SAA2B4N,GAAQ,IAAAknC,EAAAC,EAC/B,MAAO,CACHphC,KAAMoK,aAAaC,QAAQ,qBACrBpQ,SAAa,QAAPknC,EAANlnC,EAAQM,aAAK,IAAA4mC,OAAA,EAAbA,EAAe1mC,cACf,QACNsF,OAAQqK,aAAaC,QAAQ,2BACrBpQ,SAAa,QAAPmnC,EAANnnC,EAAQM,aAAK,IAAA6mC,OAAA,EAAbA,EAAe5mC,gBACf,WAEhB,K,EA/HoB,O,yFA+HnB,CA/HmB,E,mwECIxB,IAAM6mC,EAAe,IAAIpqB,IAKZtW,EAAQ,oBAAAA,K,4FAAA/V,CAAA,KAAA+V,EAAA,Q,EAAAA,E,EAAA,EAAAvU,IAAA,qBAAAC,MAQjB,SAA0Bi1C,EAAUC,GAAyB,IAAdC,EAAOjxC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC/C6kB,EAAS/lB,SAASsc,eAAe21B,GACvC,IAAKlsB,EAED,OADAlpB,EAAAA,MAAM6C,KAAK,oBAAD9B,OAAqBq0C,EAAQ,cAAc,KAAM,GACpD,KAGX,IAAMG,EAAa7/B,KAAKnV,MAGxB,GAAI2oB,EAAOssB,YAActsB,EAAOssB,aAAeD,EAAY,CAEvD,IAAMzgB,EAAS5L,EAAO6L,WAAU,GAOhC,OANI7L,EAAOnU,YACPmU,EAAOnU,WAAWigB,aAAaF,EAAQ5L,GAE3ClpB,EAAAA,MAAMC,IAAI,6CAADc,OAA8Cu0C,GAAWF,GAAY,KAAM,GACpFC,EAAUvgB,GACVA,EAAO0gB,WAAaD,EACb,CAAE55B,QAASmZ,EAAQpyB,GAAI6yC,EAClC,CAGI,OAFArsB,EAAOssB,WAAaD,EACpBF,EAAUnsB,GACH,CAAEvN,QAASuN,EAAQxmB,GAAI6yC,EAEtC,GAEA,CAAAr1C,IAAA,aAAAC,MAKA,SAAkBuC,GACd,IAAKA,EAED,OADA1C,EAAAA,MAAMiD,MAAM,yCAA0C,KAAM,GACrD,KAIX,GAAIkyC,EAAat4B,IAAIna,GACjB,OAAOyyC,EAAajxC,IAAIxB,GAI5B,IAAIiZ,EAAUxY,SAASsc,eAAe/c,GAGtC,IAAKiZ,EACD,IAMQA,EALCjZ,EAAG+Z,SAAS,MAAS/Z,EAAG+Z,SAAS,KAKxBtZ,SAASwM,cAAcjN,GAHvBS,SAASwM,cAAc,IAAMjN,EAK/C,CAAE,MAAOkE,GACL5G,EAAAA,MAAMiD,MAAM,6CAADlC,OAA8C6F,EAAE8L,SAAW,KAAM,EAChF,CAUJ,OAPKiJ,EAIDw5B,EAAalqB,IAAIvoB,EAAIiZ,GAHrB3b,EAAAA,MAAMiD,MAAM,yCAADlC,OAA0C2B,EAAE,eAAe,KAAM,GAMzEiZ,CACX,GAEA,CAAAzb,IAAA,qBAAAC,MAMA,SAA0Bs1C,EAAcjzC,EAAUsL,GAC9C,IAAQ4nC,EAAsClzC,EAAtCkzC,UAAW1K,EAA2BxoC,EAA3BwoC,WAAYC,EAAezoC,EAAfyoC,WAE3B0K,EAIA7nC,EAJA6nC,YAAaC,EAIb9nC,EAJa8nC,aACbC,EAGA/nC,EAHA+nC,WAAYC,EAGZhoC,EAHYgoC,YACZC,EAEAjoC,EAFAioC,UAAWC,EAEXloC,EAFWkoC,WACXC,EACAnoC,EADAmoC,aAAcC,EACdpoC,EADcooC,cAGbR,GAAc1K,GAAeC,GAKlCjrC,EAAAA,MAAMC,IAAI,uCAADc,OAAwC00C,GAAgB,KAAM,GAGnEA,IAAiBE,GACjB3K,EAAW14B,UAAYujC,EACvB5K,EAAWllC,YAAcgwC,EACzBL,EAAUrtB,MAAQ4tB,GAAgBF,EAClCL,EAAUttB,aAAa,aAAcutB,IAC9BF,IAAiBG,GACxB5K,EAAW14B,UAAYwjC,EACvB7K,EAAWllC,YAAciwC,EACzBN,EAAUrtB,MAAQ6tB,GAAiBF,EACnCN,EAAUttB,aAAa,aAAcwtB,IAErC51C,EAAAA,MAAM6C,KAAK,mCAAD9B,OAAoC00C,KAlB9Cz1C,EAAAA,MAAM6C,KAAK,sDAoBnB,GAEA,CAAA3C,IAAA,cAAAC,MAQA,SAAmBijB,EAAa1Q,GAAsC,IAA7BjP,EAAIY,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,OAAQyJ,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzDqL,EAAYvM,SAASsc,eAAe2D,GAC1C,IAAK1T,EAED,OADA1P,EAAAA,MAAM6C,KAAK,wBAAD9B,OAAyBqiB,EAAW,0BAA0B,KAAM,IACvE,EASPtV,EAJAqoC,UADJ,IACoBC,EAIhBtoC,EAHAwE,UAAAA,OAAS,IAAA8jC,EAAG,OAAMA,EAAAC,EAGlBvoC,EAFAszB,UAAAA,OAAS,IAAAiV,EAAG,GAAEA,EAAAC,EAEdxoC,EADAyoC,aAAAA,OAAY,IAAAD,GAAQA,EAIlBvgC,EAAeD,EAAAA,QAAavG,cAG7BgnC,IACD7mC,EAAU+C,UAAY,IAI1B,IAAI+jC,EAAY,GAChB,IACQl3C,EAAAA,QAAUiT,SAAWjT,EAAAA,QAAUiT,QAAQkkC,SACvCD,EAAYl3C,EAAAA,QAAUiT,QAAQkkC,SAASh3C,QAGvC+2C,EAAY,eACZx2C,EAAAA,MAAMC,IAAI,sFAAuF,KAAM,GAE/G,CAAE,MAAO2G,GAEL4vC,EAAY,eACZx2C,EAAAA,MAAM6C,KAAK,qDAAsD+D,EAAG,EACxE,CAGA,IAAMgsB,EAAe7c,EAAaE,UAAUvD,EAASjP,EAAM,CACvD6S,QAAS,EACTH,WAAW,EACX7D,UAAW,GAAFvR,OAAKy1C,EAAS,KAAAz1C,OAAIuR,KAW/B,OAPI8uB,IACAxO,EAAalwB,GAAK0+B,GAItB1xB,EAAUiD,YAAYigB,IAEf,CACX,GAEA,CAAA1yB,IAAA,mBAAAC,MAOA,SAAwBihC,EAAWsV,GAAgC,IAAvBC,EAAWtyC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,QAChDsX,EAAUxY,SAASsc,eAAe2hB,GACxC,OAAKzlB,GAKLA,EAAQ/I,MAAMC,QAAU6jC,EAAUC,EAAc,QACzC,IALH32C,EAAAA,MAAM6C,KAAK,sBAAD9B,OAAuBqgC,EAAS,oCAAoC,KAAM,IAC7E,EAKf,GAEA,CAAAlhC,IAAA,cAAAC,MAOA,SAAmBihC,EAAW9uB,GAAuB,IAAZ0J,IAAG3X,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,KAAAA,UAAA,GAClCsX,EAAUxY,SAASsc,eAAe2hB,GACxC,OAAKzlB,GAKDK,EACAL,EAAQhH,UAAUqH,IAAI1J,GAEtBqJ,EAAQhH,UAAUE,OAAOvC,IAGtB,IAVHtS,EAAAA,MAAM6C,KAAK,sBAAD9B,OAAuBqgC,EAAS,+BAA+B,KAAM,IACxE,EAUf,GAEA,CAAAlhC,IAAA,gBAAAC,MAQA,WAAgF,IAUpEwU,EASsBqc,EAnBb7qB,EAAO9B,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAO3B,EAAE2B,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAM6d,EAAO7d,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIud,EAAUvd,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnEsX,EAAUxY,SAASkP,cAAclM,GA8BvC,OA3BIzD,IACAiZ,EAAQjZ,GAAKA,GAIbwf,IAGIvN,EADAwF,MAAMo6B,QAAQryB,GACFA,EACc,iBAAZA,EACFA,EAAQrG,MAAM,OAAO9Y,OAAOC,SAE5B,IAGFrC,OAAS,IACnBqwB,EAAArV,EAAQhH,WAAUqH,IAAGrP,MAAAqkB,EAAAnB,EAAIlb,IAKjC5N,OAAOkpB,QAAQrO,GAAYhhB,SAAQ,SAAAsvB,GAAkB,IAAAC,EAAAC,EAAAF,EAAA,GAAhBhwB,EAAGiwB,EAAA,GAAEhwB,EAAKgwB,EAAA,GACvChwB,SACAwb,EAAQyM,aAAaloB,EAAKC,EAElC,IAEOwb,CACX,GAEA,CAAAzb,IAAA,yBAAAC,MAOA,SAA8BgG,EAASuJ,GAAyB,IAAd5B,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEnDuyC,EAAwC,iBAAdlnC,EAC1BvM,SAASsc,eAAe/P,GACxBA,EAEN,IAAKknC,EAED,OADA52C,EAAAA,MAAM6C,KAAK,2DAA4D,KAAM,GACtE,KAIX,IAAAg0C,EAAqE/oC,EAA7DpL,GAAAA,OAAE,IAAAm0C,EAAG,KAAIA,EAAAC,EAAoDhpC,EAAlDoU,QAAAA,OAAO,IAAA40B,EAAG,GAAEA,EAAAC,EAAsCjpC,EAApC8T,WAAAA,OAAU,IAAAm1B,EAAG,CAAC,EAACA,EAAAC,EAAqBlpC,EAAnBgU,QAAAA,OAAO,IAAAk1B,EAAG,KAAIA,EAG1Dr7B,EAAUlH,EAASpC,cAAclM,EAASzD,EAAIwf,EAASN,GAc7D,OAXgB,OAAZE,IACuB,iBAAZA,EACPnG,EAAQlJ,UAAYqP,EACbA,aAAmBm1B,MAC1Bt7B,EAAQhJ,YAAYmP,IAK5B80B,EAAiBjkC,YAAYgJ,GAEtBA,CACX,GAEA,CAAAzb,IAAA,aAAAC,MAMA,SAAkBihC,EAAWtf,GACzB,IAAMnG,EAAUxY,SAASsc,eAAe2hB,GACxC,OAAKzlB,GAKLA,EAAQlJ,UAAYqP,GACb,IALH9hB,EAAAA,MAAM6C,KAAK,sBAAD9B,OAAuBqgC,EAAS,iCAAiC,KAAM,IAC1E,EAKf,GAEA,CAAAlhC,IAAA,cAAAC,MAMA,SAAmBmhB,GAA8B,IAApB41B,EAAO7yC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAGlB,SAE7Bg0C,EAAoC,iBAAZD,EACxB/zC,SAASsc,eAAey3B,GACxBA,EAEN,OAAKC,EAKEA,EAAe/zC,iBAAiBke,IAJnCthB,EAAAA,MAAM6C,KAAK,6CAAD9B,OAA8CugB,GAAY,KAAM,GACnE,KAIf,GAEA,CAAAphB,IAAA,gBAAAC,MAMA,SAAqBihC,EAAWtf,GAC5B,IAAMnG,EAAUxY,SAASsc,eAAe2hB,GACxC,OAAKzlB,GAKLA,EAAQy7B,mBAAmB,YAAat1B,IACjC,IALH9hB,EAAAA,MAAM6C,KAAK,sBAAD9B,OAAuBqgC,EAAS,iCAAiC,KAAM,IAC1E,EAKf,GAEA,CAAAlhC,IAAA,gBAAAC,MAKA,SAAqBk3C,GACjB,IAAM17B,EAAiC,iBAAhB07B,EACjBl0C,SAASsc,eAAe43B,GACxB17B,EAEN,OAAKA,SAAAA,EAAS5G,YAKd4G,EAAQ5G,WAAW20B,YAAY/tB,IACxB,IALH3b,EAAAA,MAAM6C,KAAK,2DAA4D,KAAM,IACtE,EAKf,GAEA,CAAA3C,IAAA,qBAAAC,MAQA,SAA0BmhB,EAAUg2B,EAAW5X,GAAuB,IAAd5xB,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/DkzC,EAIIzpC,EAHAopC,QAAAA,OAAO,IAAAK,EAAGp0C,SAAQo0C,EAAAC,EAGlB1pC,EAFAqZ,eAAAA,OAAc,IAAAqwB,GAAQA,EAAAC,EAEtB3pC,EADAsZ,OAAAA,OAAM,IAAAqwB,EAAG,KAAIA,EAGXj1C,EAAWiS,EAASqF,YAAYwH,EAAU41B,GAChD,OAAK10C,GAGD2kB,GACA3kB,EAAS5B,SAAQ,SAAA+a,GACbA,EAAQiF,oBAAoB02B,EAAW5X,EAC3C,IAIJl9B,EAAS5B,SAAQ,SAAA+a,GACbA,EAAQ3V,iBAAiBsxC,EAAW5X,GAGhCtY,GACArgB,OAAOkpB,QAAQ7I,GAAQxmB,SAAQ,SAAAyvB,GAAuB,IAAAC,EAAAF,EAAAC,EAAA,GAArBqnB,EAAQpnB,EAAA,GAAEnwB,EAAKmwB,EAAA,GAC5C3U,EAAQ/I,MAAM8kC,GAAYv3C,CAC9B,GAER,IAEOqC,EAAS7B,QArBM,CAsB1B,GAEA,CAAAT,IAAA,aAAAC,MAMA,SAAkB4+B,GAAwB,IAAdjxB,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnC,OAAOwkB,EAAAA,aAAaC,WAAWiW,EAAUjxB,EAC7C,GAEA,CAAA5N,IAAA,cAAAC,MAMA,SAAmB4+B,GAAwB,IAAdjxB,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpC,OAAOwkB,EAAAA,aAAa8uB,QAAQ5Y,EAAUjxB,EAC1C,K,EAnbiB,O,yFAmbhB,CAnbgB,E,m+CCNrB,IA8IM9N,EAAQ,IA5II,WASd,O,EARA,SAAA43C,K,4FAAcl5C,CAAA,KAAAk5C,GACVr5C,KAAKs5C,SAAU,EACft5C,KAAKu5C,WAAa,GAClBv5C,KAAKw5C,cAAgB,IACrBx5C,KAAKy5C,OAAS,eACdz5C,KAAK6P,SAAW,CACpB,E,EAEA,EAAAlO,IAAA,aAAAC,MAMA,WAAoE,IAAxD03C,EAAOxzC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,IAAAA,UAAA,GAAU2zC,EAAM3zC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,eAAgB+J,EAAQ/J,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAEzD9F,KAAKs5C,SAAWt5C,KAAK6P,SAAW,IAAMypC,EACtCpD,QAAQ5xC,KAAK,GAAD9B,OAAIxC,KAAKy5C,OAAM,2DAA2D,CAClFC,QAAS,CAAEJ,QAASt5C,KAAKs5C,QAASK,MAAO35C,KAAK6P,UAC9C+pC,UAAW,CAAEN,QAAAA,EAASK,MAAO9pC,MAKrC7P,KAAKs5C,QAAUA,EACft5C,KAAKy5C,OAASA,EACdz5C,KAAK6P,SAAWA,EAEhBqmC,QAAQx0C,IAAI,oBAAqB,CAAE43C,QAASt5C,KAAKs5C,QAASK,MAAO35C,KAAK6P,WACtE7P,KAAK0B,IAAI,oBAAqB,CAAE43C,QAASt5C,KAAKs5C,QAASK,MAAO35C,KAAK6P,WACvE,GAEA,CAAAlO,IAAA,YAAAC,MAKA,WAAqB,IAAAkN,EAAX6qC,EAAK7zC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAId,OADqB9F,KAAKs5C,UAA6B,IAAjBt5C,KAAKs5C,UAAsC,QAArBxqC,EAAIqB,OAAOxJ,kBAAU,IAAAmI,OAAA,EAAjBA,EAAmBc,SAC5D+pC,GAAS35C,KAAK6P,QACzC,GAEA,CAAAlO,IAAA,MAAAC,MAMA,SAAIuS,GAAiC,IAAxBge,EAAIrsB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAM6zC,EAAK7zC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzB9F,KAAK65C,UAAUF,KAEP,OAATxnB,GACA+jB,QAAQx0C,IAAI,GAADc,OAAIxC,KAAKy5C,OAAM,KAAAj3C,OAAI2R,GAAWge,GACzCnyB,KAAK85C,cAAc,MAAO,CAAC3lC,EAASge,GAAOwnB,KAE3CzD,QAAQx0C,IAAI,GAADc,OAAIxC,KAAKy5C,OAAM,KAAAj3C,OAAI2R,IAC9BnU,KAAK85C,cAAc,MAAO,CAAC3lC,GAAUwlC,IAE7C,GAEA,CAAAh4C,IAAA,OAAAC,MAMA,SAAMuS,GAAiC,IAAxBge,EAAIrsB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAM6zC,EAAK7zC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAEnB,OAATqsB,GACA+jB,QAAQ5xC,KAAK,GAAD9B,OAAIxC,KAAKy5C,OAAM,KAAAj3C,OAAI2R,GAAWge,GAC1CnyB,KAAK85C,cAAc,OAAQ,CAAC3lC,EAASge,GAAOwnB,KAE5CzD,QAAQ5xC,KAAK,GAAD9B,OAAIxC,KAAKy5C,OAAM,KAAAj3C,OAAI2R,IAC/BnU,KAAK85C,cAAc,OAAQ,CAAC3lC,GAAUwlC,GAE9C,GAEA,CAAAh4C,IAAA,QAAAC,MAMA,SAAMuS,GAAiC,IAAxBge,EAAIrsB,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAM6zC,EAAK7zC,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAEnB,OAATqsB,GACA+jB,QAAQxxC,MAAM,GAADlC,OAAIxC,KAAKy5C,OAAM,KAAAj3C,OAAI2R,GAAWge,GAC3CnyB,KAAK85C,cAAc,QAAS,CAAC3lC,EAASge,GAAOwnB,KAE7CzD,QAAQxxC,MAAM,GAADlC,OAAIxC,KAAKy5C,OAAM,KAAAj3C,OAAI2R,IAChCnU,KAAK85C,cAAc,QAAS,CAAC3lC,GAAUwlC,GAE/C,GAEA,CAAAh4C,IAAA,gBAAAC,MAKA,WAAwC,IAA1Bm4C,EAAQj0C,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG9F,KAAK6P,SAC1B,OAAIkqC,GAAY/5C,KAAK6P,SACjByhB,EAAWtxB,KAAKu5C,YAEbv5C,KAAKu5C,WAAW/0C,QAAO,SAAAw1C,GAAK,OAAIA,EAAML,OAASI,CAAQ,GAClE,GAEA,CAAAp4C,IAAA,kBAAAC,MAGA,WACI5B,KAAKu5C,WAAa,GAClBv5C,KAAK0B,IAAI,sBACb,GAEA,CAAAC,IAAA,gBAAAC,MAOA,SAAcsD,EAAM+0C,EAAMN,GACtB35C,KAAKu5C,WAAW/sC,KAAK,CACjB0K,UAAW,IAAIC,KACfjS,KAAAA,EACAiP,QAAS8lC,EACTN,MAAAA,IAIA35C,KAAKu5C,WAAWn3C,OAASpC,KAAKw5C,eAC9Bx5C,KAAKu5C,WAAWW,OAExB,I,4FAAC,CAxIa,G,kJCPlB9xC,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA8xC,EAAA9xC,EAAAE,GAAA,IAAAD,EAAAE,OAAA8E,KAAAjF,GAAA,GAAAG,OAAA4xC,sBAAA,KAAAxxC,EAAAJ,OAAA4xC,sBAAA/xC,GAAAE,IAAAK,EAAAA,EAAApE,QAAA,SAAA+D,GAAA,OAAAC,OAAA6xC,yBAAAhyC,EAAAE,GAAAa,UAAA,KAAAd,EAAAkE,KAAA4B,MAAA9F,EAAAM,EAAA,QAAAN,CAAA,UAAA/C,EAAA8C,GAAA,QAAAE,EAAA,EAAAA,EAAAzC,UAAA1D,OAAAmG,IAAA,KAAAD,EAAA,MAAAxC,UAAAyC,GAAAzC,UAAAyC,GAAA,GAAAA,EAAA,EAAA4xC,EAAA3xC,OAAAF,IAAA,GAAAjG,SAAA,SAAAkG,GAAAo8B,EAAAt8B,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAA8xC,0BAAA9xC,OAAA+xC,iBAAAlyC,EAAAG,OAAA8xC,0BAAAhyC,IAAA6xC,EAAA3xC,OAAAF,IAAAjG,SAAA,SAAAkG,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAA6xC,yBAAA/xC,EAAAC,GAAA,WAAAF,CAAA,UAAAs8B,EAAAt8B,EAAAE,EAAAD,GAAA,OAAAC,EAAAiG,EAAAjG,MAAAF,EAAAG,OAAAK,eAAAR,EAAAE,EAAA,CAAA3G,MAAA0G,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAE,GAAAD,EAAAD,CAAA,UAAA2C,EAAApC,GAAA,OAAAoC,EAAA,mBAAAlC,QAAA,iBAAAA,OAAAC,SAAA,SAAAH,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAE,QAAAF,EAAAmE,cAAAjE,QAAAF,IAAAE,OAAAL,UAAA,gBAAAG,CAAA,EAAAoC,EAAApC,EAAA,UAAAsF,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,gBAAAE,EAAAlG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAnG,OAAAkG,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,IAAAA,EAAAU,UAAA,GAAAd,OAAAK,eAAAR,EAAAmG,EAAA5F,EAAAjH,KAAAiH,EAAA,WAAA4F,EAAAlG,GAAA,IAAAvI,EAAA,SAAAuI,EAAAC,GAAA,aAAAyC,EAAA1C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAQ,OAAA2F,aAAA,YAAApG,EAAA,KAAAtI,EAAAsI,EAAAyB,KAAAxB,EAAAC,GAAA,wBAAAyC,EAAAjL,GAAA,OAAAA,EAAA,UAAA+L,UAAA,kEAAAvD,EAAAmG,OAAAC,QAAArG,EAAA,CAAAsG,CAAAtG,EAAA,0BAAA0C,EAAAjL,GAAAA,EAAAA,EAAA,YAAAy6C,EAAAnyC,EAAAvI,IAAA,SAAAuI,EAAAC,GAAA,GAAAA,EAAAgW,IAAAjW,GAAA,UAAAyD,UAAA,mEAAA2uC,CAAApyC,EAAAvI,GAAAA,EAAA2d,IAAApV,EAAA,UAAAqyC,EAAAryC,EAAAC,EAAAI,GAAA,sBAAAL,EAAAA,IAAAC,EAAAD,EAAAiW,IAAAhW,GAAA,OAAAxC,UAAA1D,OAAA,EAAAkG,EAAAI,EAAA,UAAAoD,UAAA,iDAQA,IAAA6uC,EAAA,IAAAC,QAGaC,EAAiB,WAY1B,SAAAA,KAvBJ,SAAA/6C,EAAA4I,GAAA,KAAA5I,aAAA4I,GAAA,UAAAoD,UAAA,qCAuBkB3L,CAAA,KAAA06C,GAyPdL,EAAA,KAAAG,GAvPI36C,KAAK86C,qBAAsB,EAGL,oBAAX3qC,QAA2BA,OAAOxJ,WAQhB,oBAAXwJ,QAA0BA,OAAOxJ,YAC/ClF,EAAAA,MAAMC,IAAI,sDAAuDyO,OAAOxJ,WAAY,IARpFlF,EAAAA,MAAMC,IAAI,0DAA2D,KAAM,GAC3EyO,OAAOxJ,WAAa,CAChBiJ,OAAO,EACPC,SAAU,EACV1N,IAAK,CAAC,EACNi0C,IAAK,CAAC,GAKlB,CAEA,OAzCJ/tC,EAyCIwyC,EAzCJtyC,EAyCI,EAAA5G,IAAA,2BAAAC,OAAAm5C,EAAA5sC,EAAA/F,IAAA4E,MAIA,SAAAkG,IAAA,IAAApE,EAAAksC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtsC,EAAAusC,EAAA,OAAAlzC,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,WAEQhM,KAAK86C,oBAAqB,CAAF3nC,EAAAnH,KAAA,QACwD,OAAhFvK,EAAAA,MAAMC,IAAI,4DAA6D,KAAM,GAAGyR,EAAAtH,OAAA,oBAK9D,oBAAXsE,QAA2C,QAArBrB,EAAIqB,OAAOxJ,kBAAU,IAAAmI,IAAjBA,EAAmBksC,WAAU,CAAA7nC,EAAAnH,KAAA,QAE9B,OADhCvK,EAAAA,MAAMC,IAAI,kEAAmEyO,OAAOxJ,WAAWq0C,WAAY,GAC3Gh7C,KAAK86C,qBAAsB,EAAK3nC,EAAAtH,OAAA,iBAgB/B,GAhB+BsH,EAAA1F,KAAA,EAKhChM,EAAAA,MAAMC,IAAI,qDAAsD,KAAM,GAGlEs5C,EAAa,IACXC,EAAUr2C,SAASC,iBAAiB,qCAC9BzC,OAAS,IACX84C,EAAYD,EAAQ,GAAGM,KACvBJ,EAAQD,EAAUC,MAAM,uCAE1BH,EAAaG,EAAM,GAAK,UAI3BH,EAAY,CAAF7nC,EAAAnH,KAAA,SACoF,OAA/FvK,EAAAA,MAAMC,IAAI,2EAA4E,KAAM,GAAGyR,EAAAtH,OAAA,yBAAAsH,EAAAnH,KAAA,GAKtEwpB,MAAMwlB,EAAa,uBAAsB,QAAlD,KAAdI,EAAcjoC,EAAAzH,MACD8vC,GAAI,CAAFroC,EAAAnH,KAAA,gBAAAmH,EAAAnH,KAAA,GACUovC,EAAezlB,OAAM,SAA1C0lB,EAAYloC,EAAAzH,OAG0B,WAAxBV,EAAOqwC,KACvB55C,EAAAA,MAAMC,IAAI,iDAAkD25C,EAAc,GACpD,oBAAXlrC,SAEDmrC,EAA6C,QAApBvsC,EAAGoB,OAAOxJ,kBAAU,IAAAoI,OAAA,EAAjBA,EAAmBsB,kBACrDF,OAAOxJ,WAAUpB,EAAAA,EAAA,GAAS4K,OAAOxJ,YAAc,CAAC,GAAO00C,QAGrBt1C,IAA9Bu1C,GAA4CD,EAAa1yC,eAAe,uBACxEwH,OAAOxJ,WAAW0J,kBAAoBirC,EACtC75C,EAAAA,MAAMC,IAAI,0DAA2D45C,EAA2B,IAIpGt7C,KAAK86C,qBAAsB,IAElC3nC,EAAAnH,KAAA,iBAEDvK,EAAAA,MAAM6C,KAAK,yDAA0D82C,EAAeK,OAAQ,GAAG,QAAAtoC,EAAAnH,KAAA,iBAAAmH,EAAA1F,KAAA,GAAA0F,EAAAO,GAAAP,EAAA,SAGnG1R,EAAAA,MAAM6C,KAAK,wDAAuD6O,EAAAO,GAAS,GAAG,QAG9C,OAH8CP,EAAA1F,KAAA,GAG9EzN,KAAK86C,qBAAsB,EAAK3nC,EAAAnF,OAAA,6BAAAmF,EAAAvF,OAAA,GAAAsF,EAAA,yBAEvC,WAjE6B,OAAA6nC,EAAA3sC,MAAC,KAADtI,UAAA,IAmE9B,CAAAnE,IAAA,aAAAC,OAWAqR,EAAA9E,EAAA/F,IAAA4E,MAIA,SAAAwH,IAAA,IAAAhF,EAAAksC,EAAA51C,UAAA,OAAAsC,IAAAmB,MAAA,SAAAqL,GAAA,cAAAA,EAAAnH,KAAAmH,EAAA5I,MAAA,OAQI,GARawD,EAAMksC,EAAAt5C,OAAA,QAAA2D,IAAA21C,EAAA,GAAAA,EAAA,GAAG,CAAC,EACvBj6C,EAAAA,MAAMC,IAAI,8CAA+C8N,EAAQ,GAGX,oBAAXW,QACvCA,OAAOxJ,YACPwJ,OAAOxJ,WAAWgC,eAAe,qBAGH,CAAFiM,EAAA5I,KAAA,eAAA4I,EAAA5I,KAAA,EACtBhM,KAAK27C,2BAA0B,OAAA/mC,EAAA5I,KAAA,eAErCvK,EAAAA,MAAMC,IAAI,iFACNyO,OAAOxJ,WAAW0J,kBAAmB,GAAG,OAI1B,oBAAXF,OACPA,OAAOxJ,WAAUpB,EAAAA,EAAA,GAAS4K,OAAOxJ,YAAc,CAAC,GAAO6I,GAEvD/N,EAAAA,MAAMiD,MAAM,gEAAiE,KAAM,GACtF,yBAAAkQ,EAAAhH,OAAA,GAAA4G,EAAA,UACJ,WAtBe,OAAAvB,EAAA7E,MAAC,KAADtI,UAAA,IAwBhB,CAAAnE,IAAA,gBAAAC,MAIA,WACI,MAAsB,oBAAXuO,QAA2BA,OAAOxJ,WAItCwJ,OAAOxJ,YAHVlF,EAAAA,MAAM6C,KAAK,wDAAyD,KAAM,GACnE,CAAC,EAGhB,GAEA,CAAA3C,IAAA,gBAAAC,MAIA,WAA2B,IAAb4N,EAAM1J,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpBrE,EAAAA,MAAMC,IAAI,4CAA6C8N,EAAQ,GACzC,oBAAXW,OACPA,OAAOxJ,WAAUpB,EAAA,GAAQiK,GAEzB/N,EAAAA,MAAMiD,MAAM,gEAAiE,KAAM,EAE3F,GAEA,CAAA/C,IAAA,QAAAC,MAIA,WAAsB,IAAhBg6C,EAAS91C,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACfrE,EAAAA,MAAMC,IAAI,yDAA0Dk6C,EAAW,GACzD,oBAAXzrC,OACPA,OAAOxJ,WAAUpB,EAAA,CACbqK,OAAO,EACPC,SAAU,EACV1N,IAAK,CAAC,EACNi0C,IAAK,CAAC,GACHwF,GAGPn6C,EAAAA,MAAMiD,MAAM,kEAAmE,KAAM,EAE7F,GAEA,CAAA/C,IAAA,SAAAC,MAIA,WAA2B,IAApBi6C,EAAa/1C,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpBrE,EAAAA,MAAMC,IAAI,8CAA+Cm6C,EAAe,GAElD,oBAAX1rC,QAA2BA,OAAOxJ,WAMzCk1C,GAAiBA,EAAcrsC,QAA0C,WAAhCxE,EAAO6wC,EAAcrsC,SAC9D/N,EAAAA,MAAMC,IAAI,uDAAwDm6C,EAAcrsC,OAAQ,GAExFW,OAAOxJ,WAAa+zC,EAAAC,EAAA36C,KAAK87C,GAAUhyC,KAAf9J,KAAgBmQ,OAAOxJ,WAAYk1C,EAAcrsC,SAGrEW,OAAOxJ,WAAa+zC,EAAAC,EAAA36C,KAAK87C,GAAUhyC,KAAf9J,KAAgBmQ,OAAOxJ,WAAYk1C,GAXvDp6C,EAAAA,MAAM6C,KAAK,gEAAiE,KAAM,EAa1F,GAEA,CAAA3C,IAAA,MAAAC,MAKA,SAAID,EAAKC,GACLH,EAAAA,MAAMC,IAAI,8BAADc,OAA+Bb,GAAOC,EAAO,GAChC,oBAAXuO,QAA0BA,OAAOxJ,WACxCwJ,OAAOxJ,WAAWhF,GAAOC,EAEzBH,EAAAA,MAAMiD,MAAM,iCAADlC,OAAkCb,EAAG,qCAAqC,KAAM,EAEnG,GAEA,CAAAA,IAAA,MAAAC,MAMA,SAAID,GAA0B,IAArBo6C,EAAYj2C,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACpB,MAAsB,oBAAXqK,QAA2BA,OAAOxJ,WAItChF,KAAOwO,OAAOxJ,WAAawJ,OAAOxJ,WAAWhF,GAAOo6C,GAHvDt6C,EAAAA,MAAM6C,KAAK,iCAAD9B,OAAkCb,EAAG,qCAAqC,KAAM,GACnFo6C,EAGf,GAEA,CAAAp6C,IAAA,MAAAC,MAKA,SAAID,GACA,MAAsB,oBAAXwO,QAA2BA,OAAOxJ,WAItChF,KAAOwO,OAAOxJ,YAHjBlF,EAAAA,MAAM6C,KAAK,mCAAD9B,OAAoCb,EAAG,qCAAqC,KAAM,IACrF,EAGf,GAEA,CAAAA,IAAA,SAAAC,MAIA,SAAOD,GACmB,oBAAXwO,QAA0BA,OAAOxJ,YAAchF,KAAOwO,OAAOxJ,YACpElF,EAAAA,MAAMC,IAAI,+BAADc,OAAgCb,GAAO,KAAM,UAC/CwO,OAAOxJ,WAAWhF,IAEzBF,EAAAA,MAAM6C,KAAK,oCAAD9B,OAAqCb,EAAG,kDAAkD,KAAM,EAElH,IA9QJ2G,EA8QK,EAAA3G,IAAA,cAAAC,MA1JD,WAII,OAHuBo6C,EAASC,IACVD,EAASC,EAAG,IAAIpB,GAEbmB,EAASC,CACtC,IAzHJ1zC,GAAAgG,EAAAlG,EAAAI,UAAAF,GAAAD,GAAAiG,EAAAlG,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAiB,UAAA,IAAAjB,EAAA,IAAAA,EAAAE,EAAAD,EA2HI2K,EAlFA8nC,CAgFC,CA9GyB,GAyS7B,SAAAe,EA7Bcn0C,EAAQu0C,GAAQ,IAAAn4C,EAAA,KACjBo4C,EAAM52C,EAAA,GAAQoC,GAgBpB,OAdI+yC,EAAAC,EAAA36C,KAAKo8C,GAAStyC,KAAd9J,KAAe2H,IAAW+yC,EAAAC,EAAA36C,KAAKo8C,GAAStyC,KAAd9J,KAAek8C,IACzC1zC,OAAO8E,KAAK4uC,GAAQ75C,SAAQ,SAAAV,GACpB+4C,EAAAC,EAAA52C,EAAKq4C,GAAStyC,KAAd/F,EAAem4C,EAAOv6C,IAIlBw6C,EAAOx6C,GAHLA,KAAOgG,EAGK+yC,EAAAC,EAAA52C,EAAK+3C,GAAUhyC,KAAf/F,EAAgB4D,EAAOhG,GAAMu6C,EAAOv6C,IAFpCu6C,EAAOv6C,GAKzBw6C,EAAOx6C,GAAOu6C,EAAOv6C,EAE7B,IAGGw6C,CACX,CAEA,SAAAC,EAMUC,GACN,OAAQA,GAAwB,WAAhBrxC,EAAOqxC,KAAsBzgC,MAAMo6B,QAAQqG,EAC/D,CAvSA,IAAAL,EAAA,CAAAC,EAKmB,MAqSvB,S,m4CCtTA7zC,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA6F,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,gBAAAE,EAAAlG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAnG,OAAAkG,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,IAAAA,EAAAU,UAAA,GAAAd,OAAAK,eAAAR,EAAAmG,EAAA5F,EAAAjH,KAAAiH,EAAA,WAAA4F,EAAAlG,GAAA,IAAAvI,EAAA,SAAAuI,EAAAC,GAAA,aAAAyC,EAAA1C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAQ,OAAA2F,aAAA,YAAApG,EAAA,KAAAtI,EAAAsI,EAAAyB,KAAAxB,EAAAC,GAAA,wBAAAyC,EAAAjL,GAAA,OAAAA,EAAA,UAAA+L,UAAA,kEAAAvD,EAAAmG,OAAAC,QAAArG,EAAA,CAAAsG,CAAAtG,EAAA,0BAAA0C,EAAAjL,GAAAA,EAAAA,EAAA,YAAAozC,EAAA7qC,EAAAM,EAAAP,GAAA,OAAAO,EAAAmW,EAAAnW,GAAA,SAAAN,EAAAD,GAAA,GAAAA,IAAA,UAAA2C,EAAA3C,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAAyD,UAAA,4EAAAzD,GAAA,YAAAA,EAAA,UAAAoW,eAAA,oEAAApW,CAAA,CAAAqW,CAAApW,EAAA,CAAAkW,CAAAlW,EAAAqW,IAAAE,QAAAC,UAAAlW,EAAAP,GAAA,GAAA0W,EAAAzW,GAAAyE,aAAAnE,EAAAwF,MAAA9F,EAAAD,GAAA,UAAAsW,IAAA,QAAArW,GAAA7D,QAAAgE,UAAAmW,QAAA9U,KAAA+U,QAAAC,UAAAra,QAAA,0BAAA6D,GAAA,QAAAqW,EAAA,mBAAArW,CAAA,cAAAyW,EAAAzW,GAAA,OAAAyW,EAAAvW,OAAAyE,eAAAzE,OAAAgC,eAAAwU,OAAA,SAAA1W,GAAA,OAAAA,EAAA4E,WAAA1E,OAAAgC,eAAAlC,EAAA,EAAAyW,EAAAzW,EAAA,UAAA2W,EAAA3W,EAAAD,GAAA,OAAA4W,EAAAzW,OAAAyE,eAAAzE,OAAAyE,eAAA+R,OAAA,SAAA1W,EAAAD,GAAA,OAAAC,EAAA4E,UAAA7E,EAAAC,CAAA,EAAA2W,EAAA3W,EAAAD,EAAA,UAAAi0C,EAAAj0C,EAAAC,EAAAxI,GAAA26C,EAAApyC,EAAAC,GAAAA,EAAAokB,IAAArkB,EAAAvI,EAAA,UAAA26C,EAAApyC,EAAAC,GAAA,GAAAA,EAAAgW,IAAAjW,GAAA,UAAAyD,UAAA,2EAAAywC,EAAAryC,EAAApK,EAAAyI,GAAA,OAAA2B,EAAAwiB,IAAAguB,EAAAxwC,EAAApK,GAAAyI,GAAAA,CAAA,UAAAi0C,EAAAtyC,EAAApK,GAAA,OAAAoK,EAAAvE,IAAA+0C,EAAAxwC,EAAApK,GAAA,UAAA46C,EAAAryC,EAAAC,EAAAI,GAAA,sBAAAL,EAAAA,IAAAC,EAAAD,EAAAiW,IAAAhW,GAAA,OAAAxC,UAAA1D,OAAA,EAAAkG,EAAAI,EAAA,UAAAoD,UAAA,iDAEA,IAAA2wC,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAhC,QAIalhC,EAAiB,SAAAyF,GAAA,SAAAzF,IAAA,IAAA3V,EAN9BsE,EAAAvI,GAAA,SAAAA,EAAA4I,GAAA,KAAA5I,aAAA4I,GAAA,UAAAoD,UAAA,qCAM8B3L,CAAA,KAAAuZ,GAAA,QAAAi8B,EAAA7vC,UAAA1D,OAAA63C,EAAA,IAAAr+B,MAAA+5B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAoE,EAAApE,GAAA/vC,UAAA+vC,GAQD,OARC9xC,EAAAovC,EAAA,KAAAz5B,EAAA,GAAAlX,OAAAy3C,IAN9BQ,EAAApyC,EA6JItE,EA7JJjE,EA6JI88C,GA7JJ98C,EAAA2d,IAAApV,GAWIi0C,EAAAv4C,EAAA04C,EAAe,MAGfH,EAAAv4C,EAAA44C,EAAoB,MAAK54C,CAAA,QAd7B,SAAAuE,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAyD,UAAA,sDAAAxD,EAAAG,UAAAD,OAAAiB,OAAApB,GAAAA,EAAAI,UAAA,CAAAsE,YAAA,CAAAnL,MAAA0G,EAAAgB,UAAA,EAAAD,cAAA,KAAAb,OAAAK,eAAAP,EAAA,aAAAgB,UAAA,IAAAjB,GAAA4W,EAAA3W,EAAAD,EAAA,CAc6BoX,CAAA/F,EAAAyF,GAd7B9W,EAc6BqR,EAd7BnR,EAc6B,EAAA5G,IAAA,mBAAAC,OAazBi7C,EAAA1uC,EAAA/F,IAAA4E,MAIA,SAAAkG,IAAA,IAAApE,EAAAguC,EAAAC,EAAA5nB,EAAAhD,EAAA,OAAA/pB,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,WAEQwwC,EAAKC,EAALz8C,MAAmB,CAAFmT,EAAAnH,KAAA,QAC+D,OAAhFvK,EAAAA,MAAMC,IAAI,+CAAgD86C,EAAKC,EAALz8C,MAAmB,GAAGmT,EAAAtH,OAAA,SACzE2wC,EAAKC,EAALz8C,OAAiB,UAAAmT,EAAA1F,KAAA,EAKH,QALGqB,EAKpBqB,OAAOxJ,kBAAU,IAAAmI,IAAjBA,EAAmBoB,YAAW,CAAAiD,EAAAnH,KAAA,QAEoB,OADlDvK,EAAAA,MAAMC,IAAI,mDAAoDyO,OAAOxJ,WAAWuJ,YAAa,GAC7FqsC,EAAKE,EAALz8C,KAAoBmQ,OAAOxJ,WAAWuJ,aAAYiD,EAAAtH,OAAA,SAC3C2wC,EAAKC,EAALz8C,OAAiB,OAID,KAArB88C,EAAiBpC,EAAAkC,EAAA58C,KAAKg9C,GAA4BlzC,KAAjC9J,OACH,CAAFmT,EAAAnH,KAAA,SAEqB,OADnCvK,EAAAA,MAAMC,IAAI,kEAAmEo7C,EAAgB,GAC7FP,EAAKE,EAALz8C,KAAoB88C,GAAe3pC,EAAAtH,OAAA,SAC5B2wC,EAAKC,EAALz8C,OAAiB,QAW5B,OAPAyB,EAAAA,MAAMC,IAAI,uEAAwE,KAAM,GAGlFq7C,EAAYrC,EAAAkC,EAAA58C,KAAKi9C,GAAqBnzC,KAA1B9J,MAElByB,EAAAA,MAAMC,IAAI,mCAAoCq7C,EAAW,GAEzD5pC,EAAAnH,KAAA,GACuBwpB,MAAMunB,GAAU,QAAzB,IAAR5nB,EAAQhiB,EAAAzH,MAEA8vC,GAAI,CAAFroC,EAAAnH,KAAA,eACN,IAAIX,MAAM,oCAAD7I,OAAqC2yB,EAAS+nB,aAAa,eAAA/pC,EAAAnH,KAAA,GAG3DmpB,EAASQ,OAAM,QAGlC,GAHMxD,EAAIhf,EAAAzH,KACVjK,EAAAA,MAAMC,IAAI,iDAAkDywB,EAAM,QAGxCpsB,KAAtBosB,aAAI,EAAJA,EAAMjiB,aAAyB,CAAAiD,EAAAnH,KAAA,SAE4D,OAD3FuwC,EAAKE,EAALz8C,KAAoBmyB,EAAKjiB,aACzBzO,EAAAA,MAAMC,IAAI,0DAA2D86C,EAAKC,EAALz8C,MAAmB,GAAGmT,EAAAtH,OAAA,SACpF2wC,EAAKC,EAALz8C,OAAiB,cAElB,IAAIqL,MAAM,2DAA0D,QAAA8H,EAAAnH,KAAA,iBAOA,OAPAmH,EAAA1F,KAAA,GAAA0F,EAAAO,GAAAP,EAAA,SAG9E1R,EAAAA,MAAMC,IAAI,gDAA+CyR,EAAAO,GAAS,GAGlE6oC,EAAKE,EAALz8C,KAAoB,UACpByB,EAAAA,MAAMC,IAAI,6CAA8C86C,EAAKC,EAALz8C,MAAmB,GAAGmT,EAAAtH,OAAA,SACvE2wC,EAAKC,EAALz8C,OAAiB,yBAAAmT,EAAAvF,OAAA,GAAAsF,EAAA,mBAE/B,WAzDqB,OAAA2pC,EAAAzuC,MAAC,KAADtI,UAAA,IA2DtB,CAAAnE,IAAA,cAAAC,OAAAsX,EAAA/K,EAAA/F,IAAA4E,MAKA,SAAAwH,EAAkB4E,GAAY,IAAA+jC,EAAAC,EAAA,OAAAh1C,IAAAmB,MAAA,SAAAqL,GAAA,cAAAA,EAAAnH,KAAAmH,EAAA5I,MAAA,UAErBwwC,EAAKC,EAALz8C,MAAmB,CAAF4U,EAAA5I,KAAA,aAEdwwC,EAAKG,EAAL38C,MAAwB,CAAF4U,EAAA5I,KAAA,eAAA4I,EAAA5I,KAAA,EAChBwwC,EAAKG,EAAL38C,MAAsB,OAAA4U,EAAA5I,KAAA,gBAGqB,OAAjDuwC,EAAKI,EAAL38C,KAAyBA,KAAKq9C,oBAAmBzoC,EAAAnH,KAAA,EAAAmH,EAAA5I,KAAA,GAIvCwwC,EAAKG,EAAL38C,MAAsB,QAGE,OAHF4U,EAAAnH,KAAA,GAG5B8uC,EAAKI,EAAL38C,KAAyB,MAAK4U,EAAA5G,OAAA,eAMrCoL,EAAc,CAAFxE,EAAA5I,KAAA,gBAAA4I,EAAA/I,OAAA,SAEN2wC,EAAKC,EAALz8C,OAAiB,QAwBgE,OAXxFm9C,EATgB,CAChB,cAAiB,sBACjB,cAAiB,qBACjB,eAAkB,uBAClB,gBAAmB,sBACnB,UAAa,wBAIU/jC,MAKvB+jC,EAAW/jC,EAAa4D,QAAQ,kBAAmB,SAASmB,cAAgB,QAI1Ei/B,EAAUZ,EAAKC,EAALz8C,MAAkBs9C,SAAS,KAAOd,EAAKC,EAALz8C,MAAoBw8C,EAAKC,EAALz8C,MAAoB,IAE1FyB,EAAAA,MAAMC,IAAI,+BAADc,OAAgC4W,EAAY,gBAAgBgkC,EAAUD,EAAU,GAAGvoC,EAAA/I,OAAA,SAErFuxC,EAAUD,GAAQ,yBAAAvoC,EAAAhH,OAAA,GAAA4G,EAAA,uBAC5B,SAlDgBqF,GAAA,OAAAX,EAAA9K,MAAC,KAADtI,UAAA,IAoDjB,CAAAnE,IAAA,YAAAC,OAAA27C,EAAApvC,EAAA/F,IAAA4E,MAKA,SAAA+H,EAAgByoC,GAAY,IAAAJ,EAAA,OAAAh1C,IAAAmB,MAAA,SAAA0L,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAjJ,MAAA,cAAAiJ,EAAAjJ,KAAA,EACFhM,KAAK2Z,cAAa,OAA3B,OAAPyjC,EAAOnoC,EAAAvJ,KAAAuJ,EAAApJ,OAAA,YAAArJ,OACH46C,GAAO56C,OAAGg7C,IAAY,wBAAAvoC,EAAArH,OAAA,GAAAmH,EAAA,UACnC,SAHckM,GAAA,OAAAs8B,EAAAnvC,MAAC,KAADtI,UAAA,KAxJnBwC,EAwJmB,EAAA3G,IAAA,cAAAC,MApIf,WAII,OAHuBo6C,EAASC,IACVD,EAASC,EAAG,IAAIviC,GAEbsiC,EAASC,CACtC,IAzBJ1zC,GAAAgG,EAAAlG,EAAAI,UAAAF,GAAAD,GAAAiG,EAAAlG,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAiB,UAAA,IAAAjB,EAAA,IAAAA,EAAAE,EAAAD,EAmJIi1C,EAzDArkC,EA/DA2jC,CAFC,CAnByB,CAASh7B,EAAAA,eAkNtC,SAAAm7B,IArDO,IAEI,IAG4Br3B,EAHtBs1B,EAAUr2C,SAASC,iBAAiB,UACtC44C,EAAY,KAAK33B,EAAAC,EAEAk1B,GAAO,IAA5B,IAAAn1B,EAAA5b,MAAAyb,EAAAG,EAAApd,KAAA4C,MAA8B,KAAnBoyC,EAAM/3B,EAAA/jB,MACb,GAAI87C,EAAOnC,MACPmC,EAAOnC,IAAIr9B,SAAS,mBACpBw/B,EAAOnC,IAAIr9B,SAAS,uBACrB,CACCu/B,EAAYC,EAAOnC,IACnB,KACJ,CACJ,CAAC,OAAAt1B,GAAAH,EAAAzd,EAAA4d,EAAA,SAAAH,EAAA7b,GAAA,CAED,IAAKwzC,EACD,OAAO,KAIX,IAAIE,EAAWF,EAAUhvB,UAAU,EAAGgvB,EAAU/jB,YAAY,KAAO,GAQnE,OALIikB,EAASL,SAAS,YAClBK,EAAWA,EAASlvB,UAAU,EAAGkvB,EAASv7C,OAAS,IAIhD,GAAPI,OAAUm7C,EAAQ,OACtB,CAAE,MAAOj5C,GAEL,OADAjD,EAAAA,MAAMC,IAAI,4DAA6DgD,EAAO,GACvE,IACX,CACJ,CAEA,SAAAu4C,IAOI,IAAMG,EAAUjtC,OAAOytC,SAASC,KAAKpvB,UAAU,EAAGte,OAAOytC,SAASC,KAAKnkB,YAAY,KAAO,GAG1F,OAAI0jB,EAAQl/B,SAAS,iBAEV,GAAP1b,OAAU46C,EAAQ3uB,UAAU,EAAG2uB,EAAQ1jB,YAAY,kBAAiB,2BAG7D,GAAPl3B,OAAU46C,EAAO,0BAEzB,CAhNA,IAAApB,EAAA,CAAAC,EACmB,K,mxBCLhB,IAAM3xB,EAAY,kB,EAAA,SAAAA,K,4FAAAnqB,CAAA,KAAAmqB,EAAA,E,EAAA,EAAA3oB,IAAA,UAAAC,MAOrB,SAAe4+B,GAAwB,IAAdjxB,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChCyyC,EAMIhpC,EALAoU,QAAAA,OAAO,IAAA40B,EAAG,GAAEA,EAAAuF,EAKZvuC,EAJAib,MAAAA,OAAK,IAAAszB,EAAG,GAAEA,EAAAC,EAIVxuC,EAHA4a,OAAAA,OAAM,IAAA4zB,EAAG,GAAEA,EAAAC,EAGXzuC,EAFAua,MAAAA,OAAK,IAAAk0B,EAAG,GAAEA,EAAAC,EAEV1uC,EADA2uC,WAAAA,OAAU,IAAAD,GAAOA,EAIfE,EAAWn+C,KAAKo+C,iBAAiB5d,GAEvC,IAAK2d,EAED,OADAjI,QAAQ5xC,KAAK,mBAAD9B,OAAoBg+B,IACzB,GAIX,IAAM6d,EAAev0B,EAAQ,UAAHtnB,OAAasnB,EAAK,YAAa,GAGzD,MAAO,qCAAPtnB,OACsBmhB,EAAO,0BAAAnhB,OAChBgoB,EAAK,2BAAAhoB,OACJ2nB,EAAM,4BAAA3nB,OACL27C,EAASG,SAAW,cAAa,mBAAA97C,OAC1C07C,EAAa,qBAAuB,aAAY,4DAAA17C,OAGhD67C,EAAY,kBAAA77C,OACZ27C,EAASI,MAAK,mBAExB,GAEA,CAAA58C,IAAA,mBAAAC,MAMA,SAAwB4+B,GAsFpB,MApFc,CACV,aAAc,CACV8d,QAAS,cACTC,MAAO,wLAEX,eAAgB,CACZD,QAAS,cACTC,MAAO,wLAEX,IAAO,CACHD,QAAS,cACTC,MAAO,4kBAEX,IAAO,CACHD,QAAS,cACTC,MAAO,mnBAEX,KAAQ,CACJD,QAAS,cACTC,MAAO,8RAEX,KAAQ,CACJD,QAAS,cACTC,MAAO,qJAEX,mBAAoB,CAChBD,QAAS,cACTC,MAAO,ibAEX,aAAc,CACVD,QAAS,cACTC,MAAO,sYAEX,YAAa,CACTD,QAAS,cACTC,MAAO,gYAEX,cAAe,CACXD,QAAS,cACTC,MAAO,qPAEX,uBAAwB,CACpBD,QAAS,cACTC,MAAO,+TAEX,KAAQ,CACJD,QAAS,cACTC,MAAO,+QAGX,eAAgB,CACZD,QAAS,cACTC,MAAO,iNAEX,gBAAiB,CACbD,QAAS,cACTC,MAAO,wLAEX,SAAY,CACRD,QAAS,cACTC,MAAO,saAEX,iBAAkB,CACdD,QAAS,cACTC,MAAO,0MAEX,cAAe,CACXD,QAAS,cACTC,MAAO,4QAEX,qBAAsB,CAClBD,QAAS,cACTC,MAAO,4MAEX,qBAAsB,CAClBD,QAAS,YACTC,MAAO,0GAEX,mBAAoB,CAChBD,QAAS,YACTC,MAAO,oJAIF/d,IAAa,IAC9B,GAEA,CAAA7+B,IAAA,aAAAC,MAMA,SAAkB4+B,GAAwB,IAAdjxB,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7B04C,EAAYx+C,KAAKo5C,QAAQ5Y,EAAUjxB,GACzC,IAAKivC,EAAW,OAAO,KAEvB,IAAMC,EAAW75C,SAASkP,cAAc,YAExC,OADA2qC,EAASvqC,UAAYsqC,EAAUziC,OACxB0iC,EAASl7B,QAAQa,UAC5B,K,EArJqB,O,yFAqJpB,CArJoB,E,wvHCWzB,IAAIlF,EAAW,KAOFhD,EAAa,SAAAiD,GAAA,SAAAjD,IAAA,O,4FAAA/b,CAAA,KAAA+b,GAAAi3B,EAAA,KAAAj3B,EAAApW,UAAA,Q,qRAAA2Z,CAAAvD,EAAAiD,G,EAAAjD,E,EAAA,EAAAva,IAAA,aAAAC,MAItB,WAEQ5B,KAAKqf,cAITrf,KAAK0+C,cAAgB,IAAIlyB,IACzBxsB,KAAK2+C,gBAAkB,EACvB3+C,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAe,KACpB7Q,KAAK6+C,uBAAyB,IAAIh5B,IAGlC7lB,KAAK8+C,aAAe,GACpB9+C,KAAK++C,cAAgB,GAGrB/+C,KAAKg/C,iBAAiBv9C,EAAAA,MAAMwP,eAAgBxP,EAAAA,MAAMoO,SAAW,EAG7D7P,KAAKqf,aAAc,EACvB,GAEA,CAAA1d,IAAA,gBAAAC,MAgBA,SAAcgvB,EAAWquB,GAEjBj/C,KAAK8+C,aAAa18C,QAAUpC,KAAK++C,eACjC/+C,KAAK8+C,aAAa5E,QAGtBl6C,KAAK8+C,aAAatyC,KAAK,CACnB0K,WAAW,IAAIC,MAAO+nC,cACtBtuB,UAAAA,EACAquB,QAAAA,GAER,GAEA,CAAAt9C,IAAA,uBAAAC,MAQA,SAAqBuS,GAAuB,IAAd5E,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAErC,GAAIqO,GAA8B,iBAAZA,GAAwBA,EAAQqJ,WAAW,MAAQzM,EAAAA,mBAAmBC,cAAcC,gBAAiB,CACvH,IAAMkuC,EAAiBhrC,EAAQsa,UAAU,GACnC2wB,EAAoBruC,EAAAA,mBAAmBC,cAAcrL,IAAIw5C,GAC3DC,IACAjrC,EAAUirC,EAElB,CAEA,IAAMC,EAASz6C,SAASkP,cAAc,OACtCurC,EAAOtrC,UAAY,aAEfxE,EAAQ8M,YACRgjC,EAAOjpC,UAAUqH,IAAI,0BAGrBlO,EAAQ+vC,QACRD,EAAOjpC,UAAUqH,IAAI,sBAGrBlO,EAAQgwC,OACRF,EAAOjpC,UAAUqH,IAAI,qBAGrBlO,EAAQ4B,WACRkuC,EAAOjpC,UAAUqH,IAAI,yBAGrBlO,EAAQwE,WACRsrC,EAAOjpC,UAAUqH,IAAIlO,EAAQwE,WAG7BxE,EAAQ+M,SACR+iC,EAAOhrC,MAAMiI,OAAS/M,EAAQ+M,QAIlC,IAAMkjC,EAAU56C,SAASkP,cAAc,OAKvC,GAJA0rC,EAAQzrC,UAAY,sBACpBsrC,EAAOjrC,YAAYorC,GAGfrrC,EAAS,CACT,IAAMsrC,EAAiB76C,SAASkP,cAAc,OAC9C2rC,EAAe1rC,UAAY,sBAC3B0rC,EAAej4C,YAAc2M,EAC7BkrC,EAAOjrC,YAAYqrC,EACvB,CAEA,OAAOJ,CACX,GAEA,CAAA19C,IAAA,aAAAC,MAaA,WAAiD,IAAtCuS,EAAOrO,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,aAAcyJ,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAG1C,GAAI9F,KAAK4+C,oBAAsB5+C,KAAK6Q,cAAgBtB,EAAQ8M,WAGxD,OAFA5a,EAAAA,MAAMC,IAAI,4DAA6D,CAAEyS,QAAAA,GAAW,GACpFnU,KAAKid,oBAAoBjd,KAAK6Q,aAAcsD,GACrCnU,KAAK6Q,aAGhBpP,EAAAA,MAAMC,IAAI,gCAAiC,CAAEyS,QAAAA,EAAS5E,QAAAA,GAAW,GAEjE,IAAMyM,EAAW,UAAHxZ,SAAexC,KAAK2+C,iBAC5Be,EAAgB1/C,KAAK2/C,qBAAqBxrC,EAAS5E,GAmCzD,OAlCAmwC,EAAc71B,aAAa,iBAAkB7N,GAGzCzM,EAAQ5H,QAAU4H,EAAQ5H,kBAAkBi4C,aAGrB,WADAzvC,OAAO0vC,iBAAiBtwC,EAAQ5H,QAAQm4C,iBAAiB,cAE5EvwC,EAAQ5H,OAAO0M,MAAMyyB,SAAW,YAEpCv3B,EAAQ5H,OAAOyM,YAAYsrC,IAE3B96C,SAASwtB,KAAKhe,YAAYsrC,GAI9B1/C,KAAK0+C,cAAchyB,IAAI1Q,EAAU,CAC7BoB,QAASsiC,EACT/3C,OAAQ4H,EAAQ5H,QAAU/C,SAASwtB,KACnC/V,aAAc9M,EAAQ8M,WACtBnF,UAAWC,KAAKnV,QAIpBhC,KAAK6+C,uBAAsB,OAAQ7iC,GAEnChc,KAAK+/C,cAAc,OAAQ,CAAE57C,GAAI6X,EAAU7H,QAAAA,EAASjP,KAAM,YAG1DiY,YAAW,WACHuiC,EAAclpC,YACdkpC,EAActpC,UAAUqH,IAAI,sBAEpC,GAAG,IAEIzB,CACX,GAEA,CAAAra,IAAA,iBAAAC,MAOA,WAAqD,IAAtCuS,EAAOrO,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,aAAcyJ,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI9C,GAHArE,EAAAA,MAAMC,IAAI,qCAAsC,CAAEyS,QAAAA,GAAW,GAGzDnU,KAAK4+C,oBAAsB5+C,KAAK6Q,cAAgB7Q,KAAK0+C,cAAcpgC,IAAIte,KAAK6Q,cAO5E,OANApP,EAAAA,MAAMC,IAAI,8DAA+D,CACrEs+C,UAAWhgD,KAAK6Q,aAChBsD,QAAAA,GACD,GAEHnU,KAAKid,oBAAoBjd,KAAK6Q,aAAcsD,GACrCnU,KAAK6Q,aAIhB7Q,KAAKigD,wBAGL,IAAMC,EAAoBt7C,SAASsc,eAAengB,EAAAA,QAAU+vC,OAAOI,KAAKhwC,QAExE,GAAIg/C,EAAmB,CAEnBA,EAAkB7rC,MAAMC,QAAU,OAClC4rC,EAAkB9pC,UAAUqH,IAAI1c,EAAAA,QAAU+vC,OAAOC,OAAO7vC,QAGxD,IAAMu+C,EAAiBS,EAAkB9uC,cAAc,wBACvD,GAAIquC,EACAA,EAAej4C,YAAc2M,OAC1B,GAAIA,EAAS,CAEhB,IAAMgsC,EAAoBv7C,SAASkP,cAAc,OACjDqsC,EAAkBpsC,UAAY,sBAC9BosC,EAAkB34C,YAAc2M,EAChC+rC,EAAkB9rC,YAAY+rC,EAClC,CAGA,IAAMnkC,EAAW,eAAHxZ,SAAoBxC,KAAK2+C,iBAmBvC,OAhBA3+C,KAAK0+C,cAAchyB,IAAI1Q,EAAU,CAC7BoB,QAAS8iC,EACTv4C,OAAQ/C,SAASwtB,KACjBguB,cAAc,EACdlpC,UAAWC,KAAKnV,QAIpBhC,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAemL,EAGpBhc,KAAK6+C,uBAAsB,OAAQ7iC,GAEnChc,KAAK+/C,cAAc,OAAQ,CAAE57C,GAAI6X,EAAU7H,QAAAA,EAASjP,KAAM,kBAEnD8W,CACX,CAEI,IAAMA,EAAWhc,KAAKoc,WAAWjI,EAAO5O,EAAA,CACpC8W,YAAY,EACZtI,UAAWhT,EAAAA,QAAU+vC,OAAOI,KAAKhwC,OACjCob,OAAQ,MACL/M,IAID8wC,EAAargD,KAAK0+C,cAAc/4C,IAAIqW,GAY1C,OAXIqkC,IACAA,EAAWD,cAAe,EAC1BC,EAAWjjC,QAAQjZ,GAAKpD,EAAAA,QAAU+vC,OAAOI,KAAKhwC,QAIlDlB,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAemL,EAEpBhc,KAAK+/C,cAAc,OAAQ,CAAE57C,GAAI6X,EAAU7H,QAAAA,EAASjP,KAAM,aAEnD8W,CAEf,GAEA,CAAAra,IAAA,kBAAAC,MAQA,WAAsD,IAAtCuS,EAAOrO,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,aAAcyJ,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE3CrE,EAAAA,MAAMwP,eACNxP,EAAAA,MAAMC,IAAI,sCAAuC,CAAEyS,QAAAA,GAAW,GAIlE,IAAM6H,EAAWhc,KAAKoc,WAAWjI,EAAO5O,EAAA,CACpC8W,YAAY,EACZtI,UAAWhT,EAAAA,QAAU+vC,OAAOI,KAAKhwC,OACjCob,OAAQ,MACL/M,IAID8wC,EAAargD,KAAK0+C,cAAc/4C,IAAIqW,GAa1C,OAZIqkC,IACAA,EAAWD,cAAe,EAC1BC,EAAWC,eAAgB,EAC3BD,EAAWjjC,QAAQjZ,GAAKpD,EAAAA,QAAU+vC,OAAOI,KAAKhwC,QAIlDlB,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAemL,EAEpBhc,KAAK+/C,cAAc,OAAQ,CAAE57C,GAAI6X,EAAU7H,QAAAA,EAASjP,KAAM,iBAEnD8W,CACX,GAEA,CAAAra,IAAA,mBAAAC,MAOA,WAAiC,IAAhBuS,EAAOrO,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAEvB,OAAK9F,KAAK4+C,oBAAuB5+C,KAAK6Q,cAQlCsD,GACAnU,KAAKid,oBAAoBjd,KAAK6Q,aAAcsD,GAG5C1S,EAAAA,MAAMwP,eACNxP,EAAAA,MAAMC,IAAI,qDAAsD,CAAEyC,GAAInE,KAAK6Q,cAAgB,GAGxF7Q,KAAK6Q,eAfJpP,EAAAA,MAAMwP,eACNxP,EAAAA,MAAMC,IAAI,oEAAqE,KAAM,GAElF1B,KAAKugD,eAAepsC,GAanC,GAEA,CAAAxS,IAAA,iBAAAC,MAMA,WAAgC,IAAjBoa,EAAQlW,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAItB,GAHArE,EAAAA,MAAMC,IAAI,oCAAqC,CAAEsa,SAAAA,GAAY,GAGzDA,GAAYhc,KAAK6+C,uBAAuBvgC,IAAItC,GAE5C,OADAva,EAAAA,MAAMC,IAAI,kDAAmD,CAAEsa,SAAAA,GAAY,IACpE,EAIX,IAAKhc,KAAK4+C,mBAEN,OADAn9C,EAAAA,MAAMC,IAAI,yDAA0D,KAAM,IACnE,EAIX,GAAIsa,GAAYA,IAAahc,KAAK6Q,aAAc,CAC5C,IAAMwvC,EAAargD,KAAK0+C,cAAc/4C,IAAIqW,GAErCqkC,SAAAA,EAAYD,eACb3+C,EAAAA,MAAMC,IAAI,6CACN,CAAE8+C,WAAYxkC,EAAUykC,aAAczgD,KAAK6Q,cAAgB,GAC/DmL,EAAWhc,KAAK6Q,aAExB,MAAYmL,IAERA,EAAWhc,KAAK6Q,cAKpB,IAAKmL,IAAahc,KAAK0+C,cAAcpgC,IAAItC,GAAW,CAChD,IAAMkkC,EAAoBt7C,SAASsc,eAAengB,EAAAA,QAAU+vC,OAAOI,KAAKhwC,QAYxE,OAXIg/C,IACAA,EAAkB7rC,MAAMC,QAAU,OAC9B4rC,EAAkB1pC,YAClB0pC,EAAkB1pC,WAAW20B,YAAY+U,GAE7Cz+C,EAAAA,MAAMC,IAAI,mDAAoD,KAAM,IAIxE1B,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAe,MACb,CACX,CAGA,IAAM+jB,EAAU50B,KAAK0gD,oBAAoB1kC,GAazC,OAXI4Y,IAEA50B,KAAK6+C,uBAAuBphC,IAAIzB,GAGhChc,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAe,KAEpB7Q,KAAK+/C,cAAc,OAAQ,CAAE57C,GAAI6X,EAAU9W,KAAM,UAG9C0vB,CACX,GAEA,CAAAjzB,IAAA,wBAAAC,MAIA,WAAwB,IAAAmC,EAAA,KACpBtC,EAAAA,MAAMC,IAAI,2CAA4C,KAAM,GAGpCka,MAAMC,KAAK7b,KAAK0+C,cAAchtB,WACjDltB,QAAO,SAAAmtB,GAAA,IAAAC,EAAAC,EAAAF,EAAA,GAAOgvB,GAAF/uB,EAAA,GAAMA,EAAA,WAAO+uB,EAAKP,eAAiBO,EAAKtkC,UAAU,IAC9DyH,KAAI,SAAAgO,GAAI,OAAJD,EAAAC,EAAA,GAAI,EAAQ,IAGLzvB,SAAQ,SAAA8B,GACpBJ,EAAK28C,oBAAoBv8C,GAGzBJ,EAAK86C,uBAAuBphC,IAAItZ,GAEhCJ,EAAKg8C,cAAc,OAAQ,CAAE57C,GAAAA,EAAIe,KAAM,gBAC3C,IAGAN,SAASC,iBAAiB,uBAAuBxC,SAAQ,SAAAg9C,GACrDt7C,EAAK68C,qBAAqBvB,GAC1Bt7C,EAAKg8C,cAAc,OAAQ,CAAE3iC,QAAS,mBAAoBlY,KAAM,aACpE,GACJ,GAEA,CAAAvD,IAAA,aAAAC,MAMA,SAAWoa,GAAU,IAAA2F,EAAA,KAEjB,IAAK3F,EAAU,CACXva,EAAAA,MAAMC,IAAI,oCAAqC,KAAM,GACrD,IAAMm/C,EAAYjlC,MAAMC,KAAK7b,KAAK0+C,cAAcpxC,QAC5CsnB,GAAU,EAiBd,OAfAisB,EAAUx+C,SAAQ,SAAA8B,GACTwd,EAAK++B,oBAAoBv8C,KAC1BywB,GAAU,GAIdjT,EAAKk9B,uBAAuBphC,IAAItZ,GAEhCwd,EAAKo+B,cAAc,OAAQ,CAAE57C,GAAAA,EAAIe,KAAM,aAC3C,IAGAlF,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAe,KAEb+jB,CACX,CAGA,GAAI50B,KAAK6+C,uBAAuBvgC,IAAItC,GAEhC,OADAva,EAAAA,MAAMC,IAAI,6CAA8C,CAAEsa,SAAAA,GAAY,IAC/D,EAIX,GAAIA,IAAahc,KAAK6Q,aAClB,OAAO7Q,KAAK8gD,eAAe9kC,GAI/Bva,EAAAA,MAAMC,IAAI,+BAAgC,CAAEsa,SAAAA,GAAY,GACxD,IAAM4Y,EAAU50B,KAAK0gD,oBAAoB1kC,GASzC,OAPI4Y,IAEA50B,KAAK6+C,uBAAuBphC,IAAIzB,GAEhChc,KAAK+/C,cAAc,OAAQ,CAAE57C,GAAI6X,EAAU9W,KAAM,cAG9C0vB,CACX,GAEA,CAAAjzB,IAAA,sBAAAC,MAOA,SAAoBoa,GAAU,IAAA+kC,EAE1B,GAAI/gD,KAAK6+C,uBAAuBvgC,IAAItC,GAEhC,OADAva,EAAAA,MAAMC,IAAI,sEAAuE,CAAEsa,SAAAA,GAAY,IACxF,EAGX,IAAMqjC,EAASr/C,KAAK0+C,cAAc/4C,IAAIqW,GAEtC,OAAKqjC,GAMDA,EAAOe,eACPpgD,KAAK4+C,oBAAqB,EAC1B5+C,KAAK6Q,aAAe,MAIL,QAAfkwC,EAAC1B,EAAOjiC,eAAO,IAAA2jC,GAAdA,EAAgBvqC,YAQrBxW,KAAK4gD,qBAAqBvB,EAAOjiC,SACjCpd,KAAK0+C,cAAa,OAAQ1iC,GAG1Bhc,KAAK6+C,uBAAuBphC,IAAIzB,IAEzB,IAZHhc,KAAK0+C,cAAa,OAAQ1iC,GAC1Bva,EAAAA,MAAMC,IAAI,6DAA8D,CAAEsa,SAAAA,GAAY,IAC/E,KAfPva,EAAAA,MAAMC,IAAI,yCAA0C,CAAEsa,SAAAA,GAAY,IAC3D,EAyBf,GAEA,CAAAra,IAAA,uBAAAC,MAMA,SAAqB89C,GAEjBA,EAActpC,UAAUE,OAAO,uBAG/B6G,YAAW,WACHuiC,EAAclpC,YACdkpC,EAAclpC,WAAW20B,YAAYuU,EAE7C,GAAG,IACP,GAEA,CAAA/9C,IAAA,wBAAAC,MAQA,SAAsBuP,GAAuC,IAA5BgD,EAAOrO,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIyJ,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChDkW,EAAWhc,KAAKoc,WAAWjI,EAAO5O,EAAA,CACpCoC,OAAQwJ,EACRA,WAAW,EACXouC,OAAO,GACJhwC,IAKP,OAFAvP,KAAK+/C,cAAc,OAAQ,CAAE57C,GAAI6X,EAAU7H,QAAAA,EAASjP,KAAM,cAEnD8W,CACX,GAEA,CAAAra,IAAA,sBAAAC,MAOA,SAAoBoa,EAAU7H,GAAS,IAAA6sC,EAGnC,GAAIhlC,GAAYhc,KAAK6+C,uBAAuBvgC,IAAItC,GAC5C,OAAO,GAINA,GAAYhc,KAAK4+C,oBAAsB5+C,KAAK6Q,eAC7CmL,EAAWhc,KAAK6Q,aAChBpP,EAAAA,MAAMC,IAAI,yDAA0D,CAAEmP,aAAcmL,GAAY,IAGpG,IAAMqjC,EAASr/C,KAAK0+C,cAAc/4C,IAAIqW,GAEtC,IAAKqjC,EAKD,OAHIr/C,KAAKg/C,gBACLv9C,EAAAA,MAAMC,IAAI,mDAAoD,CAAEsa,SAAAA,GAAY,IAEzE,EAIX,GAAmB,QAAfglC,EAAC3B,EAAOjiC,eAAO,IAAA4jC,IAAdA,EAAgBxqC,WAIjB,OAHA/U,EAAAA,MAAMC,IAAI,qDAAsD,CAAEsa,SAAAA,GAAY,GAC9Ehc,KAAK0+C,cAAa,OAAQ1iC,GAC1Bhc,KAAK6+C,uBAAuBphC,IAAIzB,IACzB,EAGX,IAAMyjC,EAAiBJ,EAAOjiC,QAAQhM,cAAc,wBAEpD,GAAIquC,EAGA,OAFAA,EAAej4C,YAAc2M,EAC7BnU,KAAK+/C,cAAc,SAAU,CAAE57C,GAAI6X,EAAU7H,QAAAA,EAASjP,KAAM,sBACrD,EACJ,GAAIiP,EAAS,CAEhB,IAAMgsC,EAAoBv7C,SAASkP,cAAc,OAKjD,OAJAqsC,EAAkBpsC,UAAY,sBAC9BosC,EAAkB34C,YAAc2M,EAChCkrC,EAAOjiC,QAAQhJ,YAAY+rC,GAC3BngD,KAAK+/C,cAAc,SAAU,CAAE57C,GAAI6X,EAAU7H,QAAAA,EAASjP,KAAM,iBACrD,CACX,CAEA,OAAO,CACX,GAEA,CAAAvD,IAAA,YAAAC,MAKA,SAAUoa,GACN,OAAOhc,KAAK0+C,cAAcpgC,IAAItC,KACtBhc,KAAK6+C,uBAAuBvgC,IAAItC,EAC5C,GAEA,CAAAra,IAAA,4BAAAC,MAIA,WAEQ5B,KAAK6+C,uBAAuB3Y,KAAO,IAEnClmC,KAAK6+C,uBAAuBoC,OAEpC,GAEA,CAAAt/C,IAAA,gBAAAC,MAKA,SAAcoa,GAAU,IAAAklC,EACpB,IAAKllC,EAAU,OAAO,KAEtB,IAAMqjC,EAASr/C,KAAK0+C,cAAc/4C,IAAIqW,GACtC,OAAKqjC,EAOE,CACH8B,QAAQ,EACRC,SAAU/B,EAAOe,aACjB/jC,aAAcgjC,EAAOhjC,WACrBlI,QAA6D,QAAtD+sC,EAAE7B,EAAOjiC,QAAQhM,cAAc,+BAAuB,IAAA8vC,OAAA,EAApDA,EAAsD15C,YAC/D65C,IAAKlqC,KAAKnV,OAASq9C,EAAOnoC,WAAa,GACvCoqC,QAASjC,EAAOjiC,QAAQ5G,YAZjB,CACH2qC,QAAQ,EACRI,WAAYvhD,KAAK6+C,uBAAuBvgC,IAAItC,GAYxD,GAEA,CAAAra,IAAA,kBAAAC,MAIA,WAII,OAFA5B,KAAKwhD,4BAEE,CACHC,YAAazhD,KAAK0+C,cAAcxY,KAChCwb,qBAAsB1hD,KAAK6+C,uBAAuB3Y,KAClDyb,iBAAkB3hD,KAAK4+C,mBACvB/tC,aAAc7Q,KAAK6Q,aACnBmgB,WAAUM,EAAMtxB,KAAK8+C,cACrB8C,QAAShmC,MAAMC,KAAK7b,KAAK0+C,cAAchtB,WAAW5N,KAAI,SAAAmO,GAAA,IAAA4vB,EAAA3vB,EAAAL,EAAAI,EAAA,GAAE9tB,EAAE+tB,EAAA,GAAEyuB,EAAIzuB,EAAA,SAAO,CACnE/tB,GAAAA,EACAi9C,SAAUT,EAAKP,aACf/jC,aAAcskC,EAAKtkC,WACnBlI,QAA2D,QAApD0tC,EAAElB,EAAKvjC,QAAQhM,cAAc,+BAAuB,IAAAywC,OAAA,EAAlDA,EAAoDr6C,YAC7D65C,IAAKlqC,KAAKnV,OAAS2+C,EAAKzpC,WAAa,GACrCoqC,QAASX,EAAKvjC,QAAQ5G,WACzB,IAET,I,EAAC,EAAA7U,IAAA,cAAAC,MAlqBD,WAKI,OAJKsd,IACDA,EAAW,IAAIhD,GACNlZ,aAENkc,CACX,I,4FAAC,CArCqB,CAAS2C,EAAAA,eAosBnC,S,u2BCptBO,IAAMnE,EAAqB,oBAAAA,K,4FAAAvd,CAAA,KAAAud,EAAA,Q,EAAAA,E,EAAA,EAAA/b,IAAA,gBAAAC,MAQ9B,SAAqB2hB,GAAiD,IAAxCtF,EAASnY,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIuX,IAAevX,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,KAAAA,UAAA,GAEzD,IAAKyd,EAED,OADA9hB,EAAAA,MAAM6C,KAAK,8DAA+D,KAAM,GACzE,+CAIX,IAAMw9C,EAAkBv+B,EAGlBw+B,EAAiBp6B,EAAAA,YAAYC,WAAWrE,GAGxCy+B,EAAgBtkC,EAAsBukC,iBAAiBhkC,GAMvDkW,EAAS,QAAH3xB,OAHW6a,EAAkB,2BAA6B,GAGjC,kBAAA7a,OAAiBw/C,EAAa,0BAAAx/C,OAAyBmlB,EAAAA,YAAYu6B,gBAAgBJ,GAAgB,MAAAt/C,OAAKu/C,EAAc,iBAK3J,OAFAtgD,EAAAA,MAAMC,IAAI,gDAAiD,CAAE2qC,QAASlY,EAAO1F,UAAU,EAAG,KAAO,OAAS,GAEnG0F,CACX,GAEA,CAAAxyB,IAAA,mBAAAC,MAKA,WAAwC,IAAhBqc,EAASnY,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAChC,OAAKmY,EAKgB,CACjB,GAAM,aACN,GAAM,aACN,GAAM,SACN,GAAM,OACN,KAAQ,OACR,GAAM,SACN,IAAO,MACP,KAAQ,OACR,IAAO,MACP,KAAQ,OACR,IAAO,MACP,IAAO,OACP,KAAQ,OACR,GAAM,WACN,IAAO,OAGSA,EAAUE,gBAAkBF,EAAUE,cAtB/C,EAuBf,GAEA,CAAAxc,IAAA,wBAAAC,MAMA,SAA6BshB,GAA0B,IAAnBhS,EAAYpL,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChD,OAAc,IAAVod,GACQhS,EAAaixC,yBAA2B,gDAC3CnlC,QAAQ,UAAWkG,IAEhBhS,EAAakxC,wBAA0B,kDAC1CplC,QAAQ,UAAWkG,EAEhC,GAEA,CAAAvhB,IAAA,cAAAC,MAKA,SAAmBygD,GAGf,OADkBA,EAAKrlC,QAAQ,QAAS,KAE5C,GAEA,CAAArb,IAAA,oBAAAC,MAKA,SAAyBwb,GACrB,IAAKA,EAAS,OAAO,KAGjBA,EAAQgrB,aAAa,qBACrBhrB,EAAQklC,gBAAgB,oBAI5B,IAAMC,EAAenlC,EAAQ5V,YAK7B,OAFA4V,EAAQ5V,YAAc+6C,EAEfA,CACX,K,EAnH8B,O,yFAmH7B,CAnH6B,E,yhDCC3B,IAAMlkB,EAAe,kB,EAAA,SAAAA,K,4FAAAl+B,CAAA,KAAAk+B,EAAA,E,EAAA,EAAA18B,IAAA,wBAAAC,MAOxB,SAA6Bwb,EAASjM,GAClC,IAAKiM,IAAYjM,EAEb,OADA1P,EAAAA,MAAM6C,KAAK,8DAA+D,KAAM,IACzE,EAIX,IAEMk+C,EAFaplC,EAAQqlC,UACHtxC,EAAUuxC,aACmB,EAAMtlC,EAAQ4lB,aAAe,EAQlF,OALA7xB,EAAUwxC,SAAS,CACfzV,IAAKsV,EACL1sB,SAAU,YAGP,CACX,GAEA,CAAAn0B,IAAA,qBAAAC,MAKA,SAA0Bwb,GAA0B,IAAjBX,EAAQ3W,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACrCsX,IAELA,EAAQhH,UAAUqH,IAAI1c,EAAAA,QAAUgmC,WAAWwK,UAAUrwC,QACrDic,YAAW,WACPC,EAAQhH,UAAUE,OAAOvV,EAAAA,QAAUgmC,WAAWwK,UAAUrwC,OAC5D,GAAGub,GACP,GAEA,CAAA9a,IAAA,gBAAAC,MAMA,SAAqBwb,GAAuB,IAAd7N,EAAOzJ,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrC,GAAKsX,EAAL,CAEA,IASIwlC,EAASC,EAFPrzC,EAAMjK,EAAAA,EAAA,GAPK,CACbu9C,eAAgB,KAChBC,eAAgB,4BAChBC,cAAe,QACfC,UAAW,aAGiB1zC,GAC5B2zC,GAAa,EAIXC,EAAmB,SAAC96C,GAEtB,KAAImH,EAAOuzC,iBAAkB16C,EAAEV,OAAO85B,QAAQjyB,EAAOuzC,oBAKjDvzC,EAAOszC,gBAAmBz6C,EAAEV,OAAO85B,QAAQjyB,EAAOszC,iBAAtD,CAIAI,GAAa,EACb9lC,EAAQhH,UAAUqH,IAAIjO,EAAOyzC,WAG7B,IAAMnW,EAAO1vB,EAAQiV,wBACrBuwB,EAAU9V,EAAKoI,MAAQ7sC,EAAE+6C,QACzBP,EAAU/V,EAAKuW,OAASh7C,EAAEi7C,QAG1Bj7C,EAAEN,gBAXF,CAYJ,EAGMw7C,EAAmB,SAACl7C,GACtB,GAAK66C,EAAL,CAGA,IAAMM,EAAgBpmC,EAAQqmC,cAAcpxB,wBACxCqxB,EAAWF,EAActO,MAAQ7sC,EAAE+6C,QAAUR,EAC7Ce,EAAYH,EAAcH,OAASh7C,EAAEi7C,QAAUT,EAGnDa,EAAWtgD,KAAKC,IAAI,EAAGD,KAAKuZ,IAAI+mC,EAAUF,EAAch5B,MAAQpN,EAAQwmC,cACxED,EAAYvgD,KAAKC,IAAI,EAAGD,KAAKuZ,IAAIgnC,EAAWH,EAAcr5B,OAAS/M,EAAQ4lB,eAG3E5lB,EAAQ/I,MAAM6gC,MAAQ,GAAH1yC,OAAMkhD,EAAQ,MACjCtmC,EAAQ/I,MAAMgvC,OAAS,GAAH7gD,OAAMmhD,EAAS,MACnCvmC,EAAQ/I,MAAMk/B,KAAO,OACrBn2B,EAAQ/I,MAAM64B,IAAM,MAfG,CAgB3B,EAGM2W,EAAiB,WACfX,IACAA,GAAa,EACb9lC,EAAQhH,UAAUE,OAAO9G,EAAOyzC,WAExC,EAQA,OALA7lC,EAAQ3V,iBAAiB,YAAa07C,GACtCv+C,SAAS6C,iBAAiB,YAAa87C,GACvC3+C,SAAS6C,iBAAiB,UAAWo8C,GAG9B,CACH17C,QAAS,WACLiV,EAAQiF,oBAAoB,YAAa8gC,GACzCv+C,SAASyd,oBAAoB,YAAakhC,GAC1C3+C,SAASyd,oBAAoB,UAAWwhC,EAC5C,EA5EgB,CA8ExB,K,EA9HwB,O,yFA8HvB,CA9HuB,E,wYCN5Bz7C,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA6F,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,gBAAAE,EAAAlG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAnG,OAAAkG,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,IAAAA,EAAAU,UAAA,GAAAd,OAAAK,eAAAR,EAAAmG,EAAA5F,EAAAjH,KAAAiH,EAAA,WAAA4F,EAAAlG,GAAA,IAAAvI,EAAA,SAAAuI,EAAAC,GAAA,aAAAyC,EAAA1C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAQ,OAAA2F,aAAA,YAAApG,EAAA,KAAAtI,EAAAsI,EAAAyB,KAAAxB,EAAAC,GAAA,wBAAAyC,EAAAjL,GAAA,OAAAA,EAAA,UAAA+L,UAAA,kEAAAvD,EAAAmG,OAAAC,QAAArG,EAAA,CAAAsG,CAAAtG,EAAA,0BAAA0C,EAAAjL,GAAAA,EAAAA,EAAA,YAAAye,EAAAlW,EAAAD,GAAA,GAAAA,IAAA,UAAA2C,EAAA3C,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAAyD,UAAA,4EAAAzD,GAAA,YAAAA,EAAA,UAAAoW,eAAA,oEAAApW,CAAA,CAAAqW,CAAApW,EAAA,UAAAqW,IAAA,QAAArW,GAAA7D,QAAAgE,UAAAmW,QAAA9U,KAAA+U,QAAAC,UAAAra,QAAA,0BAAA6D,GAAA,QAAAqW,EAAA,mBAAArW,CAAA,cAAAyW,EAAAzW,GAAA,OAAAyW,EAAAvW,OAAAyE,eAAAzE,OAAAgC,eAAAwU,OAAA,SAAA1W,GAAA,OAAAA,EAAA4E,WAAA1E,OAAAgC,eAAAlC,EAAA,EAAAyW,EAAAzW,EAAA,UAAA2W,EAAA3W,EAAAD,GAAA,OAAA4W,EAAAzW,OAAAyE,eAAAzE,OAAAyE,eAAA+R,OAAA,SAAA1W,EAAAD,GAAA,OAAAC,EAAA4E,UAAA7E,EAAAC,CAAA,EAAA2W,EAAA3W,EAAAD,EAAA,CAIA,IAAI6W,EAAW,KAEFzN,EAAc,SAAA0N,GAevB,SAAA1N,IAAc,IAAA1N,EArBlBuE,EAAAM,EAAAP,EAwBQ,OAxBR,SAAAvI,EAAA4I,GAAA,KAAA5I,aAAA4I,GAAA,UAAAoD,UAAA,qCAqBkB3L,CAAA,KAAAsR,GArBlBnJ,EAsBQ,KAtBRM,EAAAmW,EAAAnW,EAsBQ6I,IAAA1N,EAtBRya,EAAAlW,EAAAqW,IAAAE,QAAAC,UAAAlW,EAAAP,GAAA,GAAA0W,EAAAzW,GAAAyE,aAAAnE,EAAAwF,MAAA9F,EAAAD,KAwBkB+W,iBAAiBF,IAK3Bnb,EAAKyL,OAAS,KACdzL,EAAK+/C,gBAAkB,IAAIj+B,IAC3B9hB,EAAKsa,gBAAkB,IAAIwH,IAC3B9hB,EAAKggD,aAAe,IAAIl+B,IACxB9hB,EAAKigD,SAAW,yCAChBjgD,EAAKkgD,aAAe,UACpBlgD,EAAKmgD,qBAAuB,QAG5BhlC,EAAQnb,EAAQA,GAbZya,EAAAza,EAcR,CAEA,OAzCJ,SAAAuE,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAyD,UAAA,sDAAAxD,EAAAG,UAAAD,OAAAiB,OAAApB,GAAAA,EAAAI,UAAA,CAAAsE,YAAA,CAAAnL,MAAA0G,EAAAgB,UAAA,EAAAD,cAAA,KAAAb,OAAAK,eAAAP,EAAA,aAAAgB,UAAA,IAAAjB,GAAA4W,EAAA3W,EAAAD,EAAA,CAyCIoX,CAAAhO,EAAA0N,GAzCJ9W,EAyCIoJ,EAzCJlJ,EAyCI,EAAA5G,IAAA,YAAAC,MAIA,SAAU4N,GAON,OANA/N,EAAAA,MAAMC,IAAI,8BAA+B,CAAE8N,OAAAA,GAAU,GAErDxP,KAAKwP,OAASA,EACd/N,EAAAA,MAAMC,IAAI,6BAEVD,EAAAA,MAAMC,IAAI,yCAA0C,KAAM,GACnD1B,IACX,GAEA,CAAA2B,IAAA,mBAAAC,OAAAuiD,EAAAh2C,EAAA/F,IAAA4E,MAGA,SAAAkG,IAAA,OAAA9K,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,cAAAmH,EAAAnH,KAAA,EACUhM,KAAKqb,4BAA2B,cAAAlI,EAAAnH,KAAA,EAChChM,KAAKue,aAAave,KAAKwP,OAAO0L,UAAY,OAAM,cAAA/H,EAAAtH,OAAA,UAE/C,GAAI,wBAAAsH,EAAAvF,OAAA,GAAAsF,EAAA,UACd,WALqB,OAAAixC,EAAA/1C,MAAC,KAADtI,UAAA,IAQtB,CAAAnE,IAAA,4BAAAC,OAAAwiD,EAAAj2C,EAAA/F,IAAA4E,MAGA,SAAAwH,IAAA,OAAApM,IAAAmB,MAAA,SAAAqL,GAAA,cAAAA,EAAAnH,KAAAmH,EAAA5I,MAAA,UACShM,KAAKwP,OAAQ,CAAFoF,EAAA5I,KAAA,QAC2E,MAAvFvK,EAAAA,MAAMiD,MAAM,iEAAkE,KAAM,GAC9E,IAAI2G,MAAM,iEAAgE,OAMhF,GANgFuJ,EAAAnH,KAAA,EAIhFhM,EAAAA,MAAMC,IAAI,6DAA8D,KAAM,IAG1EyO,OAAOmL,KAAM,CAAF1G,EAAA5I,KAAA,QAEXvK,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GAAGkT,EAAA5I,KAAA,gBAEE,OAApEvK,EAAAA,MAAMC,IAAI,gDAAiD,KAAM,GAAGkT,EAAA5I,KAAA,GAC9DhM,KAAKqkD,WAAW,GAAD7hD,OAAIxC,KAAKgkD,SAAQ,kBAAAxhD,OAAiBxC,KAAKikD,aAAY,sBAAoB,QAE1B,OAAlExiD,EAAAA,MAAMC,IAAI,8CAA+C,KAAM,GAAGkT,EAAA5I,KAAA,GAC5DhM,KAAKqkD,WAAW,GAAD7hD,OAAIxC,KAAKgkD,SAAQ,iCAAAxhD,OAAgCxC,KAAKkkD,qBAAoB,qCAAmC,QAGpD,OAAlFziD,EAAAA,MAAMC,IAAI,8DAA+D,KAAM,GAAGkT,EAAA/I,OAAA,UAC3E,GAAI,QAEsE,OAFtE+I,EAAAnH,KAAA,GAAAmH,EAAAlB,GAAAkB,EAAA,SAEXnT,EAAAA,MAAMiD,MAAM,0DAAyDkQ,EAAAlB,GAAS,GAAGkB,EAAA/I,OAAA,UAC1E,GAAK,yBAAA+I,EAAAhH,OAAA,GAAA4G,EAAA,mBAEnB,WA3B8B,OAAA4vC,EAAAh2C,MAAC,KAADtI,UAAA,IA6B/B,CAAAnE,IAAA,eAAAC,OAAA0iD,EAAAn2C,EAAA/F,IAAA4E,MAKA,SAAA+H,EAAmBmG,GAAQ,IAAAqpC,EAAA,OAAAn8C,IAAAmB,MAAA,SAAA0L,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAjJ,MAAA,OAiBvB,GAFMu4C,EAbU,CACZ,OAAU,MACV,KAAQ,MACR,IAAO,MACP,WAAc,aACd,GAAM,aACN,WAAc,aACd,GAAM,aACN,IAAO,aACP,IAAO,cAIoBrpC,EAASiD,gBAAkBjD,EAASiD,eAG/Dne,KAAKqe,gBAAgBC,IAAIimC,GAAiB,CAAFtvC,EAAAjJ,KAAA,eAAAiJ,EAAApJ,OAAA,UACjC,GAAI,OAI0D,OAAzEpK,EAAAA,MAAMC,IAAI,oCAADc,OAAqC+hD,GAAkB,KAAM,GAAGtvC,EAAAxH,KAAA,EAAAwH,EAAAjJ,KAAA,EAG/DhM,KAAKqkD,WAAW,GAAD7hD,OAAIxC,KAAKgkD,SAAQ,kBAAAxhD,OAAiBxC,KAAKikD,aAAY,eAAAzhD,OAAc+hD,EAAc,YAAU,OAEhB,OAD9FvkD,KAAKqe,gBAAgBZ,IAAI8mC,GACzB9iD,EAAAA,MAAMC,IAAI,4BAADc,OAA6B+hD,EAAc,iCAAiC,KAAM,GAAGtvC,EAAApJ,OAAA,UACvF,GAAI,QAGX,OAHWoJ,EAAAxH,KAAA,GAAAwH,EAAAvB,GAAAuB,EAAA,SAEXxT,EAAAA,MAAM6C,KAAK,2CAAD9B,OAA4C+hD,EAAc,wCAAwC,CAAE7/C,MAAKuQ,EAAAvB,IAAI,GACvHuB,EAAApJ,OAAA,UACO,GAAK,yBAAAoJ,EAAArH,OAAA,GAAAmH,EAAA,mBAEnB,SAnCiB8E,GAAA,OAAAyqC,EAAAl2C,MAAC,KAADtI,UAAA,IAqClB,CAAAnE,IAAA,iBAAAC,MAIA,SAAe4iD,EAAKC,GAShB,OARKzkD,KAAK0kD,gBACN1kD,KAAK0kD,cAAgB,IAAIl4B,KAGxBxsB,KAAK0kD,cAAcpmC,IAAIkmC,IACxBxkD,KAAK0kD,cAAch4B,IAAI83B,EAAKC,GAGzBzkD,KAAK0kD,cAAc/+C,IAAI6+C,EAClC,GAEA,CAAA7iD,IAAA,aAAAC,MAKA,SAAW4iD,GAAK,IAAA7iC,EAAA,KACZ,OAAO3hB,KAAK2kD,eAAeH,EAAK,IAAIn3C,SAAQ,SAACpC,EAAS25C,GAClD,GAAIjjC,EAAKmiC,gBAAgBxlC,IAAIkmC,GAEzBv5C,QAFJ,CAMAxJ,EAAAA,MAAMC,IAAI,mCAADc,OAAoCgiD,GAAO,KAAM,GAC1D,IAAM9G,EAAS94C,SAASkP,cAAc,UACtC4pC,EAAOnC,IAAMiJ,EACb9G,EAAOtwC,OAAQ,EACfswC,EAAOmH,OAAS,WACZljC,EAAKmiC,gBAAgBrmC,IAAI+mC,GAEzBv5C,GACJ,EACAyyC,EAAOoH,QAAU,WACbrjD,EAAAA,MAAMiD,MAAM,0CAADlC,OAA2CgiD,GAAO,KAAM,GACnEI,EAAO,IAAIv5C,MAAM,0BAAD7I,OAA2BgiD,IAC/C,EACA5/C,SAASmgD,KAAK3wC,YAAYspC,EAf1B,CAgBJ,IACJ,GAEA,CAAA/7C,IAAA,UAAAC,MAGA,SAAQi8C,GAAM,IAAA76B,EAAA,KACV,OAAIhjB,KAAK+jD,aAAazlC,IAAIu/B,GAEfxwC,QAAQpC,WAGnBxJ,EAAAA,MAAMC,IAAI,gCAADc,OAAiCq7C,GAAQ,KAAM,GACjD,IAAIxwC,SAAQ,SAACpC,EAAS25C,GACzB,IAAM/jC,EAAOjc,SAASkP,cAAc,QACpC+M,EAAKmkC,IAAM,aACXnkC,EAAKg9B,KAAOA,EACZh9B,EAAKgkC,OAAS,WACV7hC,EAAK+gC,aAAatmC,IAAIogC,GAEtB5yC,GACJ,EACA4V,EAAKikC,QAAU,WACXrjD,EAAAA,MAAMiD,MAAM,uCAADlC,OAAwCq7C,GAAQ,KAAM,GACjE+G,EAAO,IAAIv5C,MAAM,uBAAD7I,OAAwBq7C,IAC5C,EACAj5C,SAASmgD,KAAK3wC,YAAYyM,EAC9B,IACJ,IAnNJvY,EAmNK,EAAA3G,IAAA,cAAAC,MAxMD,WAII,OAHKsd,IACDA,EAAW,IAAIzN,GAEZyN,CACX,IAhBJ3W,GAAAgG,EAAAlG,EAAAI,UAAAF,GAAAD,GAAAiG,EAAAlG,EAAAC,GAAAE,OAAAK,eAAAR,EAAA,aAAAiB,UAAA,IAAAjB,EAAA,IAAAA,EAAAE,EAAAD,EAkGIg8C,EAhCAF,EAXAD,CAvCC,CAVsB,CAAStiC,EAAAA,c,ixBCJ7B,IAAM8F,EAAW,kB,EAAA,SAAAA,K,4FAAAxnB,CAAA,KAAAwnB,EAAA,E,EAAA,EAAAhmB,IAAA,aAAAC,MAMpB,SAAkBqjD,GACd,OAAKA,GAA4B,iBAAXA,EACfA,EACFjoC,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UACdA,QAAQ,MAAO,UACfA,QAAQ,MAAO,UACfA,QAAQ,KAAM,UAT+B,EAUtD,GAEA,CAAArb,IAAA,kBAAAC,MAKA,SAAuBsjD,GACnB,OAAKA,EACEA,EACFloC,QAAQ,KAAM,SACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QANF,EAOrB,K,EAhCoB,O,yFAgCnB,CAhCmB,E,w9DCOjB,IAAMjM,EAAkB,SAAAoO,GAsB3B,SAAApO,IAAc,IAAAhN,EAOyB,O,4FAPzB5D,CAAA,KAAA4Q,IACVhN,EAAAovC,EAAA,KAAApiC,IACKG,aAAe,CAAC,EACrBnN,EAAK4L,KAAO,KACZ5L,EAAKsb,aAAc,EAGnBtb,EAAKohD,8BAA8BphD,CACvC,CAEA,O,qRAAA0b,CAAA1O,EAAAoO,G,EAAApO,E,EAAA,EAAApP,IAAA,8BAAAC,MAIA,WACI,SAAIuO,OAAOxJ,aAAcwJ,OAAOxJ,WAAWuK,eACvCzP,EAAAA,MAAMC,IAAI,+DAAgEyO,OAAOxJ,WAAWuK,aAAc,GAC1GlR,KAAKgD,WACDmN,OAAOxJ,WAAWgJ,MAAQ,KAC1BQ,OAAOxJ,WAAWuK,cAEf,GAGf,GAEA,CAAAvP,IAAA,aAAAC,MAKA,WAA2C,IAAhC+N,EAAI7J,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMoL,EAAYpL,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpC9F,KAAK2P,KAAOA,EACZ3P,KAAKkR,aAAeA,EACpBlR,KAAKqf,aAAc,EACnB5d,EAAAA,MAAMC,IAAI,yCAADc,OAA0CmN,EAAI,cAAc3P,KAAKkR,aAAc,EAC5F,GAEA,CAAAvP,IAAA,MAAAC,MAMA,SAAID,GAA0B,IAArBo6C,EAAYj2C,UAAA1D,OAAA,QAAA2D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAOpB,OALK9F,KAAKqf,aACNrf,KAAKmlD,8BAILnlD,KAAKkR,aAAalR,KAAK2P,OAAS3P,KAAKkR,aAAalR,KAAK2P,MAAMhO,GACtD3B,KAAKkR,aAAalR,KAAK2P,MAAMhO,GAIpC3B,KAAKkR,aAAiB,IAAKlR,KAAKkR,aAAiB,GAAEvP,IACnDF,EAAAA,MAAMC,IAAI,4BAADc,OAA6Bb,EAAG,oBAAAa,OAAmBxC,KAAK2P,KAAI,6BAA6B,KAAM,GACjG3P,KAAKkR,aAAiB,GAAEvP,IAIX,OAAjBo6C,EAAwBA,EAAep6C,CAClD,GAEA,CAAAA,IAAA,gBAAAC,MAIA,WAKI,OAHK5B,KAAKqf,aACNrf,KAAKmlD,8BAEFnlD,KAAKqf,WAChB,GAEA,CAAA1d,IAAA,cAAAC,MAIA,WAKI,OAHK5B,KAAKqf,aACNrf,KAAKmlD,8BAEFnlD,KAAK2P,IAChB,GAEA,CAAAhO,IAAA,qBAAAC,MAIA,WAKI,OAHK5B,KAAKqf,aACNrf,KAAKmlD,8B,+VAET5/C,CAAA,GAAWvF,KAAKkR,aACpB,I,EAAC,EAAAvP,IAAA,cAAAC,MA9GD,WAKI,OAJKmP,EAAmBirC,YACpBjrC,EAAmBirC,UAAY,IAAIjrC,EACnCtP,EAAAA,MAAMC,IAAI,uCAAwC,KAAM,IAErDqP,EAAmBirC,SAC9B,I,4FAAC,CAjB0B,CAASn6B,EAAAA,eACpC8iB,EADS5zB,EAAkB,YAKR,K,GCdnBq0C,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBv/C,IAAjBw/C,EACH,OAAOA,EAAa7lD,QAGrB,IAAIC,EAASylD,EAAyBE,GAAY,CAGjD5lD,QAAS,CAAC,GAOX,OAHA8lD,EAAoBF,GAAU3lD,EAAQA,EAAOD,QAAS2lD,GAG/C1lD,EAAOD,OACf,CCrBA2lD,EAAoB96C,EAAI,CAAC7K,EAAS+lD,KACjC,IAAI,IAAI9jD,KAAO8jD,EACXJ,EAAoBz8C,EAAE68C,EAAY9jD,KAAS0jD,EAAoBz8C,EAAElJ,EAASiC,IAC5E6G,OAAOK,eAAenJ,EAASiC,EAAK,CAAEyH,YAAY,EAAMzD,IAAK8/C,EAAW9jD,IAE1E,ECND0jD,EAAoBz8C,EAAI,CAAC6nC,EAAKF,IAAU/nC,OAAOC,UAAUE,eAAemB,KAAK2mC,EAAKF,GCClF8U,EAAoB98C,EAAK7I,IACH,oBAAXoJ,QAA0BA,OAAOK,aAC1CX,OAAOK,eAAenJ,EAASoJ,OAAOK,YAAa,CAAEvH,MAAO,WAE7D4G,OAAOK,eAAenJ,EAAS,aAAc,CAAEkC,OAAO,GAAO,E,u+BCJ9DwG,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA3G,KAAA,EAAA7B,EAAA,mBAAA+I,OAAAA,OAAA,GAAAhJ,EAAAC,EAAAgJ,UAAA,aAAAC,EAAAjJ,EAAAkJ,eAAA,kBAAAC,EAAAnJ,EAAAoJ,aAAA,yBAAAvJ,EAAA0I,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAzG,MAAA2G,EAAAa,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAhB,EAAAD,EAAA,KAAAzI,EAAA,aAAA0I,GAAA1I,EAAA,SAAA0I,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAgB,EAAAjB,EAAAD,EAAAE,EAAAG,GAAA,IAAA3I,EAAAsI,GAAAA,EAAAI,qBAAAe,EAAAnB,EAAAmB,EAAA1J,EAAA0I,OAAAiB,OAAA1J,EAAA0I,WAAAO,EAAA,IAAAU,EAAAhB,GAAA,WAAAE,EAAA9I,EAAA,WAAA8B,MAAA+H,EAAArB,EAAAC,EAAAS,KAAAlJ,CAAA,UAAA8J,EAAAtB,EAAAD,EAAAE,GAAA,WAAArD,KAAA,SAAA2E,IAAAvB,EAAAwB,KAAAzB,EAAAE,GAAA,OAAAD,GAAA,OAAApD,KAAA,QAAA2E,IAAAvB,EAAA,EAAAD,EAAAkB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAA1K,EAAA0K,EAAAxK,GAAA,8BAAAyK,EAAA/B,OAAAgC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAG,EAAAoB,KAAAW,EAAA3K,KAAAwK,EAAAG,GAAA,IAAAE,EAAAN,EAAA5B,UAAAe,EAAAf,UAAAD,OAAAiB,OAAAa,GAAA,SAAAM,EAAAtC,GAAA,0BAAAjG,SAAA,SAAAgG,GAAAzI,EAAA0I,EAAAD,GAAA,SAAAC,GAAA,YAAAuC,QAAAxC,EAAAC,EAAA,gBAAAwC,EAAAxC,EAAAD,GAAA,SAAA0C,EAAAxC,EAAAK,EAAA7I,EAAAD,GAAA,IAAAkJ,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAM,GAAA,aAAAI,EAAA9D,KAAA,KAAAgE,EAAAF,EAAAa,IAAAE,EAAAb,EAAAtH,MAAA,OAAAmI,GAAA,UAAAiB,EAAAjB,IAAArB,EAAAoB,KAAAC,EAAA,WAAA1B,EAAA4C,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA7C,GAAAyC,EAAA,OAAAzC,EAAAvI,EAAAD,EAAA,aAAAwI,GAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAuI,EAAA4C,QAAAlB,GAAAoB,MAAA,SAAA7C,GAAAY,EAAAtH,MAAA0G,EAAAvI,EAAAmJ,EAAA,aAAAZ,GAAA,OAAAyC,EAAA,QAAAzC,EAAAvI,EAAAD,EAAA,IAAAA,EAAAkJ,EAAAa,IAAA,KAAAtB,EAAAK,EAAA,gBAAAhH,MAAA,SAAA0G,EAAAI,GAAA,SAAA0C,IAAA,WAAA/C,GAAA,SAAAA,EAAAE,GAAAwC,EAAAzC,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAA4C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAtB,EAAAE,EAAAG,GAAA,IAAAE,EAAAmB,EAAA,gBAAAhK,EAAAD,GAAA,GAAA8I,IAAAqB,EAAA,MAAAoB,MAAA,mCAAAzC,IAAAsB,EAAA,cAAAnK,EAAA,MAAAD,EAAA,OAAA8B,MAAA0G,EAAAgD,MAAA,OAAA5C,EAAA6C,OAAAxL,EAAA2I,EAAAmB,IAAA/J,IAAA,KAAAkJ,EAAAN,EAAA8C,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAN,GAAA,GAAAQ,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAR,EAAA6C,OAAA7C,EAAAgD,KAAAhD,EAAAiD,MAAAjD,EAAAmB,SAAA,aAAAnB,EAAA6C,OAAA,IAAA3C,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAAmB,IAAAnB,EAAAkD,kBAAAlD,EAAAmB,IAAA,gBAAAnB,EAAA6C,QAAA7C,EAAAmD,OAAA,SAAAnD,EAAAmB,KAAAjB,EAAAqB,EAAA,IAAAK,EAAAV,EAAAvB,EAAAE,EAAAG,GAAA,cAAA4B,EAAApF,KAAA,IAAA0D,EAAAF,EAAA4C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAvI,MAAA0I,EAAAT,IAAAyB,KAAA5C,EAAA4C,KAAA,WAAAhB,EAAApF,OAAA0D,EAAAsB,EAAAxB,EAAA6C,OAAA,QAAA7C,EAAAmB,IAAAS,EAAAT,IAAA,YAAA4B,EAAApD,EAAAE,GAAA,IAAAG,EAAAH,EAAAgD,OAAA3C,EAAAP,EAAAU,SAAAL,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAiD,SAAA,eAAA9C,GAAAL,EAAAU,SAAA,SAAAR,EAAAgD,OAAA,SAAAhD,EAAAsB,IAAAvB,EAAAmD,EAAApD,EAAAE,GAAA,UAAAA,EAAAgD,SAAA,WAAA7C,IAAAH,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAApD,EAAA,aAAAyB,EAAA,IAAApK,EAAA6J,EAAAhB,EAAAP,EAAAU,SAAAR,EAAAsB,KAAA,aAAA9J,EAAAmF,KAAA,OAAAqD,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA9J,EAAA8J,IAAAtB,EAAAiD,SAAA,KAAArB,EAAA,IAAArK,EAAAC,EAAA8J,IAAA,OAAA/J,EAAAA,EAAAwL,MAAA/C,EAAAF,EAAA0D,YAAAjM,EAAA8B,MAAA2G,EAAAyD,KAAA3D,EAAA4D,QAAA,WAAA1D,EAAAgD,SAAAhD,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,GAAAC,EAAAiD,SAAA,KAAArB,GAAArK,GAAAyI,EAAAgD,OAAA,QAAAhD,EAAAsB,IAAA,IAAAiC,UAAA,oCAAAvD,EAAAiD,SAAA,KAAArB,EAAA,UAAA+B,EAAA5D,GAAA,IAAAD,EAAA,CAAA8D,OAAA7D,EAAA,SAAAA,IAAAD,EAAA+D,SAAA9D,EAAA,SAAAA,IAAAD,EAAAgE,WAAA/D,EAAA,GAAAD,EAAAiE,SAAAhE,EAAA,SAAAiE,WAAAC,KAAAnE,EAAA,UAAAoE,EAAAnE,GAAA,IAAAD,EAAAC,EAAAoE,YAAA,GAAArE,EAAAnD,KAAA,gBAAAmD,EAAAwB,IAAAvB,EAAAoE,WAAArE,CAAA,UAAAqB,EAAApB,GAAA,KAAAiE,WAAA,EAAAJ,OAAA,SAAA7D,EAAAjG,QAAA6J,EAAA,WAAAS,OAAA,YAAAjC,EAAArC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAvI,GAAA,GAAAyI,EAAA,OAAAA,EAAAuB,KAAAzB,GAAA,sBAAAA,EAAA2D,KAAA,OAAA3D,EAAA,IAAAuE,MAAAvE,EAAAjG,QAAA,KAAAwG,GAAA,EAAA7I,EAAA,SAAAiM,IAAA,OAAApD,EAAAP,EAAAjG,QAAA,GAAAsG,EAAAoB,KAAAzB,EAAAO,GAAA,OAAAoD,EAAApK,MAAAyG,EAAAO,GAAAoD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,SAAAjM,EAAAiM,KAAAjM,CAAA,YAAA+L,UAAAd,EAAA3C,GAAA,2BAAA+B,EAAA3B,UAAA4B,EAAAzB,EAAA+B,EAAA,eAAA/I,MAAAyI,EAAAhB,cAAA,IAAAT,EAAAyB,EAAA,eAAAzI,MAAAwI,EAAAf,cAAA,IAAAe,EAAAyC,YAAAjN,EAAAyK,EAAAnB,EAAA,qBAAAb,EAAAyE,oBAAA,SAAAxE,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAyE,YAAA,QAAA1E,IAAAA,IAAA+B,GAAA,uBAAA/B,EAAAwE,aAAAxE,EAAAnH,MAAA,EAAAmH,EAAA2E,KAAA,SAAA1E,GAAA,OAAAE,OAAAyE,eAAAzE,OAAAyE,eAAA3E,EAAA+B,IAAA/B,EAAA4E,UAAA7C,EAAAzK,EAAA0I,EAAAY,EAAA,sBAAAZ,EAAAG,UAAAD,OAAAiB,OAAAkB,GAAArC,CAAA,EAAAD,EAAA8E,MAAA,SAAA7E,GAAA,OAAA4C,QAAA5C,EAAA,EAAAsC,EAAAE,EAAArC,WAAA7I,EAAAkL,EAAArC,UAAAO,GAAA,0BAAAX,EAAAyC,cAAAA,EAAAzC,EAAA+E,MAAA,SAAA9E,EAAAC,EAAAG,EAAAE,EAAA7I,QAAA,IAAAA,IAAAA,EAAAsN,SAAA,IAAAvN,EAAA,IAAAgL,EAAAvB,EAAAjB,EAAAC,EAAAG,EAAAE,GAAA7I,GAAA,OAAAsI,EAAAyE,oBAAAvE,GAAAzI,EAAAA,EAAAkM,OAAAb,MAAA,SAAA7C,GAAA,OAAAA,EAAAgD,KAAAhD,EAAA1G,MAAA9B,EAAAkM,MAAA,KAAApB,EAAAD,GAAA/K,EAAA+K,EAAAzB,EAAA,aAAAtJ,EAAA+K,EAAA7K,GAAA,0BAAAF,EAAA+K,EAAA,qDAAAtC,EAAAiF,KAAA,SAAAhF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAiE,KAAA9D,GAAA,OAAAH,EAAAgF,UAAA,SAAAvB,IAAA,KAAAzD,EAAAnG,QAAA,KAAAkG,EAAAC,EAAAiF,MAAA,GAAAlF,KAAAD,EAAA,OAAA2D,EAAApK,MAAA0G,EAAA0D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAA3D,EAAAqC,OAAAA,EAAAhB,EAAAjB,UAAA,CAAAsE,YAAArD,EAAAiD,MAAA,SAAAtE,GAAA,QAAAoF,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAArD,EAAA,KAAAgD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAvB,EAAA,KAAAiE,WAAAlK,QAAAoK,IAAApE,EAAA,QAAAE,KAAA,WAAAA,EAAAmF,OAAA,IAAAhF,EAAAoB,KAAA,KAAAvB,KAAAqE,OAAArE,EAAAoF,MAAA,WAAApF,GAAAD,EAAA,EAAAsF,KAAA,gBAAAtC,MAAA,MAAAhD,EAAA,KAAAiE,WAAA,GAAAG,WAAA,aAAApE,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAvD,GAAA,QAAAiD,KAAA,MAAAjD,EAAA,IAAAE,EAAA,cAAAuF,EAAApF,EAAAE,GAAA,OAAA9I,EAAAoF,KAAA,QAAApF,EAAA+J,IAAAxB,EAAAE,EAAAyD,KAAAtD,EAAAE,IAAAL,EAAAgD,OAAA,OAAAhD,EAAAsB,IAAAvB,KAAAM,CAAA,SAAAA,EAAA,KAAA2D,WAAAnK,OAAA,EAAAwG,GAAA,IAAAA,EAAA,KAAA7I,EAAA,KAAAwM,WAAA3D,GAAA9I,EAAAC,EAAA2M,WAAA,YAAA3M,EAAAoM,OAAA,OAAA2B,EAAA,UAAA/N,EAAAoM,QAAA,KAAAsB,KAAA,KAAAzE,EAAAN,EAAAoB,KAAA/J,EAAA,YAAAmJ,EAAAR,EAAAoB,KAAA/J,EAAA,iBAAAiJ,GAAAE,EAAA,SAAAuE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,WAAAqB,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,SAAArD,GAAA,QAAAyE,KAAA1N,EAAAqM,SAAA,OAAA0B,EAAA/N,EAAAqM,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA1N,EAAAsM,WAAA,OAAAyB,EAAA/N,EAAAsM,WAAA,KAAAR,OAAA,SAAAvD,EAAAD,GAAA,QAAAE,EAAA,KAAAgE,WAAAnK,OAAA,EAAAmG,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA2D,WAAAhE,GAAA,GAAAK,EAAAuD,QAAA,KAAAsB,MAAA/E,EAAAoB,KAAAlB,EAAA,oBAAA6E,KAAA7E,EAAAyD,WAAA,KAAAtM,EAAA6I,EAAA,OAAA7I,IAAA,UAAAuI,GAAA,aAAAA,IAAAvI,EAAAoM,QAAA9D,GAAAA,GAAAtI,EAAAsM,aAAAtM,EAAA,UAAAD,EAAAC,EAAAA,EAAA2M,WAAA,UAAA5M,EAAAoF,KAAAoD,EAAAxI,EAAA+J,IAAAxB,EAAAtI,GAAA,KAAAwL,OAAA,YAAAS,KAAAjM,EAAAsM,WAAAlC,GAAA,KAAA4D,SAAAjO,EAAA,EAAAiO,SAAA,SAAAzF,EAAAD,GAAA,aAAAC,EAAApD,KAAA,MAAAoD,EAAAuB,IAAA,gBAAAvB,EAAApD,MAAA,aAAAoD,EAAApD,KAAA,KAAA8G,KAAA1D,EAAAuB,IAAA,WAAAvB,EAAApD,MAAA,KAAA2I,KAAA,KAAAhE,IAAAvB,EAAAuB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA1D,EAAApD,MAAAmD,IAAA,KAAA2D,KAAA3D,GAAA8B,CAAA,EAAA6D,OAAA,SAAA1F,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA8D,aAAA/D,EAAA,YAAAyF,SAAAxF,EAAAmE,WAAAnE,EAAA+D,UAAAG,EAAAlE,GAAA4B,CAAA,kBAAA7B,GAAA,QAAAD,EAAA,KAAAkE,WAAAnK,OAAA,EAAAiG,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAgE,WAAAlE,GAAA,GAAAE,EAAA4D,SAAA7D,EAAA,KAAAI,EAAAH,EAAAmE,WAAA,aAAAhE,EAAAxD,KAAA,KAAA0D,EAAAF,EAAAmB,IAAA4C,EAAAlE,EAAA,QAAAK,CAAA,QAAAyC,MAAA,0BAAA4C,cAAA,SAAA5F,EAAAE,EAAAG,GAAA,YAAA8C,SAAA,CAAAzC,SAAA2B,EAAArC,GAAA0D,WAAAxD,EAAA0D,QAAAvD,GAAA,cAAA6C,SAAA,KAAA1B,IAAAvB,GAAA6B,CAAA,GAAA9B,CAAA,UAAA6F,EAAAxF,EAAAJ,EAAAD,EAAAE,EAAAK,EAAA9I,EAAAkJ,GAAA,QAAAjJ,EAAA2I,EAAA5I,GAAAkJ,GAAAE,EAAAnJ,EAAA6B,KAAA,OAAA8G,GAAA,YAAAL,EAAAK,EAAA,CAAA3I,EAAAuL,KAAAhD,EAAAY,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA5C,EAAAK,EAAA,UAAAuF,EAAAzF,GAAA,sBAAAJ,EAAA,KAAAD,EAAAvC,UAAA,WAAAuH,SAAA,SAAA9E,EAAAK,GAAA,IAAA9I,EAAA4I,EAAA0F,MAAA9F,EAAAD,GAAA,SAAAgG,EAAA3F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,OAAA5F,EAAA,UAAA4F,EAAA5F,GAAAwF,EAAApO,EAAAyI,EAAAK,EAAAyF,EAAAC,EAAA,QAAA5F,EAAA,CAAA2F,OAAA,OAeA,IAAIq3C,EAA2B,KAGzBrsC,EAAoBK,EAAAA,kBAAkB1I,cAG5C,SAAS20C,IAES/gD,SAASC,iBAAiB,aAElCxC,SAAQ,SAAAm7B,GAGV,IADqBA,EAAKhnB,WAAWpF,cAAc,uBACnD,CAGA,IAAMw0C,EAAgBhhD,SAASkP,cAAc,OAC7C8xC,EAAc7xC,UAAY,qBAC1B6xC,EAAcvxC,MAAMu1B,QAAU,qEAG9Bgc,EAAc1xC,UAAY,oKAG1BspB,EAAKhnB,WAAWC,aAAamvC,EAAepoB,EAAK2W,YAXzB,CAY5B,GACJ,CAGAvvC,SAAS6C,iBAAiB,mBAAoBk+C,GAG9Cx1C,OAAO1I,iBAAiB,OAAQk+C,GAEhCx1C,OAAO01C,iBAAgB13C,EAAA/F,IAAA4E,MAAG,SAAAkG,IAAA,IAAApE,EAAAC,EAAAC,EAAAY,EAAAC,EAAAoM,EAAAnL,EAAAg1C,EAAAC,EAAAl1C,EAAA5B,EAAAC,EAAAiF,EAAAjE,EAAA81C,EAAAC,EAAAC,EAAA10C,EAAAE,EAAAmE,EAAAE,EAAAowC,EAAAC,EAAAj1C,EAAAk1C,EAAAC,EAAAC,EAAAC,EAAAn2C,EAAAnQ,EAAAumD,EAAAnb,EAAA9zB,EAAAkvC,EAAA7yC,EAAAwgB,EAAA,OAAAjsB,IAAAmB,MAAA,SAAA4J,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAnH,MAAA,OAgElB,GA9DA4D,GAAQ,EACRC,EAAW,EAGXM,OAAOxJ,kBAEgC,IAA5BwJ,OAAOxJ,WAAWiJ,OACzBA,EAAQO,OAAOxJ,WAAWiJ,MAC1BC,EAAWM,OAAOxJ,WAAWkJ,UAAY,GAGpCM,OAAOxJ,WAAW6I,aAAoD,IAAnCW,OAAOxJ,WAAW6I,OAAOI,OACjEA,EAAQO,OAAOxJ,WAAW6I,OAAOI,MACjCC,EAAWM,OAAOxJ,WAAW6I,OAAOK,UAAY,GAG3CM,OAAOxJ,WAAWiuB,SAAWzkB,OAAOxJ,WAAW6I,SACpDI,EAAQO,OAAOxJ,WAAW6I,OAAOI,QAAS,EAC1CC,EAAWM,OAAOxJ,WAAW6I,OAAOK,UAAY,IAKxDqmC,QAAQx0C,IAAI,kCAAmC,CAC3CilD,yBAA0Bx2C,OAAOxJ,WACjCigD,gBAAiBz2C,OAAOxJ,WAAa6B,OAAO8E,KAAK6C,OAAOxJ,YAAc,OACtEkgD,YAA8B,QAAnB/3C,EAAEqB,OAAOxJ,kBAAU,IAAAmI,OAAA,EAAjBA,EAAmBc,MAChCk3C,YAA8B,QAAnB/3C,EAAEoB,OAAOxJ,kBAAU,IAAAoI,GAAQ,QAARA,EAAjBA,EAAmBS,cAAM,IAAAT,OAAA,EAAzBA,EAA2Ba,MACxCm3C,WAAYn3C,EACZo3C,cAAen3C,IAGnBpO,EAAAA,MAAMuB,WAAW4M,EAAO,eAAgBC,GAGlCoM,EAAgBC,EAAAA,cAAclL,cAE9BF,EAAqBC,EAAAA,mBAAmBC,cAG9C20C,IAGqB,QAAjB32C,EAAAmB,OAAOxJ,kBAAU,IAAAqI,GAAjBA,EAAmBkC,eAAiBJ,EAAmBG,kBACjD60C,EAAa31C,OAAOxJ,WAAWgJ,MAAQ,KAC7ClO,EAAAA,MAAMC,IAAI,kDAADc,OAAmDsjD,GAAc,KAAM,GAChFh1C,EAAmB9N,WAAW8iD,EAAY31C,OAAOxJ,WAAWuK,eAI1D60C,EAAiBj1C,EAAmBnL,IAAI,cAAe,mBAIvDkL,EAAeoL,EAAcgrC,iBAAiBlB,GAAe5yC,EAAA1F,KAAA,GAI/DhM,EAAAA,MAAMC,IAAI,wCAAyC,KAAM,GAEzDua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,iBAAkB,uBAGpE,QADrBsJ,EACIkB,OAAOxJ,kBAAU,IAAAsI,IAAjBA,EAAmByB,YAAW,CAAAyC,EAAAnH,KAAA,SAMa,OAJrCmI,EAAUrD,EAAmBnL,IAAI,wBAAyB,kDAChEuQ,EAAAA,SAASkiB,YAAYr3B,EAAAA,QAAUC,KAAK6vC,gBAAgB3vC,OAAQiT,EAAS,QAGrE8H,EAAc6kC,eAAejwC,GAAcsC,EAAAtH,OAAA,kBAWqF,OAXrFsH,EAAA1F,KAAA,GAW3CwO,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,uBAAwB,iCAAiCwN,EAAAnH,KAAA,GACtGqN,EAAkBM,cAAa,QAAnDzJ,EAAWiD,EAAAzH,KACjBjK,EAAAA,MAAMC,IAAI,0BAA2BwO,EAAa,GAG9CC,OAAOxJ,aAAewJ,OAAOxJ,WAAWuJ,cACxCC,OAAOxJ,WAAWuJ,YAAcA,GACnCiD,EAAAnH,KAAA,iBAAAmH,EAAA1F,KAAA,GAAA0F,EAAAO,GAAAP,EAAA,UAED1R,EAAAA,MAAM6C,KAAK,iDAAgD6O,EAAAO,GAAS,GAAG,WAItD,QAJsDxE,EAIvEiB,OAAOxJ,kBAAU,IAAAuI,IAAjBA,EAAmBwB,YAAW,CAAAyC,EAAAnH,KAAA,SAMa,OAJrCmI,EAAUrD,EAAmBnL,IAAI,wBAAyB,kDAChEuQ,EAAAA,SAASkiB,YAAYr3B,EAAAA,QAAUC,KAAK6vC,gBAAgB3vC,OAAQiT,EAAS,QAGrE8H,EAAc6kC,eAAejwC,GAAcsC,EAAAtH,OAAA,sBAM3CsE,OAAOjQ,WAAY,CAAFiT,EAAAnH,KAAA,SAEiH,GADlIvK,EAAAA,MAAMC,IAAI,gCAAiC,KAAM,GACjDua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,qBAAsB,qCAEpD,mBAA9BwK,OAAOjQ,WAAWiI,QAAsB,CAAAgL,EAAAnH,KAAA,gBAAAmH,EAAAnH,KAAA,GACzCmE,OAAOjQ,WAAWiI,UAAS,QAErCgI,OAAOjQ,WAAa,KAAK,QAiByC,GAblEiQ,OAAO+2C,sBACPzlD,EAAAA,MAAMC,IAAI,iCAAkC,KAAM,GACA,mBAAvCyO,OAAO+2C,oBAAoB/+C,SAClCgI,OAAO+2C,oBAAoB/+C,UAE/BgI,OAAO+2C,oBAAsB,MAIjCzlD,EAAAA,MAAMC,IAAI,4BAA6B,KAAM,GAG7Cua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,mBAAoB,iCACrFsgD,EAAmBx2C,EAAAA,YAAY03C,eAAeh3C,OAAOxJ,aACrCsvC,QAAS,CAAF9iC,EAAAnH,KAAA,SAEkB,OAD3CvK,EAAAA,MAAMiD,MAAMuhD,EAAiBvhD,OAC7BuX,EAAc6kC,eAAejwC,GAAcsC,EAAAtH,OAAA,kBAsC/C,GAjCApK,EAAAA,MAAMC,IAAI,wBAAyB+N,EAAAA,YAAY23C,iBAAiBj3C,OAAOxJ,YAAa,GAGpFlF,EAAAA,MAAMC,IAAI,qCAAsC,KAAM,GACtDua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,uBAAwB,6BAGzFugD,EAAaz2C,EAAAA,YAAY43C,oBAAoBl3C,OAAOxJ,aAGpD6K,EAAiBC,EAAAA,eAAeT,eACvBs2C,UAAU,CACrBhoC,gBAAiBA,EACjBtK,aAAckxC,EAAW3wC,KACzBgyC,mBAAoBrB,EAAW5wC,OAC/B4F,SAAUzL,EAAAA,YAAY+3C,iBAAiBr3C,OAAOxJ,WAAWgK,SAAU,UAIjEe,EAAeC,EAAAA,aAAaX,eACrBhO,WAAW,CACpB8M,MAAOK,OAAOxJ,WAAWmJ,OAC1B0B,GAGH/P,EAAAA,MAAMC,IAAI,6CAA8C,KAAM,GAC9Dua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,cAAe,6BAGhFkQ,EAAmBjR,SAASsc,eAAengB,EAAAA,QAAUwR,UAAUC,QAAQtR,QACvE6U,EAAgBnR,SAASsc,eAAengB,EAAAA,QAAUC,KAAKuR,UAAUrR,UACjEilD,EAAgBtwC,IAAqBE,GAGxB,CAAF5C,EAAAnH,KAAA,SAeb,OAdAvK,EAAAA,MAAMC,IAAI,gEAAiE,KAAM,IAG3E0kD,EAAgB,IAAIzd,EAAAA,iBAAiB,CACvCp5B,QAASY,OAAOxJ,YAAc,CAAC,KAIrB3D,aAGd0iD,EAA2BU,EAC3Bj2C,OAAO+2C,oBAAsBd,EAE7BjzC,EAAAnH,KAAA,GACM,IAAIqB,SAAQ,SAAApC,GAAO,OAAIkS,WAAWlS,EAAS,GAAG,IAAC,QAYzD,GARAxJ,EAAAA,MAAMC,IAAI,uCAAwC,KAAM,GACxDua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,yBAA0B,+BAG7FwL,EAAYvM,SAASwM,cAAcrQ,EAAAA,QAAUC,KAAKqQ,QAClDg1C,EAAW,EACTC,EAAc,GAGhBH,EAAe,CAAFhzC,EAAAnH,KAAA,oBACLmF,KAAak1C,EAAWC,GAAW,CAAAnzC,EAAAnH,KAAA,SAC4E,OAAnHvK,EAAAA,MAAMC,IAAI,qBAADc,OAAsBzB,EAAAA,QAAUC,KAAKqQ,OAAM,wBAAA7O,OAAuB6jD,EAAW,EAAC,KAAA7jD,OAAI8jD,GAAe,KAAM,GAAGnzC,EAAAnH,KAAA,GAC7G,IAAIqB,SAAQ,SAAApC,GAAO,OAAIkS,WAAWlS,EAAS,IAAI,IAAC,QACtDkG,EAAYvM,SAASwM,cAAcrQ,EAAAA,QAAUC,KAAKqQ,QAClDg1C,IAAWlzC,EAAAnH,KAAA,oBAIdmF,EAAW,CAAFgC,EAAAnH,KAAA,SAEiC,OAD3CvK,EAAAA,MAAMiD,MAAM,qBAADlC,OAAsBzB,EAAAA,QAAUC,KAAKqQ,OAAM,qBAAA7O,OAAoB6jD,EAAQ,cAClFpqC,EAAc6kC,eAAejwC,GAAcsC,EAAAtH,OAAA,kBA4D/C,OAvDM06C,EAAiB3hD,SAASwM,cAAcrQ,EAAAA,QAAU+vC,OAAOI,SAE3DqV,EAAelyC,MAAMC,QAAU,OAC/B7S,EAAAA,MAAMC,IAAI,yBAA0B,KAAM,IAG1CyP,IACAA,EAAUkD,MAAMC,QAAU,OAC1B7S,EAAAA,MAAMC,IAAI,0BAA2B,KAAM,IAKzC8kD,EAAoB3L,EAAAA,kBAAkB7pC,cAGtCX,EAAoBm2C,EAAkB7gD,IAAI,qBAAqB,GACrElE,EAAAA,MAAMC,IAAI,2BAADc,OAA4B6N,EAAiB,2BAA2B,KAAM,GAGjFnQ,EAAa,IAAI2O,EAAAA,WAAW,CAE9BhN,SAAU2kD,EAAkB7gD,IAAI,YAChC0K,kBAAmBA,EAEnBC,UAAWk2C,EAAkB7gD,IAAI,YAAa,IAC9C4K,aAAci2C,EAAkB7gD,IAAI,eAAgB,IACpD6K,YAAag2C,EAAkB7gD,IAAI,cAAe,IAClD8K,YAAa+1C,EAAkB7gD,IAAI,cAAe,IAClD+K,YAAa81C,EAAkB7gD,IAAI,eAAe,GAClDgL,SAAU61C,EAAkB7gD,IAAI,YAGhC6L,eAAgBA,EAChBE,aAAcA,EACd2H,kBAAmBA,EAGnBxI,aAAcA,IAIlBV,OAAOjQ,WAAaA,EAGhBimD,GAAiBT,IACjBA,EAAyB+B,cAAcvnD,GAEvCA,EAAW4Z,oBAAoB4rC,IAInCjkD,EAAAA,MAAMC,IAAI,sCAAuC,KAAM,GACvDua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,mBAAoB,yBAE3FwN,EAAAnH,KAAA,IACMwF,EAAe6J,4BAA2B,SAG4D,OAA5GY,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,eAAgB,qBAAqBwN,EAAAnH,KAAA,IACtG0F,EAAag2C,mBAAkB,SAMrC,OAHAjmD,EAAAA,MAAMC,IAAI,+BAAgC,KAAM,GAChDua,EAAcgB,oBAAoBpM,EAAcC,EAAmBnL,IAAI,iBAAkB,uBAEzFwN,EAAAnH,KAAA,IACM9L,EAAW8C,aAAY,SAYc,OATrCyjD,EAAuB7hD,SAASwM,cAAcrQ,EAAAA,QAAUC,KAAKuR,aAE/Dk0C,EAAqBrwC,UAAUqH,IAAI1c,EAAAA,QAAUomB,OAAOqqB,OAAOtwC,QAI/DO,EAAAA,MAAMC,IAAI,4BAA6B,KAAM,GAG7Cua,EAAc6kC,eAAejwC,GAAcsC,EAAAtH,OAAA,SAEpC3L,GAAU,SAAAiT,EAAA1F,KAAA,IAAA0F,EAAAw0C,GAAAx0C,EAAA,UAEjB1R,EAAAA,MAAMiD,MAAM,kCAAiCyO,EAAAw0C,KACvCrc,EAAgB1mC,SAASwM,cAAcrQ,EAAAA,QAAUC,KAAKqQ,WAGlDmG,EAAeD,EAAAA,QAAavG,cAG5B01C,EAAa51C,EAAmBnL,IAAI,mBAAoB,sBACxDkO,EAAe,yBAAHrR,OACRkkD,EAAU,8BAAAlkD,OACX2Q,EAAAw0C,cAAiBt8C,MAAQ8H,EAAAw0C,GAAMxzC,QAAUzF,OAAMyE,EAAAw0C,IAAO,sBAGzDtzB,EAAe7c,EAAaud,UAAUlhB,EAAc,CACtDkE,QAAS,EACTH,WAAW,EACX7D,UAAW,cAIfu3B,EAAcp3B,UAAY,GAC1Bo3B,EAAcl3B,YAAYigB,GAC1BiX,EAAcj3B,MAAMC,QAAU,QAIlC2H,EAAc6kC,eAAejwC,GAAc,0BAAAsC,EAAAvF,OAAA,GAAAsF,EAAA,6BAMnD/C,OAAOw4B,iBAAmBA,EAAAA,iBAI1Bx4B,OAAO+L,cAAgBA,EAAAA,cAGvB/L,OAAOY,mBAAqBA,EAAAA,mBAG5BZ,OAAOoH,aAAeA,EAAAA,QAGtBpH,OAAO0qC,kBAAoBA,EAAAA,iB","sources":["webpack://diff-files/webpack/universalModuleDefinition","webpack://diff-files/./src/components/ChunkManager.js","webpack://diff-files/./src/components/DiffNavigator.js","webpack://diff-files/./src/components/DiffViewer.js","webpack://diff-files/./src/components/MergeHandler.js","webpack://diff-files/./src/components/SyntaxHighlighter.js","webpack://diff-files/./src/components/ThemeManager.js","webpack://diff-files/./src/components/ThemeSelector.js","webpack://diff-files/./src/components/ThemeToggle.js","webpack://diff-files/./src/components/chunks/ChunkRenderer.js","webpack://diff-files/./src/components/chunks/ChunkSelectionHandler.js","webpack://diff-files/./src/components/chunks/ChunkVisualStateManager.js","webpack://diff-files/./src/components/chunks/MergeContentGenerator.js","webpack://diff-files/./src/components/merge/MergeOperationHandler.js","webpack://diff-files/./src/components/merge/MergePreviewManager.js","webpack://diff-files/./src/components/merge/MergeUIController.js","webpack://diff-files/./src/components/modal/ModalManager.js","webpack://diff-files/./src/components/navigator/ConflictNavigator.js","webpack://diff-files/./src/components/navigator/NavigationCounter.js","webpack://diff-files/./src/components/navigator/NavigationUIBuilder.js","webpack://diff-files/./src/components/syntax/CopyButton.js","webpack://diff-files/./src/components/viewer/BrowserUIManager.js","webpack://diff-files/./src/components/viewer/IconMarkerManager.js","webpack://diff-files/./src/components/viewer/LayoutManager.js","webpack://diff-files/./src/components/viewer/ScrollSynchronizer.js","webpack://diff-files/./src/constants/Selectors.js","webpack://diff-files/./src/utils/AlertManager.js","webpack://diff-files/./src/utils/BaseSingleton.js","webpack://diff-files/./src/utils/ChunkUtils.js","webpack://diff-files/./src/utils/ConfigUtils.js","webpack://diff-files/./src/utils/DOMUtils.js","webpack://diff-files/./src/utils/Debug.js","webpack://diff-files/./src/utils/DiffConfigManager.js","webpack://diff-files/./src/utils/EndpointDiscovery.js","webpack://diff-files/./src/utils/IconRegistry.js","webpack://diff-files/./src/utils/LoaderManager.js","webpack://diff-files/./src/utils/MergeContentFormatter.js","webpack://diff-files/./src/utils/NavigationUtils.js","webpack://diff-files/./src/utils/ResourceLoader.js","webpack://diff-files/./src/utils/StringUtils.js","webpack://diff-files/./src/utils/TranslationManager.js","webpack://diff-files/webpack/bootstrap","webpack://diff-files/webpack/runtime/define property getters","webpack://diff-files/webpack/runtime/hasOwnProperty shorthand","webpack://diff-files/webpack/runtime/make namespace object","webpack://diff-files/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","// ChunkManager.js - Manages diff chunks and coordinates chunk components\nimport { Debug } from '../utils/Debug';\nimport { ChunkUtils } from '../utils/ChunkUtils';\nimport Selectors from '../constants/Selectors';\n\nimport { ChunkRenderer } from './chunks/ChunkRenderer';\nimport { ChunkSelectionHandler } from './chunks/ChunkSelectionHandler';\nimport { MergeContentGenerator } from './chunks/MergeContentGenerator';\n\n/**\n * Manages diff chunks and coordinates chunk components\n */\nexport class ChunkManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.chunks = [];\n        this.oldContent = [];\n        this.newContent = [];\n        this.chunkElements = [];\n\n        // Create sub-components\n        this.renderer = new ChunkRenderer(this);\n        this.selectionHandler = new ChunkSelectionHandler(this);\n        this.contentGenerator = new MergeContentGenerator(this);\n\n        // Define selection state constants\n        this.SELECTED_STATE = Selectors.DIFF.CHUNK_SELECTED.name();\n        this.UNSELECTED_STATE = Selectors.DIFF.CHUNK_UNSELECTED.name();\n\n        // Performance tracking\n        this._performanceMetrics = {\n            initTime: 0,\n            renderTime: 0,\n            chunkCount: 0\n        };\n\n        Debug.log('ChunkManager: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize chunks from diff data\n     * @param {Object} diffData - Diff data\n     */\n    initChunks(diffData) {\n        const startTime = performance.now();\n        Debug.log('ChunkManager: Initializing chunks from diff data', null, 2);\n\n        // Clear previous cache state\n        ChunkUtils.clearCache();\n\n        // Save chunks data\n        this.chunks = diffData.chunks || [];\n        this.oldContent = diffData.old || [];\n        this.newContent = diffData.new || [];\n\n        // Track chunk count for performance metrics\n        this._performanceMetrics.chunkCount = this.chunks.length;\n\n        // Mark chunks with type 'replace' as conflicts for navigation\n        this.chunks.forEach(chunk => {\n            chunk.conflict = true;\n        });\n\n        Debug.log(`ChunkManager: ${this.chunks.length} chunks initialized`, null, 3);\n\n        // Update navigation counter if available\n        if (this.diffViewer.diffNavigator) {\n            this.diffViewer.diffNavigator.updateCounter();\n        }\n\n        const endTime = performance.now();\n        this._performanceMetrics.initTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Initialization completed in ${this._performanceMetrics.initTime.toFixed(2)}ms`, null, 2);\n\n        // Validate chunk structure\n        this.validateChunkStructure();\n\n        return this.chunks;\n    }\n\n    /**\n     * Render chunks to container\n     */\n    renderChunks() {\n        const startTime = performance.now();\n\n        // Delegate to renderer component\n        this.renderer.renderChunks();\n\n        // Initialize the visual state manager\n        if (this.selectionHandler.visualStateManager.initialize) {\n            this.selectionHandler.visualStateManager.initialize();\n        }\n\n        // Setup chunk selection after rendering\n        this.setupChunkSelection();\n\n        // Initialize chunk elements for navigation\n        this.initChunkElements();\n\n        const endTime = performance.now();\n        this._performanceMetrics.renderTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Rendering completed in ${this._performanceMetrics.renderTime.toFixed(2)}ms`,\n            {\n                chunkCount: this._performanceMetrics.chunkCount,\n                msPerChunk: (this._performanceMetrics.renderTime / Math.max(1, this._performanceMetrics.chunkCount)).toFixed(2)\n            }, 2);\n\n        return true;\n    }\n\n    /**\n     * Setup chunk selection handlers\n     */\n    setupChunkSelection() {\n        // Delegate to selection handler\n        this.selectionHandler.setupChunkSelection();\n    }\n\n    /**\n     * Toggle selection state of a chunk\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - Selection state (this.SELECTED_STATE or this.UNSELECTED_STATE)\n     */\n    toggleChunkSelection(chunkId, side, state) {\n        this.selectionHandler.toggleChunkSelection(chunkId, side, state);\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    generateMergedContent() {\n        const selections = this.selectionHandler.getSelections();\n        return this.contentGenerator.generateMergedContent(selections);\n    }\n\n    /**\n     * Generate content from lines array\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated file content\n     */\n    generateFileFromLines(lines) {\n        return this.contentGenerator.generateFileFromLines(lines);\n    }\n\n    /**\n     * Initialize chunk elements array for navigation\n     */\n    initChunkElements() {\n        // Create array to hold chunk elements\n        this.chunkElements = [];\n\n        // Debug total available chunks\n        Debug.log(`ChunkManager: Looking for ${this.chunks.length} chunks in DOM`, null, 2);\n\n        this.chunks.forEach((chunk, index) => {\n            // Find elements for this chunk ID (using optimized cache query)\n            const elements = ChunkUtils.getChunkElements(chunk.id);\n            Debug.log(`ChunkManager: Chunk ID ${chunk.id}: Found ${elements.length} elements`, null, 3);\n\n            if (elements.length > 0) {\n                // Sort by line number to get the first element\n                const sortedElements = ChunkUtils.sortElementsByLineNumber(elements);\n\n                // Store the first element for this chunk\n                this.chunkElements[index] = sortedElements[0];\n            } else {\n                Debug.warn(`ChunkManager: No DOM elements found for chunk ID: ${chunk.id}`, null, 2);\n            }\n        });\n\n        const initializedCount = this.chunkElements.filter(Boolean).length;\n        Debug.log(`ChunkManager: Initialized ${initializedCount}/${this.chunks.length} chunk elements for navigation`, null, 2);\n\n        // Log warning if no elements were found\n        if (initializedCount === 0 && this.chunks.length > 0) {\n            Debug.error('ChunkManager: No chunk elements found in DOM. Navigation will not work properly.', null, 1);\n\n            // Check if elements with the expected selector exist at all\n            const anyChunkElements = document.querySelectorAll(Selectors.DIFF.CHUNK);\n            Debug.warn(`ChunkManager: ${anyChunkElements.length} elements match the chunk selector ${Selectors.DIFF.CHUNK}`, null, 2);\n\n            // Check if any elements have data-chunk-id attribute\n            const anyChunkIdElements = document.querySelectorAll('[data-chunk-id]');\n            Debug.warn(`ChunkManager: ${anyChunkIdElements.length} elements have data-chunk-id attribute`, null, 2);\n        }\n    }\n\n    /**\n     * Validate chunk data structure for proper merge operations\n     */\n    validateChunkStructure() {\n        let validChunks = 0;\n        let invalidChunks = 0;\n\n        this.chunks.forEach(chunk => {\n            // Check if chunk has proper old/new content arrays\n            if (!chunk.old && !chunk.new) {\n                Debug.warn(`ChunkManager: Chunk ${chunk.id} missing content arrays`, chunk, 2);\n                invalidChunks++;\n            } else if (chunk.type === 'replace' && (!chunk.old || !chunk.new)) {\n                Debug.warn(`ChunkManager: Replace chunk ${chunk.id} missing old or new content`, chunk, 2);\n                invalidChunks++;\n            } else {\n                validChunks++;\n            }\n        });\n\n        Debug.log(`ChunkManager: Chunk validation complete`, {\n            valid: validChunks,\n            invalid: invalidChunks,\n            total: this.chunks.length\n        }, 2);\n\n        return invalidChunks === 0;\n    }\n\n    /**\n     * Get performance metrics for this component\n     * @returns {Object} Performance metrics\n     */\n    getPerformanceMetrics() {\n        const metrics = {\n            ...this._performanceMetrics\n        };\n\n        // Add metrics from subcomponents\n        if (this.selectionHandler.visualStateManager.getMetrics) {\n            metrics.visualStateManager = this.selectionHandler.visualStateManager.getMetrics();\n        }\n\n        // Add cache stats\n        metrics.cacheStats = ChunkUtils.getCacheStats();\n\n        return metrics;\n    }\n\n    /**\n     * Get selections\n     * @returns {Object} Current selections\n     */\n    get selections() {\n        return this.selectionHandler.getSelections();\n    }\n\n    /**\n     * Handle selection change callback\n     * This maintains compatibility with external code expecting this function\n     */\n    onSelectionChange() {\n        // This can be overridden by DiffViewer\n    }\n}\n","import { Debug } from '../utils/Debug';\n\nimport { NavigationCounter } from './navigator/NavigationCounter';\nimport { NavigationUIBuilder } from './navigator/NavigationUIBuilder';\nimport { ConflictNavigator } from './navigator/ConflictNavigator';\n\n/**\n * DiffNavigator handles navigation between conflicting chunks\n */\nexport class DiffNavigator {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer component\n     * @param {boolean} initializeImmediately - Whether to initialize navigation immediately\n     */\n    constructor(diffViewer, initializeImmediately = true) {\n        this.diffViewer = diffViewer;\n        this.currentChunkIndex = -1;\n\n        // Validate that the diffViewer has a valid configuration\n        if (!this.diffViewer || !this.diffViewer.chunkManager) {\n            Debug.error('DiffNavigator: Failed to initialize - diffViewer or chunkManager is missing', null, 1);\n            return;\n        }\n\n        // Create subcomponents\n        this.navigationCounter = new NavigationCounter(this);\n        this.uiBuilder = new NavigationUIBuilder(this);\n        this.conflictNavigator = new ConflictNavigator(this);\n\n        // Initialize navigation only if requested\n        if (initializeImmediately) {\n            this.initNavigation();\n        }\n\n        Debug.log('DiffNavigator: Component created', null, 2);\n    }\n\n    /**\n     * Initialize navigation\n     */\n    initNavigation() {\n        Debug.log('DiffNavigator: Initializing', null, 2);\n\n        // Validate that we have chunks before proceeding\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: No diff chunks found in configuration', {\n                configChunks: this.diffViewer.chunkManager.chunks,\n                diffConfig: this.diffViewer.diffConfig\n            }, 1);\n\n            // Add navigation UI anyway for better UX, but disable buttons\n            this.addNavigationButtons(true);\n            return;\n        }\n\n        // Add navigation UI\n        this.addNavigationButtons();\n\n        // Add keyboard shortcuts\n        this.setupKeyboardShortcuts();\n\n        // Navigate to first conflict if any\n        this.navigateToFirstConflict();\n\n        Debug.log('DiffNavigator: Initialized with chunk navigation',\n            { chunks: this.diffViewer.chunkManager.chunks?.length || 0 }, 2);\n    }\n\n    /**\n     * Add navigation buttons to the interface\n     * @param {boolean} disableButtons - Whether to disable navigation buttons\n     */\n    addNavigationButtons(disableButtons = false) {\n        // Create UI elements\n        const ui = this.uiBuilder.createNavigationUI();\n\n        if (!ui) return;\n\n        // Save references to counter and buttons\n        this.navigationCounter.setCounterElement(ui.counter);\n        this.navigationCounter.setButtons(ui.prevButton, ui.nextButton);\n\n        // Disable buttons if requested\n        if (disableButtons) {\n            ui.prevButton.disabled = true;\n            ui.nextButton.disabled = true;\n            ui.counter.textContent = 'No diff data';\n        } else {\n            // Update counter with current count\n            this.updateCounter();\n        }\n    }\n\n    /**\n     * Set up keyboard shortcuts for navigation\n     */\n    setupKeyboardShortcuts() {\n        document.addEventListener('keydown', (event) => {\n            // Only handle if not in input or textarea\n            if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\n                return;\n            }\n\n            // Check for navigation keys\n            switch (event.key) {\n                case 'ArrowDown':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToNextConflict();\n                    }\n                    break;\n\n                case 'ArrowUp':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToPrevConflict();\n                    }\n                    break;\n            }\n        });\n    }\n\n    /**\n     * Update navigation counter\n     * @returns {Array} Active conflicts\n     */\n    updateCounter() {\n        return this.navigationCounter.updateCounter();\n    }\n\n    /**\n     * Navigate to the first conflict\n     */\n    navigateToFirstConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToFirstConflict();\n    }\n\n    /**\n     * Navigate to the next conflict\n     */\n    navigateToNextConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToNextConflict();\n    }\n\n    /**\n     * Navigate to the previous conflict\n     */\n    navigateToPrevConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToPrevConflict();\n    }\n\n    /**\n     * Navigate to a specific chunk\n     * @param {number} index - Chunk index\n     * @returns {boolean} Success status\n     */\n    navigateToChunk(index) {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToChunk(index);\n    }\n\n    /**\n     * Destroy component and clean up event handlers\n     */\n    destroy() {\n        this.uiBuilder.destroy();\n        Debug.log('DiffNavigator: Destroyed', null, 2);\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { ConfigUtils } from '../utils/ConfigUtils';\nimport { EndpointDiscovery } from '../utils/EndpointDiscovery';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport Selectors from '../constants/Selectors';\n\nimport { ThemeManager } from './ThemeManager';\nimport { ThemeSelector } from './ThemeSelector';\nimport { SyntaxHighlighter } from './SyntaxHighlighter';\nimport { ChunkManager } from './ChunkManager';\nimport { ThemeToggle } from './ThemeToggle';\nimport { MergeHandler } from './MergeHandler';\nimport { DiffNavigator } from './DiffNavigator';\nimport { ScrollSynchronizer } from './viewer/ScrollSynchronizer';\nimport { IconMarkerManager } from './viewer/IconMarkerManager';\nimport { LayoutManager } from './viewer/LayoutManager';\nimport { ModalManager } from './modal/ModalManager';\n\n/**\n * Main diff viewer component\n */\nexport class DiffViewer {\n    /**\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        // Default configuration matching PHP javascript section structure\n        const defaultOptions = {\n            // Basic configuration\n            lang: 'en',\n            debug: false,\n            logLevel: 2,\n\n            // Theme settings\n            theme: {\n                defaultFamily: 'atom-one',\n                defaultMode: 'dark',\n                showSelector: true\n            },\n\n            // API endpoint\n            apiEndpoint: null\n\n            // We've removed default translations from here as they'll be handled by TranslationManager\n        };\n\n        // Merge options in priority order\n        // Configuration comes from: defaults < window.diffConfig < constructor options\n        this.config = ConfigUtils.mergeConfigurations(defaultOptions, window.diffConfig || {}, options);\n\n        // Create separate internal runtime properties\n        this.runtimeProps = {\n            diffData: options.diffData || window.diffConfig?.diffData || null,\n            serverSaveEnabled: options.serverSaveEnabled || window.diffConfig?.serverSaveEnabled || false,\n            // SECURITY: Remove server paths and use only secure fileRefIds\n            fileRefId: options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            // Keep safe filename properties (not paths)\n            newFileName: options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: options.filepath || window.diffConfig?.filepath || null,\n            demoEnabled: options.demoEnabled || window.diffConfig?.demoEnabled || false\n        };\n\n        // Store the main loader ID if provided from window.enableDiffViewer\n        this.mainLoaderId = options.mainLoaderId || null;\n\n        // Set debug values early\n        Debug.initialize(this.config.debug, '[DiffViewer]', this.config.logLevel || 2);\n\n        // Initialize TranslationManager with the translations from the config\n        const translationManager = TranslationManager.getInstance();\n        if (!translationManager.isInitialized() && this.config.translations) {\n            Debug.log('DiffViewer: Initializing TranslationManager', {\n                lang: this.config.lang || 'en',\n                translations: this.config.translations\n            }, 2);\n            translationManager.initialize(this.config.lang || 'en', this.config.translations);\n        } else {\n            Debug.log('DiffViewer: TranslationManager already initialized', null, 2);\n        }\n\n        // Get container element - now always using Selectors.DIFF.VIEWER\n        this.container = document.querySelector(Selectors.DIFF.VIEWER);\n\n        if (!this.container) {\n            Debug.error('DiffViewer: Container element not found', null, 2);\n            throw new Error('Container element not found');\n        }\n\n        // Verify diff data\n        if (!this.runtimeProps.diffData) {\n            Debug.error('DiffViewer: No diff data provided', null, 2);\n            throw new Error('No diff data provided');\n        }\n\n        Debug.log('DiffViewer: Initializing component', null, 2);\n\n        // Initialize services (singletons)\n        this._initializeServices();\n\n        // Create components\n        this._createComponents();\n\n        Debug.log('DiffViewer: Component created', null, 2);\n    }\n\n    /**\n     * Initialize service singletons\n     * @private\n     */\n    _initializeServices() {\n        // Get service singletons\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.themeSelector = ThemeSelector.getInstance(this);\n        this.modalManager = ModalManager.getInstance({\n            debug: this.config.debug,\n            translations: this.config.translations\n        });\n\n        // Initialize ThemeManager with config and ResourceLoader\n        this.themeManager.initialize({\n            theme: this.config.theme\n        }, this.resourceLoader);\n    }\n\n    /**\n     * Create component instances\n     * @private\n     */\n    _createComponents() {\n        // Create core components\n        this.syntaxHighlighter = new SyntaxHighlighter(this);\n        this.chunkManager = new ChunkManager(this);\n\n        // Create UI components - pass browserUIManager to ThemeToggle if available\n        this.themeToggle = new ThemeToggle(\n            this.browserUIManager,\n            Selectors.THEME.TOGGLE.name(),\n            Selectors.CONTAINER.WRAPPER.name()\n        );\n        this.mergeHandler = new MergeHandler(this);\n\n        // Create DiffNavigator but don't initialize it yet - it will be initialized after chunks are loaded\n        this.diffNavigator = new DiffNavigator(this, false);\n\n        // Create layout components\n        this.scrollSynchronizer = new ScrollSynchronizer(this);\n        this.iconMarkerManager = new IconMarkerManager(this);\n        this.layoutManager = new LayoutManager(this);\n    }\n\n    /**\n     * Initialize the diff viewer and render content\n     */\n    async initialize() {\n        Debug.log('DiffViewer: Beginning initialization', null, 2);\n\n        try {\n            // PHASE 1: DATA INITIALIZATION\n            await this._initializeData();\n\n            // PHASE 2: RESOURCE LOADING\n            await this._loadResources();\n\n            // PHASE 3: UI RENDERING\n            await this._renderUI();\n\n            // PHASE 4: UI ENHANCEMENT\n            await this._setupUIFeatures();\n\n            // Display demo mode warning if enabled\n            if (this.runtimeProps.demoEnabled) {\n                this._showDemoModeWarning();\n            }\n\n            // Initialize ModalManager early\n            this.modalManager.initModals();\n\n            Debug.log('DiffViewer: Initialization complete', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('DiffViewer: Error during initialization:', error, 2);\n            this._handleInitializationError(error);\n            throw error;\n        }\n    }\n\n    /**\n     * Handle initialization error\n     * @private\n     */\n    _handleInitializationError(error) {\n        Debug.error('DiffViewer: Error handling initialization failure', error, 2);\n\n        // Get translation manager for error display\n        const translationManager = TranslationManager.getInstance();\n        const errorText = translationManager.get('errorLoadingDiff') || 'Error Loading Diff Viewer';\n\n        // Display error message in container\n        const errorMessage = document.createElement('div');\n        errorMessage.className = `${Selectors.UTILITY.ALERT_DANGER.name()} vdm-m-3`;\n        errorMessage.innerHTML = `\n            <h4>${errorText}</h4>\n            <p>${error.message || 'An unexpected error occurred.'}</p>\n        `;\n\n        // Add error to container\n        if (this.container) {\n            // Keep existing content, just append the error\n            this.container.appendChild(errorMessage);\n\n            // Make sure container is visible\n            this.container.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Initialize data structures\n     * @private\n     */\n    async _initializeData() {\n        // Initialize chunks from diff data\n        this.chunkManager.initChunks(this.runtimeProps.diffData);\n\n        Debug.log(`DiffViewer: Loaded ${this.runtimeProps.diffData.chunks?.length || 0} chunks and content arrays: old=${this.runtimeProps.diffData.old?.length || 0}, new=${this.runtimeProps.diffData.new?.length || 0}`, null, 2);\n    }\n\n    /**\n     * Load required resources\n     * @private\n     */\n    async _loadResources() {\n        // Load syntax highlighter if not already loaded\n        if (!this.syntaxHighlighter.highlightJsLoaded) {\n            await this.syntaxHighlighter.initialize();\n            await this.syntaxHighlighter.loadHighlightJs();\n        }\n\n        // Load theme through ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        await this.themeManager.applyTheme(currentTheme.family, currentTheme.mode);\n    }\n\n    /**\n     * Render UI components\n     * @private\n     */\n    async _renderUI() {\n        // Make sure container is visible\n        if (this.container) {\n            this.container.style.display = 'flex';\n        }\n\n        // Render the diff chunks\n        Debug.log(`DiffViewer: Rendering ${this.runtimeProps.diffData.chunks?.length || 0} chunks`, null, 2);\n        this.chunkManager.renderChunks();\n\n        // Apply syntax highlighting\n        this.syntaxHighlighter.highlightAll(this.container);\n\n        // Initialize theme based on preference\n        this.themeToggle.initialize();\n\n        // Initialize theme selector if enabled\n        if (this.config.theme.showSelector) {\n            this.themeSelector.initialize();\n        }\n\n        // Mark container as loaded using DOMUtils\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', true);\n\n        // Show the content wrapper if needed\n        const containerWrapper = document.querySelector(Selectors.CONTAINER.WRAPPER);\n        if (containerWrapper?.classList.contains('vdm-d-none')) {\n            containerWrapper.classList.remove('vdm-d-none');\n        }\n\n        // Fix theme switcher position - move it above the diff container\n        const themeSwitcher = document.querySelector(Selectors.THEME.SWITCHER);\n        const diffContainer = document.querySelector(Selectors.DIFF.CONTAINER);\n        diffContainer?.parentNode?.insertBefore?.(themeSwitcher, diffContainer);\n        if (themeSwitcher && diffContainer) {\n            Debug.log('DiffViewer: Repositioned theme switcher above diff container', null, 2);\n        }\n    }\n\n    /**\n     * Set up UI features and enhancements\n     * @private\n     */\n    async _setupUIFeatures() {\n        // Set up scroll synchronization\n        this.scrollSynchronizer.setupSynchronizedScrolling();\n\n        // Initialize layout manager\n        this.layoutManager.initialize();\n\n        // Set up icon markers\n        this.iconMarkerManager.initializeIconMarkers();\n\n        // Initialize the DiffNavigator AFTER chunks are loaded and rendered\n        if (this.diffNavigator) {\n            Debug.log('DiffViewer: Initializing navigation with loaded chunks', null, 2);\n            this.diffNavigator.initNavigation();\n        }\n\n        // Dispatch a custom event to notify that the diff viewer has finished loading\n        // This allows other components to know when the diff viewer is ready\n        const diffLoadedEvent = new CustomEvent('vdm-diff-loaded', {\n            detail: {\n                timestamp: new Date(),\n                viewer: this\n            }\n        });\n        document.dispatchEvent(diffLoadedEvent);\n        Debug.log('DiffViewer: Dispatched vdm-diff-loaded event', null, 2);\n\n        Debug.log('DiffViewer: UI features and enhancements set up', null, 2);\n    }\n\n    /**\n     * Display a warning message for demo mode\n     * @private\n     */\n    _showDemoModeWarning() {\n        Debug.log('DiffViewer: Showing demo mode warning', null, 2);\n\n        // Use the AlertManager to show the warning\n        const AlertManager = window.AlertManager || (this.browserUIManager?.AlertManager);\n\n        if (AlertManager) {\n            const alertManager = AlertManager.getInstance();\n\n            // Find the form element to place the alert before\n            const comparisonForm = document.querySelector('#vdm-file-comparison-form');\n\n            // Show warning about demo mode\n            alertManager.showAlert(\n                `<strong>Demo Mode Active</strong> - Merging is disabled on this server and will be simulated.\n                To use the file browser with actual file modifications, please install Visual Diff Merge on your own server.`,\n                'warning',\n                {\n                    dismissable: true,\n                    className: 'vdm-mb-3',\n                    translate: false, // Disable translation\n                    targetElement: comparisonForm, // Place before the form\n                    placement: 'before',\n                    timeout: 0 // Prevent auto-dismiss\n                }\n            );\n\n            Debug.log('DiffViewer: Demo mode warning displayed via AlertManager', null, 2);\n        }\n    }\n\n    /**\n     * Updates configuration with new values\n     * @param {Object} newConfig - New configuration values to apply\n     */\n    updateConfig(newConfig) {\n        if (!newConfig) return;\n\n        // Merge new config with current config\n        this.config = ConfigUtils.mergeConfigurations(this.config, newConfig);\n\n        Debug.log('DiffViewer: Configuration updated', newConfig, 3);\n    }\n\n    /**\n     * Updates runtime properties\n     * @param {Object} props - New runtime properties to apply\n     */\n    updateRuntimeProps(props) {\n        if (!props) return;\n\n        // Merge new runtime properties with current ones\n        this.runtimeProps = {...this.runtimeProps, ...props};\n\n        Debug.log('DiffViewer: Runtime properties updated', props, 3);\n    }\n\n    /**\n     * Get the current configuration\n     * @returns {Object} Current configuration\n     */\n    getConfig() {\n        return {...this.config};\n    }\n\n    /**\n     * Get the current runtime properties\n     * @returns {Object} Current runtime properties\n     */\n    getRuntimeProps() {\n        // DEBUG: Add logging to identify when this method is called and what it returns\n        Debug.log('DiffViewer.getRuntimeProps called', {\n            fileRefId: this.runtimeProps.fileRefId || '(none)',\n            oldFileRefId: this.runtimeProps.oldFileRefId || '(none)',\n            newFileName: this.runtimeProps.newFileName || '(none)',\n            oldFileName: this.runtimeProps.oldFileName || '(none)',\n            // Also check if these properties are in window.diffConfig\n            windowDiffConfig: {\n                hasFileRefId: window.diffConfig && 'fileRefId' in window.diffConfig,\n                fileRefId: window.diffConfig?.fileRefId || '(none)',\n                hasOldFileRefId: window.diffConfig && 'oldFileRefId' in window.diffConfig,\n                oldFileRefId: window.diffConfig?.oldFileRefId || '(none)',\n                hasNewFileName: window.diffConfig && 'newFileName' in window.diffConfig,\n                newFileName: window.diffConfig?.newFileName || '(none)',\n                hasOldFileName: window.diffConfig && 'oldFileName' in window.diffConfig,\n                oldFileName: window.diffConfig?.oldFileName || '(none)'\n            }\n        }, 3);\n\n        return {...this.runtimeProps};\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        // Destroy layout manager\n        if (this.layoutManager) {\n            this.layoutManager.destroy();\n        }\n\n        // Clean up diffNavigator\n        if (this.diffNavigator) {\n            this.diffNavigator.destroy();\n        }\n\n        // Remove loaded class from container\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', false);\n\n        // Additional cleanup as needed\n        Debug.log('DiffViewer: Component destroyed', null, 2);\n    }\n\n    /**\n     * Initialize runtime properties\n     */\n    initializeRuntimeProps() {\n        // Common runtime properties\n        this.runtimeProps = {\n            diffData: this.options.diffData || {},\n            serverSaveEnabled: this.options.serverSaveEnabled || false,\n            // SECURITY: Use only secure fileRefIds and filenames, not server paths\n            fileRefId: this.options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: this.options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            newFileName: this.options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: this.options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: this.options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: this.options.filepath || window.diffConfig?.filepath || ''\n        };\n\n        Debug.log('DiffViewer: Runtime properties initialized', this.runtimeProps, 3);\n    }\n\n    /**\n     * Check if the content has been beautified\n     * @returns {boolean} True if content has been beautified\n     */\n    isContentBeautified() {\n        // Check if the beautified flag exists in runtime properties\n        // If not defined, default to false\n        return this.runtimeProps.isBeautified || false;\n    }\n\n    /**\n     * Get API endpoint by name\n     * @param {string} endpointName - Name of the endpoint to get\n     * @returns {Promise<string>} The endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        Debug.log(`DiffViewer: Getting endpoint for ${endpointName}`, null, 2);\n\n        try {\n            // Use EndpointDiscovery if available\n            const endpointDiscovery = EndpointDiscovery.getInstance();\n            const endpoint = await endpointDiscovery.getEndpoint(endpointName);\n\n            Debug.log(`DiffViewer: Found endpoint for ${endpointName}`, endpoint, 2);\n            return endpoint;\n        } catch (error) {\n            // Fall back to config or default endpoints\n            Debug.warn(`DiffViewer: Error getting endpoint for ${endpointName}, using fallback`, error, 1);\n\n            // Check if we have endpoints in the config\n            if (this.config?.apiEndpoints[endpointName]) {\n                return this.config.apiEndpoints[endpointName];\n            }\n\n            // Default endpoints as a last resort\n            const defaultEndpoints = {\n                'ajaxDiffMerge': '../api/ajax-diff-merge.php',\n                'diffProcessor': '../api/diff-processor.php'\n            };\n\n            return defaultEndpoints[endpointName] || '../api/' + endpointName + '.php';\n        }\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {DiffViewer} This instance for method chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n\n        // Update references in components that need the BrowserUIManager\n        if (this.themeToggle) {\n            this.themeToggle.setBrowserUIManager(browserUIManager);\n        }\n\n        if (this.themeSelector) {\n            this.themeSelector.setBrowserUIManager(browserUIManager);\n        }\n\n        Debug.log('DiffViewer: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n}\n","// MergeHandler.js - Handles merging of selected lines\nimport { Debug } from '../utils/Debug';\nimport AlertManager from '../utils/AlertManager';\n\nimport { MergePreviewManager } from './merge/MergePreviewManager';\nimport { MergeUIController } from './merge/MergeUIController';\nimport { MergeOperationHandler } from './merge/MergeOperationHandler';\n\n\n/**\n * Main coordinator for merge operations\n */\nexport class MergeHandler {\n    /**\n     * Initialize merge handler\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n\n        // Use the shared modalManager instance\n        this.modalManager = this.diffViewer.modalManager;\n\n        // Create subcomponents using composition\n        this.previewManager = new MergePreviewManager(this);\n        this.uiController = new MergeUIController(this);\n        this.operationHandler = new MergeOperationHandler(this);\n\n        // Initialize components\n        this.initialize();\n\n        Debug.log('MergeHandler: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize all subcomponents\n     */\n    initialize() {\n        // Check if we should use server or local controls\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n        const serverSaveEnabled = runtimeProps && runtimeProps.serverSaveEnabled;\n\n        Debug.log(`MergeHandler: Initializing with serverSaveEnabled=${serverSaveEnabled}`, null, 2);\n\n        // Initialize UI controller first\n        this.uiController.initialize();\n\n        // If server save is disabled, set up local-only controls\n        if (serverSaveEnabled === false) {\n            Debug.log('MergeHandler: Server save is disabled, using local-only controls', null, 2);\n            this.uiController.setupLocalOnlyControls();\n        }\n\n        // Then initialize preview manager\n        this.previewManager.initialize();\n\n        Debug.log('MergeHandler: All subcomponents initialized', null, 2);\n    }\n\n    /**\n     * Preview the merged file\n     * Delegates to preview manager\n     */\n    previewMerge() {\n        this.previewManager.handlePreviewClick();\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    getMergedContent() {\n        return this.diffViewer.chunkManager.generateMergedContent();\n    }\n\n    /**\n     * Proceed with merge operation\n     * Delegates to operation handler\n     * @param {string} mergeType - Type of merge ('original' or 'new')\n     * @returns {Promise} Promise resolving when merge completes\n     */\n    proceedWithMerge(mergeType) {\n        return this.operationHandler.proceedWithMerge(mergeType);\n    }\n\n    /**\n     * Count unresolved conflicts\n     * Delegates to UI controller\n     * @returns {number} Number of unresolved conflicts\n     */\n    countUnresolvedConflicts() {\n        return this.uiController.countUnresolvedConflicts();\n    }\n\n    /**\n     * Show conflict resolution modal\n     * Delegates to UI controller\n     * @param {number} unresolvedCount - Number of unresolved conflicts\n     */\n    showConflictModal(unresolvedCount) {\n        this.uiController.showConflictModal(unresolvedCount);\n    }\n\n    /**\n     * Highlight unresolved chunks\n     * Delegates to UI controller\n     */\n    highlightUnresolvedChunks() {\n        return this.uiController.highlightUnresolvedChunks();\n    }\n\n    /**\n     * Create alert element with proper BEM classes\n     * @param {boolean} resolved - Whether the conflict is resolved\n     * @param {string} success_message - Success message to display\n     * @param {string} message - Warning message to display\n     * @returns {HTMLElement} Alert element\n     */\n    createAlertElement(resolved, success_message, message) {\n        const alertManager = AlertManager.getInstance();\n\n        if (resolved) {\n            return alertManager.showSuccess(success_message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        } else {\n            return alertManager.showWarning(message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        }\n    }\n}\n","// SyntaxHighlighter.js - Handles syntax highlighting for code\nimport { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { MergeContentFormatter } from '../utils/MergeContentFormatter';\nimport languageMap from '../data/highlightjs-languages.json';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport Selectors from '../constants/Selectors';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport { LoaderManager } from '../utils/LoaderManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Manages syntax highlighting functionality\n */\nexport class SyntaxHighlighter {\n    /**\n     * @param {DiffViewer} diffViewer - Parent DiffViewer component\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.highlightJsLoaded = false;\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.language = 'plaintext'; // Default language\n\n        // Get theme from ThemeManager instead of localStorage directly\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.theme = currentTheme.mode || 'light';\n\n        Debug.log('SyntaxHighlighter: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize the highlighter with the language\n     */\n    async initialize() {\n        // First, load highlight.js core\n        await this.loadHighlightJs();\n\n        // Only proceed with language setup if highlight.js loaded successfully\n        if (this.highlightJsLoaded) {\n            // Get filepath from runtimeProps\n            const filepath = this.diffViewer.getRuntimeProps().filepath || '';\n\n            // Set initial language using the prioritized logic\n            await this.setLanguage(filepath);\n\n            Debug.log('SyntaxHighlighter: Initialized with language:', this.language, 2);\n        } else {\n            Debug.warn('SyntaxHighlighter: Initialization incomplete - highlight.js failed to load', null, 2);\n        }\n    }\n\n    /**\n     * Load highlightjs and required language components\n     */\n    async loadHighlightJs() {\n        try {\n            Debug.log('SyntaxHighlighter: Loading highlight.js core', null, 2);\n\n            // Use resource loader to load syntax highlighter core\n            await this.diffViewer.resourceLoader.loadSyntaxHighlighterCore();\n\n            this.highlightJsLoaded = true;\n            Debug.log('SyntaxHighlighter: highlight.js loaded successfully', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Failed to load highlight.js:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Highlight all code elements in batches\n     * @param {Element|Document} container - Container with code elements\n     */\n    highlightAll(container = document) {\n        if (!this.highlightJsLoaded || !window.hljs) {\n            Debug.warn('SyntaxHighlighter: Cannot highlight code - highlight.js not loaded', null, 2);\n            return;\n        }\n\n        // Use DOMUtils.getElements for consistent element selection with error handling\n        const elements = DOMUtils.getElements(\n            `${Selectors.DIFF.LINE_CONTENT}:not(${Selectors.DIFF.LINE_CONTENT_EMPTY}):not(${Selectors.DIFF.LINE_PLACEHOLDER})`,\n            container\n        );\n\n        if (!elements) {\n            Debug.log('SyntaxHighlighter: No code elements found to highlight', null, 2);\n            return;\n        }\n\n        const codeElements = Array.from(elements).filter(el => el.textContent.trim());\n        Debug.log(`SyntaxHighlighter: Found ${codeElements.length} code elements to highlight`, null, 2);\n\n        // Only show loader for large files (more than 100 elements)\n        let loaderId = null;\n        if (codeElements.length > 100) {\n            // Get translation manager for loading message\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const loadingMessage = translationManager.get('applyingSyntaxHighlighting', 'Applying syntax highlighting...');\n\n            // Show loading indicator\n            loaderId = loaderManager.showLoader(loadingMessage, {\n                fullscreen: true,\n                zIndex: 1000\n            });\n\n            Debug.log('SyntaxHighlighter: Showing loader for large file highlighting', null, 2);\n        }\n\n        // Small batch size for smoother UI updates\n        const batchSize = 30;\n        let index = 0;\n\n        // Performance tracking\n        const startTime = performance.now();\n\n        // Function to process a batch\n        const processBatch = () => {\n            if (index >= codeElements.length) {\n                // Hide loader if shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n\n                    // Log performance metrics\n                    const endTime = performance.now();\n                    const duration = endTime - startTime;\n                    Debug.log(`SyntaxHighlighter: Highlighting complete for ${codeElements.length} elements in ${duration.toFixed(2)}ms`, null, 2);\n                } else {\n                    Debug.log('SyntaxHighlighter: Highlighting complete', null, 2);\n                }\n                return;\n            }\n\n            // Process next batch\n            const end = Math.min(index + batchSize, codeElements.length);\n            for (let i = index; i < end; i++) {\n                this.highlightElement(codeElements[i]);\n            }\n\n            // Update loader message with progress if shown\n            if (loaderId && index % (batchSize * 5) === 0) { // Update every 5 batches\n                const loaderManager = LoaderManager.getInstance();\n                const translationManager = TranslationManager.getInstance();\n                const progress = Math.round((index / codeElements.length) * 100);\n                const progressMessage = translationManager.get('applyingSyntaxHighlightingProgress',\n                    'Applying syntax highlighting ({0}%)').replace('{0}', progress);\n\n                loaderManager.updateLoaderMessage(loaderId, progressMessage);\n            }\n\n            // Move to next batch\n            index = end;\n\n            // Schedule next batch - use requestAnimationFrame for better performance\n            requestAnimationFrame(() => {\n                setTimeout(processBatch, 0);\n            });\n        };\n\n        // Start batch processing\n        processBatch();\n    }\n\n    /**\n     * Apply syntax highlighting to a single element\n     * @param {Element} element - Element to highlight\n     * @param {boolean} withLineNumbers - Whether to add line numbers\n     */\n    highlightElement(element, withLineNumbers = false) {\n        if (!this.highlightJsLoaded || !window.hljs || !element) return;\n\n        try {\n            // Use DOMUtils.toggleClass for consistent class manipulation\n            if (!element.classList.contains(this.language)) {\n                // Remove existing language classes first\n                const languageClasses = element.className.split(' ')\n                    .filter(cls => cls.startsWith('language-'));\n\n                languageClasses.forEach(cls => {\n                    element.classList.remove(cls);\n                });\n\n                // Add the correct language class\n                element.classList.add(this.language);\n            }\n\n            // Use the MergeContentFormatter utility\n            MergeContentFormatter.resetHighlighting(element);\n\n            // Apply highlighting\n            window.hljs.highlightElement(element);\n\n            // Add line numbers if needed\n            if (withLineNumbers && window.hljs.lineNumbersBlock) {\n                window.hljs.lineNumbersBlock(element);\n            }\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Error highlighting element:', error, 2);\n        }\n    }\n\n    /**\n     * Set the language for syntax highlighting\n     * @param {string} filepath - File path to derive language from\n     */\n    async setLanguage(filepath) {\n        // Get runtime properties\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Try to determine language using the prioritized logic\n        let newLanguage = 'plaintext';\n        let sourceUsed = 'default';\n\n        // 1. Try to guess language from filepath if provided\n        if (filepath && typeof filepath === 'string' && filepath.includes('.')) {\n            const extension = filepath.split('.').pop().toLowerCase();\n            if (extension) {\n                newLanguage = languageMap[extension] || extension;\n                sourceUsed = 'filepath';\n                Debug.log(`SyntaxHighlighter: Language determined from filepath extension: ${extension}`, null, 2);\n            }\n        }\n\n        // 2. If no language determined from filepath, try diffData.language\n        if (newLanguage === 'plaintext' && sourceUsed === 'default' && runtimeProps.diffData?.language) {\n            newLanguage = runtimeProps.diffData.language;\n            sourceUsed = 'diffData';\n            Debug.log(`SyntaxHighlighter: Language determined from diffData: ${newLanguage}`, null, 2);\n        }\n\n        // 3. If still no language, use plaintext as fallback\n        if (newLanguage === 'plaintext' && sourceUsed === 'default') {\n            Debug.log('SyntaxHighlighter: No language could be determined, using plaintext as fallback', null, 2);\n        }\n\n        // Only load if different from current language\n        if (this.language !== newLanguage) {\n            this.language = newLanguage;\n\n            Debug.log(`SyntaxHighlighter: Setting language to ${newLanguage} (source: ${sourceUsed})`, null, 2);\n\n            // Only load if needed and not already loaded\n            if (this.highlightJsLoaded && !this.resourceLoader.loadedLanguages.has(newLanguage)) {\n                Debug.log(`SyntaxHighlighter: Loading language ${newLanguage}`, null, 2);\n\n                // Get translation manager for loading message\n                const translationManager = TranslationManager.getInstance();\n                const loaderManager = LoaderManager.getInstance();\n                const loadingMessage = translationManager.get('loadingLanguage', 'Loading language: {0}')\n                    .replace('{0}', newLanguage);\n\n                // Try to use the main loader ID from diffViewer\n                const mainLoaderId = this.diffViewer.mainLoaderId;\n\n                if (!mainLoaderId) {\n                    Debug.warn('SyntaxHighlighter: No main loader ID available from DiffViewer for language loading', null, 2);\n                }\n\n                try {\n                    // Update the main loader message if available\n                    if (mainLoaderId) {\n                        loaderManager.updateLoaderMessage(mainLoaderId, loadingMessage);\n                    }\n\n                    // Use dynamic import to load the language on demand\n                    await this.resourceLoader.loadLanguage(newLanguage);\n\n                    // No need to hide the main loader as it's managed elsewhere\n                } catch (error) {\n                    Debug.error(`SyntaxHighlighter: Error loading language ${newLanguage}:`, error, 2);\n                }\n            } else {\n                Debug.log(`SyntaxHighlighter: Language ${newLanguage} already loaded`, null, 3);\n            }\n\n            Debug.log(`SyntaxHighlighter: Language set to ${this.language}`, null, 2);\n        } else {\n            Debug.log(`SyntaxHighlighter: Language already set to ${this.language}`, null, 3);\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport Selectors from '../constants/Selectors';\n\n// Module-level singleton instance\nlet instance = null;\n\nexport class ThemeManager extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @returns {ThemeManager} The singleton instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new ThemeManager();\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     */\n    constructor() {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        // Initialize instance\n        this.initialized = false;\n        this.availableThemes = null;\n        this.currentTheme = { family: null, mode: null };\n        this.defaultTheme = { family: 'atom-one', mode: 'dark' };\n        this.listeners = [];\n        this.resourceLoader = null;\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize with config and ResourceLoader\n     * @param {Object} config - Configuration object with theme settings\n     * @param {ResourceLoader} resourceLoader - ResourceLoader instance\n     * @returns {boolean} Success status\n     */\n    initialize(config, resourceLoader) {\n        Debug.log('ThemeManager: Initializing', { config }, 2);\n\n        if (this.initialized) return true;\n\n        // Get theme configuration (accepts both legacy and new format)\n        this.config = config?.theme || {};\n        this.resourceLoader = resourceLoader;\n\n        // Get the availableThemes from ResourceLoader\n        this.availableThemes = resourceLoader.config.availableThemes;\n\n        // Set defaults from config or use hardcoded defaults\n        this.defaultTheme.family = this.config.defaultFamily || this.defaultTheme.family;\n        this.defaultTheme.mode = this.config.defaultMode || this.defaultTheme.mode;\n\n        // Get saved preferences\n        const savedFamily = localStorage.getItem('diffViewerThemeFamily') || this.defaultTheme.family;\n        const savedMode = localStorage.getItem('diffViewerTheme') || this.defaultTheme.mode;\n\n        this.currentTheme = {\n            family: savedFamily,\n            mode: savedMode\n        };\n\n        Debug.log(`ThemeManager: Initialized with ${savedFamily} (${savedMode})`, null, 2);\n        this.initialized = true;\n\n        Debug.log('ThemeManager: Successfully initialized', null, 2);\n        return true;\n    }\n\n    /**\n     * Get theme URL for a specific family and mode\n     * @param {string} family - The theme family (e.g., 'atom-one')\n     * @param {string} mode - The theme mode ('light' or 'dark')\n     * @param {boolean} fallbackToDefaults - Whether to fall back to defaults if not found\n     * @returns {string} The theme URL\n     */\n    getThemeUrl(family, mode, fallbackToDefaults = true) {\n        // First check if the requested theme exists\n        if (this.availableThemes?.[family]?.[mode]) {\n            return this.availableThemes[family][mode];\n        }\n\n        // Don't proceed with fallbacks if requested\n        if (!fallbackToDefaults) {\n            return null;\n        }\n\n        // Check if the opposite mode exists for this family\n        const alternateMode = mode === 'dark' ? 'light' : 'dark';\n        if (this.availableThemes?.[family]?.[alternateMode]) {\n            Debug.log(`ThemeManager: Theme ${family} doesn't have ${mode} mode, using ${alternateMode} instead`, null, 2);\n            return this.availableThemes[family][alternateMode];\n        }\n\n        // Fall back to default theme\n        Debug.log(`ThemeManager: Falling back to default theme: ${this.defaultTheme.family} (${mode})`, null, 2);\n        return this.availableThemes[this.defaultTheme.family][mode] ||\n               this.availableThemes[this.defaultTheme.family][alternateMode];\n    }\n\n    /**\n     * Check if a theme exists\n     * @param {string} family - The theme family\n     * @param {string} mode - The theme mode\n     * @returns {boolean} Whether the theme exists\n     */\n    themeExists(family, mode) {\n        return !!this.availableThemes?.[family]?.[mode];\n    }\n\n    /**\n     * Get all available theme families\n     * @returns {string[]} Array of theme family names\n     */\n    getAvailableThemeFamilies() {\n        return Object.keys(this.availableThemes || {});\n    }\n\n    /**\n     * Get available modes for a theme family\n     * @param {string} family - The theme family\n     * @returns {string[]} Available modes ('light', 'dark', or both)\n     */\n    getAvailableModesForFamily(family) {\n        if (!this.availableThemes?.[family]) {\n            return [];\n        }\n        return Object.keys(this.availableThemes[family]);\n    }\n\n    /**\n     * Get theme CDN version - useful for consistent versioning\n     * @returns {string} The CDN version\n     */\n    getThemeCdnVersion() {\n        return '11.11.1'; // Could be made configurable in the future\n    }\n\n    /**\n     * Get theme CDN base URL\n     * @returns {string} The CDN base URL\n     */\n    getThemeCdnBase() {\n        return 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js';\n    }\n\n    /**\n     * Get standard theme URL pattern (for direct generation)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {string} Standard theme URL\n     */\n    getStandardThemeUrl(family, mode) {\n        return `${this.getThemeCdnBase()}/${this.getThemeCdnVersion()}/styles/base16/${family}-${mode}.min.css`;\n    }\n\n    /**\n     * Apply theme (load CSS and update UI)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {Promise<boolean>} Success status\n     */\n    async applyTheme(family, mode) {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Use our centralized method to get the URL\n        const themeUrl = this.getThemeUrl(family, mode);\n        if (!themeUrl) {\n            Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n            return false;\n        }\n\n        Debug.log(`ThemeManager: Applying theme ${family}/${mode}`, null, 2);\n\n        // Skip if theme is already active\n        const activeTheme = document.querySelector(\n            'link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])'\n        );\n\n        if (activeTheme && activeTheme.getAttribute('href') === themeUrl) {\n            Debug.log(`ThemeManager: Theme ${family}/${mode} already active`, null, 2);\n            return true;\n        }\n\n        try {\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during theme operation:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Update container theme class based on mode\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     */\n    updateContainerThemeClass(mode) {\n        const container = document.getElementById(Selectors.CONTAINER.WRAPPER.name());\n        if (container) {\n            container.classList.remove(Selectors.THEME.DARK.name(), Selectors.THEME.LIGHT.name());\n            container.classList.add(Selectors.THEME.MODE_PREFIX.name() + '--' + mode);\n        }\n    }\n\n    /**\n     * Set theme mode only (light/dark)\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeMode(mode) {\n        Debug.log(`ThemeManager: Setting theme mode to ${mode}`, null, 2);\n        return this.applyTheme(this.currentTheme.family, mode);\n    }\n\n    /**\n     * Set theme family only (keeps current mode)\n     * @param {string} family - Theme family\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeFamily(family) {\n        Debug.log(`ThemeManager: Setting theme family to ${family}`, null, 2);\n        return this.applyTheme(family, this.currentTheme.mode);\n    }\n\n    /**\n     * Add a listener to be notified of theme changes\n     * @param {Function} listener - Listener function\n     */\n    addListener(listener) {\n        if (typeof listener === 'function') {\n            this.listeners.push(listener);\n        }\n    }\n\n    /**\n     * Notify all listeners of theme changes\n     */\n    notifyListeners() {\n        this.listeners.forEach(listener => {\n            try {\n                listener(this.currentTheme);\n            } catch (error) {\n                Debug.error('ThemeManager: Error in theme listener:', error, 2);\n            }\n        });\n    }\n\n    /**\n     * Get current theme information\n     * @returns {Object} Current theme information\n     */\n    getCurrentTheme() {\n        return { ...this.currentTheme };\n    }\n\n    /**\n     * Load initial theme based on current settings\n     * @returns {Promise<boolean>} Success status\n     */\n    async loadInitialTheme() {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Get theme from current settings\n        const family = this.currentTheme.family || this.defaultTheme.family;\n        const mode = this.currentTheme.mode || this.defaultTheme.mode;\n\n        Debug.log(`ThemeManager: Loading initial theme ${family}/${mode}`, null, 2);\n\n        try {\n            // Apply the theme\n            const themeUrl = this.getThemeUrl(family, mode);\n            if (!themeUrl) {\n                Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n                return false;\n            }\n\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Initial theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during initial theme loading:', error, 2);\n            return false;\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n// Module-level variables\nlet instance = null;\n\n/**\n * Manages theme family selection dropdown\n */\nexport class ThemeSelector extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance (only used during first initialization)\n     * @returns {ThemeSelector} The singleton instance\n     */\n    static getInstance(diffViewer = null) {\n        Debug.log('ThemeSelector: Retrieving or creating instance', null, 3);\n        if (!instance) {\n            instance = new ThemeSelector(diffViewer);\n        } else if (diffViewer && !instance.diffViewer) {\n            // Update diffViewer if it was null previously\n            instance.diffViewer = diffViewer;\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    constructor(diffViewer) {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        Debug.log('ThemeSelector: Instance created', null, 3);\n\n        // Initialize instance\n        this.diffViewer = diffViewer;\n        this.container = null;\n        this.selectElement = null;\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = null;\n        this.boundHandleThemeChange = this.handleThemeChange.bind(this); // Store bound function\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize the theme selector\n     */\n    initialize() {\n        // Check if theme selector should be enabled using the new config structure\n        if (!this._isThemeSelectorEnabled()) {\n            Debug.log('ThemeSelector: Theme selector disabled in configuration', null, 2);\n            return false;\n        }\n\n        Debug.log('ThemeSelector: Initializing', null, 2);\n\n        // Check if selector already exists in DOM and reuse it\n        const existingSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        if (existingSelector) {\n            Debug.log('ThemeSelector: Reusing existing selector in DOM', null, 2);\n            this.selectElement = existingSelector;\n            this.container = existingSelector.parentNode;\n\n            // Update selector to reflect current theme\n            this.updateSelector();\n\n            // Ensure event listener is attached (remove old one first to avoid duplicates)\n            this.selectElement.removeEventListener('change', this.boundHandleThemeChange);\n            this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n\n            Debug.log('ThemeSelector: Reused existing selector successfully', null, 2);\n            return true;\n        }\n\n        // If BrowserUIManager is available, let it create the selector\n        if (this.browserUIManager) {\n            const selectorElements = this.browserUIManager.generateThemeSelector();\n            if (selectorElements) {\n                Debug.log('ThemeSelector: Using selector created by BrowserUIManager', null, 2);\n                this.container = selectorElements.container;\n                this.selectElement = selectorElements.selectElement;\n\n                // Populate options and set up event handlers\n                const populated = this.populateSelectorOptions();\n                if (!populated) {\n                    // If population failed, try again after a short delay (themes might not be loaded yet)\n                    Debug.log('ThemeSelector: Initial population failed, retrying after delay', null, 2);\n                    setTimeout(() => {\n                        this.populateSelectorOptions();\n                        this.updateSelector();\n                    }, 100);\n                }\n\n                this.updateSelector();\n                this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n\n                Debug.log('ThemeSelector: Initialized with BrowserUIManager selector successfully', null, 2);\n                return true;\n            }\n        }\n\n        // Fallback: Create container for the theme selector (only if doesn't exist)\n        this.createSelectorElement();\n\n        // Add the selector to the DOM\n        this.addSelectorToDOM();\n\n        // Update selector to reflect current theme\n        this.updateSelector();\n\n        // Add listener to ThemeManager to update selector when theme changes\n        this.themeManager.addListener(this.updateSelector.bind(this));\n\n        // Also add a listener to repopulate options if themes become available later\n        this.themeManager.addListener(() => {\n            if (this.selectElement && this.selectElement.options.length === 0) {\n                Debug.log('ThemeSelector: Themes became available, repopulating options', null, 2);\n                this.populateSelectorOptions();\n            }\n        });\n\n        Debug.log('ThemeSelector: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Check if theme selector should be enabled\n     * @private\n     * @returns {boolean} Whether the theme selector should be enabled\n     */\n    _isThemeSelectorEnabled() {\n        // First try the new config structure\n        if (this.diffViewer?.getConfig()?.theme?.selector !== undefined) {\n            return !!this.diffViewer.getConfig().theme.selector;\n        }\n\n        // Then try the old options structure\n        if (this.diffViewer?.options?.themeSelector !== undefined) {\n            return !!this.diffViewer.options.themeSelector;\n        }\n\n        // Finally try the global diffConfig\n        if (window.diffConfig?.theme?.selector !== undefined) {\n            return !!window.diffConfig.theme.selector;\n        }\n\n        // Default to true - always show selector unless explicitly disabled\n        return true;\n    }\n\n    /**\n     * Populate selector options with available themes\n     */\n    populateSelectorOptions() {\n        Debug.log('ThemeSelector: Starting to populate selector options', null, 2);\n\n        if (!this.selectElement) {\n            Debug.warn('ThemeSelector: No select element available for population', null, 2);\n            return false;\n        }\n\n        if (!this.themeManager) {\n            Debug.warn('ThemeSelector: No theme manager available for population', null, 2);\n            return false;\n        }\n\n        const currentTheme = this.themeManager.getCurrentTheme();\n        Debug.log('ThemeSelector: Current theme', currentTheme, 2);\n\n        // Clear existing options first\n        this.selectElement.innerHTML = '';\n\n        // Add options from available themes\n        const availableThemes = this.themeManager.getAvailableThemeFamilies();\n        Debug.log('ThemeSelector: Available themes', { availableThemes, count: availableThemes?.length || 0 }, 2);\n\n        if (!availableThemes || availableThemes.length === 0) {\n            Debug.warn('ThemeSelector: No available themes found', null, 2);\n            return false;\n        }\n\n        availableThemes.forEach(themeKey => {\n            DOMUtils.createAndAppendElement('option', this.selectElement, {\n                attributes: {\n                    value: themeKey,\n                    selected: themeKey === currentTheme.family\n                },\n                content: this.formatThemeName(themeKey)\n            });\n        });\n\n        Debug.log('ThemeSelector: Populated selector with options',\n                  { count: availableThemes.length }, 2);\n        return true;\n    }\n\n    /**\n     * Create the theme selector dropdown\n     */\n    createSelectorElement() {\n        Debug.log('ThemeSelector: Creating new selector element', null, 2);\n\n        // Create the container using DOMUtils with proper array of classes\n        this.container = DOMUtils.createElement('div', null, [Selectors.THEME_SELECTOR.WRAPPER.name(), Selectors.UTILITY.MARGIN_END_3.name()]);\n\n        // Create select element using DOMUtils\n        this.selectElement = DOMUtils.createAndAppendElement('select', this.container, {\n            id: Selectors.THEME.SELECTOR.name(),\n            classes: [Selectors.UTILITY.FORM_SELECT.name(), Selectors.UTILITY.FORM_SELECT.name()]\n        });\n\n        // Populate options using the separate method\n        this.populateSelectorOptions();\n\n        // Add change event handler using stored bound function\n        this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n    }\n\n    /**\n     * Format theme name for display (e.g., \"atom-one\" to \"Atom One\")\n     * @param {string} themeName - Theme name in kebab-case\n     * @returns {string} Formatted theme name\n     */\n    formatThemeName(themeName) {\n        return themeName\n            .split('-')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    /**\n     * Add the selector to the DOM\n     */\n    addSelectorToDOM() {\n        // Find theme switcher container using DOMUtils\n        const themeSwitcherContainer = DOMUtils.getElement(Selectors.THEME.SWITCHER.name());\n        if (!themeSwitcherContainer) {\n            Debug.warn('ThemeSelector: No theme switcher container found', null, 2);\n            return false;\n        }\n\n        // Insert the selector before any existing elements\n        themeSwitcherContainer.insertBefore(this.container, themeSwitcherContainer.firstChild);\n\n        Debug.log('ThemeSelector: Selector added to DOM', null, 2);\n        return true;\n    }\n\n    /**\n     * Update selector to match current theme\n     * @param {Object} theme - Theme object\n     */\n    updateSelector(theme) {\n        if (!this.selectElement) return;\n\n        // If the selector has no options, try to populate them\n        if (this.selectElement.options.length === 0) {\n            Debug.log('ThemeSelector: Selector has no options, attempting to populate', null, 2);\n            this.populateSelectorOptions();\n        }\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        if (this.selectElement.options.length > 0) {\n            this.selectElement.value = currentTheme.family;\n        }\n\n        Debug.log(`ThemeSelector: Selector updated to ${theme?.family || currentTheme.family}`,\n                 { optionsCount: this.selectElement.options.length }, 3);\n    }\n\n    /**\n     * Handle theme change event\n     * @param {Event} event - Change event\n     */\n    handleThemeChange(event) {\n        const selectedTheme = event.target.value;\n\n        // Try to get the BrowserUIManager instance if not already set\n        if (!this.browserUIManager && this.diffViewer?.browserUIManager) {\n            this.browserUIManager = this.diffViewer.browserUIManager;\n        }\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeFamily(selectedTheme)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeSelector: Theme changed to ${selectedTheme}`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeSelector: Error changing theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeSelector: Error changing theme:', error, 2);\n        }\n    }\n\n    /**\n     * Set the BrowserUIManager reference\n     * @param {BrowserUIManager} browserUIManager - The BrowserUIManager instance\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n        Debug.log('ThemeSelector: BrowserUIManager reference set', null, 3);\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Handles theme light/dark toggle functionality\n */\nexport class ThemeToggle {\n    /**\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @param {string} toggleElementId - Toggle element ID\n     * @param {string} containerId - Container element ID\n     */\n    constructor(browserUIManager = null, toggleElementId = Selectors.THEME.TOGGLE.name(), containerId = Selectors.CONTAINER.WRAPPER.name()) {\n        this.toggleElementId = toggleElementId;\n        this.containerId = containerId;\n\n        // Use DOMUtils for element retrieval with consistent error handling\n        this.toggleElement = DOMUtils.getElement(toggleElementId);\n        this.container = DOMUtils.getElement(containerId);\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = browserUIManager;\n\n        Debug.log('ThemeToggle: Component created', null, 2);\n    }\n\n    /**\n     * Initialize toggle with event handlers\n     */\n    initialize() {\n        Debug.log('ThemeToggle: Initializing', null, 2);\n\n        if (!this.toggleElement || !this.container) {\n            Debug.warn(`ThemeToggle: Elements not found for initialization - toggle: ${!!this.toggleElement}, container: ${!!this.container}`, null, 2);\n            return false;\n        }\n\n        // Get current theme from ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Apply initial theme class to container using ThemeManager's method\n        this.themeManager.updateContainerThemeClass(currentTheme.mode);\n\n        // Add event listener to toggle element\n        this.toggleElement.addEventListener('change', this.handleToggle.bind(this));\n\n        // Add listener to ThemeManager to update toggle when theme changes from elsewhere\n        this.themeManager.addListener(this.updateToggle.bind(this));\n\n        // Log whether we have a BrowserUIManager instance\n        Debug.log(`ThemeToggle: BrowserUIManager reference ${this.browserUIManager ? 'is available' : 'is not available'}`, null, 2);\n\n        Debug.log('ThemeToggle: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {ThemeToggle} - This instance for chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n        Debug.log('ThemeToggle: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n\n    /**\n     * Handle toggle event\n     * @param {Event} event - Change event\n     */\n    handleToggle(event) {\n        const isDark = event.target.checked;\n        const newMode = isDark ? 'dark' : 'light';\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        } else {\n            Debug.log('ThemeToggle: BrowserUIManager not available, no loading indicator will be shown', null, 2);\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeMode(newMode)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeToggle: Theme toggled to ${newMode} mode`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n        }\n    }\n\n    /**\n     * Update toggle state based on theme\n     * @param {Object} theme - Theme object\n     */\n    updateToggle(theme) {\n        if (!this.toggleElement) return;\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Instead of using our own updateContainerClass method,\n        // leverage the centralized method from ThemeManager\n        if (this.container) {\n            this.themeManager.updateContainerThemeClass(currentTheme.mode);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { StringUtils } from '../../utils/StringUtils';\nimport Selectors from '../../constants/Selectors';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n/**\n * Responsible for rendering chunk content\n */\nexport class ChunkRenderer {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n    }\n\n    /**\n     * Render all chunks to container\n     */\n    renderChunks() {\n        Debug.log('ChunkRenderer: Beginning chunk rendering', null, 2);\n\n        // Show loading indicator for large diffs (more than 100 chunks)\n        let loaderId = null;\n        if (this.chunkManager.chunks.length > 100) {\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const loadingMessage = translationManager.get('renderingDiff', 'Rendering diff...');\n\n            loaderId = loaderManager.showLoader(loadingMessage, {\n                fullscreen: true,\n                zIndex: 1000\n            });\n\n            Debug.log('ChunkRenderer: Showing loader for large diff rendering', null, 2);\n        }\n\n        // Performance tracking\n        const startTime = performance.now();\n\n        // Generate HTML for both panes\n        const leftHtml = this.buildDiffPaneHtml(this.chunkManager.oldContent, 'left');\n        const rightHtml = this.buildDiffPaneHtml(this.chunkManager.newContent, 'right');\n\n        // Inject HTML into container - WITHOUT creating empty pane headers\n        // The headers will be added by ChunkSelectionHandler later\n        this.chunkManager.diffViewer.container.innerHTML = `\n            <div class=\"${Selectors.DIFF.PANES_CONTAINER.name()}\">\n                <div class=\"${Selectors.DIFF.PANE.name()}\" id=\"${Selectors.DIFF.PANE_LEFT.name()}\" data-side=\"left\">\n                    ${leftHtml}\n                </div>\n                <div class=\"${Selectors.DIFF.PANE.name()}\" id=\"${Selectors.DIFF.PANE_RIGHT.name()}\" data-side=\"right\">\n                    ${rightHtml}\n                </div>\n            </div>\n        `;\n\n        // Hide loader if shown\n        if (loaderId) {\n            const loaderManager = LoaderManager.getInstance();\n            loaderManager.hideLoader(loaderId);\n\n            // Log performance metrics\n            const endTime = performance.now();\n            const duration = endTime - startTime;\n            Debug.log(`ChunkRenderer: Rendered ${this.chunkManager.chunks.length} chunks in ${duration.toFixed(2)}ms`, null, 2);\n        } else {\n            Debug.log(`ChunkRenderer: Rendered ${this.chunkManager.chunks.length} chunks successfully`, null, 2);\n        }\n    }\n\n    /**\n     * Build HTML for a diff pane\n     * @param {Array} lines - Content lines\n     * @param {string} side - 'left' or 'right'\n     * @returns {string} Generated HTML\n     */\n    buildDiffPaneHtml(lines, side) {\n        // First, identify chunks that have placeholder lines\n        const chunksWithPlaceholders = new Set();\n        for (const line of lines) {\n            if (line.type === 'placeholder' && line.chunkId) {\n                chunksWithPlaceholders.add(line.chunkId);\n            }\n        }\n\n        // Create HTML with nested containers for proper scrolling\n        let html = `<div class=\"${Selectors.DIFF.PANE_CONTENT.name()} hljs\">`; // Add scrolling container\n        html += `<div class=\"${Selectors.DIFF.TABLE_WRAPPER.name()}\">`;\n        html += `<table class=\"${Selectors.CODE.TABLE.name()}\"><tbody>`;\n\n        let lineCounter = 0;\n\n        for (const line of lines) {\n            html += this._renderDiffLine(line, side, ++lineCounter, chunksWithPlaceholders);\n        }\n\n        html += '</tbody></table>';\n        html += '</div>'; // Close table wrapper\n        html += '</div>'; // Close scrolling container\n\n        return html;\n    }\n\n    /**\n     * Render a single diff line\n     * @private\n     */\n    _renderDiffLine(line, side, lineNumber, chunksWithPlaceholders) {\n        let html = '<tr>';\n\n        const chunkId = line.chunkId !== undefined ? line.chunkId : '';\n\n        // Get chunk type if this is a chunk line\n        let chunkType = '';\n        if (chunkId !== '') {\n            const chunk = this.chunkManager.chunks.find(c => c.id === chunkId);\n            chunkType = chunk ? chunk.type : '';\n        }\n\n        // Add line number cell\n        html += `<td class=\"${Selectors.CODE.LINE_NUMBER.name()}\">${lineNumber}</td>`;\n\n        // Check if this chunk has placeholder lines\n        const hasPlaceholder = chunkId !== '' && chunksWithPlaceholders.has(chunkId);\n\n        if (line.type === 'placeholder') {\n            html += this._renderPlaceholderLine(line, chunkId, chunkType, side, lineNumber);\n        } else {\n            html += this._renderContentLine(line, chunkId, chunkType, side, lineNumber, hasPlaceholder);\n        }\n\n        html += '</tr>';\n        return html;\n    }\n\n    /**\n     * Render placeholder line\n     * @private\n     */\n    _renderPlaceholderLine(line, chunkId, chunkType, side, lineNumber) {\n        // Add status class for chunks that can be navigated\n        let additionalClass = '';\n        if (chunkId !== '') {\n            // Add the vdm-diff__chunk class for elements with chunk IDs\n            additionalClass += ` ${Selectors.DIFF.CHUNK.name()}`;\n\n            if (line.conflict || chunkType === 'replace' || chunkType === 'add' || chunkType === 'delete') {\n                additionalClass += ` ${Selectors.STATUS.UNRESOLVED.name()}`;\n            }\n        }\n\n        return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()} ${Selectors.DIFF.LINE_CONTENT_EMPTY.name()} ${Selectors.DIFF.LINE_PLACEHOLDER.name()}${additionalClass}\"\n                   data-chunk-id=\"${chunkId}\"\n                   data-chunk-type=\"${chunkType}\"\n                   data-side=\"${side}\"\n                   data-placeholder-type=\"${line.placeholderType || 'default'}\"\n                   data-line-id=\"${side}-${lineNumber}\"\n                   data-has-placeholder=\"true\">&nbsp;</td>`;\n    }\n\n    /**\n     * Render content line\n     * @private\n     */\n    _renderContentLine(line, chunkId, chunkType, side, lineNumber, hasPlaceholder) {\n        const lineContent = line.line;\n        const isEmpty = !lineContent || lineContent === '\\r' || lineContent === '\\n';\n\n        // Add different classes based on chunk type\n        let additionalClass = '';\n        if (chunkId !== '') {\n            additionalClass = this._getChunkClass(chunkType, side);\n\n            // Add the vdm-diff__chunk class for elements with chunk IDs\n            additionalClass += ` ${Selectors.DIFF.CHUNK.name()}`;\n\n            // Add status class for chunks that can be navigated - include all chunk types that need resolution\n            if (line.conflict || chunkType === 'replace' || chunkType === 'add' || chunkType === 'delete') {\n                additionalClass += ` ${Selectors.STATUS.UNRESOLVED.name()}`;\n            }\n        }\n\n        if (isEmpty) {\n            additionalClass += ` ${Selectors.CODE.LINE_EMPTY.name()}`;\n            return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()}${additionalClass}\"\n                       data-chunk-id=\"${chunkId}\"\n                       data-chunk-type=\"${chunkType}\"\n                       data-side=\"${side}\"\n                       data-line-id=\"${side}-${lineNumber}\"\n                       ${hasPlaceholder ? 'data-has-placeholder=\"true\"' : ''}>&nbsp;</td>`;\n        } else {\n            // Add the line content with proper attributes for chunk handling\n            const displayContent = StringUtils.escapeHtml ?\n                                   StringUtils.escapeHtml(lineContent) :\n                                   lineContent.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n            // Add cursor: pointer to all clickable chunk elements\n            const styleAttr = chunkId !== '' ? ' style=\"cursor: pointer;\"' : '';\n\n            return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()}${additionalClass}\"\n                       data-chunk-id=\"${chunkId}\"\n                       data-chunk-type=\"${chunkType}\"\n                       data-side=\"${side}\"\n                       data-line-id=\"${side}-${lineNumber}\"\n                       ${hasPlaceholder ? 'data-has-placeholder=\"true\"' : ''}${styleAttr}>${displayContent}</td>`;\n        }\n    }\n\n    /**\n     * Get CSS class for a chunk type\n     * @private\n     */\n    _getChunkClass(chunkType, side) {\n        if (chunkType === 'delete' && side === 'left') {\n            return ` ${Selectors.DIFF.LINE_DELETE.name()}`;\n        } else if (chunkType === 'add' && side === 'right') {\n            return ` ${Selectors.DIFF.LINE_ADD.name()}`;\n        } else if (chunkType === 'replace') {\n            let cls = ` ${Selectors.DIFF.LINE_ADD.name()}`;\n            if (side === 'left') {\n                cls += ` ${Selectors.DIFF.LINE_REPLACE_LEFT.name()}`;\n            } else {\n                cls += ` ${Selectors.DIFF.LINE_REPLACE_RIGHT.name()}`;\n            }\n            return cls;\n        }\n        return '';\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors';\nimport { ChunkUtils } from '../../utils/ChunkUtils';\nimport { IconRegistry } from '../../utils/IconRegistry';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\n\nimport { ChunkVisualStateManager } from './ChunkVisualStateManager';\n\n/**\n * Handles chunk selection operations\n */\nexport class ChunkSelectionHandler {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n        this.selections = {}; // Store selections separately\n        this.visualStateManager = new ChunkVisualStateManager(chunkManager);\n\n        // Define selection state constants to replace hardcoded strings\n        this.SELECTED = Selectors.DIFF.CHUNK_SELECTED.name();\n        this.UNSELECTED = Selectors.DIFF.CHUNK_UNSELECTED.name();\n\n        // Performance tracking metrics\n        this._performanceMetrics = {\n            lastOperationTime: 0,\n            operationCount: 0\n        };\n    }\n\n    /**\n     * Setup chunk selection handlers\n     */\n    setupChunkSelection() {\n        // Store the handler function with proper binding\n        this._boundClickHandler = (event) => this._handleClick(event);\n        this._boundCheckAllHandler = (event) => this._handleCheckAll(event);\n\n        // Clear existing handlers and setup new ones for ALL chunk elements\n        // by targeting data-chunk-id attribute instead of specific classes\n        DOMUtils.setupEventHandlers(\n            '[data-chunk-id]:not([data-chunk-id=\"\"])',\n            'click',\n            this._boundClickHandler,\n            {\n                removeExisting: true,\n                styles: { cursor: 'pointer' }\n            }\n        );\n\n        // Add \"Check All\" buttons to each pane and setup handlers\n        this._setupCheckAllButtons();\n\n        // Clear ChunkUtils cache to ensure fresh state\n        ChunkUtils.clearCache();\n\n        Debug.log('ChunkSelectionHandler: Selection handlers initialized for all chunk elements', null, 2);\n    }\n\n    /**\n     * Set up \"Check All\" buttons\n     * @private\n     */\n    _setupCheckAllButtons() {\n        // Find panes\n        const panes = this.chunkManager.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        if (panes.length !== 2) {\n            Debug.log('ChunkSelectionHandler: Could not find both diff panes for \"Check All\" buttons', null, 2);\n            return;\n        }\n\n        const leftPane = panes[0];\n        const rightPane = panes[1];\n\n        // Create and add the check all buttons to the panes\n        this._createCheckAllButtonHeader(leftPane, 'left');\n        this._createCheckAllButtonHeader(rightPane, 'right');\n    }\n\n    /**\n     * Create a header with a \"Check All\" button for a pane\n     * @private\n     */\n    _createCheckAllButtonHeader(pane, side) {\n        // Get translation manager instance\n        const translationManager = TranslationManager.getInstance();\n\n        // Create header element\n        const header = document.createElement('div');\n        header.className = Selectors.DIFF.PANE_HEADER.name();\n\n        // Make header a flex container\n        header.classList.add('vdm-d-flex', 'vdm-justify-content-between', 'vdm-align-items-center');\n\n        // Get language information from DiffViewer\n        const language = this.chunkManager.diffViewer.runtimeProps.diffData.language || 'Text';\n\n        // Create language badge\n        const langBadge = document.createElement('span');\n        langBadge.className = 'vdm-badge vdm-badge--info';\n        langBadge.textContent = language;\n\n        // Create button element\n        const checkAllButton = document.createElement('button');\n        checkAllButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_EXTRA_SMALL.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()} ${Selectors.DIFF.CHECK_ALL_BTN.name()}`;\n        checkAllButton.setAttribute('data-side', side);\n        checkAllButton.setAttribute('data-icon-state', 'unchecked');\n        checkAllButton.title = `Select all changes from the ${side} pane`;\n        checkAllButton.style.display = 'inline-flex';\n        checkAllButton.style.alignItems = 'center';\n        checkAllButton.style.verticalAlign = 'middle';\n\n        // Create icon wrapper span\n        const iconWrapper = document.createElement('span');\n        iconWrapper.className = 'vdm-icon-wrapper';\n        iconWrapper.style.marginRight = '3px';\n        iconWrapper.style.display = 'inline-flex';\n        iconWrapper.style.alignItems = 'center';\n        iconWrapper.style.verticalAlign = 'middle';\n        iconWrapper.style.height = '14px';\n        iconWrapper.style.lineHeight = '1';\n\n        // Add checkbox-unchecked icon by default\n        const uncheckIcon = IconRegistry.createIcon('checkbox-unchecked', {\n            width: 14,\n            height: 14,\n            classes: 'vdm-icon-checkbox'\n        });\n\n        iconWrapper.appendChild(uncheckIcon);\n\n        // Create text node with a span wrapper for better alignment\n        const textSpan = document.createElement('span');\n        textSpan.style.display = 'inline-block';\n        textSpan.style.verticalAlign = 'middle';\n        textSpan.style.lineHeight = '1';\n        textSpan.appendChild(document.createTextNode(translationManager.get('checkAll')));\n\n        // Add icon and text to button\n        checkAllButton.appendChild(iconWrapper);\n        checkAllButton.appendChild(textSpan);\n\n        // Add language badge and button to header\n        header.appendChild(langBadge);\n        header.appendChild(checkAllButton);\n\n        // Add header as the first child of the pane\n        pane.insertBefore(header, pane.firstChild);\n\n        // Add click event handler\n        checkAllButton.addEventListener('click', this._boundCheckAllHandler);\n    }\n\n    /**\n     * Handle click on \"Check All\" button\n     * @private\n     */\n    _handleCheckAll(event) {\n        const button = event.currentTarget;\n        const side = button.getAttribute('data-side');\n        const iconState = button.getAttribute('data-icon-state');\n        const oppositeButton = this._getOppositeButton(side);\n\n        // Get translation manager and loader manager\n        const translationManager = TranslationManager.getInstance();\n        const loaderManager = LoaderManager.getInstance();\n\n        if (!side) return;\n\n        // Show loading indicator for batch operations\n        const message = translationManager.get('processingChunks') || 'Processing chunks...';\n        const loaderId = loaderManager.showLoader(message, {\n            fullscreen: true,\n            zIndex: 9999\n        });\n\n        // Also update button state for visual feedback\n        this._setButtonProcessingState(button, true);\n\n        // Track performance\n        const startTime = performance.now();\n\n        // Use a small timeout to allow the loader to be shown\n        setTimeout(() => {\n            // If this button is already checked, uncheck everything\n            if (iconState === 'checked') {\n                Debug.log('ChunkSelectionHandler: Unchecking all selections', null, 2);\n\n                // Reset this button\n                this._toggleButtonIconState(button, 'checked');\n\n                // Reset opposite button if it's checked\n                if (oppositeButton && oppositeButton.getAttribute('data-icon-state') === 'checked') {\n                    this._toggleButtonIconState(oppositeButton, 'checked');\n                }\n\n                // Clear all selections\n                this.clearAllSelections(true); // Use optimized batch version\n            }\n            // If opposite button is checked, toggle both sides\n            else if (oppositeButton && oppositeButton.getAttribute('data-icon-state') === 'checked') {\n                // Uncheck the opposite side\n                this._toggleButtonIconState(oppositeButton, 'checked');\n\n                // Check this side\n                this._toggleButtonIconState(button, 'unchecked');\n\n                // Select all on this side\n                this.selectAllOnSide(side, true); // Use optimized batch version\n            }\n            // Default case: check this side\n            else {\n                this._toggleButtonIconState(button, 'unchecked');\n                this.selectAllOnSide(side, true); // Use optimized batch version\n            }\n\n            // Reset button state\n            this._setButtonProcessingState(button, false);\n\n            // Hide loader\n            loaderManager.hideLoader(loaderId);\n\n            // Track performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }, 50);\n    }\n\n    /**\n     * Set button to processing state to give visual feedback during long operations\n     * @private\n     */\n    _setButtonProcessingState(button, isProcessing) {\n        if (isProcessing) {\n            button.classList.add('processing');\n            button.style.opacity = '0.8';\n            button.style.cursor = 'wait';\n        } else {\n            button.classList.remove('processing');\n            button.style.opacity = '';\n            button.style.cursor = '';\n        }\n    }\n\n    /**\n     * Record performance metrics for optimization analysis\n     * @private\n     */\n    _recordPerformanceMetrics(startTime) {\n        const endTime = performance.now();\n        const operationTime = endTime - startTime;\n\n        this._performanceMetrics.lastOperationTime = operationTime;\n        this._performanceMetrics.operationCount++;\n\n        // Log cache statistics to evaluate caching effectiveness\n        const cacheStats = ChunkUtils.getCacheStats();\n        const elementHitRatio = cacheStats.elementCacheHits /\n            (cacheStats.elementCacheHits + cacheStats.elementCacheMisses) * 100 || 0;\n        const iconHitRatio = cacheStats.iconMarkerCacheHits /\n            (cacheStats.iconMarkerCacheHits + cacheStats.iconMarkerCacheMisses) * 100 || 0;\n\n        Debug.log(`ChunkSelectionHandler: Operation completed in ${operationTime.toFixed(2)}ms`,\n            {\n                totalOperations: this._performanceMetrics.operationCount,\n                cacheStats: {\n                    elementCacheHits: cacheStats.elementCacheHits,\n                    elementCacheMisses: cacheStats.elementCacheMisses,\n                    elementHitRatio: `${elementHitRatio.toFixed(1)}%`,\n                    iconMarkerCacheHits: cacheStats.iconMarkerCacheHits,\n                    iconMarkerCacheMisses: cacheStats.iconMarkerCacheMisses,\n                    iconHitRatio: `${iconHitRatio.toFixed(1)}%`\n                }\n            }, 2);\n    }\n\n    /**\n     * Get the button for the opposite side\n     * @private\n     * @param {string} currentSide - Current side ('left' or 'right')\n     * @returns {Element|null} - The opposite side button element or null if not found\n     */\n    _getOppositeButton(currentSide) {\n        const oppositeSide = currentSide === 'left' ? 'right' : 'left';\n        return this.chunkManager.diffViewer.container.querySelector(\n            `.${Selectors.DIFF.CHECK_ALL_BTN.name()}[data-side=\"${oppositeSide}\"]`\n        );\n    }\n\n    /**\n     * Toggle button icon state between checked and unchecked\n     * @private\n     * @param {Element} button - The button element\n     * @param {string} currentState - Current icon state ('checked' or 'unchecked')\n     */\n    _toggleButtonIconState(button, currentState) {\n        const iconWrapper = button.querySelector('.vdm-icon-wrapper');\n        if (!iconWrapper) return;\n\n        // Clear current icon\n        iconWrapper.innerHTML = '';\n\n        // Determine new state based on current state\n        let newIconState;\n        if (currentState === 'unchecked') {\n            newIconState = 'checked';\n            iconWrapper.appendChild(IconRegistry.createIcon('checkbox-checked', {\n                width: 14,\n                height: 14,\n                classes: 'vdm-icon-checkbox'\n            }));\n        } else {\n            newIconState = 'unchecked';\n            iconWrapper.appendChild(IconRegistry.createIcon('checkbox-unchecked', {\n                width: 14,\n                height: 14,\n                classes: 'vdm-icon-checkbox'\n            }));\n        }\n\n        // Update icon state attribute\n        button.setAttribute('data-icon-state', newIconState);\n    }\n\n    /**\n     * Select all chunks on a specific side\n     * @param {string} side - 'left' or 'right'\n     * @param {boolean} useBatch - Whether to use batching for large files (default: false for backward compatibility)\n     */\n    selectAllOnSide(side, useBatch = false) {\n        const oppositeSide = side === 'left' ? 'right' : 'left';\n\n        Debug.log(`ChunkSelectionHandler: Selecting all chunks on ${side} side${useBatch ? ' (batched)' : ''}`, null, 2);\n\n        // Get all chunks that need resolution\n        const conflictChunks = this.chunkManager.chunks.filter(chunk =>\n            chunk.conflict || chunk.type === 'replace' || chunk.type === 'add' || chunk.type === 'delete'\n        );\n\n        // Check if we should use batching based on number of chunks\n        const largeDiff = conflictChunks.length > 20; // Threshold for considering a diff as \"large\"\n        useBatch = useBatch || largeDiff;\n\n        // Show loader for large operations\n        let loaderId = null;\n        if (useBatch && conflictChunks.length > 50) {\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const message = translationManager.get('processingChunks') || 'Processing chunks...';\n            loaderId = loaderManager.showLoader(message, {\n                fullscreen: true,\n                zIndex: 9999\n            });\n        }\n\n        // Start tracking performance\n        const startTime = performance.now();\n\n        if (useBatch) {\n            // First update internal state for all chunks\n            conflictChunks.forEach(chunk => {\n                // Update selections object\n                this.selections[chunk.id] = side;\n\n                // Sync with diffConfig for compatibility\n                this._syncWithDiffConfig(chunk.id, side);\n            });\n\n            // Get all chunks by side for efficient batch processing\n            const chunksBySide = new Map();\n\n            // Group all elements by chunk ID and side for batch processing\n            conflictChunks.forEach(chunk => {\n                // Toggle visual state with batching enabled\n                this.visualStateManager.updateVisualState(chunk.id, side, this.SELECTED, true);\n                this.visualStateManager.updateVisualState(chunk.id, oppositeSide, this.UNSELECTED, true);\n\n                // Collect chunk elements for resolved status update\n                if (!chunksBySide.has(chunk.id)) {\n                    const elements = ChunkUtils.getChunkElements(chunk.id);\n                    chunksBySide.set(chunk.id, elements);\n                }\n            });\n\n            // Process visual updates in a single batch\n            this.visualStateManager.applyBatch(false); // Don't notify yet\n\n            // Apply resolved status to all chunks in a separate batch\n            requestAnimationFrame(() => {\n                // Ensure the icon markers are updated by forcing a redraw\n                this._refreshIconStates(side, conflictChunks);\n\n                chunksBySide.forEach((elements) => {\n                    elements.forEach(element => {\n                        element.classList.add(Selectors.STATUS.RESOLVED.name());\n                        element.classList.remove(Selectors.STATUS.UNRESOLVED.name());\n                    });\n                });\n\n                // Update navigation counter after all visual changes\n                this._updateNavigationCounter();\n\n                // Now notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n\n                // Hide loader if it was shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n                }\n\n                // Record performance metrics after all operations\n                this._recordPerformanceMetrics(startTime);\n            });\n        } else {\n            // Legacy approach - process one by one\n            conflictChunks.forEach(chunk => {\n                this.toggleChunkSelection(chunk.id, side, this.SELECTED);\n                this.toggleChunkSelection(chunk.id, oppositeSide, this.UNSELECTED);\n            });\n\n            // Callback to notify of selection change\n            if (typeof this.chunkManager.onSelectionChange === 'function') {\n                this.chunkManager.onSelectionChange();\n            }\n\n            // Record performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }\n    }\n\n    /**\n     * Force refresh icon states for chunks\n     * This ensures icon markers are correctly updated during batch operations\n     * @private\n     */\n    _refreshIconStates(selectedSide, chunks) {\n        const oppositeSide = selectedSide === 'left' ? 'right' : 'left';\n\n        // Force all chunks to properly show their selection state visually\n        chunks.forEach(chunk => {\n            // Get elements for both sides\n            const selectedElements = ChunkUtils.getChunkElements(chunk.id, selectedSide);\n            const oppositeElements = ChunkUtils.getChunkElements(chunk.id, oppositeSide);\n\n            // Handle selected side\n            if (selectedElements.length > 0) {\n                // Sort by line number to get first element for icon marker\n                const sortedElements = ChunkUtils.sortElementsByLineNumber(selectedElements);\n                const firstElement = sortedElements[0];\n\n                if (firstElement) {\n                    const lineId = firstElement.dataset.lineId;\n                    if (lineId) {\n                        // Force direct icon marker update with the correct side\n                        const iconMarker = ChunkUtils.getIconMarker(lineId);\n                        if (iconMarker) {\n                            // Remove all state classes first\n                            iconMarker.classList.remove(\n                                Selectors.DIFF.CHUNK_SELECTED.name(),\n                                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                                Selectors.ICONS.SELECT.name(),\n                                Selectors.ICONS.SELECT_LEFT.name(),\n                                Selectors.ICONS.SELECT_RIGHT.name()\n                            );\n\n                            // Add selected state\n                            iconMarker.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                            // Add the side-specific icon marker\n                            if (selectedSide === 'left') {\n                                iconMarker.classList.add(Selectors.ICONS.SELECT_LEFT.name());\n                            } else {\n                                iconMarker.classList.add(Selectors.ICONS.SELECT_RIGHT.name());\n                            }\n                        }\n                    }\n                }\n\n                // Apply the selected class to all elements for this chunk on the selected side\n                selectedElements.forEach(element => {\n                    // Remove all selection classes first\n                    element.classList.remove(\n                        Selectors.DIFF.CHUNK_SELECTED.name(),\n                        Selectors.DIFF.CHUNK_UNSELECTED.name()\n                    );\n\n                    // Add selected class\n                    element.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                    // Update the parent row too\n                    const row = ChunkUtils.getParentRow(element);\n                    if (row) {\n                        row.classList.remove(\n                            Selectors.DIFF.CHUNK_SELECTED.name(),\n                            Selectors.DIFF.CHUNK_UNSELECTED.name()\n                        );\n                        row.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n                    }\n                });\n            }\n\n            // Handle opposite side\n            if (oppositeElements.length > 0) {\n                // Clear any icon markers on the opposite side\n                const sortedOppositeElements = ChunkUtils.sortElementsByLineNumber(oppositeElements);\n                const firstOppositeElement = sortedOppositeElements[0];\n\n                if (firstOppositeElement) {\n                    const oppositeLineId = firstOppositeElement.dataset.lineId;\n                    if (oppositeLineId) {\n                        const oppositeIconMarker = ChunkUtils.getIconMarker(oppositeLineId);\n                        if (oppositeIconMarker) {\n                            // Clear all selection related classes\n                            oppositeIconMarker.classList.remove(\n                                Selectors.DIFF.CHUNK_SELECTED.name(),\n                                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                                Selectors.ICONS.SELECT.name(),\n                                Selectors.ICONS.SELECT_LEFT.name(),\n                                Selectors.ICONS.SELECT_RIGHT.name()\n                            );\n\n                            // DETERMINE IF THIS SHOULD BE A PLACEHOLDER\n                            // Apply the same placeholder logic used in _updateOppositeMarker\n\n                            // Check if the opposite element has placeholder attributes\n                            const hasPlaceholder = firstOppositeElement.dataset.hasPlaceholder === 'true';\n                            const isPlaceholderType = firstOppositeElement.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name());\n                            const wasPlaceholder = oppositeIconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n                            // Find the corresponding selected element for the same line number\n                            const lineNumber = oppositeLineId.split('-')[1];\n                            const selectedLineId = `${selectedSide}-${lineNumber}`;\n                            const selectedElement = document.querySelector(`[data-line-id=\"${selectedLineId}\"]`);\n\n                            // Check if the selected element indicates this should be a placeholder\n                            const selectedHasPlaceholder = selectedElement?.dataset.hasPlaceholder === 'true';\n                            const selectedIsPlaceholderType = selectedElement?.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name());\n\n                            // If any of these conditions are true, this should be a placeholder\n                            if (hasPlaceholder || isPlaceholderType || wasPlaceholder ||\n                                selectedHasPlaceholder || selectedIsPlaceholderType) {\n                                // Set as placeholder\n                                oppositeIconMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                                Debug.log(`ChunkSelectionHandler: Set opposite marker ${oppositeLineId} as placeholder during batch refresh`, null, 3);\n                            } else {\n                                // Normal unselected state\n                                oppositeIconMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n                            }\n                        }\n                    }\n                }\n\n                // Apply the unselected class to all elements on the opposite side\n                oppositeElements.forEach(element => {\n                    // Remove all selection classes first\n                    element.classList.remove(\n                        Selectors.DIFF.CHUNK_SELECTED.name(),\n                        Selectors.DIFF.CHUNK_UNSELECTED.name()\n                    );\n\n                    // Add unselected class\n                    element.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n\n                    // Update the parent row too\n                    const row = ChunkUtils.getParentRow(element);\n                    if (row) {\n                        row.classList.remove(\n                            Selectors.DIFF.CHUNK_SELECTED.name(),\n                            Selectors.DIFF.CHUNK_UNSELECTED.name()\n                        );\n                        row.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Handle click event on chunk\n     * @private\n     */\n    _handleClick(event) {\n        const element = event.currentTarget;\n        const chunkId = element.getAttribute('data-chunk-id');\n        const side = element.getAttribute('data-side');\n\n        Debug.log(`ChunkSelectionHandler: Click detected on side ${side} for chunk ${chunkId}`, {\n            element: element.outerHTML.substring(0, 100) + '...' // Log first 100 chars of HTML\n        }, 3);\n\n        if (chunkId && side) {\n            // Check if the chunk is already selected on this side\n            const isAlreadySelected = this.selections[chunkId] === side &&\n                element.classList.contains(Selectors.DIFF.CHUNK_SELECTED.name());\n\n            if (isAlreadySelected) {\n                // Unselect this chunk\n                Debug.log(`ChunkSelectionHandler: Unselecting chunk ${chunkId} as it was already selected`, null, 3);\n\n                // Remove from selections\n                delete this.selections[chunkId];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId];\n                }\n\n                // Reset visual state for both sides\n                this.visualStateManager.resetVisualState(chunkId);\n\n                // Remove resolved status from all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunkId);\n                chunkElements.forEach(element => {\n                    element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                    element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                });\n\n                // Update navigation counter\n                this._updateNavigationCounter();\n\n                // Notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n            } else {\n                // Get the opposite side\n                const oppositeSide = side === 'left' ? 'right' : 'left';\n\n                // Debug before toggling\n                Debug.log(`ChunkSelectionHandler: Toggling chunk ${chunkId}`, {\n                    selectedSide: side,\n                    oppositeSide: oppositeSide\n                }, 3);\n\n                // Toggle both sides\n                this.toggleChunkSelection(chunkId, side, this.SELECTED);\n                this.toggleChunkSelection(chunkId, oppositeSide, this.UNSELECTED);\n            }\n        }\n    }\n\n    /**\n     * Toggle selection state of a chunk side\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - Selection state constant (SELECTED or UNSELECTED)\n     * @param {boolean} batch - Whether to use batching (default: false for backward compatibility)\n     */\n    toggleChunkSelection(chunkId, side, state, batch = false) {\n        // Update the selections object\n        if (state === this.SELECTED) {\n            this.selections[chunkId] = side;\n\n            // Sync with diffConfig for compatibility\n            this._syncWithDiffConfig(chunkId, side);\n\n            // Update the navigation counter\n            this._updateNavigationCounter();\n\n            if (!batch) {\n                // Add resolved status to all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunkId);\n                chunkElements.forEach(element => {\n                    element.classList.add(Selectors.STATUS.RESOLVED.name());\n                    element.classList.remove(Selectors.STATUS.UNRESOLVED.name());\n                });\n            }\n        }\n\n        // Update visual selection using the specialized component\n        this.visualStateManager.updateVisualState(chunkId, side, state, batch);\n    }\n\n    /**\n     * Sync selection with diffConfig\n     * @private\n     */\n    _syncWithDiffConfig(chunkId, side) {\n        if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n            this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId] = side;\n        }\n    }\n\n    /**\n     * Update navigation counter\n     * @private\n     */\n    _updateNavigationCounter() {\n        if (this.chunkManager.diffViewer?.diffNavigator) {\n            this.chunkManager.diffViewer.diffNavigator.updateCounter();\n        }\n    }\n\n    /**\n     * Get all selections\n     * @returns {Object} Map of chunkId to selected side\n     */\n    getSelections() {\n        return {...this.selections};\n    }\n\n    /**\n     * Check if a chunk is resolved (has selection)\n     * @param {string} chunkId - Chunk ID to check\n     * @returns {boolean} True if resolved\n     */\n    isChunkResolved(chunkId) {\n        return !!this.selections[chunkId];\n    }\n\n    /**\n     * Get unresolved chunk count\n     * @returns {number} Number of unresolved chunks\n     */\n    getUnresolvedCount() {\n        const conflictChunks = this.chunkManager.chunks.filter(c => c.conflict);\n        return conflictChunks.length - Object.keys(this.selections).length;\n    }\n\n    /**\n     * Clear all selections from both sides\n     * @param {boolean} useBatch - Whether to use batching for performance (default: false for backward compatibility)\n     */\n    clearAllSelections(useBatch = false) {\n        // Get all chunks that need resolution\n        const conflictChunks = this.chunkManager.chunks.filter(chunk =>\n            chunk.conflict || chunk.type === 'replace' || chunk.type === 'add' || chunk.type === 'delete'\n        );\n\n        // Check if we should use batching based on number of chunks\n        const largeDiff = conflictChunks.length > 20; // Threshold for considering a diff as \"large\"\n        useBatch = useBatch || largeDiff;\n\n        // Show loader for large operations\n        let loaderId = null;\n        if (useBatch) {\n            const selectedChunks = conflictChunks.filter(chunk => this.isChunkResolved(chunk.id));\n            if (selectedChunks.length > 50) { // Only show loader for large batches\n                const translationManager = TranslationManager.getInstance();\n                const loaderManager = LoaderManager.getInstance();\n                const message = translationManager.get('processingChunks') || 'Processing chunks...';\n                loaderId = loaderManager.showLoader(message, {\n                    fullscreen: true,\n                    zIndex: 9999\n                });\n            }\n        }\n\n        // Start tracking performance\n        const startTime = performance.now();\n\n        if (useBatch) {\n            Debug.log(`ChunkSelectionHandler: Clearing all selections using batch operations`, null, 2);\n\n            // First update internal state\n            const selectedChunks = conflictChunks.filter(chunk => this.isChunkResolved(chunk.id));\n\n            // Use a set for faster lookups\n            const selectedChunkIds = new Set(selectedChunks.map(chunk => chunk.id));\n\n            // Collect all elements that need updating\n            const elementsToUpdate = new Map();\n\n            // Remove from internal objects efficiently\n            selectedChunkIds.forEach(chunkId => {\n                // Remove from selections object\n                delete this.selections[chunkId];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId];\n                }\n\n                // Queue visual state reset with batching\n                this.visualStateManager.resetVisualState(chunkId, true);\n\n                // Collect elements for later class updates\n                const elements = ChunkUtils.getChunkElements(chunkId);\n                elementsToUpdate.set(chunkId, elements);\n            });\n\n            // Apply all visual updates in a batch\n            this.visualStateManager.applyBatch(false); // Don't notify yet\n\n            // Update element status classes in a separate batch\n            requestAnimationFrame(() => {\n                elementsToUpdate.forEach((elements, _chunkId) => {\n                    elements.forEach(element => {\n                        element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                        element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                    });\n                });\n\n                // Update navigation counter after all visual changes\n                this._updateNavigationCounter();\n\n                // Now notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n\n                // Hide loader if it was shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n                }\n\n                // Record performance metrics after all operations\n                this._recordPerformanceMetrics(startTime);\n            });\n        } else {\n            // Legacy approach - clear selection for each chunk individually\n            conflictChunks.forEach(chunk => {\n                // Skip chunks that aren't selected\n                if (!this.isChunkResolved(chunk.id)) return;\n\n                // Remove resolved status from all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunk.id);\n                chunkElements.forEach(element => {\n                    element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                    element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                });\n\n                // Remove from selections object\n                delete this.selections[chunk.id];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunk.id];\n                }\n\n                // Reset visual state for both sides\n                this.visualStateManager.resetVisualState(chunk.id);\n            });\n\n            // Update navigation counter\n            this._updateNavigationCounter();\n\n            // Callback to notify of selection change\n            if (typeof this.chunkManager.onSelectionChange === 'function') {\n                this.chunkManager.onSelectionChange();\n            }\n\n            // Record performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }\n    }\n}\n","import { ChunkUtils } from '../../utils/ChunkUtils';\nimport Selectors from '../../constants/Selectors';\nimport { Debug } from '../../utils/Debug';\n\n/**\n * Manages visual state updates for chunk selections\n */\nexport class ChunkVisualStateManager {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n        // Batch operations queue\n        this._pendingOperations = [];\n        // Track whether DOM updates are batched\n        this._isBatching = false;\n        // Performance metrics\n        this._metrics = {\n            lastBatchSize: 0,\n            lastBatchTime: 0\n        };\n        Debug.log('ChunkVisualStateManager: Initialized', null, 3);\n    }\n\n    /**\n     * Initialize the visual state manager\n     * Preloads all chunk data for optimal performance with large files\n     */\n    initialize() {\n        // Preload all chunks into cache for better performance\n        ChunkUtils.preloadChunks();\n        Debug.log('ChunkVisualStateManager: Initialized with preloaded chunks', null, 2);\n    }\n\n    /**\n     * Update visual selection state\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - 'selected' or 'unselected'\n     * @param {boolean} batch - Whether to batch operations (defaults to false for backward compatibility)\n     */\n    updateVisualState(chunkId, side, state, batch = false) {\n        Debug.log(`ChunkVisualStateManager: Updating visual state for chunk ${chunkId}, side ${side}, state ${state}`, null, 3);\n\n        // Get all elements for this chunk side\n        const elements = ChunkUtils.getChunkElements(chunkId, side);\n        Debug.log(`ChunkVisualStateManager: Found ${elements.length} elements for chunk ${chunkId}`, null, 3);\n\n        // Sort by line number (only needed for getting the first element)\n        const sortedElements = ChunkUtils.sortElementsByLineNumber(elements);\n\n        // Get the opposite side to handle placeholder synchronization\n        const oppositeSide = side === 'left' ? 'right' : 'left';\n\n        if (batch) {\n            // Add to batch queue\n            this._pendingOperations.push({\n                type: 'updateState',\n                chunkId,\n                side,\n                elements: elements,\n                firstElement: sortedElements.length > 0 ? sortedElements[0] : null,\n                state: state,\n                oppositeSide: oppositeSide\n            });\n        } else {\n            // Apply immediately (for backward compatibility)\n            this._applyStateToElements(elements, state);\n\n            // Only update the icon for the first element\n            if (sortedElements.length > 0) {\n                Debug.log(`ChunkVisualStateManager: Updating icon marker for first element of chunk ${chunkId}`, null, 3);\n\n                // When setting a state on one side, also update opposite side\n                const firstElement = sortedElements[0];\n                if (firstElement && state === 'selected') {\n                    // First handle the selected side\n                    this._updateIconMarker(firstElement, state);\n\n                    // Then handle the opposite side marker as a placeholder\n                    this._updateOppositeMarker(firstElement, oppositeSide);\n                } else {\n                    // Normal case without special opposite handling\n                    this._updateIconMarker(firstElement, state);\n                }\n            } else {\n                Debug.warn(`ChunkVisualStateManager: No elements found to update icon for chunk ${chunkId}`, null, 3);\n            }\n\n            // Notify about selection change\n            this._notifySelectionChange();\n        }\n    }\n\n    /**\n     * Update the opposite side's marker when a chunk is selected\n     * @private\n     * @param {Element} element - The element being selected\n     * @param {string} oppositeSide - The opposite side ('left' or 'right')\n     */\n    _updateOppositeMarker(element, oppositeSide) {\n        if (!element?.dataset?.lineId) return;\n\n        // Extract line number from lineId (format: \"side-number\")\n        const lineIdParts = element.dataset.lineId.split('-');\n        if (lineIdParts.length !== 2) return;\n\n        const lineNumber = lineIdParts[1];\n        const oppositeLineId = `${oppositeSide}-${lineNumber}`;\n\n        // Find the opposite marker\n        const oppositeMarker = ChunkUtils.getIconMarker(oppositeLineId);\n        if (!oppositeMarker) {\n            Debug.warn(`ChunkVisualStateManager: Could not find opposite marker for ${oppositeLineId}`, null, 3);\n            return;\n        }\n\n        Debug.log(`ChunkVisualStateManager: Updating opposite marker ${oppositeLineId}`, {\n            currentClasses: Array.from(oppositeMarker.classList)\n        }, 3);\n\n        // Remove selection classes\n        oppositeMarker.classList.remove(\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name(),\n            Selectors.ICONS.SELECT.name(),\n            Selectors.ICONS.SELECT_LEFT.name(),\n            Selectors.ICONS.SELECT_RIGHT.name()\n        );\n\n        // CRITICAL DECISION POINT: Determine if the opposite marker should be a placeholder\n        // This is determined by whether the line only exists on one side\n\n        // Only mark as placeholder if it was originally a placeholder\n        const wasPlaceholder = oppositeMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n        if (wasPlaceholder) {\n            // If it was a placeholder, keep it as a placeholder\n            oppositeMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n            Debug.log(`ChunkVisualStateManager: Preserved placeholder status for ${oppositeLineId}`, null, 3);\n        } else {\n            // Otherwise mark it as unselected\n            oppositeMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n            Debug.log(`ChunkVisualStateManager: Set opposite marker ${oppositeLineId} as unselected`, null, 3);\n        }\n    }\n\n    /**\n     * Reset visual state for a chunk\n     * @param {string} chunkId - Chunk ID\n     * @param {boolean} batch - Whether to batch operations (defaults to false for backward compatibility)\n     */\n    resetVisualState(chunkId, batch = false) {\n        Debug.log(`ChunkVisualStateManager: Resetting visual state for chunk ${chunkId}`, null, 3);\n\n        // Get all elements for this chunk (both sides)\n        const elements = ChunkUtils.getChunkElements(chunkId);\n        Debug.log(`ChunkVisualStateManager: Found ${elements.length} elements for chunk ${chunkId}`, null, 3);\n\n        // Get icon markers associated with this chunk more efficiently\n        const iconMarkers = ChunkUtils.getChunkIconMarkers(chunkId);\n\n        if (batch) {\n            // Add to batch queue\n            this._pendingOperations.push({\n                type: 'resetState',\n                chunkId,\n                elements: elements,\n                iconMarkers: iconMarkers\n            });\n        } else {\n            // Apply immediately (for backward compatibility)\n            this._applyResetToElements(elements, iconMarkers);\n\n            Debug.log(`ChunkVisualStateManager: Reset ${iconMarkers.length} icon markers for chunk ${chunkId}`, null, 3);\n\n            // Notify about selection change\n            this._notifySelectionChange();\n        }\n    }\n\n    /**\n     * Process all pending visual updates in a single batch\n     * @param {boolean} notify - Whether to trigger notification after batch (default: true)\n     */\n    applyBatch(notify = true) {\n        if (this._pendingOperations.length === 0) {\n            return;\n        }\n\n        // Set batching state flag\n        this._isBatching = true;\n        const batchSize = this._pendingOperations.length;\n        this._metrics.lastBatchSize = batchSize;\n\n        // Use a single RAF call for better performance\n        requestAnimationFrame(() => {\n            const startTime = performance.now();\n            Debug.log(`ChunkVisualStateManager: Applying batch of ${batchSize} operations`, null, 2);\n\n            try {\n                // Group operations by type for better performance\n                const updateOperations = [];\n                const resetOperations = [];\n\n                // Sort operations into groups\n                this._pendingOperations.forEach(operation => {\n                    if (operation.type === 'updateState') {\n                        updateOperations.push(operation);\n                    } else if (operation.type === 'resetState') {\n                        resetOperations.push(operation);\n                    }\n                });\n\n                // Process reset operations first to ensure clean state\n                if (resetOperations.length > 0) {\n                    this._processBatchedResets(resetOperations);\n                }\n\n                // Then process update operations\n                if (updateOperations.length > 0) {\n                    this._processBatchedUpdates(updateOperations);\n                }\n\n                // Track batch processing time\n                const endTime = performance.now();\n                const processingTime = endTime - startTime;\n                this._metrics.lastBatchTime = processingTime;\n\n                Debug.log(`ChunkVisualStateManager: Batch processing completed in ${processingTime.toFixed(2)}ms`,\n                    {\n                        operations: batchSize,\n                        resetOps: resetOperations.length,\n                        updateOps: updateOperations.length,\n                        msPerOperation: (processingTime / batchSize).toFixed(2)\n                    }, 2);\n            }\n            catch (error) {\n                Debug.error(`Error during batch processing: ${error.message}`, error, 1);\n            }\n            finally {\n                // Clear the queue\n                this._pendingOperations = [];\n\n                // Reset batching state flag\n                this._isBatching = false;\n\n                // Send notification if requested\n                if (notify) {\n                    this._notifySelectionChange();\n                }\n            }\n        });\n    }\n\n    /**\n     * Process a batch of reset operations efficiently\n     * @private\n     */\n    _processBatchedResets(operations) {\n        if (operations.length === 0) return;\n\n        // Group elements and markers by class operations for fewer DOM updates\n        const allElements = [];\n        const allIconMarkers = [];\n\n        // Collect all elements and markers to be reset\n        operations.forEach(operation => {\n            if (operation.elements) {\n                allElements.push(...operation.elements);\n            }\n            if (operation.iconMarkers) {\n                allIconMarkers.push(...operation.iconMarkers);\n            }\n        });\n\n        // Apply resets in bulk\n        this._applyResetToElements(allElements, allIconMarkers);\n    }\n\n    /**\n     * Process a batch of update operations efficiently\n     * @private\n     */\n    _processBatchedUpdates(operations) {\n        if (operations.length === 0) return;\n\n        // Group elements by state for more efficient DOM updates\n        const elementsByState = {\n            'selected': [],\n            'unselected': []\n        };\n\n        // First elements for icon marker updates\n        const firstElementsByState = {\n            'selected': {},  // chunkId -> {element, oppositeSide}\n            'unselected': {} // chunkId -> {element}\n        };\n\n        // Group elements by state\n        operations.forEach(operation => {\n            const { elements, firstElement, state, chunkId, side, oppositeSide } = operation;\n\n            if (elements && elements.length > 0) {\n                if (state === 'selected' || state === 'unselected') {\n                    elementsByState[state].push(...elements);\n                }\n            }\n\n            // Track first element of each chunk for icon marker updates\n            if (firstElement && chunkId) {\n                if (state === 'selected' || state === 'unselected') {\n                    firstElementsByState[state][chunkId] = {\n                        element: firstElement,\n                        side: side,\n                        oppositeSide: oppositeSide\n                    };\n                }\n            }\n        });\n\n        // Apply updates by state\n        Object.entries(elementsByState).forEach(([state, elements]) => {\n            if (elements.length > 0) {\n                this._applyStateToElements(elements, state);\n            }\n        });\n\n        // Update icon markers\n        Object.entries(firstElementsByState).forEach(([state, chunksMap]) => {\n            Object.entries(chunksMap).forEach(([_chunkId, data]) => {\n                // Update the element's marker\n                this._updateIconMarker(data.element, state);\n\n                // For selected elements, also update the opposite marker\n                if (state === 'selected' && data.oppositeSide) {\n                    this._updateOppositeMarker(data.element, data.oppositeSide);\n                }\n            });\n        });\n\n        // Force a DOM layout refresh to ensure styles are applied\n        if (document.body) {\n            document.body.getBoundingClientRect();\n        }\n    }\n\n    /**\n     * Apply state changes to elements using efficient operations\n     * @private\n     */\n    _applyStateToElements(elements, state) {\n        if (!elements || elements.length === 0) return;\n\n        // For better performance, prepare the classes to add/remove\n        const removeClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name()\n        ];\n\n        let addClass = '';\n        if (state === 'selected') {\n            addClass = Selectors.DIFF.CHUNK_SELECTED.name();\n        } else if (state === 'unselected') {\n            addClass = Selectors.DIFF.CHUNK_UNSELECTED.name();\n        } else {\n            // Fallback for backward compatibility\n            addClass = state;\n        }\n\n        // Collect all rows to update at once (reduces layout thrashing)\n        const rows = new Set();\n\n        // Apply to all elements efficiently\n        elements.forEach(element => {\n            // Remove classes\n            element.classList.remove(...removeClasses);\n\n            // Add class\n            element.classList.add(addClass);\n\n            // Add placeholder class if needed\n            if (element.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name())) {\n                element.classList.add(Selectors.DIFF.PLACEHOLDER.name());\n            }\n\n            // Collect parent row for batch update\n            const row = ChunkUtils.getParentRow(element);\n            if (row) {\n                rows.add(row);\n            }\n        });\n\n        // Update all rows at once\n        rows.forEach(row => {\n            row.classList.remove(...removeClasses);\n            row.classList.add(addClass);\n        });\n    }\n\n    /**\n     * Apply reset operations to elements and icon markers efficiently\n     * @private\n     */\n    _applyResetToElements(elements, iconMarkers) {\n        if ((!elements || elements.length === 0) && (!iconMarkers || iconMarkers.length === 0)) return;\n\n        // Pre-compute classes to remove for better performance\n        const removeClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name()\n        ];\n\n        const iconRemoveClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name(),\n            Selectors.ICONS.SELECT.name(),\n            Selectors.ICONS.SELECT_LEFT.name(),\n            Selectors.ICONS.SELECT_RIGHT.name()\n        ];\n\n        // Collect all rows to update at once (reduces layout thrashing)\n        const rows = new Set();\n\n        // Remove classes from elements efficiently\n        if (elements && elements.length > 0) {\n            elements.forEach(el => {\n                // Skip null or undefined elements\n                if (!el) return;\n\n                // Reset element classes\n                el.classList.remove(...removeClasses);\n\n                // Collect parent row for batch update\n                const row = ChunkUtils.getParentRow(el);\n                if (row) {\n                    rows.add(row);\n                }\n            });\n\n            // Reset all rows at once\n            rows.forEach(row => {\n                row.classList.remove(...removeClasses);\n            });\n        }\n\n        // Reset icon markers efficiently\n        if (iconMarkers && iconMarkers.length > 0) {\n            iconMarkers.forEach(marker => {\n                if (marker) {\n                    // Store placeholder status before removing classes\n                    const isPlaceholder = marker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n                    // Remove selection-related classes\n                    marker.classList.remove(...iconRemoveClasses);\n\n                    // Preserve placeholder status when resetting\n                    if (isPlaceholder) {\n                        marker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Update icon marker for the element\n     * @private\n     */\n    _updateIconMarker(element, state) {\n        if (!element) return;\n\n        const lineId = element.dataset.lineId;\n        if (!lineId) return;\n\n        Debug.log(`ChunkVisualStateManager: Looking for icon marker with lineId ${lineId}`, null, 3);\n        // Find and update the icon marker (use cached version if available)\n        const iconMarker = ChunkUtils.getIconMarker(lineId);\n\n        if (iconMarker) {\n            Debug.log(`ChunkVisualStateManager: Updating icon marker state to ${state}`, {\n                lineId: lineId,\n                currentClasses: Array.from(iconMarker.classList)\n            }, 3);\n\n            // Store the placeholder status before removing classes\n            const isPlaceholder = iconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n            // Only remove selection-related classes, preserve placeholder status\n            iconMarker.classList.remove(\n                Selectors.DIFF.CHUNK_SELECTED.name(),\n                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                Selectors.ICONS.SELECT.name(),\n                Selectors.ICONS.SELECT_LEFT.name(),\n                Selectors.ICONS.SELECT_RIGHT.name()\n            );\n\n            // Add the appropriate class based on state\n            if (state === 'selected') {\n                iconMarker.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                // Add the side-appropriate selection icon class\n                if (element.dataset.side === 'left') {\n                    iconMarker.classList.add(Selectors.ICONS.SELECT_LEFT.name());\n                } else {\n                    iconMarker.classList.add(Selectors.ICONS.SELECT_RIGHT.name());\n                }\n            } else if (state === 'unselected') {\n                iconMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n            } else {\n                // Fallback for backward compatibility\n                iconMarker.classList.add(state);\n            }\n\n            // Preserve placeholder status - don't try to infer it from the element\n            if (isPlaceholder && !iconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name())) {\n                iconMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                Debug.log(`ChunkVisualStateManager: Preserved placeholder marker status`, null, 3);\n            }\n        } else {\n            Debug.warn(`ChunkVisualStateManager: No icon marker found for line ${lineId}`, null, 3);\n        }\n    }\n\n    /**\n     * Notify about selection change\n     * @private\n     */\n    _notifySelectionChange() {\n        Debug.log(`ChunkVisualStateManager: Notifying about selection change`, null, 3);\n        if (typeof this.chunkManager.onSelectionChange === 'function') {\n            this.chunkManager.onSelectionChange();\n        } else {\n            Debug.log(`ChunkVisualStateManager: No onSelectionChange handler defined`, null, 3);\n        }\n    }\n\n    /**\n     * Get performance metrics\n     * @returns {Object} Current metrics\n     */\n    getMetrics() {\n        return {...this._metrics};\n    }\n}\n","import { ChunkUtils } from '../../utils/ChunkUtils';\nimport { Debug } from '../../utils/Debug';\n\n/**\n * Generates merged content from selections\n */\nexport class MergeContentGenerator {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n    }\n\n        /**\n     * Extract lines for a specific chunk and side\n     * @param {string} chunkId - Chunk identifier\n     * @param {string} side - Side to extract ('old' or 'new')\n     * @returns {Array} Array of lines for the chunk\n     */\n    extractChunkLines(chunkId, side) {\n        const chunk = this.chunkManager.chunks.find(c => c.id === chunkId);\n        if (!chunk) {\n            Debug.log(`MergeContentGenerator: Chunk not found: ${chunkId}`, null, 3);\n            return [];\n        }\n\n        // Get the content array based on side (old or new)\n        const contentArray = side === 'old' ? this.chunkManager.oldContent : this.chunkManager.newContent;\n\n        // Filter lines that belong to this chunk\n        const lines = contentArray.filter(line => line.chunkId === chunkId);\n\n        Debug.log(`MergeContentGenerator: Extracted ${lines.length} lines from chunk ${chunkId} (${side})`, {\n            chunkId,\n            side,\n            linesCount: lines.length,\n            totalContentLines: contentArray.length,\n            sampleLines: lines.slice(0, 3)\n        }, 3);\n\n        return lines;\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @param {Object} selections - Map of chunk IDs to selected sides\n     * @returns {string} Merged content\n     */\n    generateMergedContent(selections) {\n        Debug.log('MergeContentGenerator: Starting merge generation', {\n            totalChunks: this.chunkManager.chunks.length,\n            selections: Object.keys(selections).length\n        }, 2);\n\n        // If no selections, return right side content\n        if (Object.keys(selections).length === 0) {\n            Debug.log('MergeContentGenerator: No selections, returning new content', null, 2);\n            return ChunkUtils.generateFileContent(this.chunkManager.newContent);\n        }\n\n        const mergedLines = [];\n\n        // Create a map of chunk lines by chunk ID for faster lookup\n        const oldChunkLines = {};\n        const newChunkLines = {};\n\n        // Group lines by chunk ID\n        this.chunkManager.oldContent.forEach(line => {\n            if (line.chunkId) {\n                if (!oldChunkLines[line.chunkId]) {\n                    oldChunkLines[line.chunkId] = [];\n                }\n                oldChunkLines[line.chunkId].push(line);\n            }\n        });\n\n        this.chunkManager.newContent.forEach(line => {\n            if (line.chunkId) {\n                if (!newChunkLines[line.chunkId]) {\n                    newChunkLines[line.chunkId] = [];\n                }\n                newChunkLines[line.chunkId].push(line);\n            }\n        });\n\n        // Track which chunks we've processed to avoid duplicates\n        const processedChunks = new Set();\n\n        // Process all lines from newContent in order, but replace chunks as needed\n        for (const line of this.chunkManager.newContent) {\n            if (line.chunkId && selections[line.chunkId]) {\n                // This line belongs to a chunk with a selection\n                if (!processedChunks.has(line.chunkId)) {\n                    // First time we encounter this chunk - add all lines from selected side\n                    const selectedSide = selections[line.chunkId];\n\n                    if (selectedSide === 'left') {\n                        // Add all lines from old content for this chunk\n                        const chunkLines = oldChunkLines[line.chunkId] || [];\n                        chunkLines.forEach(chunkLine => {\n                            if (chunkLine.type === 'content') {\n                                mergedLines.push(chunkLine);\n                            }\n                        });\n                    } else {\n                        // Add all lines from new content for this chunk\n                        const chunkLines = newChunkLines[line.chunkId] || [];\n                        chunkLines.forEach(chunkLine => {\n                            if (chunkLine.type === 'content') {\n                                mergedLines.push(chunkLine);\n                            }\n                        });\n                    }\n                    processedChunks.add(line.chunkId);\n                }\n                // Skip this individual line since we've added the whole chunk\n            } else if (!line.chunkId) {\n                // This is common content (not part of any chunk)\n                if (line.type === 'content') {\n                    mergedLines.push(line);\n                }\n            }\n            // Skip lines that belong to chunks without selections\n        }\n\n        Debug.log('MergeContentGenerator: Processing complete', {\n            totalMergedLines: mergedLines.length,\n            processedChunks: Array.from(processedChunks),\n            sampleLines: mergedLines.slice(0, 3).map(l => l.line?.substring(0, 50) + '...' || 'empty')\n        }, 3);\n\n        const mergedContent = ChunkUtils.generateFileContent(mergedLines);\n\n        Debug.log('MergeContentGenerator: Merge generation complete', {\n            totalLines: mergedLines.length,\n            contentLength: mergedContent.length\n        }, 2);\n\n        return mergedContent;\n    }\n\n    /**\n     * Generate file content from lines\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated content\n     */\n    generateFileFromLines(lines) {\n        return ChunkUtils.generateFileContent(lines);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport AlertManager from '../../utils/AlertManager';\n\n/**\n * Handles merge operation actions\n */\nexport class MergeOperationHandler {\n    /**\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n    }\n\n    /**\n     * Proceed with merge operation - this is the main entry point called from MergeHandler\n     * @param {string} mergeType - Type of merge ('new', 'new-suffix', etc.)\n     * @returns {Promise<Object>} Result object with success status\n     */\n    async proceedWithMerge(mergeType) {\n        Debug.log('MergeOperationHandler: Proceeding with merge', { mergeType }, 2);\n\n        // Get runtime properties to check context\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n        const fileRefId = runtimeProps.fileRefId || '';\n        const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n        // If mergeType requires file references but we don't have them,\n        // automatically switch to clipboard mode\n        if ((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (no fileRefId available)', null, 2);\n            mergeType = 'clipboard';\n        } else if ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (no oldFileRefId available)', null, 2);\n            mergeType = 'clipboard';\n        } else if ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId)) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (missing file reference IDs)', null, 2);\n            mergeType = 'clipboard';\n        }\n\n        // Get translation manager for loading message\n        const translationManager = TranslationManager.getInstance();\n        const loadingMessage = translationManager.get('loadingContent', 'Processing merge...');\n\n        // Show loading indicator\n        const loaderManager = LoaderManager.getInstance();\n        const loaderId = loaderManager.showLoader(loadingMessage, {\n            fullscreen: true,\n            zIndex: 1000 // Ensure it appears above other UI elements\n        });\n\n        try {\n            // Generate merged content\n            const mergedContent = this.diffViewer.chunkManager.generateMergedContent();\n\n            // Apply the merge - skip server calls for clipboard type (text-compare, url-compare, file-upload)\n            let result;\n            if (mergeType === 'clipboard') {\n                // For clipboard type, we don't need to save on server, just return success\n                result = {\n                    success: true,\n                    message: translationManager.get('mergeSuccessClipboard', 'Merge completed successfully. The merged content is ready.')\n                };\n            } else {\n                // For file-browser mode, apply the merge on server\n                result = await this.applyMerge(mergedContent, mergeType);\n            }\n\n            // Hide loading indicator\n            loaderManager.hideLoader(loaderId);\n\n            // Show result message\n            if (result.success) {\n                // Get the result container and show success message\n                const resultContainer = document.getElementById('vdm-merge__result');\n                if (resultContainer) {\n                    resultContainer.innerHTML = '';\n                    resultContainer.classList.remove('vdm-d-none');\n\n                    // Use AlertManager to show success message\n                    const alertManager = AlertManager.getInstance();\n                    const alertElement = alertManager.showSuccess(result.message, {\n                        timeout: 0, // Don't auto-dismiss\n                        translate: false // Message is already translated\n                    });\n\n                    resultContainer.appendChild(alertElement);\n\n                    // Scroll to the result container\n                    this.scrollToMergeResult();\n                }\n            } else {\n                // Show error message\n                const resultContainer = document.getElementById('vdm-merge__result');\n                if (resultContainer) {\n                    resultContainer.innerHTML = '';\n                    resultContainer.classList.remove('vdm-d-none');\n\n                    // Use AlertManager to show error message\n                    const alertManager = AlertManager.getInstance();\n                    const alertElement = alertManager.showError(result.message || 'An error occurred during the merge operation.', {\n                        timeout: 0, // Don't auto-dismiss\n                        translate: false // Message is already translated\n                    });\n\n                    resultContainer.appendChild(alertElement);\n\n                    // Scroll to the result container\n                    this.scrollToMergeResult();\n                }\n            }\n\n            return result;\n        } catch (error) {\n            // Hide loading indicator in case of error\n            loaderManager.hideLoader(loaderId);\n\n            Debug.error('MergeOperationHandler: Error in merge operation', error, 1);\n\n            // Show error message in UI\n            const resultContainer = document.getElementById('vdm-merge__result');\n            if (resultContainer) {\n                resultContainer.innerHTML = '';\n                resultContainer.classList.remove('vdm-d-none');\n\n                // Use AlertManager to show error message\n                const alertManager = AlertManager.getInstance();\n                const errorMessage = `Error: ${error.message || 'An unexpected error occurred during merge.'}`;\n                const alertElement = alertManager.showError(errorMessage, {\n                    timeout: 0, // Don't auto-dismiss\n                    translate: false // Error message doesn't need translation\n                });\n\n                resultContainer.appendChild(alertElement);\n            }\n\n            return {\n                success: false,\n                message: error.message || 'An unexpected error occurred during merge'\n            };\n        }\n    }\n\n    /**\n     * Apply merged content to file\n     * @param {string} mergedContent - Merged content\n     * @param {string} mergeType - Merge type (new, new-suffix, old, old-suffix, both, both-suffix)\n     * @returns {Promise<Object>} Result object with success status\n     */\n    async applyMerge(mergedContent, mergeType) {\n        // Get the runtime properties - using only fileRefId, not server paths\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Get only the file reference IDs - security improvement\n        const fileRefId = runtimeProps.fileRefId || '';\n        const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n        Debug.log('MergeOperationHandler: File references for merge operation', {\n            fileRefId,\n            oldFileRefId,\n            mergeType\n        }, 2);\n\n        // If no file references are available, automatically fall back to clipboard mode\n        if (((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) ||\n            ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) ||\n            ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId))) {\n\n            Debug.log('MergeOperationHandler: Switching to clipboard mode in applyMerge (missing file references)', null, 2);\n            return {\n                success: true,\n                message: TranslationManager.getInstance().get('mergeSuccessClipboard', 'Merge completed successfully. The merged content is ready.')\n            };\n        }\n\n        // Rest of original validation kept for safety\n        if ((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) {\n            Debug.error('MergeOperationHandler: No file reference ID available for new file', null, 1);\n            return {\n                success: false,\n                message: 'No file reference ID available to save changes to new file'\n            };\n        } else if ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) {\n            Debug.error('MergeOperationHandler: No file reference ID available for old file', null, 1);\n            return {\n                success: false,\n                message: 'No file reference ID available to save changes to old file'\n            };\n        } else if ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId)) {\n            Debug.error('MergeOperationHandler: Missing file reference IDs for both files', null, 1);\n            return {\n                success: false,\n                message: 'Missing file reference IDs to save changes to both files'\n            };\n        }\n\n        // Get selections and beautification status\n        const selections = JSON.stringify(this.diffViewer.chunkManager.selections);\n        const wasBeautified = this.diffViewer.isContentBeautified() ? 1 : 0;\n\n        try {\n            // SECURITY: Only use fileRefId - never pass server paths\n            const formParams = {\n                action: 'registerMergedContent',\n                content: mergedContent,\n                selections,\n                mergeType,\n                wasBeautified\n            };\n\n            // Add appropriate file reference IDs based on merge type\n            if (mergeType === 'new' || mergeType === 'new-suffix' || mergeType === 'both' || mergeType === 'both-suffix') {\n                formParams.fileRefId = fileRefId;\n            }\n\n            if (mergeType === 'old' || mergeType === 'old-suffix' || mergeType === 'both' || mergeType === 'both-suffix') {\n                formParams.oldFileRefId = oldFileRefId;\n            }\n\n            Debug.log('MergeOperationHandler: Form parameters for save request', formParams, 2);\n\n            // Get API endpoint\n            const endpoint = await this.diffViewer.getEndpoint('ajaxDiffMerge');\n            Debug.log('MergeOperationHandler: Using endpoint', { endpoint }, 2);\n\n            // Send the request\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams(formParams)\n            });\n\n            // Parse response\n            const result = await response.json();\n            Debug.log('MergeOperationHandler: API response', result, 2);\n\n            return result;\n        } catch (error) {\n            Debug.error(\"MergeOperationHandler: Error applying merge:\", error, 1);\n            return {\n                success: false,\n                message: `Error applying merge: ${error.message}`\n            };\n        }\n    }\n\n    /**\n     * Scroll to the merge result container\n     */\n    scrollToMergeResult() {\n        const resultElement = document.getElementById('vdm-merge__result');\n        if (resultElement) {\n            // Scroll the element into view with smooth behavior\n            resultElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            });\n\n            Debug.log('MergeOperationHandler: Scrolled to merge result', null, 2);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { MergeContentFormatter } from '../../utils/MergeContentFormatter';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { CopyButton } from '../syntax/CopyButton';\nimport Selectors from '../../constants/Selectors';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\n\n/**\n * Handles preview functionality for merges\n */\nexport class MergePreviewManager {\n    /**\n     * Initialize preview manager\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n        this.modalManager = mergeHandler.modalManager;\n    }\n\n    /**\n     * Initialize preview button and events\n     * Sets up the preview button click handler\n     */\n    initialize() {\n        // Set up the preview button event handler\n        this.setupPreviewButton();\n        Debug.log('MergePreviewManager: Initialized', null, 2);\n    }\n\n    /**\n     * Set up the preview button with event handler\n     * Recreates button to remove existing handlers\n     */\n    setupPreviewButton() {\n        // Try to find the standard preview button first\n        const previewButton = document.getElementById(Selectors.MERGE.BUTTON_PREVIEW.name());\n\n        // If not found, check for the \"Get merged result\" button (used in local-only mode)\n        const getMergedResultButton = !previewButton ?\n            document.getElementById(Selectors.MERGE.GET_MERGED_RESULT_BTN.name()) : null;\n\n        // Use whichever button is available\n        const buttonToUse = previewButton || getMergedResultButton;\n\n        if (!buttonToUse) {\n            Debug.warn('MergePreviewManager: Preview button not found', null, 2);\n            return;\n        }\n\n        // Remove any existing handlers by cloning\n        const newBtn = buttonToUse.cloneNode(true);\n        if (buttonToUse.parentNode) {\n            buttonToUse.parentNode.replaceChild(newBtn, buttonToUse);\n        }\n\n        // Add the icon and text if needed (only for the regular preview button)\n        if (buttonToUse === previewButton && (!newBtn.innerHTML || newBtn.innerHTML.trim() === '')) {\n            newBtn.innerHTML = DOMUtils.getIconHtml('eye', { classes: 'me-2' }) + 'Preview';\n        }\n\n        // Add handler\n        newBtn.addEventListener('click', this.handlePreviewClick.bind(this));\n        Debug.log(`MergePreviewManager: ${buttonToUse === previewButton ? 'Preview' : 'Get merged result'} button handler set up`, null, 3);\n    }\n\n    /**\n     * Handle preview button click\n     * Generates preview content and shows in modal\n     */\n    handlePreviewClick() {\n        Debug.log('MergePreviewManager: Preview button clicked', null, 2);\n\n        // Get translation manager for loading message\n        const translationManager = TranslationManager.getInstance();\n        const loadingMessage = translationManager.get('loadingContent', 'Generating preview...');\n\n        // Show loading indicator\n        const loaderManager = LoaderManager.getInstance();\n        const loaderId = loaderManager.showLoader(loadingMessage, {\n            fullscreen: true,\n            zIndex: 1000 // Ensure it appears above other UI elements\n        });\n\n        try {\n            // Get the merged content from the content generator\n            const mergedContent = this.mergeHandler.getMergedContent();\n\n            // Get file extension from runtime properties instead of options\n            const fileToMerge = this.diffViewer.runtimeProps?.filepath || '';\n            const extension = fileToMerge.split('.').pop().toLowerCase();\n\n            // Format the content for preview with line numbers\n            const formattedContent = MergeContentFormatter.formatPreview(mergedContent, extension, true);\n\n            // Hide loading indicator now that content is ready\n            loaderManager.hideLoader(loaderId);\n\n            // Set the filename in the preview modal title using DOMUtils\n            DOMUtils.setContent(\n                Selectors.MODAL.PREVIEW_FILENAME.name(),\n                this.diffViewer.runtimeProps.filepath || 'merged-file'\n            );\n\n            // Use ModalManager to set content and open modal\n            this.modalManager.setContent(\n                Selectors.MODAL.PREVIEW.name(),\n                formattedContent,\n                Selectors.MODAL.PREVIEW_CONTENT_ID.name()\n            );\n\n            // Create controls container\n            const controlsContainer = document.createElement('div');\n            controlsContainer.classList.add(Selectors.UTILITY.FLEX.name(),\n                                           Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name(),\n                                           Selectors.UTILITY.MARGIN_TOP_2.name(),\n                                           Selectors.UTILITY.PADDING_2.name());\n\n            // Create message area\n            const messageArea = document.createElement('div');\n            messageArea.id = 'merge-preview-message';\n            messageArea.classList.add(Selectors.UTILITY.FLEX.name(),\n                                     Selectors.UTILITY.ALIGN_ITEMS_CENTER.name());\n            controlsContainer.appendChild(messageArea);\n\n            // Open the modal\n            this.modalManager.open(Selectors.MODAL.PREVIEW.name());\n\n            // Apply syntax highlighting if available\n            this.applySyntaxHighlighting();\n\n            // Add copy buttons to code blocks\n            CopyButton.addCopyButtonsToPreview(Selectors.MODAL.PREVIEW_CONTENT_ID.name());\n\n            Debug.log('MergePreviewManager: Preview opened successfully', null, 2);\n        } catch (error) {\n            // Hide loading indicator in case of error\n            loaderManager.hideLoader(loaderId);\n\n            Debug.error('MergePreviewManager: Error during preview:', error, 2);\n            this.showPreviewError(error);\n        }\n    }\n\n    /**\n     * Apply syntax highlighting to preview content\n     * Uses highlight.js if available\n     */\n    applySyntaxHighlighting() {\n        if (!window.hljs) {\n            Debug.log('MergePreviewManager: Highlight.js not available', null, 3);\n            return;\n        }\n\n        try {\n            // Use DOMUtils to get the preview element\n            const preElement = DOMUtils.getElement(Selectors.MODAL.PREVIEW_CONTENT_ID.name())?.querySelector('pre');\n            const codeElement = preElement?.querySelector('code');\n\n            if (!codeElement) {\n                Debug.warn('MergePreviewManager: No code element found for highlighting', null, 2);\n                return;\n            }\n\n            // Apply syntax highlighting\n            window.hljs.highlightElement(codeElement);\n\n            // Add line numbers if the pre element has the data-line-numbers attribute\n            if (preElement.getAttribute('data-line-numbers') === 'true' && window.hljs.lineNumbersBlock) {\n                window.hljs.lineNumbersBlock(codeElement);\n                Debug.log('MergePreviewManager: Line numbers added to preview', null, 3);\n            }\n\n            Debug.log('MergePreviewManager: Syntax highlighting applied', null, 3);\n        } catch (error) {\n            Debug.warn('MergePreviewManager: Error applying syntax highlighting:', error, 2);\n        }\n    }\n\n    /**\n     * Show error in preview modal\n     * @param {Error} error - Error object\n     */\n    showPreviewError(error) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        const escapedError = StringUtils.escapeHtml(errorMessage);\n\n        // First clear the modal content\n        this.modalManager.setContent(\n            Selectors.MODAL.PREVIEW.name(),\n            '',\n            Selectors.MODAL.PREVIEW_CONTENT_ID.name()\n        );\n\n        // Then use DOMUtils to show the message\n        DOMUtils.showMessage(\n            Selectors.MODAL.PREVIEW_CONTENT_ID.name(),\n            `<h4>Error Generating Preview</h4><p>${escapedError}</p>`,\n            'danger',\n            { className: '' } // No margin in modal\n        );\n\n        this.modalManager.open(Selectors.MODAL.PREVIEW.name());\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { MergeContentFormatter } from '../../utils/MergeContentFormatter';\nimport { NavigationUtils } from '../../utils/NavigationUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Controls merge UI elements and interactions\n */\nexport class MergeUIController {\n    /**\n     * Initialize UI controller\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n        this.modalManager = mergeHandler.modalManager;\n        this.translationManager = TranslationManager.getInstance();\n\n        // UI element references\n        this.mergeDestination = null;\n        this.mergeToggleBtn = null;\n        this.mergeToggleIcon = null;\n        this.mergeToggleText = null;\n    }\n\n    /**\n     * Initialize UI elements and event handlers\n     */\n    initialize() {\n        // Initialize merge destination toggle\n        this.initMergeDestinationToggle();\n\n        // Set up modal buttons\n        this.setupModalButtons();\n\n        // Set up apply merge button\n        this.setupApplyMergeButton();\n\n        Debug.log('MergeUIController: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize merge destination toggle\n     */\n    initMergeDestinationToggle() {\n        // Get the necessary elements\n        this.mergeDestination = DOMUtils.getElement(Selectors.MERGE.DESTINATION_DROPDOWN);\n        this.mergeToggleBtn = DOMUtils.getElement(Selectors.MERGE.DESTINATION_TOGGLE);\n\n        // Get toggle icon and text by proper IDs, not using name()\n        this.mergeToggleIcon = document.getElementById('vdm-merge-controls__toggle-icon');\n        this.mergeToggleText = document.getElementById('vdm-merge-controls__toggle-text');\n\n        if (!this.mergeDestination || !this.mergeToggleBtn) {\n            Debug.warn('MergeUIController: Missing merge destination elements', null, 2);\n            return;\n        }\n\n        // Explicitly set type=\"button\" on toggle button to prevent form submission\n        if (this.mergeToggleBtn) {\n            this.mergeToggleBtn.setAttribute('type', 'button');\n        }\n\n        // ALWAYS populate the dropdown options regardless of current state\n        // This ensures configuration-based options are always used\n        Debug.log('MergeUIController: Populating merge destination options', null, 2);\n        this.populateMergeDestinations();\n\n        // Load saved preference or default to 'new'\n        const savedDestination = localStorage.getItem('preferredMergeDestination') || 'new';\n\n        // Ensure the value exists in the dropdown\n        let valueExists = false;\n        for (let i = 0; i < this.mergeDestination.options.length; i++) {\n            if (this.mergeDestination.options[i].value === savedDestination) {\n                valueExists = true;\n                break;\n            }\n        }\n\n        // Set the value if it exists, otherwise use the first option\n        if (valueExists) {\n            this.mergeDestination.value = savedDestination;\n        } else if (this.mergeDestination.options.length > 0) {\n            this.mergeDestination.selectedIndex = 0;\n        }\n\n        Debug.log(`MergeUIController: Initial merge destination set to ${this.mergeDestination.value}`, null, 2);\n\n        // Set up event handlers\n        this.setupMergeToggleEvents();\n\n        Debug.log('MergeUIController: Merge destination toggle initialized', null, 2);\n    }\n\n    /**\n     * Populate merge destination dropdown\n     */\n    populateMergeDestinations() {\n        // Get runtime properties\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Get diffData which contains file information\n        const diffData = runtimeProps.diffData || {};\n\n        // Get filenames from the appropriate sources using the new pattern (no server paths)\n        // Prefer new secure properties (newFileName, oldFileName) that only contain the filename\n        const newFileName = runtimeProps.newFileName || diffData.new?.filename || runtimeProps.filepath?.split('/').pop() || 'new-file';\n        const oldFileName = runtimeProps.oldFileName || diffData.old?.filename || 'old-file';\n\n        // Clean filenames - ensure we're only using the basename without any path components\n        const newFile = newFileName.split(/[\\/\\\\]/).pop();\n        const oldFile = oldFileName.split(/[\\/\\\\]/).pop();\n\n        Debug.log('MergeUIController: File names for merge destinations', {\n            newFileName,\n            oldFileName,\n            newFile,\n            oldFile\n        }, 3);\n\n        // Create merged filenames\n        const newFileWithoutExt = newFile.substring(0, newFile.lastIndexOf('.')) || newFile;\n        const oldFileWithoutExt = oldFile.substring(0, oldFile.lastIndexOf('.')) || oldFile;\n        const newFileExt = newFile.substring(newFile.lastIndexOf('.')) || '';\n        const oldFileExt = oldFile.substring(oldFile.lastIndexOf('.')) || '';\n\n        const newMergedFile = `${newFileWithoutExt}-merged${newFileExt}`;\n        const oldMergedFile = `${oldFileWithoutExt}-merged${oldFileExt}`;\n\n        // Get configuration for enabled save options\n        const config = this.diffViewer.getConfig();\n        const saveOptions = config?.saveOptions || {\n            saveToOriginal: true,\n            saveWithSuffix: true,\n            saveToOld: true,\n            saveToOldWithSuffix: true,\n            saveToBoth: true,\n            saveToBothWithSuffix: true\n        };\n\n        Debug.log('MergeUIController: Save options configuration', saveOptions, 3);\n\n        // IMPORTANT: Always clear ALL existing options to ensure we start fresh\n        while (this.mergeDestination.options.length > 0) {\n            this.mergeDestination.remove(0);\n        }\n\n        // Alternative method to clear options for cross-browser compatibility\n        this.mergeDestination.innerHTML = '';\n\n        Debug.log('MergeUIController: Cleared existing dropdown options', null, 3);\n\n        let optionCount = 0;\n\n        // Add options based on configuration\n        if (saveOptions.saveToOriginal) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new',\n                    'data-tooltip': this.translationManager.get('saveToOriginalTooltip', 'Replace the current file with merged content')\n                },\n                content: `${newFile} (new)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new-suffix',\n                    'data-tooltip': this.translationManager.get('saveWithSuffixTooltip', 'Save merged content as a new file with -merged suffix')\n                },\n                content: `${newMergedFile} (new)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToOld) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'old',\n                    'data-tooltip': this.translationManager.get('saveToOldTooltip', 'Replace the old file with merged content')\n                },\n                content: `${oldFile} (old)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToOldWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'old-suffix',\n                    'data-tooltip': this.translationManager.get('saveToOldWithSuffixTooltip', 'Save merged content as a new file with -merged suffix in old location')\n                },\n                content: `${oldMergedFile} (old)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToBoth) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'both',\n                    'data-tooltip': this.translationManager.get('saveToBothTooltip', 'Replace both old and new files with merged content')\n                },\n                content: this.translationManager.get('saveToBoth', 'Overwrite both files')\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToBothWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'both-suffix',\n                    'data-tooltip': this.translationManager.get('saveToBothWithSuffixTooltip', 'Save merged content as new files with -merged suffix in both locations')\n                },\n                content: this.translationManager.get('saveToBothWithSuffix', 'Save to both with suffix')\n            });\n            optionCount++;\n        }\n\n        // If no options were added (all disabled), add at least the default option\n        if (optionCount === 0) {\n            Debug.log('MergeUIController: No save options enabled, adding default option', null, 2);\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new',\n                    'data-tooltip': this.translationManager.get('saveToOriginalTooltip', 'Replace the current file with merged content')\n                },\n                content: `${newFile} (new)`\n            });\n            optionCount = 1;\n        }\n\n        Debug.log(`MergeUIController: Populated merge destinations with ${optionCount} options`, null, 2);\n    }\n\n    /**\n     * Set up merge toggle button events\n     */\n    setupMergeToggleEvents() {\n        // Create event handlers\n        const toggleHandler = (event) => {\n            // Prevent default action and stop propagation\n            event.preventDefault();\n            event.stopPropagation();\n\n            // We need a better approach to open the dropdown - the current method doesn't work in all browsers\n            if (this.mergeDestination) {\n                // Instead of trying to simulate a click, make the dropdown visible\n                // First, directly focus the element to prepare it\n                this.mergeDestination.focus();\n\n                // If the browser supports it, use the showPicker method\n                if (typeof this.mergeDestination.showPicker === 'function') {\n                    try {\n                        this.mergeDestination.showPicker();\n                        Debug.log('MergeUIController: Opened dropdown using showPicker()', null, 3);\n                        return;\n                    } catch (e) {\n                        Debug.log('MergeUIController: showPicker() failed, trying alternative method', e, 2);\n                    }\n                }\n\n                // Alternative: Use a small delay and click to open\n                setTimeout(() => {\n                    try {\n                        // Create and dispatch a mouse event\n                        const clickEvent = new MouseEvent('mousedown', {\n                            bubbles: true,\n                            cancelable: true,\n                            view: window\n                        });\n                        this.mergeDestination.dispatchEvent(clickEvent);\n                    } catch (e) {\n                        Debug.log('MergeUIController: Failed to open dropdown with click event', e, 2);\n                    }\n                }, 10);\n\n                // If all else fails, make the select element very noticeable to prompt user interaction\n                this.mergeDestination.classList.add('vdm-dropdown-highlight');\n                setTimeout(() => {\n                    this.mergeDestination.classList.remove('vdm-dropdown-highlight');\n                }, 1000);\n            }\n\n            Debug.log('MergeUIController: Toggle button clicked, attempting to open dropdown', null, 3);\n        };\n\n        const changeHandler = () => {\n            // Update appearance and save preference\n            this.updateMergeToggle(this.mergeDestination.value);\n            localStorage.setItem('preferredMergeDestination', this.mergeDestination.value);\n\n            Debug.log(`MergeUIController: Selection changed to ${this.mergeDestination.value}`, null, 3);\n        };\n\n        // Remove any existing listeners using cloneNode\n        const newToggleBtn = this.mergeToggleBtn.cloneNode(true);\n        const newMergeDestination = this.mergeDestination.cloneNode(true);\n\n        // Replace elements - Add null checks to prevent errors when elements don't exist in DOM\n        if (this.mergeToggleBtn && this.mergeToggleBtn.parentNode) {\n            this.mergeToggleBtn.parentNode.replaceChild(newToggleBtn, this.mergeToggleBtn);\n        }\n\n        if (this.mergeDestination && this.mergeDestination.parentNode) {\n            this.mergeDestination.parentNode.replaceChild(newMergeDestination, this.mergeDestination);\n        }\n\n        // Update references\n        this.mergeToggleBtn = newToggleBtn;\n        this.mergeDestination = newMergeDestination;\n\n        // Add the icon and text elements if they're now missing\n        if (!this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-icon')) {\n            this.mergeToggleIcon = DOMUtils.createAndAppendElement('i', this.mergeToggleBtn, {\n                id: 'vdm-merge-controls__toggle-icon',\n            });\n            this.mergeToggleBtn.insertBefore(this.mergeToggleIcon, this.mergeToggleBtn.firstChild);\n        } else {\n            this.mergeToggleIcon = this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-icon');\n        }\n\n        if (!this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-text')) {\n            this.mergeToggleText = DOMUtils.createAndAppendElement('span', this.mergeToggleBtn, {\n                id: 'vdm-merge-controls__toggle-text'\n            });\n        } else {\n            this.mergeToggleText = this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-text');\n        }\n\n        // Enhance dropdown appearance to make it more visible\n        this.mergeDestination.classList.add('vdm-dropdown-visible');\n        this.mergeDestination.style.cursor = 'pointer';\n\n        // Add a small down arrow icon to the toggle button to indicate it opens a dropdown\n        const dropdownIcon = document.createElement('span');\n        dropdownIcon.className = Selectors.UTILITY.MARGIN_START_2.name(); // Using the correct end start class\n        dropdownIcon.innerHTML = DOMUtils.getIconHtml('chevron-down', { width: 10, height: 10 });\n        this.mergeToggleBtn.appendChild(dropdownIcon);\n\n        // Add event listeners to both the toggle button and dropdown\n        this.mergeToggleBtn.addEventListener('click', toggleHandler);\n        this.mergeDestination.addEventListener('change', changeHandler);\n\n        // Make the dropdown more interactive and visible\n        this.mergeDestination.style.paddingRight = '1.5rem';\n        this.mergeDestination.style.appearance = 'menulist';\n        this.mergeDestination.style.cursor = 'pointer';\n\n        // Add tooltip to the dropdown\n        this.mergeDestination.title = 'Click to select where to save the merged content';\n\n        // Make the dropdown more easily clickable and indicate it's interactive\n        this.mergeDestination.addEventListener('mouseover', () => {\n            this.mergeDestination.style.borderColor = 'var(--vdm-primary, #0d6efd)';\n        });\n        this.mergeDestination.addEventListener('mouseout', () => {\n            this.mergeDestination.style.borderColor = 'var(--vdm-border-color, #495057)';\n        });\n\n        // Re-apply the toggle styling AFTER cloning\n        this.updateMergeToggle(this.mergeDestination.value);\n    }\n\n    /**\n     * Update merge toggle button appearance\n     */\n    updateMergeToggle(value) {\n        // Define color classes for different destination types\n        const newFileColorClass = 'vdm-text-primary'; // Purple for new file destinations\n        const oldFileColorClass = 'vdm-text-warning'; // Amber for old file destinations\n        const bothFilesColorClass = 'vdm-text-info';  // Turquoise for both files destinations\n\n        // Define button style classes that match the color theme\n        const newFileBtnClass = Selectors.UTILITY.BUTTON_PRIMARY.name(); // Purple button\n        const oldFileBtnClass = Selectors.UTILITY.BUTTON_WARNING.name(); // Amber button\n        const bothFilesBtnClass = Selectors.UTILITY.BUTTON_INFO.name();  // Turquoise button\n\n        // Create single SVG icon HTML for each destination state with appropriate color class\n        // Always use a single icon per destination type with color indicating the destination\n        let iconHtml = '';\n        let colorClass = '';\n        let buttonClass = '';\n\n        // Determine icon, color class, and button class based on destination type\n        switch (value) {\n            case 'new':\n            case 'new-suffix':\n                // New file destinations use file icon with primary color\n                iconHtml = 'file';\n                colorClass = newFileColorClass;\n                buttonClass = newFileBtnClass;\n                break;\n\n            case 'old':\n            case 'old-suffix':\n                // Old file destinations use file-lines icon with warning color\n                iconHtml = 'file-lines';\n                colorClass = oldFileColorClass;\n                buttonClass = oldFileBtnClass;\n                break;\n\n            case 'both':\n            case 'both-suffix':\n                // Both files destinations use file-copy icon with info color\n                iconHtml = 'file-copy';\n                colorClass = bothFilesColorClass;\n                buttonClass = bothFilesBtnClass;\n                break;\n\n            default:\n                // Default to new file icon with primary color\n                iconHtml = 'file';\n                colorClass = newFileColorClass;\n                buttonClass = newFileBtnClass;\n                break;\n        }\n\n        // Generate the icon HTML with proper classes\n        const iconClasses = `${Selectors.UTILITY.MARGIN_END_1.name()} ${colorClass}`;\n        this.mergeToggleIcon.innerHTML = DOMUtils.getIconHtml(iconHtml, { classes: iconClasses });\n\n        // Update the Apply Merge button style to match the destination\n        const applyButton = document.getElementById(Selectors.MERGE.BUTTON_APPLY.name());\n        if (applyButton) {\n            // Remove any existing button style classes\n            applyButton.classList.remove(\n                Selectors.UTILITY.BUTTON_PRIMARY.name(),\n                Selectors.UTILITY.BUTTON_WARNING.name(),\n                Selectors.UTILITY.BUTTON_INFO.name(),\n                Selectors.UTILITY.BUTTON_SUCCESS.name(),\n                Selectors.UTILITY.BUTTON_DANGER.name(),\n                Selectors.UTILITY.BUTTON_SECONDARY.name()\n            );\n\n            // Add the appropriate button style class\n            applyButton.classList.add(buttonClass);\n\n            Debug.log(`MergeUIController: Updated apply button style to ${buttonClass}`, null, 3);\n        }\n\n        // Update text content based on the destination value\n        switch (value) {\n            case 'new':\n                // Save to new file (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOriginal', 'Save to original');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOriginalTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new');\n                break;\n\n            case 'new-suffix':\n                // Save to new file with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveWithSuffix', 'Save with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new-suffix');\n                break;\n\n            case 'old':\n                // Save to old file (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOld', 'Save to old file');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOldTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'old');\n                break;\n\n            case 'old-suffix':\n                // Save to old file with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOldWithSuffix', 'Save to old with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOldWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'old-suffix');\n                break;\n\n            case 'both':\n                // Save to both files (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToBoth', 'Save to both files');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToBothTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'both');\n                break;\n\n            case 'both-suffix':\n                // Save to both files with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveToBothWithSuffix', 'Save to both with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToBothWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'both-suffix');\n                break;\n\n            default:\n                // Default to 'new' if value is not recognized\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOriginal', 'Save to original');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOriginalTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new');\n                break;\n        }\n\n        Debug.log(`MergeUIController: Toggle updated to ${value}`, null, 3);\n    }\n\n    /**\n     * Set up modal buttons\n     */\n    setupModalButtons() {\n        // Add a direct event listener to the document for clicks on modal buttons\n        document.addEventListener('click', (event) => {\n            // Handle continue merging button\n            if (event.target.closest && event.target.closest(`#${Selectors.MODAL.CONTINUE_BTN.name()}`)) {\n                Debug.log('MergeUIController: Continue merging button clicked via delegation', null, 2);\n                this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                // Also close the preview modal - use MODAL.PREVIEW instead of MERGE.PREVIEW_MODAL\n                const previewModalId = Selectors.MODAL.PREVIEW.name();\n                Debug.log(`MergeUIController: Also closing preview modal (ID: ${previewModalId})`, null, 1);\n                this.modalManager.close(previewModalId);\n\n                setTimeout(() => {\n                    this.highlightUnresolvedChunks();\n                }, 400);\n            }\n\n            // Handle merge anyway button\n            if (event.target.closest && event.target.closest(`#${Selectors.MODAL.MERGE_BTN.name()}`)) {\n                Debug.log('MergeUIController: Merge anyway button clicked via delegation', null, 2);\n                this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                this.mergeHandler.proceedWithMerge(this.getMergeType());\n            }\n        });\n\n        // For compatibility, still register the before-open callback as well\n        if (this.modalManager && typeof this.modalManager.registerBeforeOpenCallback === 'function') {\n            this.modalManager.registerBeforeOpenCallback(Selectors.MERGE.CONFLICT_MODAL.name(), () => {\n                // Log the presence of the buttons when the modal opens\n                const continueBtn = document.getElementById(Selectors.MODAL.CONTINUE_BTN.name());\n                const mergeBtn = document.getElementById(Selectors.MODAL.MERGE_BTN.name());\n\n                Debug.log(`MergeUIController: Modal opened, buttons present: continueBtn=${!!continueBtn}, mergeBtn=${!!mergeBtn}`, null, 2);\n\n                // Add direct click handlers (as a backup)\n                if (continueBtn) {\n                    continueBtn.onclick = () => {\n                        Debug.log('MergeUIController: Continue merging clicked via direct handler', null, 2);\n                        this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                        // Also close the preview modal - use MODAL.PREVIEW instead of MERGE.PREVIEW_MODAL\n                        const previewModalId = Selectors.MODAL.PREVIEW.name();\n                        Debug.log(`MergeUIController: Also closing preview modal (ID: ${previewModalId})`, null, 1);\n                        this.modalManager.close(previewModalId);\n\n                        setTimeout(() => {\n                            this.highlightUnresolvedChunks();\n                        }, 400);\n                        return false; // Prevent default\n                    };\n                }\n\n                if (mergeBtn) {\n                    mergeBtn.onclick = () => {\n                        Debug.log('MergeUIController: Merge anyway clicked via direct handler', null, 2);\n                        this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                        this.mergeHandler.proceedWithMerge(this.getMergeType());\n                        return false; // Prevent default\n                    };\n                }\n            });\n        }\n    }\n\n    /**\n     * Set up apply merge button\n     */\n    setupApplyMergeButton() {\n        // Get the Apply Merge button\n        const applyButton = document.getElementById(Selectors.MERGE.BUTTON_APPLY.name());\n        if (!applyButton) {\n            Debug.warn('MergeUIController: Apply merge button not found', null, 2);\n            return;\n        }\n\n        // Get the merge controls actions container\n        const mergeControlsActions = document.querySelector(Selectors.MERGE.CONTROLS_ACTIONS.toString());\n        if (!mergeControlsActions) {\n            Debug.warn('MergeUIController: Merge controls container not found', null, 2);\n            return;\n        }\n\n        // Get the merge destination dropdown and toggle button\n        const destinationDropdown = document.getElementById(Selectors.MERGE.DESTINATION_DROPDOWN.name());\n        const toggleButton = document.getElementById(Selectors.MERGE.DESTINATION_TOGGLE.name());\n\n        // Create a form element to wrap the merge controls\n        const form = document.createElement('form');\n        form.id = 'vdm-merge__form';\n        form.className = mergeControlsActions.className;\n        form.style.display = 'flex';\n        form.style.justifyContent = 'space-between';\n        form.style.width = '100%';\n\n        // Replace the merge controls actions container with the form\n        if (mergeControlsActions.parentNode) {\n            mergeControlsActions.parentNode.replaceChild(form, mergeControlsActions);\n\n            // Move all content from the original container to the form\n            while (mergeControlsActions.firstChild) {\n                form.appendChild(mergeControlsActions.firstChild);\n            }\n\n            // Make sure the dropdown is inside the form by checking if it exists but is outside\n            if (destinationDropdown && !form.contains(destinationDropdown)) {\n                const destinationContainer = document.querySelector('.vdm-merge-controls__destination');\n                if (destinationContainer) {\n                    form.insertBefore(destinationContainer, form.firstChild);\n                }\n            }\n\n            Debug.log('MergeUIController: Created form wrapper for merge controls', null, 2);\n        }\n\n        // Listen for form submission instead of button click\n        form.addEventListener('submit', (event) => {\n            event.preventDefault();\n            this.handleApplyMerge();\n            Debug.log('MergeUIController: Form submitted', null, 3);\n        });\n\n        // Important: Prevent the toggle button from submitting the form\n        if (toggleButton) {\n            toggleButton.type = 'button'; // Explicitly set type to 'button' to prevent form submission\n\n            // Add a click handler that stops propagation\n            toggleButton.addEventListener('click', (event) => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // The toggle logic is already in setupMergeToggleEvents\n                // This is just to prevent form submission\n                Debug.log('MergeUIController: Toggle button click intercepted to prevent form submission', null, 3);\n            });\n        }\n\n        // For backwards compatibility, also keep the button click handler\n        applyButton.addEventListener('click', (event) => {\n            event.preventDefault();\n            // Validate that the button is inside the form\n            if (applyButton.form) {\n                applyButton.form.dispatchEvent(new Event('submit'));\n            } else {\n                this.handleApplyMerge();\n            }\n            Debug.log('MergeUIController: Apply merge clicked', null, 3);\n        });\n    }\n\n    /**\n     * Handle the apply merge button click\n     */\n    handleApplyMerge() {\n        // Count unresolved conflicts\n        const unresolvedCount = this.countUnresolvedConflicts();\n\n        if (unresolvedCount > 0) {\n            this.showConflictModal(unresolvedCount);\n        } else {\n            // Check if we're in file-browser mode or not by checking for fileRefId\n            const runtimeProps = this.diffViewer.getRuntimeProps();\n            const fileRefId = runtimeProps.fileRefId || '';\n            const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n            // If neither fileRefId exists, we're in a non-file-browser mode\n            // (text-compare, url-compare, file-upload)\n            if (!fileRefId && !oldFileRefId) {\n                // Use 'clipboard' merge type for non-file-browser modes\n                Debug.log('MergeUIController: Using clipboard merge type for non-file-browser mode', null, 2);\n                this.mergeHandler.proceedWithMerge('clipboard');\n            } else {\n                // Use selected merge type for file-browser mode\n                Debug.log('MergeUIController: Using selected merge type for file-browser mode', null, 2);\n                this.mergeHandler.proceedWithMerge(this.getMergeType());\n            }\n        }\n    }\n\n    /**\n     * Count unresolved conflicts\n     * @returns {number} Number of unresolved conflicts\n     */\n    countUnresolvedConflicts() {\n        const conflictChunks = this.diffViewer.chunkManager.chunks.filter(c => c.conflict);\n        const selections = this.diffViewer.chunkManager.selections || {};\n        return conflictChunks.length - Object.keys(selections).length;\n    }\n\n    /**\n     * Show conflict resolution modal\n     * @param {number} unresolvedCount - Number of unresolved conflicts\n     */\n    showConflictModal(unresolvedCount) {\n        // Get translations from config\n        const translations = this.diffViewer.getConfig().translations || {};\n\n        // Set message about unresolved conflicts\n        const message = MergeContentFormatter.formatUnresolvedCount(unresolvedCount, translations);\n\n        // Open the conflict modal\n        this.modalManager.open(Selectors.MERGE.CONFLICT_MODAL.name());\n\n        // Set the message in the modal\n        setTimeout(() => {\n            DOMUtils.showMessage(Selectors.MODAL.MESSAGE.name(), message, 'warning', {\n                className: '' // No extra margin needed in modal\n            });\n            Debug.log('MergeUIController: Showing conflict modal with message', null, 2);\n        }, 50);\n\n        // Attach event handlers to buttons with a small delay to ensure the modal is fully rendered\n        setTimeout(() => {\n            const continueBtn = document.getElementById(Selectors.MODAL.CONTINUE_BTN.name());\n            const mergeBtn = document.getElementById(Selectors.MODAL.MERGE_BTN.name());\n\n            // Handle the Continue button\n            if (continueBtn) {\n                // Remove any existing handlers by cloning\n                const newContinueBtn = continueBtn.cloneNode(true);\n                continueBtn.parentNode.replaceChild(newContinueBtn, continueBtn);\n\n                // Add direct, simplified handler\n                newContinueBtn.addEventListener('click', () => {\n                    Debug.log('MergeUIController: Continue button clicked', null, 2);\n\n                    // First close the conflict modal\n                    this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                    // Then close the preview modal\n                    const previewModalId = Selectors.MODAL.PREVIEW.name();\n                    Debug.log(`MergeUIController: Closing preview modal (ID: ${previewModalId})`, null, 2);\n                    this.modalManager.close(previewModalId);\n\n                    // Highlight any unresolved chunks after a delay\n                    setTimeout(() => {\n                        this.highlightUnresolvedChunks();\n                    }, 400);\n                });\n            }\n\n            // Handle the Merge Anyway button\n            if (mergeBtn) {\n                // Remove any existing handlers by cloning\n                const newMergeBtn = mergeBtn.cloneNode(true);\n                mergeBtn.parentNode.replaceChild(newMergeBtn, mergeBtn);\n\n                // Add direct, simplified handler\n                newMergeBtn.addEventListener('click', () => {\n                    Debug.log('MergeUIController: Merge anyway button clicked', null, 2);\n                    this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                    this.mergeHandler.proceedWithMerge(this.getMergeType());\n                });\n            }\n        }, 50);\n    }\n\n    /**\n     * Get current merge type from UI\n     * @returns {string} Merge type ('original' or 'new')\n     */\n    getMergeType() {\n        return this.mergeDestination?.value || 'original';\n    }\n\n    /**\n     * Highlight unresolved chunks\n     * @returns {boolean} True if any chunk was highlighted\n     */\n    highlightUnresolvedChunks() {\n        Debug.log('MergeUIController: Finding first unresolved conflict', null, 2);\n\n        // Get all chunks and current selections\n        const chunks = this.diffViewer.chunkManager.chunks;\n        const selections = this.diffViewer.chunkManager.selections || {};\n\n        // Find the first unresolved chunk\n        for (const chunk of chunks) {\n            if (chunk.conflict && !selections[chunk.id]) {\n                // Use DiffNavigator to navigate to this chunk\n                const chunkIndex = chunks.indexOf(chunk);\n                if (this.diffViewer.diffNavigator) {\n                    // First navigate to the chunk\n                    this.diffViewer.diffNavigator.navigateToChunk(chunkIndex);\n\n                    // Then highlight the chunk element using imported NavigationUtils\n                    const chunkElement = document.querySelector(`[data-chunk-id=\"${chunk.id}\"]`);\n                    if (chunkElement) {\n                        NavigationUtils.addHighlightEffect(chunkElement, 4000);\n                    }\n\n                    Debug.log(`MergeUIController: Highlighted unresolved chunk ${chunk.id}`, null, 2);\n                    return true;\n                }\n            }\n        }\n\n        Debug.log('MergeUIController: No unresolved conflicts found', null, 2);\n        return false;\n    }\n\n    /**\n     * Setup local-only controls when server save is disabled\n     * This creates a simplified UI with just the \"Get merged result\" button\n     */\n    setupLocalOnlyControls() {\n        Debug.log('MergeUIController: Setting up local-only controls (server save disabled)', null, 2);\n\n        // Get translations using the TranslationManager\n        Debug.log('MergeUIController: Getting translations for local-only controls', this.translationManager, 2);\n        const getMergedResultText = this.translationManager.get('getMergedResult', 'Get Merged Result');\n        const getMergedResultTooltip = this.translationManager.get('getMergedResultTooltip', 'View and download the merged content');\n\n        // Find the merge controls container\n        const mergeControlsActions = document.querySelector(Selectors.MERGE.CONTROLS_ACTIONS.toString());\n\n        if (!mergeControlsActions) {\n            Debug.error('MergeUIController: Could not find merge controls container', null, 1);\n            return;\n        }\n\n        // Clear any existing content from the container to ensure we only have our button\n        mergeControlsActions.innerHTML = '';\n\n        // Create the \"Get merged result\" button\n        const getMergedResultBtn = document.createElement('button');\n        getMergedResultBtn.id = Selectors.MERGE.GET_MERGED_RESULT_BTN.name();\n        getMergedResultBtn.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`;\n        getMergedResultBtn.title = getMergedResultTooltip;\n\n        // Add download icon and text using the proper icon system\n        const downloadIconHtml = DOMUtils.getIconHtml('download', { classes: Selectors.UTILITY.MARGIN_END_1.name() });\n        getMergedResultBtn.innerHTML = `${downloadIconHtml} ${getMergedResultText}`;\n\n        // Add to container (align to right)\n        const buttonContainer = document.createElement('div');\n        buttonContainer.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} w-100`;\n        buttonContainer.style.width = '100%';\n\n        // Add a spacer on the left to push the button to the right\n        const spacer = document.createElement('div');\n        spacer.style.flex = '1';\n\n        buttonContainer.appendChild(spacer);\n        buttonContainer.appendChild(getMergedResultBtn);\n        mergeControlsActions.appendChild(buttonContainer);\n\n        // Add event handler to show the preview content when clicked\n        getMergedResultBtn.addEventListener('click', (event) => {\n            event.preventDefault();\n\n            // Use 'clipboard' merge type for non-file-browser modes\n            this.mergeHandler.proceedWithMerge('clipboard');\n\n            Debug.log('MergeUIController: Get merged result button clicked (using clipboard merge type)', null, 2);\n        });\n\n        Debug.log('MergeUIController: Local-only controls setup complete', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { BaseSingleton } from '../../utils/BaseSingleton';\nimport Selectors from '../../constants/Selectors';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * Lightweight standalone modal manager without external dependencies\n */\nexport class ModalManager extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @param {Object} options - Configuration options (only used during first initialization)\n     * @returns {ModalManager} The singleton instance\n     */\n    static getInstance(options = {}) {\n        if (!instance) {\n            instance = new ModalManager(options);\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        super();\n\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        this.options = {\n            debug: false,\n            translations: {},\n            ...options\n        };\n\n        this.modals = {};\n        this.activeModal = null;\n        this.initialized = false;\n\n        Debug.log('ModalManager: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize modals by creating the necessary HTML\n     * @returns {boolean} Success status\n     */\n    initModals() {\n        try {\n            if (this.initialized) {\n                Debug.log('ModalManager: Already initialized', null, 2);\n                return true;\n            }\n\n            const translationManager = TranslationManager.getInstance();\n\n            // Create confirm modal\n            this.createModal({\n                id: Selectors.MODAL.CONFIRM.name(),\n                title: translationManager.get('confirmation'),\n                contentId: Selectors.MODAL.MESSAGE.name(),\n                contentClass: Selectors.UTILITY.PADDING_3.name(),\n                footerButtons: [\n                    {\n                        id: Selectors.MODAL.CONTINUE_BTN.name(),\n                        text: translationManager.get('continueResolving'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_PRIMARY.name() + ' ' + Selectors.UTILITY.MARGIN_END_2.name()\n                    },\n                    {\n                        id: Selectors.MODAL.MERGE_BTN.name(),\n                        text: translationManager.get('mergeAnyway'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_WARNING.name()\n                    }\n                ]\n            });\n\n            // Create preview modal\n            this.createModal({\n                id: Selectors.MODAL.PREVIEW.name(),\n                title: '<span id=\"' + Selectors.MODAL.PREVIEW_FILENAME.name() + '\"></span>',\n                contentId: Selectors.MODAL.PREVIEW_CONTENT_ID.name(),\n                contentClass: Selectors.MODAL.PREVIEW_CONTENT.name(),\n                headerClass: Selectors.MODAL.HEADER_FIXED.name(),\n                modalClass: 'vdm-modal--fixed-footer',\n                fullscreen: true\n            });\n\n            // Create conflict modal\n            this.createModal({\n                id: Selectors.MERGE.CONFLICT_MODAL.name(),\n                title: translationManager.get('unresolvedConflicts'),\n                contentId: Selectors.MODAL.MESSAGE.name(),\n                contentClass: Selectors.UTILITY.PADDING_3.name(),\n                footerButtons: [\n                    {\n                        id: Selectors.MODAL.CONTINUE_BTN.name(),\n                        text: translationManager.get('continueResolving'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_PRIMARY.name() + ' ' + Selectors.UTILITY.MARGIN_END_2.name()\n                    },\n                    {\n                        id: Selectors.MODAL.MERGE_BTN.name(),\n                        text: translationManager.get('mergeAnyway'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_WARNING.name()\n                    }\n                ]\n            });\n\n            // Add event listeners for close buttons, backdrop clicks, etc.\n            this._setupEventListeners();\n\n            this.initialized = true;\n            Debug.log('ModalManager: Modals initialized', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ModalManager: Error initializing modals', error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Create a modal with the specified configuration\n     * @param {Object} config - Modal configuration\n     * @param {string} config.id - Modal ID (without # prefix)\n     * @param {string} config.title - Modal title (can include HTML)\n     * @param {string} [config.contentId] - ID for the content container (without # prefix)\n     * @param {string} [config.contentClass] - CSS class for the content container\n     * @param {string} [config.modalClass] - Additional CSS class for the modal\n     * @param {string} [config.headerClass] - CSS class for the header (overrides default)\n     * @param {Array} [config.footerButtons] - Array of button configurations\n     * @param {boolean} [config.fullscreen] - Whether to make the modal fullscreen\n     * @param {Object} [config.events] - Custom event handlers for modal elements\n     * @param {Object} [config.attr] - Additional attributes to add to the modal element\n     * @returns {boolean} Success status\n     */\n    createModal(config) {\n        try {\n            const modalId = config.id;\n\n            // Check if modal already exists in DOM\n            if (document.getElementById(modalId)) {\n                Debug.log(`ModalManager: Modal ${modalId} already exists in DOM`, null, 2);\n                return true;\n            }\n\n            // Use header class from config or default to MODAL.HEADER with prefix removed\n            const headerClass = config.headerClass || Selectors.MODAL.HEADER.name();\n\n            // Start building modal HTML\n            let modalHtml = `\n                <div id=\"${modalId}\" class=\"${Selectors.MODAL.CONTAINER.name()/*remove dot prefix*/}${config.modalClass ? ' ' + config.modalClass : ''}\" style=\"display: none;\"`;\n\n            // Add additional attributes if provided\n            if (config.attr) {\n                Object.entries(config.attr).forEach(([key, value]) => {\n                    modalHtml += ` ${key}=\"${value}\"`;\n                });\n            }\n\n            modalHtml += `>\n                    <div class=\"${Selectors.MODAL.CONTENT.name()}\">\n                        <div class=\"${headerClass}\">\n                            <h5 class=\"${Selectors.MODAL.TITLE.name()}\">${config.title}</h5>\n                            <button class=\"${Selectors.MODAL.CLOSE.name()}\">&times;</button>\n                        </div>`;\n\n            // Add content container\n            if (config.contentId) {\n                modalHtml += `<div id=\"${config.contentId}\" class=\"${config.contentClass || ''}\"></div>`;\n            } else {\n                modalHtml += `<div class=\"${config.contentClass || ''}\"></div>`;\n            }\n\n            // Add footer with buttons if specified\n            if (config.footerButtons && config.footerButtons.length > 0) {\n                modalHtml += `<div class=\"${Selectors.MODAL.FOOTER.name()} ${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.PADDING_3.name()}\">`;\n                config.footerButtons.forEach(button => {\n                    // Check if this is a close button - only buttons with the exact MODAL.CLOSE.name() class should be considered close buttons\n                    const isCloseButton = button?.class.split(' ').includes(Selectors.MODAL.CLOSE.name());\n\n                    // Determine the button type based on class\n                    let iconName = 'chevron-right'; // Default icon\n\n                    if (button.class) {\n                        const classNames = button.class.split(' ');\n\n                        // Determine button type from classes\n                        if (classNames.some(cls => cls.includes('primary'))) {\n                            iconName = 'check-circle';\n                        } else if (classNames.some(cls => cls.includes('success'))) {\n                            iconName = 'check-circle';\n                        } else if (classNames.some(cls => cls.includes('danger'))) {\n                            iconName = 'exclamation-triangle';\n                        } else if (classNames.some(cls => cls.includes('warning'))) {\n                            iconName = 'exclamation-circle';\n                        } else if (classNames.some(cls => cls.includes('info'))) {\n                            iconName = 'info-circle';\n                        }\n                    }\n\n                    // Special case for specific button IDs\n                    if (button.id) {\n                        if (button.id.toLowerCase().includes('copy')) {\n                            iconName = 'copy';\n                        } else if (button.id === Selectors.MODAL.CONTINUE_BTN.name()) {\n                            iconName = 'chevron-right';\n                        } else if (button.id === Selectors.MODAL.MERGE_BTN.name()) {\n                            iconName = 'exclamation-circle';\n                        }\n                    }\n\n                    // Generate icon HTML if this is not a close button\n                    let iconHtml = '';\n                    if (!isCloseButton) {\n                        iconHtml = DOMUtils.getIconHtml(iconName, { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n                    }\n\n                    modalHtml += `<button id=\"${button.id}\" class=\"${button.class || Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_SECONDARY.name()}\"`;\n\n                    // Add data attributes if provided\n                    if (button.data) {\n                        Object.entries(button.data).forEach(([key, value]) => {\n                            modalHtml += ` data-${key}=\"${value}\"`;\n                        });\n                    }\n\n                    // Add the icon before text but only for non-close buttons\n                    if (isCloseButton && !button.text) {\n                        // For close buttons without text, don't add any content (X will be created by CSS)\n                        modalHtml += `></button>`;\n                    } else {\n                        // For other buttons or close buttons with text, add icon + text span\n                        modalHtml += `>${iconHtml}<span>${button.text || ''}</span></button>`;\n                    }\n                });\n                modalHtml += `</div>`;\n            }\n\n            // Close the modal structure\n            modalHtml += `\n                    </div>\n                </div>\n            `;\n\n            this._appendToBody(modalId, modalHtml);\n            this.modals[modalId] = {\n                element: document.getElementById(modalId),\n                isOpen: false,\n                config: config\n            };\n\n            // Apply fullscreen if needed\n            if (config.fullscreen) {\n                const modalElement = document.getElementById(modalId);\n                if (modalElement) {\n                    this.setFullscreenSize(modalElement);\n                }\n            }\n\n            // Attach custom event handlers if provided\n            if (config.events) {\n                const modalElement = document.getElementById(modalId);\n\n                Object.entries(config.events).forEach(([selector, events]) => {\n                    let elements;\n\n                    // Handle special selectors\n                    if (selector === 'modal') {\n                        elements = [modalElement];\n                    } else if (selector === 'close') {\n                        elements = Array.from(modalElement.querySelectorAll(Selectors.MODAL.CLOSE));\n                    } else {\n                        // For regular selectors, query within the modal\n                        elements = Array.from(modalElement.querySelectorAll(selector));\n                    }\n\n                    // Attach events to each matching element\n                    elements.forEach(element => {\n                        if (element) {\n                            Object.entries(events).forEach(([eventName, handler]) => {\n                                element.addEventListener(eventName, handler);\n                                Debug.log(`ModalManager: Attached ${eventName} event to ${selector} in modal ${modalId}`, null, 3);\n                            });\n                        }\n                    });\n                });\n            }\n\n            Debug.log(`ModalManager: Created modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error creating modal - ${config.id}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Determine the appropriate icon for a button based on context\n     * @private\n     * @param {Object} button - The button configuration object\n     * @returns {string} The name of the icon to use\n     */\n    _getIconNameForButton(button) {\n        // First, check the IconRegistry to ensure we use icons that actually exist\n\n        // Icons based on button text (case insensitive)\n        const buttonText = button.text.toLowerCase();\n\n        if (buttonText.includes('continue')) return 'chevron-right';\n        if (buttonText.includes('merge')) return 'check'; // Changed from code-merge to check\n        if (buttonText.includes('close') || buttonText.includes('cancel')) return 'exclamation-circle'; // Changed from times-circle\n        if (buttonText.includes('confirm') || buttonText.includes('ok')) return 'check-circle';\n        if (buttonText.includes('copy')) return 'copy';\n        if (buttonText.includes('download')) return 'file'; // Changed from download\n        if (buttonText.includes('upload')) return 'file-circle-plus'; // Changed from upload\n        if (buttonText.includes('save')) return 'check-circle'; // Changed from save\n        if (buttonText.includes('delete')) return 'exclamation-triangle'; // Changed from trash\n        if (buttonText.includes('edit')) return 'eye'; // Changed from edit\n\n        // Icons based on button class\n        if (button.class) {\n            const buttonClass = button.class.toLowerCase();\n\n            if (buttonClass.includes('primary')) return 'check';\n            if (buttonClass.includes('secondary')) return 'chevron-right';\n            if (buttonClass.includes('success')) return 'check-circle';\n            if (buttonClass.includes('danger')) return 'exclamation-triangle';\n            if (buttonClass.includes('warning')) return 'exclamation-circle';\n            if (buttonClass.includes('info')) return 'info-circle';\n        }\n\n        // Default icon if no matching pattern found\n        return 'chevron-right';\n    }\n\n    /**\n     * Append HTML to body\n     * @private\n     * @param {string} modalId - Modal ID\n     * @param {string} html - HTML to append\n     */\n    _appendToBody(modalId, html) {\n        // Create wrapper div for modals if it doesn't exist\n        let modal = document.getElementById(modalId);\n        if (!modal) {\n            // Convert HTML string to DOM element before appending\n            const tempContainer = document.createElement('div');\n            tempContainer.innerHTML = html;\n            document.body.appendChild(tempContainer.firstElementChild);\n        }\n\n        // Create or update the backdrop element\n        let backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (!backdrop) {\n            backdrop = document.createElement('div');\n            backdrop.id = Selectors.MODAL.BACKDROP.name();\n            backdrop.style.display = 'none';\n            document.body.appendChild(backdrop);\n        }\n    }\n\n    /**\n     * Set up event listeners for modals\n     * @private\n     */\n    _setupEventListeners() {\n        // Use document-level event delegation for close buttons\n        document.addEventListener('click', (event) => {\n            // Check if the clicked element is a close button or has the close class\n            if (event.target.matches(Selectors.MODAL.CLOSE)) {\n                const modal = event.target.closest(Selectors.MODAL.CONTAINER);\n                if (modal?.id) {\n                    this.close(modal.id);\n                }\n            }\n        });\n\n        // Backdrop click to close\n        const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (backdrop) {\n            backdrop.addEventListener('click', () => {\n                if (this.activeModal) {\n                    this.close(this.activeModal);\n                }\n            });\n        }\n\n        // ESC key to close\n        document.addEventListener('keydown', (event) => {\n            if (event.key === 'Escape' && this.activeModal) {\n                this.close(this.activeModal);\n            }\n        });\n    }\n\n    /**\n     * Register a modal instance\n     * @param {string} modalId - ID of the modal element\n     * @param {Object} options - Modal configuration options\n     * @returns {boolean} Success status\n     */\n    register(modalId, options = {}) {\n        try {\n            const element = document.getElementById(modalId);\n            if (!element) {\n                Debug.warn(`ModalManager: Element not found for modal ID ${modalId}`, null, 2);\n                return false;\n            }\n\n            this.modals[modalId] = {\n                element: element,\n                isOpen: false,\n                options: options\n            };\n\n            Debug.log(`ModalManager: Registered modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error registering modal - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Register a callback to be executed before opening a modal\n     * @param {string} modalId - ID of the modal\n     * @param {Function} callback - Function to execute before opening\n     * @returns {boolean} Success status\n     */\n    registerBeforeOpenCallback(modalId, callback) {\n        try {\n            if (!this.modals[modalId]) {\n                this.modals[modalId] = {\n                    element: document.getElementById(modalId),\n                    isOpen: false,\n                    config: {}\n                };\n            }\n\n            if (!this.modals[modalId].beforeOpenCallbacks) {\n                this.modals[modalId].beforeOpenCallbacks = [];\n            }\n\n            this.modals[modalId].beforeOpenCallbacks.push(callback);\n            Debug.log(`ModalManager: Registered before-open callback for modal ${modalId}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error registering before-open callback for modal ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Open a modal by ID\n     * @param {string} modalId - ID of the modal to open\n     * @returns {boolean} Success status\n     */\n    open(modalId) {\n        try {\n            const modal = this.modals[modalId];\n            if (!modal) {\n                Debug.warn(`ModalManager: Cannot open modal ${modalId} - not registered`, null, 2);\n\n                // Forcefully try to find the modal element even if not registered\n                const element = document.getElementById(modalId);\n                if (element) {\n                    Debug.log(`ModalManager: Found unregistered modal element ${modalId}, registering now`, null, 2);\n                    this.register(modalId, { element });\n                    this._showModal(modalId);\n                    return true;\n                }\n\n                return false;\n            }\n\n            // Execute any registered before-open callbacks\n            if (modal.beforeOpenCallbacks && modal.beforeOpenCallbacks.length > 0) {\n                Debug.log(`ModalManager: Executing ${modal.beforeOpenCallbacks.length} before-open callbacks for modal ${modalId}`, null, 2);\n                modal.beforeOpenCallbacks.forEach(callback => {\n                    try {\n                        callback();\n                    } catch (err) {\n                        Debug.error(`ModalManager: Error in before-open callback for modal ${modalId}`, err, 1);\n                    }\n                });\n            }\n\n            this._showModal(modalId);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error opening modal ${modalId}:`, error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Show a modal\n     * @private\n     * @param {string} modalId - Modal ID to show\n     */\n    _showModal(modalId) {\n        const modal = this.modals[modalId];\n        if (!modal) {\n            Debug.warn(`ModalManager: Modal ${modalId} not found`, null, 2);\n            return;\n        }\n\n        // Set as active modal - important for proper backdrop handling\n        this.activeModal = modalId;\n\n        // Show backdrop\n        const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (backdrop) {\n            backdrop.style.display = 'block';\n            setTimeout(() => {\n                backdrop.style.opacity = '1';\n            }, 10);\n        }\n\n        // IMPORTANT: Force modal display style using direct manipulation\n        // Show modal with animation - set display IMMEDIATELY\n        modal.element.style.display = 'block';\n        modal.element.style.opacity = '0';\n\n        // Debug logs to help diagnose modal display issues\n        Debug.log(`ModalManager: Setting modal ${modalId} display to block`, {\n            modalElement: modal.element.id,\n            displayBefore: modal.element.style.display\n        }, 2);\n\n        // Apply animation\n        setTimeout(() => {\n            modal.element.style.opacity = '1';\n            Debug.log(`ModalManager: Fading in modal ${modalId}`, null, 3);\n        }, 10);\n\n        modal.isOpen = true;\n\n        // Handle fullscreen if needed\n        if (modalId === Selectors.MODAL.PREVIEW.name()) {\n            this.setFullscreenSize(modal.element);\n        }\n\n        // Prevent body scrolling\n        document.body.style.overflow = 'hidden';\n    }\n\n    /**\n     * Hide a modal\n     * @private\n     * @param {string} modalId - Modal ID to hide\n     */\n    _hideModal(modalId) {\n        const modal = this.modals[modalId];\n        if (!modal) return;\n\n        // Fade out\n        modal.element.style.opacity = '0';\n\n        // After animation completes\n        setTimeout(() => {\n            modal.element.style.display = 'none';\n            modal.isOpen = false;\n\n            // Hide backdrop if this is the currently active modal\n            if (this.activeModal === modalId) {\n                const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n                if (backdrop) {\n                    backdrop.style.opacity = '0';\n\n                    // Hide backdrop after fade-out animation\n                    setTimeout(() => {\n                        backdrop.style.display = 'none';\n                    }, 150);\n                }\n\n                // Reset body scrolling\n                document.body.style.overflow = '';\n                this.activeModal = null;\n            }\n        }, 250); // Match transition duration\n    }\n\n    /**\n     * Close a modal by ID\n     * @param {string} modalId - ID of the modal to close\n     * @returns {boolean} Success status\n     */\n    close(modalId) {\n        try {\n            if (!this.modals[modalId]) {\n                Debug.warn(`ModalManager: Modal not found - ${modalId}`, null, 2);\n                return false;\n            }\n\n            this._hideModal(modalId);\n\n            Debug.log(`ModalManager: Closed modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error closing modal - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Set content for a modal\n     * @param {string} modalId - ID of the modal\n     * @param {string|Element} content - HTML content or DOM element\n     * @param {string} contentSelector - Selector for content container\n     * @returns {boolean} Success status\n     */\n    setContent(modalId, content, contentSelector = null) {\n        try {\n            Debug.log(`ModalManager: Setting content for modal ${modalId}`, {\n                contentType: typeof content,\n                contentLength: typeof content === 'string' ? content.length : 'Element',\n                contentPreview: typeof content === 'string' ? content.substring(0, 150) + '...' : 'Element object',\n                targetSelector: contentSelector\n            }, 2);\n\n            const modal = this.modals[modalId];\n            if (!modal) {\n                Debug.error(`ModalManager: Modal not found - ${modalId}`, null, 1);\n                return false;\n            }\n\n            // Find the content container\n            let container;\n            if (contentSelector) {\n                Debug.log(`ModalManager: Looking for content container with selector: ${contentSelector}`, null, 2);\n                // Check if contentSelector is an ID without # prefix\n                if (!contentSelector.startsWith('#') && !contentSelector.startsWith('.')) {\n                    container = document.getElementById(contentSelector);\n                    Debug.log(`ModalManager: Tried getElementById with: ${contentSelector}, found: ${!!container}`, null, 2);\n                }\n\n                // If not found or not an ID, try as a selector\n                if (!container) {\n                    container = document.querySelector(contentSelector);\n                    Debug.log(`ModalManager: Tried querySelector with: ${contentSelector}, found: ${!!container}`, null, 2);\n                }\n\n                // Log container details\n                Debug.log(`ModalManager: Container lookup result:`, {\n                    found: !!container,\n                    id: container?.id || 'none',\n                    classList: container ? Array.from(container.classList) : []\n                }, 2);\n            } else {\n                container = modal.element.querySelector(Selectors.MODAL.CONTENT);\n                Debug.log(`ModalManager: Using default content container:`, {\n                    found: !!container,\n                    selector: Selectors.MODAL.CONTENT\n                }, 2);\n\n                if (!container) {\n                    Debug.error(`ModalManager: Content container not found - ${modalId}`, null, 1);\n                    return false;\n                }\n            }\n\n            if (!container) {\n                Debug.error(`ModalManager: Could not find content container with selector: ${contentSelector}`, null, 1);\n                return false;\n            }\n\n            // Set the content\n            if (typeof content === 'string') {\n                Debug.log(`ModalManager: Setting HTML content for modal ${modalId}`, {\n                    contentLength: content.length,\n                    containsPre: content.includes('<pre'),\n                    container: container.id || container.className\n                }, 2);\n\n                container.innerHTML = content;\n\n                // Verify the content was set correctly\n                const hasPreElements = container.querySelectorAll('pre').length > 0;\n                Debug.log(`ModalManager: Content set verification:`, {\n                    hasPreElements,\n                    innerHTML: container.innerHTML.substring(0, 100) + '...'\n                }, 2);\n\n                if (content.includes('<pre') && !hasPreElements) {\n                    Debug.warn(`ModalManager: Content included <pre> tags but none found after setting innerHTML`, {\n                        innerHtmlLength: container.innerHTML.length\n                    }, 1);\n                }\n            } else if (content instanceof Element) {\n                Debug.log(`ModalManager: Setting Element content for modal ${modalId}`, {\n                    elementType: content.tagName,\n                    elementId: content.id || 'none'\n                }, 2);\n                container.innerHTML = '';\n                container.appendChild(content);\n            } else {\n                Debug.error(`ModalManager: Invalid content type - ${typeof content}`, null, 1);\n                return false;\n            }\n\n            Debug.log(`ModalManager: Content set for modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error setting content - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Set fullscreen size for modal\n     * @param {Element} modalElement - Modal DOM element\n     * @returns {boolean} Success status\n     */\n    setFullscreenSize(modalElement) {\n        try {\n            if (!modalElement) {\n                Debug.warn('ModalManager: Modal element not provided for fullscreen', null, 2);\n                return false;\n            }\n\n            // Add fullscreen class\n            modalElement.classList.add(Selectors.MODAL.FULLSCREEN.name());\n\n            // Calculate and set the height\n            const headerHeight = modalElement.querySelector(Selectors.MODAL.HEADER) ?\n                modalElement.querySelector(Selectors.MODAL.HEADER).offsetHeight : 0;\n\n            const content = modalElement.querySelector(Selectors.MODAL.CONTENT);\n            if (content) {\n                content.style.height = `calc(100% - ${headerHeight}px)`;\n            }\n\n            Debug.log('ModalManager: Modal set to fullscreen size', null, 3);\n            return true;\n        } catch (error) {\n            Debug.error('ModalManager: Error setting fullscreen size', error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Creates a code copy modal for displaying and copying code snippets\n     * @param {string} codeText - The code text to display in the modal\n     * @returns {string} Modal ID\n     */\n    createCopyModal(codeText) {\n        const modalId = Selectors.MODAL.CODE_COPY.name();\n        // Get translations\n        const translationManager = TranslationManager.getInstance();\n\n        // Create modal if it doesn't exist yet\n        if (!this.modals[modalId]) {\n            this.createModal({\n                id: modalId,\n                title: translationManager.get('copyCode'),\n                contentId: Selectors.MODAL.COPY_CONTENT.name(),\n                modalClass: Selectors.MODAL.FIXED_FOOTER.name(),\n                headerClass: Selectors.MODAL.HEADER_FIXED.name(),\n                footerButtons: [\n                    {\n                        class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()}`\n                    }\n                ]\n            });\n        }\n\n        // Create content with textarea and copy button\n        const safeText = this._escapeHtml(codeText);\n        const content = `\n            <div class=\"${Selectors.COPY.MODAL.DIALOG.name()}\">\n                <p class=\"${Selectors.COPY.MODAL.INSTRUCTIONS.name()}\">${translationManager.get('copyInstructions')}</p>\n                <div class=\"${Selectors.COPY.MODAL.TEXTAREA.name()}\">\n                    <textarea id=\"${Selectors.COPY.MODAL.TEXTAREA_ELEM.name()}\" class=\"${Selectors.COPY.MODAL.TEXTAREA_ELEM.name()}\">${safeText}</textarea>\n                </div>\n                <div class=\"${Selectors.COPY.MODAL.ACTIONS.name()}\">\n                    <button id=\"${Selectors.COPY.MODAL.BUTTON.name()}\" class=\"${Selectors.COPY.MODAL.BUTTON.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}\">\n                        ${DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() })}\n                        <span>${translationManager.get('copyToClipboard')}</span>\n                    </button>\n                </div>\n            </div>\n        `;\n\n        // Set content\n        this.setContent(modalId, content, Selectors.MODAL.COPY_CONTENT.name());\n\n        // Set up event handlers after a short delay to ensure DOM is ready\n        setTimeout(() => {\n            const textarea = document.getElementById(Selectors.COPY.MODAL.TEXTAREA_ELEM.name());\n            const copyBtn = document.getElementById(Selectors.COPY.MODAL.BUTTON.name());\n\n            if (textarea) {\n                // Select all text when focused\n                textarea.addEventListener('focus', function() {\n                    this.select();\n                });\n\n                // Initial focus and select\n                textarea.select();\n            }\n\n            if (copyBtn && textarea) {\n                copyBtn.addEventListener('click', function() {\n                    // Focus and select the textarea\n                    textarea.select();\n\n                    try {\n                        // Try to copy using clipboard API or fallback to execCommand\n                        let success = false;\n\n                        if (navigator.clipboard?.writeText) {\n                            navigator.clipboard.writeText(textarea.value)\n                                .then(() => {\n                                    this._showCopySuccess(copyBtn);\n                                    Debug.log('ModalManager: Successfully copied using Clipboard API', null, 3);\n                                })\n                                .catch(_err => {\n                                    // Fallback to execCommand\n                                    // @SuppressWarnings(javascript:S1874) - Keeping for browser compatibility\n                                    success = document.execCommand('copy');\n                                    if (success) {\n                                        this._showCopySuccess(copyBtn);\n                                        Debug.log('ModalManager: Successfully copied using execCommand fallback', null, 3);\n                                    } else {\n                                        this._showCopyFailure(copyBtn);\n                                        Debug.warn('ModalManager: Copy failed with execCommand fallback', null, 2);\n                                    }\n                                });\n                        } else {\n                            // Try execCommand directly\n                            // @SuppressWarnings(javascript:S1874) - Keeping for browser compatibility\n                            success = document.execCommand('copy');\n                            if (success) {\n                                this._showCopySuccess(copyBtn);\n                                Debug.log('ModalManager: Successfully copied using execCommand', null, 3);\n                            } else {\n                                this._showCopyFailure(copyBtn);\n                                Debug.warn('ModalManager: Copy failed with execCommand', null, 2);\n                            }\n                        }\n                    } catch (err) {\n                        this._showCopyFailure(copyBtn);\n                        Debug.error('ModalManager: Error during copy operation', err, 2);\n                    }\n                }.bind(this)); // Bind to modal manager for access to helper methods\n            }\n        }, 300);\n\n        return modalId;\n    }\n\n    /**\n     * Show success state on copy button\n     * @param {HTMLElement} button - Button element\n     * @private\n     */\n    _showCopySuccess(button) {\n        const translationManager = TranslationManager.getInstance();\n        button.innerHTML = DOMUtils.getIconHtml('check-circle', { classes: 'vdm-icon--success ' + Selectors.UTILITY.MARGIN_END_2.name() }) +\n            `<span>${translationManager.get('copied')}</span>`;\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_SUCCESS.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) +\n                `<span>${translationManager.get('copyToClipboard')}</span>`;\n            button.classList.remove(Selectors.UTILITY.BUTTON_SUCCESS.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Show failure state on copy button\n     * @param {HTMLElement} button - Button element\n     * @private\n     */\n    _showCopyFailure(button) {\n        const translationManager = TranslationManager.getInstance();\n        button.innerHTML = DOMUtils.getIconHtml('exclamation-triangle', { classes: 'vdm-icon--danger ' + Selectors.UTILITY.MARGIN_END_2.name() }) +\n            `<span>${translationManager.get('copyFailed')}</span>`;\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_DANGER.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) +\n                `<span>${translationManager.get('tryAgain')}</span>`;\n            button.classList.remove(Selectors.UTILITY.BUTTON_DANGER.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Escape HTML entities in a string\n     * @param {string} html - String to escape\n     * @returns {string} Escaped string\n     * @private\n     */\n    _escapeHtml(html) {\n        if (!html) return '';\n\n        return html\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n    }\n\n    /**\n     * Create a modal dynamically with content and open it immediately\n     * @param {Object} config - Modal configuration (see createModal)\n     * @param {string|Element} content - Content to set in the modal\n     * @param {string} [contentSelector] - Optional content container selector\n     * @returns {string} Modal ID\n     */\n    createAndOpenModal(config, content, contentSelector = null) {\n        try {\n            // Generate a unique ID if none provided\n            if (!config.id) {\n                config.id = 'vdm-modal--dynamic-' + Date.now();\n            }\n\n            // Create the modal\n            this.createModal(config);\n\n            // Set the content if provided\n            if (content) {\n                this.setContent(config.id, content, contentSelector || config.contentId);\n            }\n\n            // Open the modal\n            this.open(config.id);\n\n            return config.id;\n        } catch (error) {\n            Debug.error('ModalManager: Error creating and opening modal', error, 1);\n            return null;\n        }\n    }\n\n    /**\n     * Create a simple confirmation modal\n     * @param {Object} options - Confirmation options\n     * @param {string} options.title - Modal title\n     * @param {string} options.message - Confirmation message\n     * @param {string} options.confirmText - Text for confirm button\n     * @param {string} options.cancelText - Text for cancel button\n     * @param {Function} options.onConfirm - Callback for confirm action\n     * @param {Function} options.onCancel - Callback for cancel action\n     * @returns {string} Modal ID\n     */\n    createConfirmationModal(options) {\n        const modalId = 'vdm-modal--confirmation-' + Date.now();\n\n        // Create modal\n        this.createModal({\n            id: modalId,\n            title: options.title || 'Confirmation',\n            contentId: 'vdm-modal__confirmation-content',\n            contentClass: Selectors.UTILITY.PADDING_3.name(),\n            footerButtons: [\n                {\n                    id: `${modalId}-cancel-btn`,\n                    text: options.cancelText || 'Cancel',\n                    class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()} me-2`\n                },\n                {\n                    id: `${modalId}-confirm-btn`,\n                    text: options.confirmText || 'Confirm',\n                    class: `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`\n                }\n            ],\n            events: {\n                [`#${modalId}-confirm-btn`]: {\n                    click: () => {\n                        if (typeof options.onConfirm === 'function') {\n                            options.onConfirm();\n                        }\n                        this.close(modalId);\n                    }\n                },\n                [`#${modalId}-cancel-btn`]: {\n                    click: () => {\n                        if (typeof options.onCancel === 'function') {\n                            options.onCancel();\n                        }\n                        this.close(modalId);\n                    }\n                }\n            }\n        });\n\n        // Set message content\n        this.setContent(modalId, `<p>${options.message || ''}</p>`, 'vdm-modal__confirmation-content');\n\n        // Open the modal\n        this.open(modalId);\n\n        return modalId;\n    }\n\n    /**\n     * Create an alert modal for showing messages\n     * @param {Object} options - Alert options\n     * @param {string} options.title - Modal title\n     * @param {string} options.message - Alert message\n     * @param {string} options.type - Alert type (success, info, warning, danger)\n     * @param {string} options.buttonText - Text for button\n     * @param {Function} options.onClose - Callback for close action\n     * @returns {string} Modal ID\n     */\n    createAlertModal(options) {\n        const modalId = `${Selectors.MODAL.CONTAINER.name()}--alert-${Date.now()}`;\n\n        // Determine alert class based on type\n        const alertClass = options.type ?\n            `${Selectors.UTILITY.ALERT} ${Selectors.UTILITY.ALERT_PREFIX}${options.type}` :\n            `${Selectors.UTILITY.ALERT} ${Selectors.UTILITY.ALERT_INFO}`;\n\n        // Create modal\n        this.createModal({\n            id: modalId,\n            title: options.title || 'Alert',\n            contentId: `${Selectors.MODAL.CONTAINER.name()}__alert-content`,\n            contentClass: Selectors.UTILITY.PADDING_3.name(),\n            footerButtons: [\n                {\n                    id: `${modalId}-ok-btn`,\n                    text: options.buttonText || 'OK',\n                    class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`\n                }\n            ],\n            events: {\n                [`#${modalId}-ok-btn`]: {\n                    click: (e) => {\n                        if (typeof options.onClose === 'function') {\n                            options.onClose(e);\n                        }\n                        this.close(modalId);\n                    }\n                }\n            }\n        });\n\n        // Create alert content\n        const alertContent = `\n            <div class=\"${alertClass} mb-0\">\n                ${options.message || ''}\n            </div>\n        `;\n\n        // Set content\n        this.setContent(modalId, alertContent, `${Selectors.MODAL.CONTAINER.name()}__alert-content`);\n\n        // Open the modal\n        this.open(modalId);\n\n        return modalId;\n    }\n\n    /**\n     * Destroy all modal instances and clean up\n     */\n    destroy() {\n        try {\n            // Close any open modal\n            if (this.activeModal) {\n                this.close(this.activeModal);\n            }\n\n            // Reset all modal references\n            this.modals = {};\n            this.activeModal = null;\n\n            Debug.log('ModalManager: Destroyed', null, 2);\n        } catch (error) {\n            Debug.error('ModalManager: Error during destroy', error, 1);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { NavigationUtils } from '../../utils/NavigationUtils';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Handles navigation between conflicts\n */\nexport class ConflictNavigator {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n        this.diffViewer = navigator.diffViewer;\n    }\n\n    /**\n     * Find all unresolved chunk IDs in the document\n     * @returns {Object} Object containing unresolvedChunkIds and total count\n     */\n    _getUnresolvedChunkInfo() {\n        // Find elements with unresolved status\n        const unresolvedElements = Array.from(document.querySelectorAll(\n            `[data-chunk-id]:not([data-chunk-id=\"\"])`\n        )).filter(el => el.classList.contains(Selectors.STATUS.UNRESOLVED.name()));\n\n        if (unresolvedElements.length === 0) {\n            Debug.log('ConflictNavigator: No unresolved elements found', null, 2);\n            return { unresolvedChunkIds: [], count: 0 };\n        }\n\n        // Get a unique list of chunk IDs that have unresolved status\n        const unresolvedChunkIds = [...new Set(\n            unresolvedElements.map(el => el.getAttribute('data-chunk-id'))\n        )];\n\n        Debug.log(`ConflictNavigator: Found ${unresolvedChunkIds.length} unresolved chunks`, null, 3);\n\n        return { unresolvedChunkIds, count: unresolvedChunkIds.length };\n    }\n\n    /**\n     * Navigate to first conflict\n     */\n    navigateToFirstConflict() {\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        // Find the first chunk with this ID\n        const chunks = this.diffViewer.chunkManager.chunks;\n        const firstUnresolvedIndex = chunks.findIndex(chunk =>\n            unresolvedChunkIds.includes(String(chunk.id))\n        );\n\n        if (firstUnresolvedIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to first unresolved chunk at index ${firstUnresolvedIndex}`, null, 2);\n            return this.navigator.navigateToChunk(firstUnresolvedIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Navigate to next conflict\n     */\n    navigateToNextConflict() {\n        const currentIndex = this.navigator.currentChunkIndex;\n        Debug.log(`ConflictNavigator: Current chunk index is ${currentIndex}`, null, 3);\n\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        const chunks = this.diffViewer.chunkManager.chunks;\n\n        // Find next chunk or wrap around\n        const nextIndex = this._findNextChunkIndex(chunks, unresolvedChunkIds, currentIndex);\n\n        if (nextIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to next unresolved chunk at index ${nextIndex}`, null, 2);\n            return this.navigator.navigateToChunk(nextIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Find the next chunk index from a starting point\n     * @private\n     */\n    _findNextChunkIndex(chunks, unresolvedChunkIds, currentIndex) {\n        const indexMap = this._createChunkIndexMap(chunks, unresolvedChunkIds);\n\n        // No matching chunks\n        if (indexMap.size === 0) {\n            return -1;\n        }\n\n        // Get all indices in the map\n        const indices = Array.from(indexMap.values()).sort((a, b) => a - b);\n\n        // Find the next index after currentIndex\n        for (const index of indices) {\n            if (index > currentIndex) {\n                return index;\n            }\n        }\n\n        // Wrap around to beginning\n        return indices[0];\n    }\n\n    /**\n     * Navigate to previous conflict\n     */\n    navigateToPrevConflict() {\n        const currentIndex = this.navigator.currentChunkIndex;\n\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        const chunks = this.diffViewer.chunkManager.chunks;\n\n        // Find previous chunk or wrap around\n        const prevIndex = this._findPrevChunkIndex(chunks, unresolvedChunkIds, currentIndex);\n\n        if (prevIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to previous unresolved chunk at index ${prevIndex}`, null, 2);\n            return this.navigator.navigateToChunk(prevIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Find the previous chunk index from a starting point\n     * @private\n     */\n    _findPrevChunkIndex(chunks, unresolvedChunkIds, currentIndex) {\n        const indexMap = this._createChunkIndexMap(chunks, unresolvedChunkIds);\n\n        // No matching chunks\n        if (indexMap.size === 0) {\n            return -1;\n        }\n\n        // Get all indices in the map\n        const indices = Array.from(indexMap.values()).sort((a, b) => a - b);\n\n        // Find the previous index before currentIndex\n        for (let i = indices.length - 1; i >= 0; i--) {\n            if (indices[i] < currentIndex) {\n                return indices[i];\n            }\n        }\n\n        // Wrap around to end\n        return indices[indices.length - 1];\n    }\n\n    /**\n     * Create a map of chunk IDs to their indices for fast lookup\n     * @private\n     */\n    _createChunkIndexMap(chunks, unresolvedChunkIds) {\n        const indexMap = new Map();\n\n        chunks.forEach((chunk, index) => {\n            // Only include chunks that are unresolved\n            if (chunk && chunk.id && unresolvedChunkIds.includes(String(chunk.id))) {\n                indexMap.set(String(chunk.id), index);\n            }\n        });\n\n        return indexMap;\n    }\n\n    /**\n     * Navigate to specific chunk\n     * @param {number} index - Chunk index\n     * @returns {boolean} Success status\n     */\n    navigateToChunk(index) {\n        // Set current chunk\n        this.navigator.currentChunkIndex = index;\n\n        // Get the chunk element\n        const chunkElement = this.diffViewer.chunkManager.chunkElements[index];\n\n        // Scroll to it\n        if (chunkElement) {\n            Debug.log(`ConflictNavigator: Navigating to chunk ${index}`, null, 2);\n\n            // Find the diff-pane-content containing this element\n            const paneContent = chunkElement.closest(Selectors.DIFF.PANE_CONTENT);\n            if (paneContent) {\n                // Use utility to scroll element into view\n                NavigationUtils.scrollElementIntoView(chunkElement, paneContent);\n\n                // Add highlight effect\n                NavigationUtils.addHighlightEffect(chunkElement, 2000);\n            } else {\n                Debug.warn(`ConflictNavigator: Cannot navigate - chunk ${index} parent not found`, null, 2);\n                return false;\n            }\n        } else {\n            Debug.warn(`ConflictNavigator: Cannot scroll - chunk ${index} not found`, null, 2);\n            return false;\n        }\n\n        // Update counter\n        this.navigator.navigationCounter.updateCounter();\n        Debug.log('ConflictNavigator: Navigation complete', null, 2);\n\n        return true;\n    }\n}\n","\n/**\n * Manages navigation counter display and state\n */\nexport class NavigationCounter {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n        this.counterElement = null;\n        this.prevButton = null;\n        this.nextButton = null;\n    }\n\n    /**\n     * Set counter element reference\n     * @param {Element} element - Counter element\n     */\n    setCounterElement(element) {\n        this.counterElement = element;\n    }\n\n    /**\n     * Set navigation button references\n     * @param {Element} prevButton - Previous button\n     * @param {Element} nextButton - Next button\n     */\n    setButtons(prevButton, nextButton) {\n        this.prevButton = prevButton;\n        this.nextButton = nextButton;\n    }\n\n    /**\n     * Update counter display\n     * @returns {Array} Active conflicts for navigation\n     */\n    updateCounter() {\n        if (!this.counterElement) return [];\n\n        const chunks = this.navigator.diffViewer.chunkManager.chunks;\n        const selections = this.navigator.diffViewer.chunkManager.selections;\n        let conflictCount = 0;\n        let currentIndex = 0;\n        let activeConflicts = [];\n\n        // Count only unresolved conflicts\n        chunks.forEach((chunk, index) => {\n            if (chunk.conflict && !selections[chunk.id]) {\n                // This is an unresolved conflict - no selection made yet\n                activeConflicts.push(index);\n                conflictCount++;\n            }\n        });\n\n        // Find current position in active conflicts\n        if (this.navigator.currentChunkIndex >= 0) {\n            const position = activeConflicts.findIndex(index => index >= this.navigator.currentChunkIndex);\n            if (position !== -1) {\n                currentIndex = position + 1; // 1-based index for display\n            }\n        }\n\n        // Update counter text with different symbol when complete\n        if (conflictCount === 0) {\n            // All conflicts resolved! Show a checkmark\n            this.counterElement.textContent = '✓';\n            this.counterElement.title = 'All conflicts resolved!';\n        } else {\n            this.counterElement.textContent = `${currentIndex || 1}/${conflictCount}`;\n            this.counterElement.title = `${conflictCount} conflicts remaining`;\n        }\n\n        // Enable/disable buttons based on conflict count\n        if (this.prevButton && this.nextButton) {\n            this.prevButton.disabled = conflictCount === 0;\n            this.nextButton.disabled = conflictCount === 0;\n        }\n\n        return activeConflicts;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Builds navigation UI elements\n */\nexport class NavigationUIBuilder {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n    }\n\n    /**\n     * Create navigation UI elements\n     * @returns {Object|null} Object with counter, prev button, and next button elements\n     */\n    createNavigationUI() {\n        Debug.log('NavigationUIBuilder: Creating navigation UI', null, 2);\n\n        // Find container element - first look for an existing one\n        let container = document.querySelector(Selectors.NAVIGATION.CONTAINER);\n\n        // If no container found, create one\n        if (!container) {\n            Debug.log('NavigationUIBuilder: No navigation container found, creating one', null, 2);\n\n            // Get the diff pane contents as parent reference\n            const panes = document.querySelectorAll(Selectors.DIFF.PANE);\n            if (!panes || panes.length === 0) {\n                Debug.warn('NavigationUIBuilder: No diff panes found to append navigation container');\n                return null;\n            }\n\n            // Create container\n            container = document.createElement('div');\n            container.className = Selectors.NAVIGATION.CONTAINER.name();\n\n            // Build controls inside the container\n            this._createControls(container);\n\n            // Append after the first pane\n            if (panes[0].parentNode) {\n                panes[0].parentNode.insertBefore(container, panes[0]);\n            }\n        } else {\n            // Use existing container, but update its contents\n            Debug.log('NavigationUIBuilder: Using existing navigation container', null, 2);\n            container.innerHTML = '';\n            this._createControls(container);\n        }\n\n        // Return references to the elements\n        return {\n            counter: document.getElementById(Selectors.NAVIGATION.COUNTER.name()),\n            prevButton: document.getElementById(Selectors.NAVIGATION.PREV_BUTTON.name()),\n            nextButton: document.getElementById(Selectors.NAVIGATION.NEXT_BUTTON.name())\n        };\n    }\n\n    /**\n     * Create navigation controls\n     * @private\n     * @param {Element} container - Container element\n     */\n    _createControls (container) {\n        // Create nav chunk element\n        const navChunk = document.createElement('div');\n        navChunk.className = Selectors.NAVIGATION.NAV_CHUNK.name();\n\n        // Create counter element\n        const counter = document.createElement('span');\n        counter.id = Selectors.NAVIGATION.COUNTER.name();\n        counter.className = Selectors.NAVIGATION.COUNTER_ELEMENT.name();\n\n        // Create previous button\n        const prevButton = document.createElement('button');\n        prevButton.id = Selectors.NAVIGATION.PREV_BUTTON.name();\n        prevButton.classList.add(\n            Selectors.UTILITY.BUTTON.name(),\n            Selectors.UTILITY.BUTTON_FLAT.name(),\n            Selectors.UTILITY.BUTTON_SMALL.name()\n        );\n        prevButton.innerHTML = DOMUtils.getIconHtml('chevron-up');\n        prevButton.title = 'Previous change';\n        prevButton.addEventListener('click', () => this.navigator.navigateToPrevConflict());\n\n        // Create next button\n        const nextButton = document.createElement('button');\n        nextButton.id = Selectors.NAVIGATION.NEXT_BUTTON.name();\n        nextButton.classList.add(\n            Selectors.UTILITY.BUTTON.name(),\n            Selectors.UTILITY.BUTTON_FLAT.name(),\n            Selectors.UTILITY.BUTTON_SMALL.name()\n        );\n        nextButton.innerHTML = DOMUtils.getIconHtml('chevron-down');\n        nextButton.title = 'Next change';\n        nextButton.addEventListener('click', () => this.navigator.navigateToNextConflict());\n\n        // Add elements to navChunk\n        navChunk.appendChild(prevButton);\n        navChunk.appendChild(counter);\n        navChunk.appendChild(nextButton);\n\n        // Add navChunk to container\n        container.appendChild(navChunk);\n\n        Debug.log('NavigationUIBuilder: Navigation controls created', null, 2);\n    }\n\n    /**\n     * Clean up event handlers\n     */\n    destroy() {\n        // Find navigation buttons\n        const prevButton = document.getElementById(Selectors.NAVIGATION.PREV_BUTTON.name());\n        const nextButton = document.getElementById(Selectors.NAVIGATION.NEXT_BUTTON.name());\n\n        // Remove event listeners by cloning\n        if (prevButton) {\n            const newPrevButton = prevButton.cloneNode(true);\n            prevButton.parentNode.replaceChild(newPrevButton, prevButton);\n        }\n\n        if (nextButton) {\n            const newNextButton = nextButton.cloneNode(true);\n            nextButton.parentNode.replaceChild(newNextButton, nextButton);\n        }\n\n        Debug.log('NavigationUIBuilder: Event handlers removed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { ModalManager } from '../modal/ModalManager';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Adds copy buttons to code blocks in the preview modal\n * This implementation uses a fallback strategy for maximum browser compatibility\n */\nexport class CopyButton {\n    /**\n     * Initialize copy buttons for code blocks\n     * @param {string} containerId - ID of the container element\n     * @returns {boolean} Success status\n     */\n    static addCopyButtonsToPreview(containerId = Selectors.MODAL.PREVIEW_CONTENT_ID.name()) {\n        // Get instance of TranslationManager\n        const translationManager = TranslationManager.getInstance();\n\n        const container = DOMUtils.getElement(containerId);\n\n        if (!container) {\n            // Try direct DOM methods too\n            const directElement = document.getElementById(containerId);\n            const querySelectorElement = document.querySelector('#' + containerId);\n\n            Debug.log('CopyButton: Alternative container lookup results', {\n                getElementById: !!directElement,\n                querySelector: !!querySelectorElement\n            }, 2);\n\n            Debug.warn('CopyButton: Preview container not found', null, 2);\n            return false;\n        }\n\n        // Find all code blocks within the container\n        const preElements = container.querySelectorAll('pre');\n\n        if (!preElements || preElements.length === 0) {\n            Debug.log('CopyButton: No code blocks found in preview', null, 3);\n            return false;\n        }\n\n        // Add copy button to each pre element\n        preElements.forEach(pre => {\n            // Check if button already exists\n            if (pre.querySelector(Selectors.COPY.BUTTON)) {\n                return;\n            }\n\n            // Create copy button\n            const button = DOMUtils.createElement('button', null, Selectors.COPY.BUTTON.name(), {\n                type: 'button',\n                title: translationManager.get('copyCode')\n            });\n\n            // Add copy button content\n            button.innerHTML = `<span class=\"${Selectors.COPY.ICON.name()}\"></span><span class=\"${Selectors.COPY.TEXT.name()}\">${translationManager.get('copy')}</span>`;\n\n            // Position the button within the pre element\n            pre.style.position = 'relative';\n\n            // Find code element and insert button before it\n            const codeEl = pre.querySelector('code');\n            if (codeEl) {\n                pre.insertBefore(button, codeEl);\n            } else {\n                // Fallback to appending if no code element found\n                pre.appendChild(button);\n            }\n\n            // Add click event with progressive fallback\n            button.addEventListener('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                const codeEl = pre.querySelector('code');\n                if (!codeEl) return;\n\n                // Store reference to the code element for later use\n                // This is important to maintain context during asynchronous operations\n                CopyButton._sourceCodeElement = codeEl;\n\n                // Get text content - use most reliable method\n                let textToCopy;\n                if (codeEl.hasAttribute('data-original-code')) {\n                    textToCopy = CopyButton._decodeHTMLEntities(codeEl.getAttribute('data-original-code'));\n                    Debug.log('CopyButton: Using original code from attribute', null, 3);\n                } else {\n                    textToCopy = codeEl.textContent || '';\n                    textToCopy = textToCopy.replace(/\\n\\n+/g, '\\n');\n                    Debug.log('CopyButton: Using text content from code element', null, 3);\n                }\n\n                Debug.log('CopyButton: Text length: ' + textToCopy.length, null, 3);\n\n                // Go straight to the most reliable method - manual copy\n                // This ensures consistent behavior across all browsers\n                CopyButton._showManualCopyModal(textToCopy);\n\n                // Show visual feedback that copy operation was initiated\n                CopyButton._showProcessingState(button);\n            });\n        });\n\n        Debug.log(`CopyButton: Added copy buttons to ${preElements.length} code blocks`, null, 2);\n        return true;\n    }\n\n    /**\n     * Show processing state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showProcessingState(button) {\n        button.classList.add(Selectors.COPY.PROCESSING.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Open Copy Dialog...';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.PROCESSING.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 1000);\n    }\n\n    /**\n     * Show copied state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopiedState(button) {\n        button.classList.add(Selectors.COPY.COPIED.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Copied!';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.COPIED.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 2000);\n    }\n\n    /**\n     * Show a modal dialog with text for manual copying using ModalManager\n     * @param {string} text - Text to copy\n     * @private\n     */\n    static _showManualCopyModal(text) {\n        // Get singleton instance of ModalManager\n        const modalManager = ModalManager.getInstance();\n\n        // Create the copy modal and get its ID\n        const modalId = modalManager.createCopyModal(text);\n\n        // Open the modal\n        modalManager.open(modalId);\n\n        Debug.log('CopyButton: Showing manual copy modal', null, 2);\n    }\n\n    /**\n     * Show copy failure on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopyFailure(button) {\n        button.innerHTML = DOMUtils.getIconHtml('exclamation-triangle', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Copy Failed';\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name(), Selectors.UTILITY.BUTTON_SUCCESS.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_DANGER.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Try Again';\n            button.classList.remove(Selectors.UTILITY.BUTTON_DANGER.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Decode HTML entities in a string\n     * @param {string} html - String with HTML entities\n     * @returns {string} Decoded string\n     * @private\n     */\n    static _decodeHTMLEntities(html) {\n        if (!html) return '';\n\n        const textarea = document.createElement('textarea');\n        textarea.innerHTML = html;\n        return textarea.value;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n/**\n * Manages browser UI generation for file-browser.php\n * This component handles the dynamic generation of UI elements that were previously\n * hardcoded in the PHP file, ensuring proper use of selectors and translations.\n */\nexport class BrowserUIManager {\n    /**\n     * @param {DiffViewer|Object} diffViewer - Parent diff viewer instance or options object\n     */\n    constructor (diffViewer) {\n        // Handle both DiffViewer instance or options object\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n        } else {\n            this.diffViewer = null;\n            this.options = diffViewer || {};\n        }\n\n        this.container = null;\n        this.elements = {\n            themeSwitcher: null,\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Get the translation manager instance\n        this.translationManager = TranslationManager.getInstance();\n\n        // Log translation state for debugging\n        let translationsSource;\n\n        // Extract nested ternary operations into separate statements\n        const hasWindowConfig = !!window.diffConfig?.translations;\n        const hasOptionsTranslations = !!this.options?.translations;\n\n        if (this.translationManager.isInitialized()) {\n            translationsSource = 'TranslationManager';\n        } else if (hasWindowConfig) {\n            translationsSource = 'window.diffConfig';\n        } else if (hasOptionsTranslations) {\n            translationsSource = 'options';\n        } else {\n            translationsSource = 'none';\n        }\n\n        const lang = this.translationManager.getLanguage();\n\n        Debug.log(`BrowserUIManager: Created with \"${lang}\" translations from ${translationsSource}`,\n                 this.translationManager.getAllTranslations(), 2);\n    }\n\n    /**\n     * Set the DiffViewer instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    setDiffViewer(diffViewer) {\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n            Debug.log('BrowserUIManager: Updated DiffViewer reference', null, 3);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Get translations from options\n     * @returns {Object} Translations object\n     */\n    getTranslations() {\n        // First, try to get translations from the TranslationManager\n        if (this.translationManager && this.translationManager.isInitialized()) {\n            Debug.log('BrowserUIManager: Using translations from TranslationManager', this.translationManager.getAllTranslations(), 3);\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Second, try to auto-initialize TranslationManager with window.diffConfig\n        if (window.diffConfig?.translations && typeof window.diffConfig.translations === 'object') {\n            Debug.log('BrowserUIManager: Auto-initializing TranslationManager from window.diffConfig', window.diffConfig.translations, 3);\n            this.translationManager.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Fall back to local options if nothing else works\n        if (this.options?.translations && typeof this.options.translations === 'object') {\n            Debug.log('BrowserUIManager: Using translations from local options', this.options.translations, 3);\n            return this.options.translations;\n        }\n\n        Debug.log('BrowserUIManager: No translations found, using empty object', null, 3);\n        return {};\n    }\n\n    /**\n     * Initialize UI components\n     * @param {string} containerSelector - Container element selector\n     */\n    initialize(containerSelector = Selectors.CONTAINER.WRAPPER) {\n        Debug.log('BrowserUIManager: Initializing UI components', null, 2);\n\n        this.container = document.querySelector(containerSelector);\n\n        if (!this.container) {\n            Debug.error('BrowserUIManager: Container element not found', null, 2);\n            return false;\n        }\n\n        // Change the order of generation - create diff container first\n        this.generateDiffContainer();\n        this.generateThemeSwitcher();\n        this.generateThemeSelector();\n        this.generateMergeControls();\n\n        Debug.log('BrowserUIManager: UI components generated', null, 2);\n        return true;\n    }\n\n    /**\n     * Generate theme switcher UI\n     */\n    generateThemeSwitcher() {\n        Debug.log('BrowserUIManager: Generating theme switcher', null, 3);\n\n        // Get the ID without the # prefix for createElement\n        const themeSwitcherId = Selectors.THEME.SWITCHER.name();\n        const themeLoadingId = Selectors.THEME.LOADING_INDICATOR.name();\n        const themeToggleId = Selectors.THEME.TOGGLE.name();\n\n        // Check if theme switcher already exists and if it's still valid to reuse\n        let themeSwitcher = document.getElementById(themeSwitcherId);\n\n        if (themeSwitcher) {\n            // Verify that the theme switcher is in a proper context (not orphaned)\n            // and that the diff UI is being displayed (not in \"identical files\" mode)\n            const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n\n            if (diffContainer || this.container.contains(themeSwitcher)) {\n                Debug.log('BrowserUIManager: Reusing existing theme switcher', themeSwitcherId, 2);\n                // Store reference to existing element\n                this.elements.themeSwitcher = themeSwitcher;\n\n                // Ensure it's properly positioned in the container\n                if (themeSwitcher.parentNode !== this.container) {\n                    this.container.appendChild(themeSwitcher);\n                }\n\n                // Make sure it's visible and properly styled - but don't force display here\n                // as it will be controlled by showThemeElements()/hideThemeElements()\n                themeSwitcher.style.position = 'relative';\n                return;\n            } else {\n                // Theme switcher exists but context is invalid, remove it and create new one\n                Debug.log('BrowserUIManager: Removing orphaned theme switcher', themeSwitcherId, 2);\n                themeSwitcher.remove();\n                themeSwitcher = null;\n            }\n        }\n\n        // Create new theme switcher element\n        Debug.log('BrowserUIManager: Creating new theme switcher', themeSwitcherId, 2);\n        themeSwitcher = document.createElement('div');\n        themeSwitcher.id = themeSwitcherId;\n        themeSwitcher.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n        themeSwitcher.style.cssText = 'display: none !important; position: relative;';\n\n        // Create theme switcher wrapper\n        const switcherWrapper = document.createElement('div');\n        switcherWrapper.className = Selectors.THEME_SWITCHER.WRAPPER.name();\n\n        // Get SVG icons for light/dark mode\n        const sunIcon = DOMUtils.getIconHtml('sun', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n        const moonIcon = DOMUtils.getIconHtml('moon', { classes: Selectors.UTILITY.MARGIN_START_2.name() });\n\n        // Create theme switcher content with toggle\n        switcherWrapper.innerHTML = `\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_END_2.name()}\">${sunIcon}</span>\n            <label class=\"${Selectors.THEME_SWITCHER.CONTROL.name()}\" for=\"${themeToggleId}\">\n                <input type=\"checkbox\" id=\"${themeToggleId}\" checked>\n                <span class=\"${Selectors.THEME_SWITCHER.SLIDER.name()} ${Selectors.THEME_SWITCHER.SLIDER_ROUND.name()}\"></span>\n            </label>\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_START_2.name()} \">${moonIcon}</span>\n        `;\n\n        // Append elements to theme switcher\n        themeSwitcher.appendChild(switcherWrapper);\n\n        // Create a separate container for the loader outside the theme switcher hierarchy\n        const loadingContainer = document.createElement('div');\n        loadingContainer.id = themeLoadingId;\n        loadingContainer.style.display = 'none';\n        loadingContainer.style.position = 'absolute';\n        loadingContainer.style.zIndex = '1000';\n\n        // Append theme switcher to container\n        this.container.appendChild(themeSwitcher);\n\n        // Append loading container to body for proper positioning\n        document.body.appendChild(loadingContainer);\n\n        // Store reference\n        this.elements.themeSwitcher = themeSwitcher;\n        this.elements.themeLoadingContainer = loadingContainer;\n\n        // Watch for the vdm-diff__container to have 'loaded' class\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach(() => {\n                const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n                if (diffContainer && diffContainer.classList.contains('loaded')) {\n                    // If the container is loaded, make the theme switcher visible\n                    if (themeSwitcher) {\n                        themeSwitcher.style.cssText = 'display: flex !important; position: relative;';\n                    }\n                    // Disconnect the observer once we've made the change\n                    observer.disconnect();\n                }\n            });\n        });\n\n        // Start observing the container's parent element for child changes\n        const containerParent = this.container || document.body;\n        observer.observe(containerParent, {\n            subtree: true,\n            childList: true,\n            attributes: true,\n            attributeFilter: ['class']\n        });\n    }\n\n    /**\n     * Generate theme selector UI\n     * @returns {Object|null} The theme selector container and select element, or null if creation failed\n     */\n    generateThemeSelector() {\n        Debug.log('BrowserUIManager: Generating theme selector', null, 3);\n\n        // Get the ID without the # prefix for createElement\n        const themeSelectorId = Selectors.THEME.SELECTOR.name();\n        const themeSwitcherId = Selectors.THEME.SWITCHER.name();\n\n        // Check if theme selector already exists and if it's still valid to reuse\n        let existingSelector = document.getElementById(themeSelectorId);\n        let selectorContainer = null;\n\n        if (existingSelector) {\n            selectorContainer = existingSelector.parentNode;\n            // Verify that the theme selector is in a proper context (not orphaned)\n            const themeSwitcher = document.getElementById(themeSwitcherId);\n\n            if (themeSwitcher && themeSwitcher.contains(selectorContainer)) {\n                Debug.log('BrowserUIManager: Reusing existing theme selector', themeSelectorId, 2);\n                // Store reference to existing elements\n                this.elements.themeSelector = existingSelector;\n                this.elements.themeSelectorContainer = selectorContainer;\n                return { container: selectorContainer, selectElement: existingSelector };\n            } else {\n                // Theme selector exists but context is invalid, remove it and create new one\n                Debug.log('BrowserUIManager: Removing orphaned theme selector', themeSelectorId, 2);\n                if (selectorContainer && selectorContainer.parentNode) {\n                    selectorContainer.parentNode.removeChild(selectorContainer);\n                }\n                existingSelector = null;\n                selectorContainer = null;\n            }\n        }\n\n        // Get theme switcher container - theme selector must be inside it\n        const themeSwitcherContainer = document.getElementById(themeSwitcherId);\n        if (!themeSwitcherContainer) {\n            Debug.warn('BrowserUIManager: No theme switcher container found for theme selector', null, 2);\n            return null;\n        }\n\n        // Create new theme selector container and element\n        Debug.log('BrowserUIManager: Creating new theme selector', themeSelectorId, 2);\n\n        // Create the container using utility classes\n        selectorContainer = document.createElement('div');\n        selectorContainer.className = `${Selectors.THEME_SELECTOR.WRAPPER.name()} ${Selectors.UTILITY.MARGIN_END_3.name()}`;\n\n        // Create select element\n        const selectElement = document.createElement('select');\n        selectElement.id = themeSelectorId;\n        selectElement.className = `${Selectors.UTILITY.FORM_SELECT.name()} ${Selectors.UTILITY.FORM_SELECT.name()}`;\n\n        // Append select to container\n        selectorContainer.appendChild(selectElement);\n\n        // Insert the selector container at the beginning of the theme switcher\n        themeSwitcherContainer.insertBefore(selectorContainer, themeSwitcherContainer.firstChild);\n\n        // Store references\n        this.elements.themeSelector = selectElement;\n        this.elements.themeSelectorContainer = selectorContainer;\n\n        Debug.log('BrowserUIManager: Theme selector created and added to DOM', null, 2);\n        return { container: selectorContainer, selectElement: selectElement };\n    }\n\n    /**\n     * Generate diff container UI\n     */\n    generateDiffContainer() {\n        Debug.log('BrowserUIManager: Generating diff container', null, 3);\n\n        // Get IDs without the # prefix for createElement\n        const diffContainerId = Selectors.DIFF.CONTAINER.name();\n        const viewerId = Selectors.DIFF.VIEWER.name();\n\n        // Create diff container\n        const diffContainer = document.createElement('div');\n        diffContainer.id = diffContainerId;\n\n        // Create viewer element\n        const viewerElement = document.createElement('div');\n        viewerElement.id = viewerId;\n        viewerElement.className = Selectors.UTILITY.MARGIN_TOP_2.name();\n        viewerElement.style.display = 'none';\n\n        // Set up a mutation observer to watch for display changes on the viewer element\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.type === 'attributes' &&\n                    mutation.attributeName === 'style' &&\n                    viewerElement.style.display !== 'none') {\n                    // If viewer becomes visible, show the theme switcher\n                    if (this.elements.themeSwitcher) {\n                        this.elements.themeSwitcher.style.display = 'flex';\n                    }\n                }\n            });\n        });\n\n        // Start observing the viewer element for style changes\n        observer.observe(viewerElement, { attributes: true });\n\n        // Append elements to diff container\n        diffContainer.appendChild(viewerElement);\n\n        // Append diff container to container\n        this.container.appendChild(diffContainer);\n\n        // Store reference and log creation\n        this.elements.diffContainer = diffContainer;\n\n        // Verify the element was created\n        const createdViewer = document.getElementById(viewerId);\n        Debug.log(`BrowserUIManager: Viewer element (${viewerId}) created successfully: ${!!createdViewer}`, null, 3);\n    }\n\n    /**\n     * Generate merge controls UI using translations from DiffViewer\n     */\n    generateMergeControls() {\n        Debug.log('BrowserUIManager: Generating merge controls structure only', null, 3);\n\n        // Get translations from options\n        const translations = this.getTranslations();\n\n        // Get IDs without the # prefix for createElement\n        const previewButtonId = Selectors.MERGE.BUTTON_PREVIEW.name();\n        const toggleButtonId = Selectors.MERGE.DESTINATION_TOGGLE.name();\n        const toggleIconId = Selectors.MERGE.TOGGLE_ICON.name();\n        const toggleTextId = Selectors.MERGE.TOGGLE_TEXT.name();\n        const dropdownId = Selectors.MERGE.DESTINATION_DROPDOWN.name();\n        const applyButtonId = Selectors.MERGE.BUTTON_APPLY.name();\n\n        // Create merge controls container\n        const mergeControls = document.createElement('div');\n        mergeControls.className = `${Selectors.MERGE.CONTROLS_ACTIONS.name()} ${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.MARGIN_Y_2.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n\n        // Create preview button section\n        const previewSection = document.createElement('div');\n\n        const previewButton = document.createElement('button');\n        previewButton.id = previewButtonId;\n        previewButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_INFO.name()}`;\n        previewButton.type = 'button';\n        previewButton.innerHTML = `${DOMUtils.getIconHtml('eye', { classes: Selectors.UTILITY.MARGIN_END_2.name() })}${translations.preview || 'Preview'}`;\n\n        previewSection.appendChild(previewButton);\n\n        // Create merge controls section\n        const mergeSection = document.createElement('div');\n        mergeSection.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()}`;\n\n        // Create a group for toggle button and dropdown - using input-group styling approach\n        const toggleGroup = document.createElement('div');\n        toggleGroup.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_STRETCH.name()} ${Selectors.UTILITY.MARGIN_END_3.name()}`;\n        // Add class for styling instead of inline style\n        toggleGroup.classList.add('vdm-input-group');\n\n        // Create destination toggle button\n        const toggleButton = document.createElement('button');\n        toggleButton.id = toggleButtonId;\n        toggleButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_FLAT.name()} vdm-input-group__prepend`;\n        toggleButton.type = 'button'; // Explicitly set type to button\n\n        const toggleIcon = document.createElement('span');\n        toggleIcon.id = toggleIconId;\n        toggleIcon.innerHTML = DOMUtils.getIconHtml('plus-circle', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n\n        const toggleText = document.createElement('span');\n        toggleText.id = toggleTextId;\n        toggleText.setAttribute('title', translations.saveToOriginalTooltip || 'Replace the current file with merged content');\n        toggleText.textContent = translations.saveToOriginal || 'Save to original';\n\n        toggleButton.appendChild(toggleIcon);\n        toggleButton.appendChild(toggleText);\n\n        // Create empty destination dropdown - IMPORTANT CHANGE: No options added\n        const dropdown = document.createElement('select');\n        dropdown.id = dropdownId;\n        dropdown.className = `${Selectors.UTILITY.FORM_SELECT.name()} vdm-input-group__append vdm-select-auto-width`;\n        // No options are added here - This will be handled by MergeUIController\n\n        // Add toggle button and dropdown to the toggle group with no spacing between them\n        toggleGroup.appendChild(toggleButton);\n        toggleGroup.appendChild(dropdown);\n\n        // Create apply merge button\n        const applyButton = document.createElement('button');\n        applyButton.id = applyButtonId;\n        applyButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()} vdm-nowrap`;\n        applyButton.type = 'button';\n        applyButton.innerHTML = (translations.applyMerge || 'Apply Merge') + ` ${DOMUtils.getIconHtml('file-circle-plus', { classes: Selectors.UTILITY.MARGIN_START_2.name() })}`;\n        applyButton.style.whiteSpace = 'nowrap';\n        applyButton.style.display = 'inline-flex';\n        applyButton.style.alignItems = 'center';\n\n        // Append toggle group and apply button to merge section\n        mergeSection.appendChild(toggleGroup);\n        mergeSection.appendChild(applyButton);\n\n        // Append sections to merge controls\n        mergeControls.appendChild(previewSection);\n        mergeControls.appendChild(mergeSection);\n\n        // Append merge controls to container\n        this.container.appendChild(mergeControls);\n\n        // Store reference\n        this.elements.mergeControls = mergeControls;\n\n        Debug.log('BrowserUIManager: Created empty merge controls structure (options will be populated by MergeUIController)', null, 2);\n    }\n\n    /**\n     * Show theme loading indicator using the LoaderManager\n     */\n    showThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        const themeSwitcher = this.elements.themeSwitcher;\n\n        if (loadingContainer && themeSwitcher) {\n            // Get the translated message\n            const message = TranslationManager.getInstance().get('loadingTheme', 'Loading theme...');\n\n            // Use proper CSS classes for styling\n            loadingContainer.innerHTML = `\n                <div class=\"vdm-theme__loading-spinner\"></div>\n                <span>${message}</span>\n            `;\n\n            // Add styling for the translucid background and rounded corners\n            loadingContainer.className = 'vdm-theme__loading-indicator';\n\n            // Get the position of the theme switcher\n            const rect = themeSwitcher.getBoundingClientRect();\n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n            // Position the loader just above the theme switcher\n            loadingContainer.style.top = (rect.top + scrollTop - 40) + 'px';\n\n            // Make the loader visible\n            loadingContainer.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Hide theme loading indicator\n     */\n    hideThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        if (loadingContainer) {\n            loadingContainer.style.display = 'none';\n        }\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        Debug.log('BrowserUIManager: Destroying UI components', null, 2);\n\n        // Hide any active theme loader\n        this.hideThemeLoading();\n\n        // Remove generated elements (except theme switcher which should be preserved across instances)\n        // Note: Theme switcher is preserved by FileBrowserManager.clearUI() to maintain user experience\n        // if (this.elements.themeSwitcher && this.elements.themeSwitcher.parentNode) {\n        //     this.elements.themeSwitcher.parentNode.removeChild(this.elements.themeSwitcher);\n        // }\n\n        if (this.elements.diffContainer && this.elements.diffContainer.parentNode) {\n            this.elements.diffContainer.parentNode.removeChild(this.elements.diffContainer);\n        }\n\n        if (this.elements.mergeControls && this.elements.mergeControls.parentNode) {\n            this.elements.mergeControls.parentNode.removeChild(this.elements.mergeControls);\n        }\n\n        // Reset references but keep theme switcher and theme selector references if they still exist in DOM\n        const existingThemeSwitcher = document.getElementById(Selectors.THEME.SWITCHER.name());\n        const existingThemeSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        const existingThemeSelectorContainer = existingThemeSelector ? existingThemeSelector.parentNode : null;\n\n        this.elements = {\n            themeSwitcher: existingThemeSwitcher || null,  // Keep reference if still in DOM\n            themeSelector: existingThemeSelector || null,  // Keep theme selector reference too\n            themeSelectorContainer: existingThemeSelectorContainer || null,  // Keep container reference\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Clear DiffViewer reference\n        this.diffViewer = null;\n\n        Debug.log('BrowserUIManager: UI components destroyed', null, 2);\n    }\n\n    /**\n     * Hide theme UI elements when no diff is being displayed (identical files)\n     */\n    hideThemeElements() {\n        Debug.log('BrowserUIManager: Hiding theme elements for identical content', null, 2);\n\n        if (this.elements.themeSwitcher) {\n            // Use important to ensure hiding works\n            this.elements.themeSwitcher.style.cssText = 'display: none !important; position: relative;';\n            Debug.log('BrowserUIManager: Hidden theme switcher', this.elements.themeSwitcher.id, 2);\n        }\n\n        // Also hide any standalone theme selector\n        const themeSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        if (themeSelector) {\n            themeSelector.style.display = 'none';\n            Debug.log('BrowserUIManager: Hidden standalone theme selector', themeSelector.id, 2);\n        }\n    }\n\n    /**\n     * Show theme UI elements when diff is being displayed\n     */\n    showThemeElements() {\n        Debug.log('BrowserUIManager: Showing theme elements for diff content', null, 2);\n\n        if (this.elements.themeSwitcher) {\n            // Use important to override the initial !important hiding\n            this.elements.themeSwitcher.style.cssText = 'display: flex !important; position: relative;';\n            Debug.log('BrowserUIManager: Shown theme switcher', this.elements.themeSwitcher.id, 2);\n        }\n\n        // Also show any standalone theme selector\n        const themeSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        if (themeSelector) {\n            themeSelector.style.display = 'block';\n            Debug.log('BrowserUIManager: Shown standalone theme selector', themeSelector.id, 2);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Manages icon marker creation and positioning\n */\nexport class IconMarkerManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n    }\n\n    /**\n     * Initialize icon markers with proper scroll synchronization\n     */\n    initializeIconMarkers() {\n        // Measure actual cell height for accurate positioning\n        const cellHeight = this._calculateCellHeight();\n        document.documentElement.style.setProperty('--cell-height', `${cellHeight}px`);\n\n        // Process each diff pane\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        panes.forEach(pane => {\n            this._setupIconColumn(pane);\n        });\n\n        // Use a dedicated method to handle all height updates\n        this._updateIconColumnHeights();\n\n        // Set up future height updates for window resizing\n        this._setupIconHeightUpdater();\n    }\n\n    /**\n     * Set up icon column for a pane\n     * @private\n     */\n    _setupIconColumn(pane) {\n        // Get the content container (scrollable area)\n        const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        if (!content) return;\n\n        // Get code table wrapper to match height\n        const codeTableWrapper = content.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n        if (!codeTableWrapper) {\n            Debug.warn('IconMarkerManager: Code table wrapper not found', null, 2);\n            return;\n        }\n\n        // Create or get icon column\n        let iconColumn = pane.querySelector(`:scope > ${Selectors.ICONS.COLUMN}`);\n        if (!iconColumn) {\n            iconColumn = document.createElement('div');\n            iconColumn.className = Selectors.ICONS.COLUMN.name();\n            pane.appendChild(iconColumn);\n        }\n\n        // Get all cells with chunk IDs\n        const chunkCells = content.querySelectorAll(\n            `${Selectors.DIFF.LINE_CONTENT}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_PLACEHOLDER}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_CONTENT_EMPTY}[data-chunk-id]:not([data-chunk-id=\"\"])`\n        );\n\n        // Organize cells by chunk ID\n        const chunkGroups = {};\n        chunkCells.forEach(cell => {\n            const chunkId = cell.dataset.chunkId;\n            if (!chunkGroups[chunkId]) {\n                chunkGroups[chunkId] = [];\n            }\n            chunkGroups[chunkId].push(cell);\n        });\n\n        // Process only the first cell of each chunk\n        Object.keys(chunkGroups).forEach(chunkId => {\n            // Sort by line number\n            chunkGroups[chunkId].sort((a, b) => {\n                const aLineNum = parseInt(a.dataset.lineId.split('-').pop(), 10);\n                const bLineNum = parseInt(b.dataset.lineId.split('-').pop(), 10);\n                return aLineNum - bLineNum;\n            });\n\n            // Get the first cell in the sorted group\n            const firstCell = chunkGroups[chunkId][0];\n\n            if (firstCell) {\n                this._createIconMarker(firstCell, iconColumn);\n            }\n        });\n\n        // Store table height for later use\n        if (codeTableWrapper) {\n            const tableHeight = codeTableWrapper.scrollHeight;\n            pane.dataset.tableHeight = tableHeight;\n        }\n\n        // Set up scroll synchronization\n        content.addEventListener('scroll', () => {\n            // Sync vertical scroll position with requestAnimationFrame\n            requestAnimationFrame(() => {\n                iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n            });\n\n            // Handle horizontal scroll state\n            if (content.scrollLeft > 0) {\n                pane.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                pane.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }, { passive: true });\n\n        // Initial position\n        iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n    }\n\n    /**\n     * Create a single icon marker for a cell\n     * @private\n     */\n    _createIconMarker(cell, iconColumn) {\n        const lineId = cell.dataset.lineId;\n        if (!lineId) return;\n\n        // Check if marker already exists\n        let marker = iconColumn.querySelector(`${Selectors.ICONS.MARKER}[data-line-id=\"${lineId}\"]`);\n\n        // Create new marker only if it doesn't exist\n        if (!marker) {\n            marker = document.createElement('div');\n            marker.className = Selectors.ICONS.MARKER.name();\n\n            // Add class for placeholder lines\n            if (cell.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name())) {\n                marker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n            }\n\n            // Use line ID for matching\n            marker.dataset.lineId = lineId;\n\n            // Set position index\n            const lineNumber = lineId.split('-').pop();\n            marker.dataset.iconIndex = lineNumber;\n            marker.style.setProperty('--icon-index', lineNumber);\n\n            // DO NOT transfer selection state classes - they will be managed by ChunkVisualStateManager\n            // Selection state and placeholder status are orthogonal concepts and should be managed separately\n\n            // Add to icon column\n            iconColumn.appendChild(marker);\n        }\n    }\n\n    /**\n     * Calculate cell height with maximum precision\n     * @private\n     * @returns {number} Precise cell height in pixels\n     */\n    _calculateCellHeight() {\n        // Get multiple line number cells for better accuracy\n        const lineNumberCells = this.diffViewer.container.querySelectorAll(Selectors.CODE.LINE_NUMBER);\n\n        if (!lineNumberCells || lineNumberCells.length === 0) {\n            Debug.log('IconMarkerManager: No line number cells found, using default height', null, 2);\n            return 20.5; // Fallback height\n        }\n\n        // Take the median height from first few cells (more reliable than just the first)\n        const heights = [];\n        const sampleSize = Math.min(5, lineNumberCells.length);\n\n        for (let i = 0; i < sampleSize; i++) {\n            heights.push(lineNumberCells[i].getBoundingClientRect().height);\n        }\n\n        // Sort heights and take the median (middle) value\n        heights.sort((a, b) => a - b);\n        const medianHeight = heights[Math.floor(heights.length / 2)];\n\n        Debug.log(`IconMarkerManager: Sampled heights: ${heights.join(', ')}, using median: ${medianHeight}px`, null, 3);\n\n        return medianHeight;\n    }\n\n    /**\n     * Set up height updater for window resizing\n     * @private\n     */\n    _setupIconHeightUpdater() {\n        // Debounce to avoid excessive updates\n        let resizeTimer;\n\n        // Add window resize listener\n        window.addEventListener('resize', () => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(() => {\n                this._updateIconColumnHeights();\n            }, 100);\n        });\n\n        // Initial update\n        this._updateIconColumnHeights();\n    }\n\n    /**\n     * Update all icon column heights\n     * @private\n     */\n    _updateIconColumnHeights() {\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n        const heights = {}; // Track heights for logging\n\n        panes.forEach(pane => {\n            const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n            const iconColumn = pane.querySelector(Selectors.ICONS.COLUMN);\n            const codeTableWrapper = content?.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n\n            if (iconColumn && codeTableWrapper) {\n                const tableHeight = codeTableWrapper.scrollHeight;\n                const currentHeight = parseInt(iconColumn.style.height) || 0;\n\n                // Only update if height changed significantly\n                if (Math.abs(currentHeight - tableHeight) > 5) {\n                    iconColumn.style.height = `${tableHeight}px`;\n                    heights[pane.dataset.side || 'pane'] = tableHeight;\n                }\n            }\n        });\n\n        // Log all height updates in one message\n        if (Object.keys(heights).length > 0) {\n            Debug.log('IconMarkerManager: Updated icon column heights:', heights, 3);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors'; // Add this import\n\n/**\n * Manages layout dimensions and responsive behavior\n */\nexport class LayoutManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.paneWidth = 0;\n    }\n\n    /**\n     * Initialize layout manager\n     */\n    initialize() {\n        // Initial pane width update\n        this.updatePaneWidth();\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this.updatePaneWidth();\n        });\n\n        // Set up mutation observer for content changes\n        this.setupWidthObserver();\n\n        Debug.log('LayoutManager: Initialized', null, 2);\n    }\n\n    /**\n     * Update pane width and CSS variables\n     */\n    updatePaneWidth() {\n        // Use DOMUtils.getElements for consistent element selection\n        const panes = DOMUtils.getElements(Selectors.DIFF.PANE, this.diffViewer.container);\n        if (!panes || panes.length === 0) return;\n\n        const pane = panes[0];\n        const newWidth = pane.clientWidth;\n\n        if (newWidth !== this.paneWidth) {\n            this.paneWidth = newWidth;\n\n            // Instead of direct DOM manipulation, use a helper method to set CSS variables\n            this.setCSSVariable('--diff-pane-width', `${this.paneWidth}px`);\n\n            Debug.log(`LayoutManager: Updated pane width: ${this.paneWidth}px`, null, 3);\n        }\n    }\n\n    /**\n     * Set CSS variable consistently\n     * @param {string} name - Variable name\n     * @param {string} value - Variable value\n     */\n    setCSSVariable(name, value) {\n        document.documentElement.style.setProperty(name, value);\n    }\n\n    /**\n     * Set up observer for content changes affecting width\n     */\n    setupWidthObserver() {\n        // Create mutation observer\n        const observer = new MutationObserver((mutations) => {\n            let shouldUpdate = false;\n\n            for (const mutation of mutations) {\n                if (mutation.type === 'childList' ||\n                    (mutation.type === 'attributes' &&\n                     (mutation.attributeName === 'style' || mutation.attributeName === 'class'))) {\n                    shouldUpdate = true;\n                    break;\n                }\n            }\n\n            if (shouldUpdate) {\n                this.updatePaneWidth();\n            }\n        });\n\n        // Start observing the container\n        observer.observe(this.diffViewer.container, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['style', 'class']\n        });\n\n        // Store for potential cleanup\n        this.observer = observer;\n\n        Debug.log('LayoutManager: Width observer setup complete', null, 2);\n    }\n\n    /**\n     * Clean up event handlers and observers\n     */\n    destroy() {\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = null;\n        }\n\n        Debug.log('LayoutManager: Destroyed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Handles scroll synchronization between panes\n */\nexport class ScrollSynchronizer {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.isSyncing = false;\n    }\n\n    /**\n     * Set up synchronized scrolling between panes\n     */\n    setupSynchronizedScrolling() {\n        // Find panes\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        if (panes.length !== 2) {\n            Debug.log(`ScrollSynchronizer: Could not find both diff panes. Found: ${panes.length}`, null, 2);\n            return;\n        }\n\n        const leftPane = panes[0];\n        const rightPane = panes[1];\n\n        // Get content elements\n        const leftContent = leftPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        const rightContent = rightPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n\n        if (!leftContent || !rightContent) {\n            Debug.log('ScrollSynchronizer: Could not find all required scrolling elements', null, 2);\n            return;\n        }\n\n        // Store references\n        this.leftContent = leftContent;\n        this.rightContent = rightContent;\n\n        // Sync both vertical AND horizontal scrolling between panes\n        leftContent.addEventListener('scroll', () => this._handleScroll(leftContent, rightContent), { passive: true });\n        rightContent.addEventListener('scroll', () => this._handleScroll(rightContent, leftContent), { passive: true });\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this._updateScrollState(leftContent);\n            this._updateScrollState(rightContent);\n        });\n\n        Debug.log('ScrollSynchronizer: Horizontal and vertical scroll synchronization set up', null, 2);\n    }\n\n    /**\n     * Handle scroll events\n     * @private\n     */\n    _handleScroll(sourceElement, targetElement) {\n        // Only update if not already syncing to avoid loops\n        if (!this.isSyncing) {\n            this.isSyncing = true;\n\n            // Sync vertical scrolling (top position)\n            targetElement.scrollTop = sourceElement.scrollTop;\n\n            // IMPORTANT: Also sync horizontal scrolling\n            targetElement.scrollLeft = sourceElement.scrollLeft;\n\n            this._updateScrollState(sourceElement);\n\n            // Reset syncing flag after a short delay\n            setTimeout(() => {\n                this.isSyncing = false;\n            }, 10);\n        }\n    }\n\n    /**\n     * Update CSS class based on scroll state\n     * @private\n     */\n    _updateScrollState(contentElement) {\n        const wasScrolled = contentElement.classList.contains(Selectors.STATUS.SCROLLED.name());\n        const isScrolled = contentElement.scrollLeft > 0;\n\n        // Only update if the state changed\n        if (wasScrolled !== isScrolled) {\n            if (isScrolled) {\n                contentElement.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                contentElement.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }\n    }\n}\n","/**\n * Centralized selectors for DOM elements\n * Using this object allows for easier maintenance and refactoring\n * All selectors include their prefix (# for IDs, . for classes)\n */\n\n// Import Debug for warning messages\nimport { Debug } from '../utils/Debug';\n\n// Create a proxy handler to intercept property access\nconst selectorHandler = {\n  get(target, prop) {\n    // Handle the name() method\n    if (prop === 'name') {\n      return function() {\n        if (target.startsWith('#') || target.startsWith('.')) {\n          return target.substring(1);\n        } else {\n          Debug.warn(`Selector '${target}' doesn't start with '.' or '#' but name() was called on it`);\n          return target;\n        }\n      };\n    }\n\n    // Add toString method to allow direct usage in DOM methods\n    if (prop === 'toString' || prop === Symbol.toPrimitive) {\n      return function() {\n        return String(target);\n      };\n    }\n\n    // Return the original property\n    return target[prop];\n  }\n};\n\n// Function to process all selectors with the proxy\nconst processSelectors = (obj) => {\n  const result = {};\n\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      result[key] = processSelectors(obj[key]);\n    } else if (typeof obj[key] === 'string') {\n      // Apply the proxy to each selector string\n      result[key] = new Proxy(Object(String(obj[key])), selectorHandler);\n    } else {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\n// Override utility selectors with values from window.diffConfig.ui if available\nconst getUtilitySelectors = () => {\n  // Default utility selectors\n  const defaultUtilitySelectors = {\n    BUTTON: '.vdm-btn',\n    BUTTON_PRIMARY: '.vdm-btn--primary',\n    BUTTON_SECONDARY: '.vdm-btn--secondary',\n    BUTTON_INFO: '.vdm-btn--info',\n    BUTTON_SUCCESS: '.vdm-btn--success',\n    BUTTON_WARNING: '.vdm-btn--warning',\n    BUTTON_DANGER: '.vdm-btn--danger',\n    BUTTON_FLAT: '.vdm-btn--flat',\n    BUTTON_SMALL: '.vdm-btn-sm',\n    BUTTON_EXTRA_SMALL: '.vdm-btn-xs',\n    BUTTON_LARGE: '.vdm-btn-lg',\n    ALERT: '.vdm-alert',\n    ALERT_PREFIX: '.vdm-alert--',\n    ALERT_INFO: '.vdm-alert--info',\n    ALERT_SUCCESS: '.vdm-alert--success',\n    ALERT_WARNING: '.vdm-alert--warning',\n    ALERT_DANGER: '.vdm-alert--danger',\n    FORM_SELECT: '.vdm-select',\n    FORM_SELECT_SM: '.vdm-select-sm',\n    FLEX: '.vdm-d-flex',\n    FLEX_COLUMN: '.vdm-flex-column',\n    JUSTIFY_CONTENT_BETWEEN: '.vdm-justify-content-between',\n    JUSTIFY_CONTENT_CENTER: '.vdm-justify-content-center',\n    ALIGN_ITEMS_CENTER: '.vdm-align-items-center',\n    ALIGN_ITEMS_STRETCH: '.vdm-align-items-stretch',\n    PADDING_2: '.vdm-p-2',\n    PADDING_3: '.vdm-p-3',\n    MARGIN_2: '.vdm-m-2',\n    MARGIN_TOP_2: '.vdm-mt-2',\n    MARGIN_BOTTOM_2: '.vdm-mb-2',\n    MARGIN_START_1: '.vdm-ms-1',\n    MARGIN_START_2: '.vdm-ms-2',\n    MARGIN_END_2: '.vdm-me-2',\n    MARGIN_END_3: '.vdm-me-3',\n    MARGIN_X_1: '.vdm-mx-1',\n    MARGIN_Y_2: '.vdm-my-2',\n    MARGIN_END_1: '.vdm-me-1'\n  };\n\n  // If window.diffConfig exists and has UI settings, override with those\n  if (window.diffConfig && window.diffConfig.ui) {\n    try {\n      // Map PHP ui settings to our selector format\n      if (window.diffConfig.ui.button) {\n        defaultUtilitySelectors.BUTTON = '.' + window.diffConfig.ui.button;\n      }\n      if (window.diffConfig.ui.buttonPrimary) {\n        defaultUtilitySelectors.BUTTON_PRIMARY = '.' + window.diffConfig.ui.buttonPrimary;\n      }\n      if (window.diffConfig.ui.buttonSecondary) {\n        defaultUtilitySelectors.BUTTON_SECONDARY = '.' + window.diffConfig.ui.buttonSecondary;\n      }\n      if (window.diffConfig.ui.buttonInfo) {\n        defaultUtilitySelectors.BUTTON_INFO = '.' + window.diffConfig.ui.buttonInfo;\n      }\n      if (window.diffConfig.ui.buttonSuccess) {\n        defaultUtilitySelectors.BUTTON_SUCCESS = '.' + window.diffConfig.ui.buttonSuccess;\n      }\n      if (window.diffConfig.ui.buttonWarning) {\n        defaultUtilitySelectors.BUTTON_WARNING = '.' + window.diffConfig.ui.buttonWarning;\n      }\n      if (window.diffConfig.ui.buttonDanger) {\n        defaultUtilitySelectors.BUTTON_DANGER = '.' + window.diffConfig.ui.buttonDanger;\n      }\n      if (window.diffConfig.ui.buttonFlat) {\n        defaultUtilitySelectors.BUTTON_FLAT = '.' + window.diffConfig.ui.buttonFlat;\n      }\n      if (window.diffConfig.ui.alert) {\n        defaultUtilitySelectors.ALERT = '.' + window.diffConfig.ui.alert;\n      }\n      if (window.diffConfig.ui.alertInfo) {\n        defaultUtilitySelectors.ALERT_INFO = '.' + window.diffConfig.ui.alertInfo;\n      }\n      if (window.diffConfig.ui.alertSuccess) {\n        defaultUtilitySelectors.ALERT_SUCCESS = '.' + window.diffConfig.ui.alertSuccess;\n      }\n      if (window.diffConfig.ui.alertWarning) {\n        defaultUtilitySelectors.ALERT_WARNING = '.' + window.diffConfig.ui.alertWarning;\n      }\n      if (window.diffConfig.ui.alertDanger) {\n        defaultUtilitySelectors.ALERT_DANGER = '.' + window.diffConfig.ui.alertDanger;\n      }\n\n      Debug.log('Overriding UI selectors with config values', window.diffConfig.ui, 2);\n    } catch (e) {\n      Debug.error('Error applying UI selector overrides from config', e, 1);\n    }\n  }\n\n  return defaultUtilitySelectors;\n};\n\nconst baseSelectors = {\n    // Code display\n    CODE: {\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_EMPTY: '.vdm-code__line--empty',\n        LINE_NUMBER: '.vdm-code__line-number',\n        TABLE: '.vdm-code__table'\n    },\n\n    // Container elements\n    CONTAINER: {\n        ROOT: '#vdm-container',\n        WRAPPER: '#vdm-container__wrapper'\n    },\n\n    // Copy functionality\n    COPY: {\n        BUTTON: '.vdm-code__copy-btn',\n        COPIED: '.vdm-code__copy--copied',\n        ICON: '.vdm-code__copy-icon',\n        MODAL: {\n            ACTIONS: '.vdm-modal__copy-actions',\n            BUTTON: '.vdm-modal__copy-btn',\n            DIALOG: '.vdm-modal__copy-dialog',\n            INSTRUCTIONS: '.vdm-modal__copy-instructions',\n            TEXTAREA: '.vdm-modal__copy-textarea-container',\n            TEXTAREA_ELEM: '.vdm-modal__copy-textarea'\n        },\n        PROCESSING: '.vdm-code__copy--processing',\n        TEXT: '.vdm-code__copy-text'\n    },\n\n    // Diff viewer elements\n    DIFF: {\n        CHECK_ALL_BTN: '.vdm-check-all-btn',\n        CHUNK: '.vdm-diff__chunk',\n        CHUNK_SELECTED: '.vdm-diff__chunk--selected',\n        CHUNK_UNSELECTED: '.vdm-diff__chunk--unselected',\n        CONTAINER: '#vdm-diff__container',\n        CONTENT_WRAPPER: '#vdm-diff__content-wrapper',\n        LINE_ADD: '.vdm-diff__line--add',\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_CONTENT_EMPTY: '.vdm-code__line-content--empty',\n        LINE_DELETE: '.vdm-diff__line--delete',\n        LINE_PLACEHOLDER: '.vdm-diff__line--placeholder',\n        LINE_REPLACE_LEFT: '.vdm-diff__line--replace-left',\n        LINE_REPLACE_RIGHT: '.vdm-diff__line--replace-right',\n        // LOADING selector removed - use Selectors.LOADER.MAIN instead\n        PANE: '.vdm-diff__pane',\n        PANE_CONTENT: '.vdm-diff__pane-content',\n        PANE_HEADER: '.vdm-pane-header',\n        PANE_LEFT: '#vdm-diff__pane--left',\n        PANE_RIGHT: '#vdm-diff__pane--right',\n        PANES_CONTAINER: '.vdm-diff__panes-container',\n        PLACEHOLDER: '.vdm-diff__placeholder',\n        TABLE_WRAPPER: '.vdm-diff__table-wrapper',\n        VIEWER: '#vdm-diff__viewer'\n    },\n\n    // Icon markers\n    ICONS: {\n        COLUMN: '.vdm-icon__column',\n        MARKER: '.vdm-icon__marker',\n        MARKER_PLACEHOLDER: '.vdm-icon__marker--placeholder',\n        SELECT: '.vdm-icon__select',\n        SELECT_LEFT: '.vdm-icon__select--left',\n        SELECT_RIGHT: '.vdm-icon__select--right'\n    },\n\n    // Loader elements\n    LOADER: {\n        ACTIVE: '.vdm-loader--active',\n        CONTAINER: '.vdm-loader__container',\n        FULLSCREEN: '.vdm-loader--fullscreen',\n        INDICATOR: '#vdm-loader__indicator',\n        INLINE: '.vdm-loader--inline',\n        MAIN: '#vdm-diff__loading', // Main application loader (previously DIFF.LOADING)\n        SPINNER: '.vdm-loader__spinner',\n        TEXT: '.vdm-loader__text',\n        WRAPPER: '.vdm-loader__wrapper'\n    },\n\n    // Merge controls\n    MERGE: {\n        BUTTON_APPLY: '#vdm-merge__button--apply',\n        BUTTON_PREVIEW: '#vdm-merge__button--preview',\n        CONFLICT_MODAL: '#vdm-merge__conflict-modal',\n        CONTROLS_ACTIONS: '.vdm-merge-controls__actions',\n        DESTINATION_DROPDOWN: '#vdm-merge__destination-dropdown',\n        DESTINATION_TOGGLE: '#vdm-merge__destination-toggle',\n        GET_MERGED_RESULT_BTN: '#vdm-merge__get-merged-result-btn',\n        MODAL: '#vdm-merge__modal',\n        PREVIEW_CONTENT: '#vdm-merge__preview-content',\n        PREVIEW_MODAL: '#vdm-merge__preview-modal',\n        TOGGLE_ICON: '#vdm-merge-controls__toggle-icon',\n        TOGGLE_TEXT: '#vdm-merge-controls__toggle-text'\n    },\n\n    // Modal dialogs\n    MODAL: {\n        BACKDROP: '#vdm-modal-backdrop',\n        CLOSE: '.vdm-modal__close',\n        CLOSE_BTN: '.vdm-modal__close', // Changed from ID to class\n        CODE_COPY: '#vdm-modal--code-copy',\n        CONFIRM: '#vdm-modal--confirm',\n        CONFIRMATION_CONTENT: '#vdm-modal__confirmation-content',\n        CONTAINER: '.vdm-modal',\n        CONTENT: '.vdm-modal__content',\n        CONTINUE_BTN: '#vdm-modal__continue-btn',\n        COPY_CONTENT: '#vdm-modal__copy-content',\n        FIXED_FOOTER: '.vdm-modal--fixed-footer',\n        FOOTER: '.vdm-modal__footer',\n        FULLSCREEN: '.vdm-modal--fullscreen',\n        HEADER: '.vdm-modal__header',\n        HEADER_FIXED: '.vdm-modal__header--fixed',\n        MERGE_BTN: '#vdm-modal__merge-btn',\n        MESSAGE: '#vdm-modal__message',\n        PREVIEW: '#vdm-modal--preview',\n        PREVIEW_CONTENT: '.vdm-modal__preview-content',\n        PREVIEW_CONTENT_ID: '#vdm-merge__preview-content',\n        PREVIEW_FILENAME: '#vdm-modal__preview-filename',\n        TITLE: '.vdm-modal__title'\n    },\n\n    // Navigation\n    NAVIGATION: {\n        CONTAINER: '.vdm-nav__controls',\n        COUNTER: '#vdm-nav__counter',\n        COUNTER_ELEMENT: '.vdm-navigator__counter',\n        HIGHLIGHT: '.vdm-highlight',\n        NAV_CHUNK: '.vdm-nav__chunk',\n        NEXT_BUTTON: '#vdm-nav__button--next',\n        PREV_BUTTON: '#vdm-nav__button--prev'\n    },\n\n    // Status indicators\n    STATUS: {\n        LOADED: '.vdm-status__loaded',\n        RESOLVED: '.vdm-status__resolved',\n        SCROLLED: '.vdm-status__scrolled-horizontally',\n        UNRESOLVED: '.vdm-status__unresolved'\n    },\n\n    // Theme and appearance\n    THEME: {\n        DARK: '.vdm-theme--dark',\n        LIGHT: '.vdm-theme--light',\n        LOADING_INDICATOR: '#vdm-theme__loading-indicator',\n        MODE_PREFIX: '.vdm-theme',\n        SELECTOR: '#vdm-theme__selector',\n        SWITCHER: '#vdm-theme-switcher',\n        TOGGLE: '#vdm-theme__toggle'\n    },\n\n    // Theme switcher components\n    THEME_SWITCHER: {\n        CONTROL: '.vdm-theme-switcher__control',\n        LABEL: '.vdm-theme-switcher__label',\n        SLIDER: '.vdm-theme-switcher__slider',\n        SLIDER_ROUND: '.vdm-theme-switcher__slider--round',\n        WRAPPER: '.vdm-theme-switcher__wrapper'\n    },\n\n    // Theme selector components\n    THEME_SELECTOR: {\n        WRAPPER: '.vdm-theme-selector__wrapper'\n    },\n\n    // Tooltips\n    TOOLTIP: {\n        ARROW: '.vdm-tooltip__arrow',\n        CONTAINER: '.vdm-tooltip',\n        CONTENT: '.vdm-tooltip__content'\n    },\n\n    // Utility classes - these can be overridden from PHP config\n    UTILITY: getUtilitySelectors()\n};\n\n// Process the selectors to add the name functionality\nconst Selectors = processSelectors(baseSelectors);\n\nexport default Selectors;\n","import Selectors from '../constants/Selectors';\n\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * AlertManager - Centralized utility for managing alert messages\n *\n * This singleton class provides methods to display and hide alert messages\n * throughout the application in a consistent manner. It supports different types\n * of alerts including info, success, warning, and danger.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * AlertManager class\n *\n * Provides methods to display and hide alert messages throughout the application\n */\nexport class AlertManager extends BaseSingleton {\n    /**\n     * Initialize the AlertManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.containerId = 'vdm-alert-container';\n        this.activeAlert = null;\n        this.timeoutId = null;\n\n        // Ensure the alert container exists and store it in this.container\n        this.container = this._ensureContainer();\n\n        // Mark as initialized\n        this.initialized = true;\n\n        Debug.log('AlertManager: Initialized', null, 2);\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {AlertManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new AlertManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Ensure the alert container exists in the DOM\n     * @private\n     */\n    _ensureContainer() {\n        let container = document.getElementById(this.containerId);\n\n        if (!container) {\n            container = document.createElement('div');\n            container.id = this.containerId;\n            container.className = 'vdm-alert-container';\n            container.style.position = 'fixed';\n            container.style.top = '20px';\n            container.style.left = '50%';\n            container.style.transform = 'translateX(-50%)';\n            container.style.zIndex = '9999';\n            container.style.width = 'auto';\n            container.style.maxWidth = '90%';\n\n            document.body.appendChild(container);\n            Debug.log('AlertManager: Created alert container', null, 2);\n        }\n\n        return container;\n    }\n\n    /**\n     * Create and show an alert\n     * @param {string} message - The alert message\n     * @param {string} type - The alert type: 'success', 'info', 'warning', 'error'\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} - The alert element\n     */\n    showAlert(message, type, options = {}) {\n        Debug.log('AlertManager.showAlert called with type', type, 2);\n        Debug.log('AlertManager.showAlert message', message, 3);\n\n        // Default options\n        const defaultOptions = {\n            timeout: 5000,      // Auto-dismiss after 5 seconds (0 = no auto-dismiss)\n            dismissable: true,  // Show close button\n            translate: true,    // Translate message if TranslationManager is available\n            className: '',      // Additional CSS classes\n            container: null,    // Container element (defaults to this.container)\n            targetElement: null, // Target element to place alert relative to\n            placement: 'before' // Placement relative to targetElement ('before' or 'after')\n        };\n\n        const mergedOptions = { ...defaultOptions, ...options };\n\n        // Only use the container if we're not placing relative to a target element\n        const useContainer = !mergedOptions.targetElement && (mergedOptions.container || this.container);\n\n        Debug.log('AlertManager placement options', {\n            hasTargetElement: !!mergedOptions.targetElement,\n            placement: mergedOptions.placement,\n            useContainer: !!useContainer\n        }, 3);\n\n        // Create alert element\n        const alertElement = document.createElement('div');\n\n        // Get the base alert class from Selectors if available\n        const baseAlertClass = Selectors.UTILITY.ALERT ?\n            Selectors.UTILITY.ALERT.toString().substring(1) : // Remove leading '.'\n            'vdm-alert';\n\n        // Start with base class\n        let alertClass = baseAlertClass;\n\n        // Type-specific class - use the proper format with double hyphens\n        if (type) {\n            // Use proper format from Selectors if available\n            const typeClass = type === 'info' && Selectors.UTILITY.ALERT_INFO ?\n                Selectors.UTILITY.ALERT_INFO.toString().substring(1) : // Remove leading '.'\n                `${baseAlertClass}--${type}`; // Use the proper double-hyphen format\n\n            alertClass += ` ${typeClass}`;\n        }\n\n        // Add any custom classes\n        if (mergedOptions.className) {\n            alertClass += ` ${mergedOptions.className}`;\n        }\n\n        alertElement.className = alertClass;\n        Debug.log('Alert classnames', alertElement.className, 3);\n        Debug.log('Alert selector values', {\n            selectorBase: Selectors.UTILITY.ALERT ? Selectors.UTILITY.ALERT.toString() : 'vdm-alert',\n            selectorType: type ? `${baseAlertClass}--${type}` : 'none'\n        }, 3);\n\n        // Translate message if needed\n        let finalMessage = message;\n        if (mergedOptions.translate && typeof TranslationManager !== 'undefined') {\n            const translationManager = TranslationManager.getInstance();\n            if (translationManager && typeof translationManager.get === 'function') {\n                finalMessage = translationManager.get(message, message);\n            }\n        }\n\n        // Set content\n        alertElement.innerHTML = finalMessage;\n\n        // Add close button if dismissable\n        if (mergedOptions.dismissable) {\n            const closeButton = document.createElement('button');\n            // Fix the close button class to match the CSS definition\n            closeButton.className = 'vdm-alert__close';\n            closeButton.innerHTML = '&times;';\n            closeButton.setAttribute('aria-label', 'Close');\n            closeButton.setAttribute('type', 'button');\n            alertElement.appendChild(closeButton);\n\n            // Add click event for close button\n            closeButton.addEventListener('click', () => this.hideAlert(alertElement));\n            Debug.log('Close button', closeButton ? 'found' : 'not found', 3);\n        }\n\n        // Add to container or place relative to target element\n        if (mergedOptions.targetElement) {\n            Debug.log('AlertManager: Placing alert relative to target element', {\n                target: mergedOptions.targetElement,\n                placement: mergedOptions.placement\n            }, 3);\n\n            if (mergedOptions.placement === 'before') {\n                // Insert before the target element\n                mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement);\n            } else if (mergedOptions.placement === 'after') {\n                // Insert after the target element\n                if (mergedOptions.targetElement.nextSibling) {\n                    mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement.nextSibling);\n                } else {\n                    mergedOptions.targetElement.parentNode.appendChild(alertElement);\n                }\n            }\n        } else if (useContainer) {\n            // Regular container append if no target element is specified\n            useContainer.appendChild(alertElement);\n            Debug.log('Alert appended to container', null, 3);\n        } else {\n            // Fallback to body if no container and no target element\n            document.body.appendChild(alertElement);\n            Debug.log('Alert appended to body', null, 3);\n        }\n\n        // Store reference to the active alert\n        this.activeAlert = alertElement;\n\n        // Set up auto-dismiss\n        if (mergedOptions.timeout > 0) {\n            this.timeoutId = setTimeout(() => {\n                this.hideAlert(alertElement);\n            }, mergedOptions.timeout);\n        }\n\n        Debug.log('Returning alert element', alertElement, 3);\n        return alertElement;\n    }\n\n    /**\n     * Hide the current alert if one exists\n     * @param {HTMLElement} alertElement - Optional specific alert element to hide\n     */\n    hideAlert(alertElement = null) {\n        // Clear any existing timeout\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n\n        // If a specific alert element is provided, remove it\n        if (alertElement?.parentNode) {\n            alertElement.parentNode.removeChild(alertElement);\n            Debug.log('AlertManager: Hiding specific alert', null, 3);\n\n            // If this was the active alert, clear the reference\n            if (this.activeAlert === alertElement) {\n                this.activeAlert = null;\n            }\n            return;\n        }\n\n        // Otherwise, remove the active alert if it exists\n        if (this.activeAlert?.parentNode) {\n            this.activeAlert.parentNode.removeChild(this.activeAlert);\n            this.activeAlert = null;\n            Debug.log('AlertManager: Hiding active alert', null, 3);\n        }\n    }\n\n    /**\n     * Show an info alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showInfo(message, options = {}) {\n        return this.showAlert(message, 'info', options);\n    }\n\n    /**\n     * Show a success alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showSuccess(message, options = {}) {\n        return this.showAlert(message, 'success', options);\n    }\n\n    /**\n     * Show a warning alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showWarning(message, options = {}) {\n        return this.showAlert(message, 'warning', options);\n    }\n\n    /**\n     * Show a danger/error alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showError(message, options = {}) {\n        return this.showAlert(message, 'danger', options);\n    }\n}\n\nexport default AlertManager;\n","/**\n * Base singleton implementation to standardize pattern across components\n */\nexport class BaseSingleton {\n    /**\n     * Get the singleton instance - must be implemented by subclasses\n     * @returns {BaseSingleton} The singleton instance\n     */\n    static getInstance() {\n        throw new Error('getInstance() must be implemented by subclass');\n    }\n\n    /**\n     * Check if this instance is already instantiated\n     * @protected\n     * @param {Object} instanceVar - The module-level instance variable\n     * @returns {boolean} True if this is the first initialization\n     */\n    _isFirstInstance(instanceVar) {\n        return !instanceVar;\n    }\n}\n","import Selectors from '../constants/Selectors';\nimport { Debug } from '../utils/Debug';\n\n// Cache for chunk elements to avoid repeated DOM queries\nconst _elementCache = {};\nconst _iconMarkerCache = {};\nconst _rowCache = {};\nlet _chunkIndex = null;\n\n// Cache statistics for diagnostics\nconst _cacheStats = {\n    elementCacheHits: 0,\n    elementCacheMisses: 0,\n    iconMarkerCacheHits: 0,\n    iconMarkerCacheMisses: 0,\n    rowCacheHits: 0,\n    rowCacheMisses: 0\n};\n\n/**\n * Utility functions specific to chunk operations\n */\nexport class ChunkUtils {\n    /**\n     * Clear the element cache\n     * Should be called when the DOM structure changes significantly\n     */\n    static clearCache() {\n        Object.keys(_elementCache).forEach(key => delete _elementCache[key]);\n        Object.keys(_iconMarkerCache).forEach(key => delete _iconMarkerCache[key]);\n        Object.keys(_rowCache).forEach(key => delete _rowCache[key]);\n        _chunkIndex = null;\n        Debug.log('ChunkUtils: Cache cleared', null, 2);\n    }\n\n    /**\n     * Get cache statistics\n     * @returns {Object} Current cache statistics\n     */\n    static getCacheStats() {\n        return {..._cacheStats};\n    }\n\n    /**\n     * Preload all chunk elements into cache\n     * This dramatically improves performance when working with large files\n     * @returns {Object} Index of all chunks and their elements\n     */\n    static preloadChunks() {\n        const startTime = performance.now();\n\n        // Clear existing cache first\n        ChunkUtils.clearCache();\n\n        // Initialize chunk index\n        _chunkIndex = {\n            byId: {},\n            byLineId: {},\n            allChunkIds: new Set()\n        };\n\n        // Get all chunk elements in one query\n        const allChunkElements = document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id]`);\n        Debug.log(`ChunkUtils: Preloading ${allChunkElements.length} chunk elements`, null, 2);\n\n        // Process all chunk elements\n        allChunkElements.forEach(element => {\n            const chunkId = element.getAttribute('data-chunk-id');\n            const side = element.getAttribute('data-side');\n            const lineId = element.getAttribute('data-line-id');\n\n            if (!chunkId) return;\n\n            // Add to chunk index\n            _chunkIndex.allChunkIds.add(chunkId);\n\n            // Initialize chunk in index if needed\n            if (!_chunkIndex.byId[chunkId]) {\n                _chunkIndex.byId[chunkId] = {\n                    elements: {\n                        all: [],\n                        left: [],\n                        right: []\n                    },\n                    lineIds: new Set()\n                };\n            }\n\n            // Add element to appropriate collections\n            _chunkIndex.byId[chunkId].elements.all.push(element);\n            if (side === 'left') {\n                _chunkIndex.byId[chunkId].elements.left.push(element);\n            } else if (side === 'right') {\n                _chunkIndex.byId[chunkId].elements.right.push(element);\n            }\n\n            // Track line ID and add to line index\n            if (lineId) {\n                _chunkIndex.byId[chunkId].lineIds.add(lineId);\n\n                // Add to line index for quick lookup\n                _chunkIndex.byLineId[lineId] = {\n                    chunkId: chunkId,\n                    element: element\n                };\n\n                // Also cache the element's parent row\n                const row = element.closest('tr');\n                if (row) {\n                    _rowCache[element.dataset.lineId] = row;\n                }\n            }\n\n            // Add to element cache directly to avoid later queries\n            // 1. All elements for chunk\n            const allCacheKey = `${chunkId}:both`;\n            if (!_elementCache[allCacheKey]) {\n                _elementCache[allCacheKey] = [];\n            }\n            _elementCache[allCacheKey].push(element);\n\n            // 2. Side-specific elements\n            if (side) {\n                const sideCacheKey = `${chunkId}:${side}`;\n                if (!_elementCache[sideCacheKey]) {\n                    _elementCache[sideCacheKey] = [];\n                }\n                _elementCache[sideCacheKey].push(element);\n            }\n        });\n\n        // Preload all icon markers\n        const allIconMarkers = document.querySelectorAll(`${Selectors.ICONS.MARKER}[data-line-id]`);\n        Debug.log(`ChunkUtils: Preloading ${allIconMarkers.length} icon markers`, null, 2);\n\n        allIconMarkers.forEach(marker => {\n            const lineId = marker.getAttribute('data-line-id');\n            if (lineId) {\n                _iconMarkerCache[lineId] = marker;\n\n                // Also associate with chunk if possible\n                if (_chunkIndex.byLineId[lineId]) {\n                    const chunkId = _chunkIndex.byLineId[lineId].chunkId;\n                    if (!_chunkIndex.byId[chunkId].iconMarkers) {\n                        _chunkIndex.byId[chunkId].iconMarkers = [];\n                    }\n                    _chunkIndex.byId[chunkId].iconMarkers.push(marker);\n                }\n            }\n        });\n\n        const duration = performance.now() - startTime;\n        Debug.log(`ChunkUtils: Preloaded ${Object.keys(_chunkIndex.byId).length} chunks in ${duration.toFixed(2)}ms`, null, 2);\n\n        return _chunkIndex;\n    }\n\n    /**\n     * Get all chunk IDs in the document\n     * @returns {Array} Array of chunk IDs\n     */\n    static getAllChunkIds() {\n        // Ensure index is built\n        if (!_chunkIndex) {\n            ChunkUtils.preloadChunks();\n        }\n\n        return Array.from(_chunkIndex.allChunkIds);\n    }\n\n    /**\n     * Sort elements by line number\n     * @param {Array|NodeList} elements - Elements to sort\n     * @returns {Array} Sorted elements\n     */\n    static sortElementsByLineNumber(elements) {\n        return Array.from(elements).sort((a, b) => {\n            const aLineNum = parseInt(a.dataset.lineId?.split('-').pop() || '0', 10);\n            const bLineNum = parseInt(b.dataset.lineId?.split('-').pop() || '0', 10);\n            return aLineNum - bLineNum;\n        });\n    }\n\n    /**\n     * Find elements by chunk ID\n     * @param {string} chunkId - The chunk ID to find\n     * @param {string} side - Optional side ('left' or 'right')\n     * @returns {Array} Matching elements\n     */\n    static getChunkElements(chunkId, side = null) {\n        if (!chunkId) return [];\n\n        // Create cache key\n        const cacheKey = `${chunkId}:${side || 'both'}`;\n\n        // Use cached elements if available\n        if (_elementCache[cacheKey]) {\n            _cacheStats.elementCacheHits++;\n            return _elementCache[cacheKey];\n        }\n\n        _cacheStats.elementCacheMisses++;\n\n        // Check if we have the chunk index built\n        if (_chunkIndex && _chunkIndex.byId[chunkId]) {\n            let elements;\n            if (side === 'left') {\n                elements = _chunkIndex.byId[chunkId].elements.left;\n            } else if (side === 'right') {\n                elements = _chunkIndex.byId[chunkId].elements.right;\n            } else {\n                elements = _chunkIndex.byId[chunkId].elements.all;\n            }\n\n            // Cache the result\n            _elementCache[cacheKey] = elements;\n            return elements;\n        }\n\n        // Fall back to DOM queries if index not available\n        let elements;\n        if (side) {\n            elements = Array.from(document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id=\"${chunkId}\"][data-side=\"${side}\"]`));\n        } else {\n            elements = Array.from(document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id=\"${chunkId}\"]`));\n        }\n\n        // Cache the result\n        _elementCache[cacheKey] = elements;\n        return elements;\n    }\n\n    /**\n     * Get all icon markers for a chunk ID\n     * @param {string} chunkId - The chunk ID\n     * @returns {Array} Array of icon marker elements\n     */\n    static getChunkIconMarkers(chunkId) {\n        if (!chunkId) return [];\n\n        // Check if we have the chunk index built\n        if (_chunkIndex && _chunkIndex.byId[chunkId]) {\n            return _chunkIndex.byId[chunkId].iconMarkers || [];\n        }\n\n        // If not in index, collect markers by getting line IDs from chunk elements\n        const elements = ChunkUtils.getChunkElements(chunkId);\n        const markers = [];\n\n        elements.forEach(element => {\n            const lineId = element.dataset.lineId;\n            if (lineId) {\n                const marker = ChunkUtils.getIconMarker(lineId);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n        });\n\n        return markers;\n    }\n\n    /**\n     * Get icon markers by chunk ID and line ID\n     * @param {string} lineId - The line ID\n     * @returns {Element|null} Icon marker element or null\n     */\n    static getIconMarker(lineId) {\n        if (!lineId) return null;\n\n        // Use cached marker if available\n        if (_iconMarkerCache[lineId]) {\n            _cacheStats.iconMarkerCacheHits++;\n            return _iconMarkerCache[lineId];\n        }\n\n        _cacheStats.iconMarkerCacheMisses++;\n\n        // If we have the index, check there first\n        if (_chunkIndex && _chunkIndex.byLineId[lineId]) {\n            // Get associated chunk and find marker\n            const chunkId = _chunkIndex.byLineId[lineId].chunkId;\n            if (_chunkIndex.byId[chunkId].iconMarkers) {\n                // Find marker with matching line ID\n                const marker = _chunkIndex.byId[chunkId].iconMarkers.find(m =>\n                    m.getAttribute('data-line-id') === lineId);\n\n                if (marker) {\n                    _iconMarkerCache[lineId] = marker;\n                    return marker;\n                }\n            }\n        }\n\n        // Fall back to DOM query\n        const iconMarker = document.querySelector(`${Selectors.ICONS.MARKER}[data-line-id=\"${lineId}\"]`);\n\n        // Cache the result\n        if (iconMarker) {\n            _iconMarkerCache[lineId] = iconMarker;\n        }\n\n        return iconMarker;\n    }\n\n    /**\n     * Get parent row of an element\n     * @param {Element} element - The element\n     * @returns {Element|null} Parent row element or null\n     */\n    static getParentRow(element) {\n        if (!element) return null;\n\n        const lineId = element.dataset.lineId;\n\n        // Use cached row if available\n        if (lineId && _rowCache[lineId]) {\n            _cacheStats.rowCacheHits++;\n            return _rowCache[lineId];\n        }\n\n        _cacheStats.rowCacheMisses++;\n        const row = element.closest('tr');\n\n        // Cache the result if line ID is available\n        if (lineId && row) {\n            _rowCache[lineId] = row;\n        }\n\n        return row;\n    }\n\n    /**\n     * Generate file content from line objects\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated file content\n     */\n    static generateFileContent(lines) {\n        return lines\n            .filter(line => line.type === 'content')\n            .map(line => line.line)\n            .join('\\n');\n    }\n}\n","/**\n * Configuration management utilities\n */\nexport class ConfigUtils {\n    /**\n     * Recursively merge multiple configurations\n     * @param {...Object} configs - Configurations to merge in order of increasing precedence\n     * @returns {Object} Merged configuration\n     */\n    static mergeConfigurations(...configs) {\n        // Start with an empty object\n        const result = {};\n\n        // Process each config in order\n        for (const config of configs) {\n            if (!config || typeof config !== 'object') {\n                continue;\n            }\n\n            // Merge properties\n            for (const key in config) {\n                if (Object.prototype.hasOwnProperty.call(config, key)) {\n                    // If both values are objects, merge recursively\n                    if (\n                        typeof result[key] === 'object' &&\n                        result[key] !== null &&\n                        !Array.isArray(result[key]) &&\n                        typeof config[key] === 'object' &&\n                        config[key] !== null &&\n                        !Array.isArray(config[key])\n                    ) {\n                        result[key] = this.mergeConfigurations(result[key], config[key]);\n                    } else {\n                        // Otherwise just override\n                        result[key] = config[key];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Validate required configuration\n     * @param {Object} config - Configuration to validate\n     * @returns {Object} Validation result with isValid and error properties\n     */\n    static validateConfig(config) {\n        const result = {\n            isValid: true,\n            error: null\n        };\n\n        if (!config) {\n            result.isValid = false;\n            result.error = 'No configuration found - window.diffConfig is not defined';\n            return result;\n        }\n\n        if (!config.diffData) {\n            result.isValid = false;\n            result.error = 'No diff data in configuration';\n\n            // Create empty diff data structure to prevent errors\n            config.diffData = {\n                old: [],\n                new: [],\n                chunks: []\n            };\n\n            // Log additional information to help diagnose the issue\n            console.warn('ConfigUtils: Missing diffData in configuration', {\n                configKeys: Object.keys(config),\n                oldData: config.old ? 'present' : 'missing',\n                newData: config.new ? 'present' : 'missing'\n            });\n        } else if (!config.diffData.chunks) {\n            result.isValid = false;\n            result.error = 'Missing chunks in diff data';\n\n            // Initialize empty chunks array to prevent errors\n            config.diffData.chunks = [];\n\n            console.warn('ConfigUtils: Missing chunks in diffData', {\n                diffDataKeys: Object.keys(config.diffData)\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Get configuration summary for logging\n     * @param {Object} config - Configuration object\n     * @returns {Object} Summary of key configuration properties\n     */\n    static getConfigSummary(config) {\n        return {\n            debug: !!config?.debug,\n            chunks: Array.isArray(config?.diffData?.chunks) ?\n                config.diffData.chunks.length : 0\n        };\n    }\n\n    /**\n     * Extract file extension from filepath\n     * @param {string} filepath - Path to extract extension from\n     * @param {string} defaultExtension - Default extension if not found\n     * @returns {string} The extracted extension or default\n     */\n    static getFileExtension(filepath, defaultExtension = 'php') {\n        if (!filepath) return defaultExtension;\n        return filepath.split('.').pop() || defaultExtension;\n    }\n\n    /**\n     * Get stored theme preferences\n     * @param {Object} config - Configuration with default theme settings\n     * @returns {Object} Theme settings object\n     */\n    static getThemePreferences(config) {\n        return {\n            mode: localStorage.getItem('diffViewerTheme') ||\n                  config?.theme?.defaultMode ||\n                  'light',\n            family: localStorage.getItem('diffViewerThemeFamily') ||\n                    config?.theme?.defaultFamily ||\n                    'atom-one'\n        };\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { IconRegistry } from './IconRegistry';\nimport AlertManager from './AlertManager';\n\n// Cache for DOM queries\nconst elementCache = new Map();\n\n/**\n * Reusable DOM manipulation utilities\n */\nexport class DOMUtils {\n    /**\n     * Set up a button handler with proper cleanup\n     * @param {string} buttonId - Button element ID\n     * @param {Function} handlerFn - Event handler function\n     * @param {string} logName - Name for logging\n     * @returns {Object|null} Handler information or null if element not found\n     */\n    static setupButtonHandler(buttonId, handlerFn, logName = '') {\n        const button = document.getElementById(buttonId);\n        if (!button) {\n            Debug.warn(`DOMUtils: Button ${buttonId} not found`, null, 2);\n            return null;\n        }\n\n        const instanceId = Date.now();\n\n        // Clean up if needed\n        if (button._handlerId && button._handlerId !== instanceId) {\n            // Clone to remove all event listeners\n            const newBtn = button.cloneNode(true);\n            if (button.parentNode) {\n                button.parentNode.replaceChild(newBtn, button);\n            }\n            Debug.log(`DOMUtils: Cleaned up previous handler for ${logName || buttonId}`, null, 2);\n            handlerFn(newBtn);\n            newBtn._handlerId = instanceId;\n            return { element: newBtn, id: instanceId };\n        } else {\n            button._handlerId = instanceId;\n            handlerFn(button);\n            return { element: button, id: instanceId };\n        }\n    }\n\n    /**\n     * Get element by ID with error handling\n     * @param {string} id - Element ID\n     * @returns {Element|null} The found element or null\n     */\n    static getElement(id) {\n        if (!id) {\n            Debug.error('DOMUtils.getElement: Empty ID provided', null, 1);\n            return null;\n        }\n\n        // Check cache first\n        if (elementCache.has(id)) {\n            return elementCache.get(id);\n        }\n\n        // Try direct getElementById first\n        let element = document.getElementById(id);\n\n        // If not found and the id doesn't include a #, try with a selector\n        if (!element) {\n            try {\n                if (!id.includes('#') && !id.includes('.')) {\n                    // If just an ID without # prefix, try with # prefix\n                    element = document.querySelector('#' + id);\n                } else {\n                    // Try as selector\n                    element = document.querySelector(id);\n                }\n            } catch (e) {\n                Debug.error(`DOMUtils.getElement: Error with selector: ${e.message}`, null, 1);\n            }\n        }\n\n        if (!element) {\n            Debug.error(`DOMUtils.getElement: Element with ID '${id}' not found`, null, 1);\n        } else {\n            // Cache the found element\n            elementCache.set(id, element);\n        }\n\n        return element;\n    }\n\n    /**\n     * Update toggle button appearance\n     * @param {string} currentValue - Current toggle value\n     * @param {Object} elements - Object containing button, icon, and text elements\n     * @param {Object} options - Configuration options\n     */\n    static updateToggleButton(currentValue, elements, options) {\n        const { toggleBtn, toggleIcon, toggleText } = elements;\n        const {\n            firstOption, secondOption,\n            firstClass, secondClass,\n            firstText, secondText,\n            firstTooltip, secondTooltip\n        } = options;\n\n        if (!toggleBtn || !toggleIcon || !toggleText) {\n            Debug.warn('DOMUtils: Missing elements for toggle button update');\n            return;\n        }\n\n        Debug.log(`DOMUtils: Updating toggle button to ${currentValue}`, null, 2);\n\n        // Set the button class based on current value\n        if (currentValue === firstOption) {\n            toggleIcon.className = firstClass;\n            toggleText.textContent = firstText;\n            toggleBtn.title = firstTooltip || firstText;\n            toggleBtn.setAttribute('data-value', firstOption);\n        } else if (currentValue === secondOption) {\n            toggleIcon.className = secondClass;\n            toggleText.textContent = secondText;\n            toggleBtn.title = secondTooltip || secondText;\n            toggleBtn.setAttribute('data-value', secondOption);\n        } else {\n            Debug.warn(`DOMUtils: Invalid toggle value: ${currentValue}`);\n        }\n    }\n\n    /**\n     * Show a standardized message in a container\n     * @param {string} containerId - Container element ID\n     * @param {string} message - Message content\n     * @param {string} type - Message type: 'info', 'success', 'warning', 'danger'\n     * @param {Object} options - Additional options\n     * @returns {boolean} Success status\n     */\n    static showMessage(containerId, message, type = 'info', options = {}) {\n        const container = document.getElementById(containerId);\n        if (!container) {\n            Debug.warn(`DOMUtils: Container #${containerId} not found for message`, null, 2);\n            return false;\n        }\n\n        // Default options\n        const {\n            _iconName = null,     // Custom icon name (preserved for backwards compatibility)\n            className = 'mt-5',  // Additional CSS classes\n            elementId = '',      // ID for created element\n            keepExisting = false // Whether to append or replace content\n        } = options;\n\n        // Use AlertManager to create the alert\n        const alertManager = AlertManager.getInstance();\n\n        // Clear existing content unless we're keeping it\n        if (!keepExisting) {\n            container.innerHTML = '';\n        }\n\n        // Check if HAS_ICON exists in UTILITY and provide a fallback if it doesn't\n        let iconClass = '';\n        try {\n            if (Selectors.UTILITY && Selectors.UTILITY.HAS_ICON) {\n                iconClass = Selectors.UTILITY.HAS_ICON.name();\n            } else {\n                // Fallback if HAS_ICON is not defined\n                iconClass = 'vdm-has-icon';\n                Debug.log('DOMUtils: Using fallback icon class because Selectors.UTILITY.HAS_ICON is undefined', null, 2);\n            }\n        } catch (e) {\n            // Fallback if any error occurs\n            iconClass = 'vdm-has-icon';\n            Debug.warn('DOMUtils: Error getting icon class, using fallback', e, 2);\n        }\n\n        // Create the alert with AlertManager\n        const alertElement = alertManager.showAlert(message, type, {\n            timeout: 0, // Don't auto-dismiss\n            translate: false, // Don't translate the message\n            className: `${iconClass} ${className}`\n        });\n\n        // Set ID if specified\n        if (elementId) {\n            alertElement.id = elementId;\n        }\n\n        // Append to container\n        container.appendChild(alertElement);\n\n        return true;\n    }\n\n    /**\n     * Toggle element visibility\n     * @param {string} elementId - Element ID\n     * @param {boolean} visible - Whether element should be visible\n     * @param {string} displayMode - Display mode when visible\n     * @returns {boolean} Success status\n     */\n    static toggleVisibility(elementId, visible, displayMode = 'block') {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for visibility toggle`, null, 2);\n            return false;\n        }\n\n        element.style.display = visible ? displayMode : 'none';\n        return true;\n    }\n\n    /**\n     * Add or remove a class from an element\n     * @param {string} elementId - Element ID\n     * @param {string} className - Class name to toggle\n     * @param {boolean} add - Whether to add or remove the class\n     * @returns {boolean} Success status\n     */\n    static toggleClass(elementId, className, add = true) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for class toggle`, null, 2);\n            return false;\n        }\n\n        if (add) {\n            element.classList.add(className);\n        } else {\n            element.classList.remove(className);\n        }\n\n        return true;\n    }\n\n    /**\n     * Create an element with specified attributes\n     * @param {string} tagName - Element tag name\n     * @param {string|null} id - Element ID\n     * @param {string|Array} classes - CSS classes\n     * @param {Object} attributes - Additional attributes\n     * @returns {HTMLElement} Created element\n     */\n    static createElement(tagName = 'div', id = null, classes = [], attributes = {}) {\n        const element = document.createElement(tagName);\n\n        // Set ID if provided\n        if (id) {\n            element.id = id;\n        }\n\n        // Add classes - handle both arrays and space-separated strings\n        if (classes) {\n            let classList;\n            if (Array.isArray(classes)) {\n                classList = classes;\n            } else if (typeof classes === 'string') {\n                classList = classes.split(/\\s+/).filter(Boolean);\n            } else {\n                classList = [];\n            }\n\n            if (classList.length > 0) {\n                element.classList.add(...classList);\n            }\n        }\n\n        // Set attributes\n        Object.entries(attributes).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                element.setAttribute(key, value);\n            }\n        });\n\n        return element;\n    }\n\n    /**\n     * Create and append an element to a container\n     * @param {string} tagName - Element tag name\n     * @param {Element|string} container - Container element or ID\n     * @param {Object} options - Element options\n     * @returns {HTMLElement|null} Created element or null if container not found\n     */\n    static createAndAppendElement(tagName, container, options = {}) {\n        // Get container element if ID was provided\n        const containerElement = typeof container === 'string'\n            ? document.getElementById(container)\n            : container;\n\n        if (!containerElement) {\n            Debug.warn(`DOMUtils: Container not found for createAndAppendElement`, null, 2);\n            return null;\n        }\n\n        // Extract options\n        const { id = null, classes = [], attributes = {}, content = null } = options;\n\n        // Create element\n        const element = DOMUtils.createElement(tagName, id, classes, attributes);\n\n        // Set content if provided\n        if (content !== null) {\n            if (typeof content === 'string') {\n                element.innerHTML = content;\n            } else if (content instanceof Node) {\n                element.appendChild(content);\n            }\n        }\n\n        // Append to container\n        containerElement.appendChild(element);\n\n        return element;\n    }\n\n    /**\n     * Set element content safely\n     * @param {string} elementId - Element ID\n     * @param {string} content - HTML content\n     * @returns {boolean} Success status\n     */\n    static setContent(elementId, content) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for content update`, null, 2);\n            return false;\n        }\n\n        element.innerHTML = content;\n        return true;\n    }\n\n    /**\n     * Get elements by selector\n     * @param {string} selector - CSS selector\n     * @param {Element|Document|string} context - Search context or ID\n     * @returns {NodeList|null} Selected elements or null if context not found\n     */\n    static getElements(selector, context = document) {\n        // Get context element if ID was provided\n        const contextElement = typeof context === 'string'\n            ? document.getElementById(context)\n            : context;\n\n        if (!contextElement) {\n            Debug.warn(`DOMUtils: Context not found for selector: ${selector}`, null, 2);\n            return null;\n        }\n\n        return contextElement.querySelectorAll(selector);\n    }\n\n    /**\n     * Append HTML content to an element\n     * @param {string} elementId - Element ID\n     * @param {string} content - HTML content to append\n     * @returns {boolean} Success status\n     */\n    static appendContent(elementId, content) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for content append`, null, 2);\n            return false;\n        }\n\n        element.insertAdjacentHTML('beforeend', content);\n        return true;\n    }\n\n    /**\n     * Remove an element safely\n     * @param {string|Element} elementOrId - Element or element ID to remove\n     * @returns {boolean} Success status\n     */\n    static removeElement(elementOrId) {\n        const element = typeof elementOrId === 'string'\n            ? document.getElementById(elementOrId)\n            : element;\n\n        if (!element?.parentNode) {\n            Debug.warn(`DOMUtils: Element not found or has no parent for removal`, null, 2);\n            return false;\n        }\n\n        element.parentNode.removeChild(element);\n        return true;\n    }\n\n    /**\n     * Setup event handlers on elements matching a selector\n     * @param {string} selector - CSS selector to match elements\n     * @param {string} eventType - Event type (e.g., 'click', 'change')\n     * @param {function} handler - Event handler function\n     * @param {Object} options - Additional options\n     * @returns {number} Number of elements that received the handler\n     */\n    static setupEventHandlers(selector, eventType, handler, options = {}) {\n        const {\n            context = document,\n            removeExisting = false,\n            styles = null\n        } = options;\n\n        const elements = DOMUtils.getElements(selector, context);\n        if (!elements) return 0;\n\n        // Remove existing handlers if requested\n        if (removeExisting) {\n            elements.forEach(element => {\n                element.removeEventListener(eventType, handler);\n            });\n        }\n\n        // Add new handlers and apply styles\n        elements.forEach(element => {\n            element.addEventListener(eventType, handler);\n\n            // Apply styles if provided\n            if (styles) {\n                Object.entries(styles).forEach(([property, value]) => {\n                    element.style[property] = value;\n                });\n            }\n        });\n\n        return elements.length;\n    }\n\n    /**\n     * Create an icon element\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Icon options\n     * @returns {Element} SVG icon element\n     */\n    static createIcon(iconName, options = {}) {\n        return IconRegistry.createIcon(iconName, options);\n    }\n\n    /**\n     * Get icon HTML string\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Icon options\n     * @returns {string} SVG icon HTML\n     */\n    static getIconHtml(iconName, options = {}) {\n        return IconRegistry.getIcon(iconName, options);\n    }\n}\n","/**\n * Debug utility for the diff viewer\n * Provides centralized logging with configuration options\n */\n\n/* eslint-disable no-console */\n// Disable console warnings for this file only since this is the official logging utility\n\nclass DebugUtility {\n    constructor() {\n        this.enabled = false;\n        this.logHistory = [];\n        this.maxLogHistory = 100;\n        this.prefix = '[DiffViewer]';\n        this.logLevel = 1; // Default to only high-level logs\n    }\n\n    /**\n     * Initialize debug settings\n     * @param {boolean} enabled - Enable debug output\n     * @param {string} prefix - Prefix for all log messages\n     * @param {number} logLevel - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    initialize (enabled = false, prefix = '[DiffViewer]', logLevel = 1) {\n        // Prevent reinitialization with weaker settings if already properly configured\n        if (this.enabled && this.logLevel > 1 && !enabled) {\n            console.warn(`${this.prefix} Preventing debug reinitialization with weaker settings`, {\n                current: { enabled: this.enabled, level: this.logLevel },\n                attempted: { enabled, level: logLevel }\n            });\n            return;\n        }\n\n        this.enabled = enabled;\n        this.prefix = prefix;\n        this.logLevel = logLevel; // Don't tie logLevel to enabled state\n\n        console.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n        this.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n    }\n\n    /**\n     * Check if a message should be logged at the given level\n     * @param {number} level - The log level of the message\n     * @returns {boolean} - Whether the message should be logged\n     */\n    shouldLog(level = 1) {\n        // Use instance state as primary source of truth\n        // Only fall back to window.diffConfig if not explicitly initialized\n        const debugEnabled = this.enabled || (this.enabled === false && window.diffConfig?.debug);\n        return debugEnabled && level <= this.logLevel;\n    }\n\n    /**\n     * Log an informational message\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    log(message, data = null, level = 1) {\n        if (!this.shouldLog(level)) return;\n\n        if (data !== null) {\n            console.log(`${this.prefix} ${message}`, data);\n            this._addToHistory('log', [message, data], level);\n        } else {\n            console.log(`${this.prefix} ${message}`);\n            this._addToHistory('log', [message], level);\n        }\n    }\n\n    /**\n     * Log a warning message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    warn (message, data = null, level = 1) {\n        // Warnings are always shown regardless of debug setting\n        if (data !== null) {\n            console.warn(`${this.prefix} ${message}`, data);\n            this._addToHistory('warn', [message, data], level);\n        } else {\n            console.warn(`${this.prefix} ${message}`);\n            this._addToHistory('warn', [message], level);\n        }\n    }\n\n    /**\n     * Log an error message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    error(message, data = null, level = 1) {\n        // Errors are always shown regardless of debug setting\n        if (data !== null) {\n            console.error(`${this.prefix} ${message}`, data);\n            this._addToHistory('error', [message, data], level);\n        } else {\n            console.error(`${this.prefix} ${message}`);\n            this._addToHistory('error', [message], level);\n        }\n    }\n\n    /**\n     * Get debug log history\n     * @param {number} maxLevel - Maximum level to include (1=high-level only, 3=all)\n     * @returns {Array} Log history filtered by level\n     */\n    getLogHistory(maxLevel = this.logLevel) {\n        if (maxLevel >= this.logLevel) {\n            return [...this.logHistory];\n        }\n        return this.logHistory.filter(entry => entry.level <= maxLevel);\n    }\n\n    /**\n     * Clear debug log history\n     */\n    clearLogHistory() {\n        this.logHistory = [];\n        this.log('Log history cleared');\n    }\n\n    /**\n     * Add entry to log history\n     * @private\n     * @param {string} type - Log type (log, warn, error)\n     * @param {Array} args - Message arguments\n     * @param {number} level - Log level\n     */\n    _addToHistory(type, args, level) {\n        this.logHistory.push({\n            timestamp: new Date(),\n            type,\n            message: args,\n            level\n        });\n\n        // Prevent excessive memory usage\n        if (this.logHistory.length > this.maxLogHistory) {\n            this.logHistory.shift();\n        }\n    }\n}\n\n// Create singleton instance\nconst Debug = new DebugUtility();\n\n// Export the singleton\nexport { Debug };\n","/**\n * DiffConfigManager.js\n *\n * Singleton utility to centralize management of the diffConfig configuration object.\n * This provides a single source of truth for the diffConfig settings used throughout the application.\n */\n\nimport { Debug } from './Debug';\n\n/**\n * Manages the diffConfig configuration settings as a singleton\n */\nexport class DiffConfigManager {\n    /**\n     * Private instance - follows singleton pattern\n     * @type {DiffConfigManager}\n     * @private\n     */\n    static #instance = null;\n\n    /**\n     * Private constructor - use getInstance() instead\n     * @private\n     */\n    constructor() {\n        // Track if server config has been loaded to avoid multiple loads\n        this._serverConfigLoaded = false;\n\n        // Initialize window.diffConfig if it doesn't exist\n        if (typeof window !== 'undefined' && !window.diffConfig) {\n            Debug.log('DiffConfigManager: Initializing empty window.diffConfig', null, 2);\n            window.diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {}\n            };\n        } else if (typeof window !== 'undefined' && window.diffConfig) {\n            Debug.log('DiffConfigManager: Using existing window.diffConfig', window.diffConfig, 2);\n        }\n    }\n\n    /**\n     * Load configuration from server if needed\n     * @returns {Promise<void>}\n     */\n    async ensureServerConfigLoaded() {\n        // Only load server config once to avoid overriding runtime values\n        if (this._serverConfigLoaded) {\n            Debug.log('DiffConfigManager: Server config already loaded, skipping', null, 2);\n            return;\n        }\n\n        // Check if we already have a server-provided apiBaseUrl\n        if (typeof window !== 'undefined' && window.diffConfig?.apiBaseUrl) {\n            Debug.log('DiffConfigManager: Server config already loaded with apiBaseUrl', window.diffConfig.apiBaseUrl, 2);\n            this._serverConfigLoaded = true;\n            return;\n        }\n\n        try {\n            Debug.log('DiffConfigManager: Loading server configuration...', null, 2);\n\n            // Try to determine the API base URL from script location\n            let apiBaseUrl = '';\n            const scripts = document.querySelectorAll('script[src*=\"visual-diff-merge\"]');\n            if (scripts.length > 0) {\n                const scriptSrc = scripts[0].src;\n                const match = scriptSrc.match(/^(.+\\/visual-diff-merge[^\\/]*)\\//);\n                if (match) {\n                    apiBaseUrl = match[1] + '/api/';\n                }\n            }\n\n            if (!apiBaseUrl) {\n                Debug.log('DiffConfigManager: Could not determine API base URL from script location', null, 2);\n                return;\n            }\n\n            // Fetch configuration from server\n            const configResponse = await fetch(apiBaseUrl + 'endpoint-config.php');\n            if (configResponse.ok) {\n                const serverConfig = await configResponse.json();\n\n                // The endpoint returns the config directly, not nested in a 'javascript' property\n                if (serverConfig && typeof serverConfig === 'object') {\n                    Debug.log('DiffConfigManager: Loaded server configuration', serverConfig, 2);\n                    if (typeof window !== 'undefined') {\n                        // Preserve existing serverSaveEnabled if it's already set\n                        const existingServerSaveEnabled = window.diffConfig?.serverSaveEnabled;\n                        window.diffConfig = { ...(window.diffConfig || {}), ...serverConfig };\n\n                        // Don't override serverSaveEnabled if it was already explicitly set\n                        if (existingServerSaveEnabled !== undefined && !serverConfig.hasOwnProperty('serverSaveEnabled')) {\n                            window.diffConfig.serverSaveEnabled = existingServerSaveEnabled;\n                            Debug.log('DiffConfigManager: Preserved existing serverSaveEnabled', existingServerSaveEnabled, 2);\n                        }\n\n                        // Mark as loaded to prevent future loads\n                        this._serverConfigLoaded = true;\n                    }\n                }\n            } else {\n                Debug.warn('DiffConfigManager: Failed to load server configuration', configResponse.status, 1);\n            }\n        } catch (error) {\n            Debug.warn('DiffConfigManager: Error loading server configuration', error, 1);\n        } finally {\n            // Mark as loaded even if there was an error to prevent retries\n            this._serverConfigLoaded = true;\n        }\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {DiffConfigManager} The singleton instance\n     */\n    static getInstance() {\n        if (!DiffConfigManager.#instance) {\n            DiffConfigManager.#instance = new DiffConfigManager();\n        }\n        return DiffConfigManager.#instance;\n    }\n\n    /**\n     * Initialize with configuration\n     * @param {Object} config - The initial configuration\n     */\n    async initialize(config = {}) {\n        Debug.log('DiffConfigManager: Initializing with config', config, 2);\n\n        // Check if serverSaveEnabled is already set in window.diffConfig\n        const hasRuntimeServerSaveEnabled = typeof window !== 'undefined' &&\n            window.diffConfig &&\n            window.diffConfig.hasOwnProperty('serverSaveEnabled');\n\n        // Only load server config if we don't have runtime values already set\n        if (!hasRuntimeServerSaveEnabled) {\n            await this.ensureServerConfigLoaded();\n        } else {\n            Debug.log('DiffConfigManager: Skipping server config load - serverSaveEnabled already set',\n                window.diffConfig.serverSaveEnabled, 2);\n        }\n\n        // Then apply the provided config\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...(window.diffConfig || {}), ...config };\n        } else {\n            Debug.error('DiffConfigManager: Cannot initialize, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Get the current diffConfig (reference to window.diffConfig)\n     * @returns {Object} The current diffConfig\n     */\n    getDiffConfig() {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn('DiffConfigManager: window.diffConfig is not available', null, 1);\n            return {};\n        }\n        return window.diffConfig;\n    }\n\n    /**\n     * Set a new diffConfig, completely replacing the current one\n     * @param {Object} config - The new configuration to use\n     */\n    setDiffConfig(config = {}) {\n        Debug.log('DiffConfigManager: Setting new diffConfig', config, 2);\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...config };\n        } else {\n            Debug.error('DiffConfigManager: Cannot set config, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Reset the diffConfig to default values, possibly with new overrides\n     * @param {Object} overrides - Optional configuration overrides to apply after reset\n     */\n    reset(overrides = {}) {\n        Debug.log('DiffConfigManager: Resetting diffConfig with overrides', overrides, 2);\n        if (typeof window !== 'undefined') {\n            window.diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {},\n                ...overrides\n            };\n        } else {\n            Debug.error('DiffConfigManager: Cannot reset config, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Update part of the configuration\n     * @param {Object} partialConfig - The partial configuration to update\n     */\n    update(partialConfig = {}) {\n        Debug.log('DiffConfigManager: Updating diffConfig with', partialConfig, 3);\n\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn('DiffConfigManager: window.diffConfig not available for update', null, 1);\n            return;\n        }\n\n        // Check if the partialConfig has a nested 'config' property\n        if (partialConfig && partialConfig.config && typeof partialConfig.config === 'object') {\n            Debug.log('DiffConfigManager: Extracting nested config property', partialConfig.config, 3);\n            // Use the nested config object instead of the wrapper\n            window.diffConfig = this.#mergeDeep(window.diffConfig, partialConfig.config);\n        } else {\n            // Use the original object if no nested config property\n            window.diffConfig = this.#mergeDeep(window.diffConfig, partialConfig);\n        }\n    }\n\n    /**\n     * Set a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} value - The value to set\n     */\n    set(key, value) {\n        Debug.log(`DiffConfigManager: Setting ${key}`, value, 3);\n        if (typeof window !== 'undefined' && window.diffConfig) {\n            window.diffConfig[key] = value;\n        } else {\n            Debug.error(`DiffConfigManager: Cannot set ${key}, window.diffConfig not available`, null, 1);\n        }\n    }\n\n    /**\n     * Get a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} defaultValue - Default value if the key doesn't exist\n     * @returns {*} The configuration value\n     */\n    get(key, defaultValue = null) {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn(`DiffConfigManager: Cannot get ${key}, window.diffConfig not available`, null, 1);\n            return defaultValue;\n        }\n        return key in window.diffConfig ? window.diffConfig[key] : defaultValue;\n    }\n\n    /**\n     * Check if a configuration key exists\n     * @param {string} key - The configuration key to check\n     * @returns {boolean} True if the key exists\n     */\n    has(key) {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn(`DiffConfigManager: Cannot check ${key}, window.diffConfig not available`, null, 1);\n            return false;\n        }\n        return key in window.diffConfig;\n    }\n\n    /**\n     * Remove a specific configuration key\n     * @param {string} key - The configuration key to remove\n     */\n    remove(key) {\n        if (typeof window !== 'undefined' && window.diffConfig && key in window.diffConfig) {\n            Debug.log(`DiffConfigManager: Removing ${key}`, null, 3);\n            delete window.diffConfig[key];\n        } else {\n            Debug.warn(`DiffConfigManager: Cannot remove ${key}, not found or window.diffConfig not available`, null, 1);\n        }\n    }\n\n    /**\n     * Deep merge two objects recursively\n     * @param {Object} target - Target object\n     * @param {Object} source - Source object to merge\n     * @returns {Object} The merged object\n     * @private\n     */\n    #mergeDeep(target, source) {\n        const output = { ...target };\n\n        if (this.#isObject(target) && this.#isObject(source)) {\n            Object.keys(source).forEach(key => {\n                if (this.#isObject(source[key])) {\n                    if (!(key in target)) {\n                        output[key] = source[key];\n                    } else {\n                        output[key] = this.#mergeDeep(target[key], source[key]);\n                    }\n                } else {\n                    output[key] = source[key];\n                }\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * Check if a value is an object\n     * @param {*} item - The value to check\n     * @returns {boolean} True if the value is an object\n     * @private\n     */\n    #isObject(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item));\n    }\n}\n\nexport default DiffConfigManager;\n","import { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\n\n/**\n * Utility for discovering API endpoints\n * Provides centralized access to API endpoints\n */\nexport class EndpointDiscovery extends BaseSingleton {\n    // Singleton instance\n    static #instance = null;\n\n    // Cached endpoint URL\n    #apiEndpoint = null;\n\n    // Promise for ongoing discovery\n    #discoveryPromise = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {EndpointDiscovery} The singleton instance\n     */\n    static getInstance() {\n        if (!EndpointDiscovery.#instance) {\n            EndpointDiscovery.#instance = new EndpointDiscovery();\n        }\n        return EndpointDiscovery.#instance;\n    }\n\n    /**\n     * Discover the API endpoint URL\n     * @returns {Promise<string>} Base API endpoint URL\n     */\n    async discoverEndpoint() {\n        // Return cached endpoint if available\n        if (this.#apiEndpoint) {\n            Debug.log('EndpointDiscovery: Using cached API endpoint', this.#apiEndpoint, 2);\n            return this.#apiEndpoint;\n        }\n\n        try {\n            // First check window.diffConfig.apiEndpoint\n            if (window.diffConfig?.apiEndpoint) {\n                Debug.log('EndpointDiscovery: Using configured API endpoint', window.diffConfig.apiEndpoint, 2);\n                this.#apiEndpoint = window.diffConfig.apiEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Try to determine endpoint based on script location\n            const scriptEndpoint = this.#determineEndpointFromScript();\n            if (scriptEndpoint) {\n                Debug.log('EndpointDiscovery: Determined API endpoint from script location', scriptEndpoint, 2);\n                this.#apiEndpoint = scriptEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Fall back to endpoint-config.php discovery\n            Debug.log('EndpointDiscovery: Discovering API endpoint from endpoint-config.php', null, 2);\n\n            // Generate URL to endpoint-config.php\n            const configUrl = this.#getEndpointConfigUrl();\n\n            Debug.log('EndpointDiscovery: Fetching from', configUrl, 2);\n\n            // Fetch endpoint configuration\n            const response = await fetch(configUrl);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch endpoint config: ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            Debug.log('EndpointDiscovery: Endpoint discovery response', data, 2);\n\n            // Check if we have a valid apiEndpoint in the response\n            if (data?.apiEndpoint !== undefined) {\n                this.#apiEndpoint = data.apiEndpoint;\n                Debug.log('EndpointDiscovery: Successfully discovered API endpoint', this.#apiEndpoint, 1);\n                return this.#apiEndpoint;\n            } else {\n                throw new Error('Invalid endpoint config response: apiEndpoint not found');\n            }\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error discovering endpoint', error, 1);\n\n            // Fall back to relative endpoint as a last resort\n            this.#apiEndpoint = './api/';\n            Debug.log('EndpointDiscovery: Using fallback endpoint', this.#apiEndpoint, 1);\n            return this.#apiEndpoint;\n        }\n    }\n\n    /**\n     * Get endpoint URL with efficient caching\n     * @param {string} [endpointName] Optional specific endpoint name (e.g., 'ajaxDiffMerge')\n     * @returns {Promise<string>} API endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        // First get the base endpoint URL\n        if (!this.#apiEndpoint) {\n            // If a discovery is already in progress, return that promise\n            if (this.#discoveryPromise) {\n                await this.#discoveryPromise;\n            } else {\n                // Start a new discovery and cache the promise\n                this.#discoveryPromise = this.discoverEndpoint();\n\n                try {\n                    // Wait for discovery to complete\n                    await this.#discoveryPromise;\n                } finally {\n                    // Clear the discovery promise regardless of outcome\n                    this.#discoveryPromise = null;\n                }\n            }\n        }\n\n        // Now we should have the base endpoint URL\n        if (!endpointName) {\n            // Return the base URL if no specific endpoint requested\n            return this.#apiEndpoint;\n        }\n\n        // For specific endpoints, map the name to the appropriate file\n        const endpointMap = {\n            'ajaxDiffMerge': 'ajax-diff-merge.php',\n            'diffProcessor': 'diff-processor.php',\n            'getFileContent': 'get-file-content.php',\n            'endpointsConfig': 'endpoint-config.php',  // <-- Changed to endpoint-config.php (singular)\n            'endpoints': 'endpoints-config.php'        // <-- Keep original endpoints-config.php mapping\n        };\n\n        // Get the file name for the requested endpoint\n        let fileName = endpointMap[endpointName];\n\n        // If no mapping exists, use a default pattern\n        if (!fileName) {\n            // Convert camelCase to kebab-case with .php extension\n            fileName = endpointName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase() + '.php';\n        }\n\n        // Ensure the base URL ends with a slash\n        const baseUrl = this.#apiEndpoint.endsWith('/') ? this.#apiEndpoint : this.#apiEndpoint + '/';\n\n        Debug.log(`EndpointDiscovery: Resolved ${endpointName} to endpoint`, baseUrl + fileName, 2);\n\n        return baseUrl + fileName;\n    }\n\n    /**\n     * Get a complete API URL for a specific endpoint file\n     * @param {string} endpointFile Filename to append to the base URL\n     * @returns {Promise<string>} Full API URL\n     */\n    async getApiUrl(endpointFile) {\n        const baseUrl = await this.getEndpoint();\n        return `${baseUrl}${endpointFile}`;\n    }\n\n    /**\n     * Attempt to determine API endpoint based on script location\n     * @private\n     * @returns {string|null} Determined endpoint or null\n     */\n    #determineEndpointFromScript() {\n        try {\n            // Find our script tag\n            const scripts = document.querySelectorAll('script');\n            let scriptUrl = null;\n\n            for (const script of scripts) {\n                if (script.src && (\n                    script.src.includes('diff-viewer.js') ||\n                    script.src.includes('diff-viewer.min.js')\n                )) {\n                    scriptUrl = script.src;\n                    break;\n                }\n            }\n\n            if (!scriptUrl) {\n                return null;\n            }\n\n            // Get the directory path by removing the filename\n            let basePath = scriptUrl.substring(0, scriptUrl.lastIndexOf('/') + 1);\n\n            // If it's in a /dist/ directory, adjust to parent\n            if (basePath.endsWith('/dist/')) {\n                basePath = basePath.substring(0, basePath.length - 5);\n            }\n\n            // Append 'api/' to the base path\n            return `${basePath}api/`;\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error determining endpoint from script', error, 2);\n            return null;\n        }\n    }\n\n    /**\n     * Generate URL to endpoint-config.php\n     * @private\n     * @returns {string} URL to endpoint-config.php\n     */\n    #getEndpointConfigUrl() {\n        // Try to use the base URL of the current page\n        const baseUrl = window.location.href.substring(0, window.location.href.lastIndexOf('/') + 1);\n\n        // Assume endpoint-config.php is in the /api/ directory\n        if (baseUrl.includes('/diff-viewer/')) {\n            // If we're in diff-viewer, go up one level\n            return `${baseUrl.substring(0, baseUrl.lastIndexOf('/diff-viewer/'))}api/endpoint-config.php`;\n        } else {\n            // Default case - look for api in the current directory\n            return `${baseUrl}api/endpoint-config.php`;\n        }\n    }\n}\n","/**\n * Central registry for SVG icons\n * This eliminates the need for external icon libraries\n */\nexport class IconRegistry {\n    /**\n     * Get SVG markup for the specified icon\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Additional options for the icon\n     * @returns {string} SVG markup\n     */\n    static getIcon(iconName, options = {}) {\n        const {\n            classes = '',\n            width = 16,\n            height = 16,\n            title = '',\n            ariaHidden = true\n        } = options;\n\n        // Get the SVG path data\n        const pathData = this._getIconPathData(iconName);\n\n        if (!pathData) {\n            console.warn(`Icon not found: ${iconName}`);\n            return '';\n        }\n\n        // Create title element for accessibility if provided\n        const titleElement = title ? `<title>${title}</title>` : '';\n\n        // Generate the SVG with the right attributes\n        return `<svg\n            class=\"vdm-icon ${classes}\"\n            width=\"${width}\"\n            height=\"${height}\"\n            viewBox=\"${pathData.viewBox || '0 0 512 512'}\"\n            ${ariaHidden ? 'aria-hidden=\"true\"' : 'role=\"img\"'}\n            focusable=\"false\"\n        >\n            ${titleElement}\n            ${pathData.paths}\n        </svg>`;\n    }\n\n    /**\n     * Get the path data for an icon\n     * @private\n     * @param {string} iconName - Name of the icon\n     * @returns {Object|null} Icon path data or null if not found\n     */\n    static _getIconPathData(iconName) {\n        // Map of icon names to their SVG path data\n        const icons = {\n            'chevron-up': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z\"/>'\n            },\n            'chevron-down': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z\"/>'\n            },\n            'eye': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>'\n            },\n            'sun': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM160 256a96 96 0 1 1 192 0 96 96 0 1 1 -192 0zm224 0a128 128 0 1 0 -256 0 128 128 0 1 0 256 0z\"/>'\n            },\n            'moon': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M223.5 32C100 32 0 132.3 0 256S100 480 223.5 480c60.6 0 115.5-24.2 155.8-63.4c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-9.8 1.7-19.8 2.6-30.1 2.6c-96.9 0-175.5-78.8-175.5-176c0-65.8 36-123.1 89.3-153.3c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-6.3-.5-12.6-.8-19-.8z\"/>'\n            },\n            'file': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M0 64C0 28.7 28.7 0 64 0H224V128c0 17.7 14.3 32 32 32H384V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zm384 64H256V0L384 128z\"/>'\n            },\n            'file-circle-plus': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M0 64C0 28.7 28.7 0 64 0H224V128c0 17.7 14.3 32 32 32H384v38.6C310.1 219.5 256 287.4 256 368c0 59.1 29.1 111.3 73.7 143.3c-3.2 .5-6.4 .7-9.7 .7H64c-35.3 0-64-28.7-64-64V64zm384 64H256V0L384 128zM288 368a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-80c-8.8 0-16 7.2-16 16v48H368c-8.8 0-16 7.2-16 16s7.2 16 16 16h48v48c0 8.8 7.2 16 16 16s16-7.2 16-16V384h48c8.8 0 16-7.2 16-16s-7.2-16-16-16H448V304c0-8.8-7.2-16-16-16z\"/>'\n            },\n            'file-lines': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V160H256c-17.7 0-32-14.3-32-32V0H64zM256 0V128H384L256 0zM112 256H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16z\"/>'\n            },\n            'file-copy': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M384 480h48c20.9 0 38.7-13.4 45.3-32H416c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16h61.3C470.7 157.4 452.9 144 432 144H384V64c0-35.3-28.7-64-64-64H64C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H384zM128 64H320V144H128V64zM400 240V416H144V192H352c26.5 0 48 21.5 48 48zm176-48c0-8.8-7.2-16-16-16H432c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H560c8.8 0 16-7.2 16-16V192z\"/>'\n            },\n            'plus-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM232 344V280H168c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H280v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z\"/>'\n            },\n            'exclamation-triangle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"/>'\n            },\n            'copy': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M272 0H396.1c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9V336c0 26.5-21.5 48-48 48H272c-26.5 0-48-21.5-48-48V48c0-26.5 21.5-48 48-48zM48 128H192v64H64V448H256V416h64v48c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48z\"/>'\n            },\n            // Add more icons as needed\n            'check-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM369 209L241 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L335 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z\"/>'\n            },\n            'chevron-right': {\n                viewBox: '0 0 320 512',\n                paths: '<path d=\"M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z\"/>'\n            },\n            'download': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z\"/>'\n            },\n            'uncheck-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm0-384c13.3 0 24 10.7 24 24v112c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zm-32 224a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/>'\n            },\n            'info-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/>'\n            },\n            'exclamation-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM256 128c13.3 0 24 10.7 24 24V264c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/>'\n            },\n            'checkbox-unchecked': {\n                viewBox: '0 0 24 24',\n                paths: '<path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/>'\n            },\n            'checkbox-checked': {\n                viewBox: '0 0 24 24',\n                paths: '<path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>'\n            }\n        };\n\n        return icons[iconName] || null;\n    }\n\n    /**\n     * Create DOM element for an icon\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Additional options for the icon\n     * @returns {Element} The created SVG element\n     */\n    static createIcon(iconName, options = {}) {\n        const svgString = this.getIcon(iconName, options);\n        if (!svgString) return null;\n\n        const template = document.createElement('template');\n        template.innerHTML = svgString.trim();\n        return template.content.firstChild;\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * LoaderManager - Centralized utility for managing loading indicators\n *\n * This singleton class provides methods to display and hide loading indicators\n * throughout the application in a consistent manner. It supports different styles\n * of loaders including fullscreen, inline, and element-specific indicators.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * LoaderManager class\n *\n * Provides methods to display and hide loading indicators throughout the application\n */\nexport class LoaderManager extends BaseSingleton {\n    /**\n     * Initialize the LoaderManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.activeLoaders = new Map();\n        this.loaderIdCounter = 0;\n        this.isMainLoaderActive = false; // Track if main loader is active\n        this.mainLoaderId = null; // Store the ID of the main loader for reference\n        this.recentlyRemovedLoaders = new Set(); // Track recently removed loaders to prevent errors\n\n        // Track loader operations for debugging\n        this.operationLog = [];\n        this.maxLogEntries = 20;\n\n        // Set flag to remember log level in debug mode\n        this.verboseLogging = Debug.isInitialized ? Debug.logLevel > 2 : false;\n\n        // Mark as initialized\n        this.initialized = true;\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {LoaderManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new LoaderManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Log an operation for debugging\n     * @private\n     */\n    _logOperation(operation, details) {\n        // Keep a short log history for debugging\n        if (this.operationLog.length >= this.maxLogEntries) {\n            this.operationLog.shift(); // Remove oldest entry\n        }\n\n        this.operationLog.push({\n            timestamp: new Date().toISOString(),\n            operation,\n            details\n        });\n    }\n\n    /**\n     * Create a loader element with the given message\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Options for the loader\n     * @returns {HTMLElement} The loader element\n     * @private\n     */\n    _createLoaderElement(message, options = {}) {\n        // Use an early translation if TranslationManager is available\n        if (message && typeof message === 'string' && message.startsWith('$') && TranslationManager.getInstance().isInitialized()) {\n            const translationKey = message.substring(1);\n            const translatedMessage = TranslationManager.getInstance().get(translationKey);\n            if (translatedMessage) {\n                message = translatedMessage;\n            }\n        }\n\n        const loader = document.createElement('div');\n        loader.className = 'vdm-loader';\n\n        if (options.fullscreen) {\n            loader.classList.add('vdm-loader--fullscreen');\n        }\n\n        if (options.inline) {\n            loader.classList.add('vdm-loader--inline');\n        }\n\n        if (options.small) {\n            loader.classList.add('vdm-loader--small');\n        }\n\n        if (options.container) {\n            loader.classList.add('vdm-loader--container');\n        }\n\n        if (options.className) {\n            loader.classList.add(options.className);\n        }\n\n        if (options.zIndex) {\n            loader.style.zIndex = options.zIndex;\n        }\n\n        // Create spinner\n        const spinner = document.createElement('div');\n        spinner.className = 'vdm-loader__spinner';\n        loader.appendChild(spinner);\n\n        // Add message if provided\n        if (message) {\n            const messageElement = document.createElement('div');\n            messageElement.className = 'vdm-loader__message';\n            messageElement.textContent = message;\n            loader.appendChild(messageElement);\n        }\n\n        return loader;\n    }\n\n    /**\n     * Show a loading indicator\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @param {boolean} options.fullscreen - Whether to show a fullscreen loader\n     * @param {boolean} options.inline - Whether to show an inline loader\n     * @param {boolean} options.small - Whether to show a small loader\n     * @param {string} options.className - Additional CSS class to add to the loader\n     * @param {HTMLElement} options.target - Target element to add the loader to\n     * @param {number} options.zIndex - Z-index for the loader\n     * @returns {string} ID of the loader (use this to hide the specific loader)\n     */\n    showLoader(message = 'Loading...', options = {}) {\n        // If main loader is active and we're showing a fullscreen loader,\n        // reuse the main loader with updated message\n        if (this.isMainLoaderActive && this.mainLoaderId && options.fullscreen) {\n            Debug.log('LoaderManager: Reusing main loader for fullscreen request', { message }, 3);\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        Debug.log('LoaderManager: Showing loader', { message, options }, 3);\n\n        const loaderId = `loader-${++this.loaderIdCounter}`;\n        const loaderElement = this._createLoaderElement(message, options);\n        loaderElement.setAttribute('data-loader-id', loaderId);\n\n        // Add loader to the correct target element\n        if (options.target && options.target instanceof HTMLElement) {\n            // If the target has position: static, change to relative for proper positioning\n            const targetPosition = window.getComputedStyle(options.target).getPropertyValue('position');\n            if (targetPosition === 'static') {\n                options.target.style.position = 'relative';\n            }\n            options.target.appendChild(loaderElement);\n        } else {\n            document.body.appendChild(loaderElement);\n        }\n\n        // Store reference to the loader\n        this.activeLoaders.set(loaderId, {\n            element: loaderElement,\n            target: options.target || document.body,\n            fullscreen: !!options.fullscreen,\n            timestamp: Date.now()\n        });\n\n        // Remove from recently removed list if it's there (unlikely but possible with ID reuse)\n        this.recentlyRemovedLoaders.delete(loaderId);\n\n        this._logOperation('show', { id: loaderId, message, type: 'regular' });\n\n        // Add showing class to trigger CSS transitions if any\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.classList.add('vdm-loader--showing');\n            }\n        }, 10);\n\n        return loaderId;\n    }\n\n    /**\n     * Show the main application loader and hide all other loaders\n     *\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Additional options for the loader\n     * @returns {string} ID of the loader\n     */\n    showMainLoader(message = 'Loading...', options = {}) {\n        Debug.log('LoaderManager: Showing main loader', { message }, 2);\n\n        // If main loader is already active, just update the message and return the existing ID\n        if (this.isMainLoaderActive && this.mainLoaderId && this.activeLoaders.has(this.mainLoaderId)) {\n            Debug.log('LoaderManager: Main loader already active, updating message', {\n                currentId: this.mainLoaderId,\n                message\n            }, 2);\n\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        // Hide all other loaders when showing the main one\n        this._hideAllInlineLoaders();\n\n        // Get the main loader element if it exists in the DOM\n        const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n\n        if (mainLoaderElement) {\n            // If the element already exists in the DOM, just show it\n            mainLoaderElement.style.display = 'flex';\n            mainLoaderElement.classList.add(Selectors.LOADER.ACTIVE.name());\n\n            // If it has a message element, update it\n            const messageElement = mainLoaderElement.querySelector('.vdm-loader__message');\n            if (messageElement) {\n                messageElement.textContent = message;\n            } else if (message) {\n                // Create message element if it doesn't exist but message is provided\n                const newMessageElement = document.createElement('div');\n                newMessageElement.className = 'vdm-loader__message';\n                newMessageElement.textContent = message;\n                mainLoaderElement.appendChild(newMessageElement);\n            }\n\n            // Generate an ID for this loader instance\n            const loaderId = `main-loader-${++this.loaderIdCounter}`;\n\n            // Store reference\n            this.activeLoaders.set(loaderId, {\n                element: mainLoaderElement,\n                target: document.body,\n                isMainLoader: true,\n                timestamp: Date.now()\n            });\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            // Remove from recently removed list if it's there\n            this.recentlyRemovedLoaders.delete(loaderId);\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-existing' });\n\n            return loaderId;\n        } else {\n            // If the element doesn't exist, create it using showLoader\n            const loaderId = this.showLoader(message, {\n                fullscreen: true,\n                className: Selectors.LOADER.MAIN.name(),\n                zIndex: 9999,\n                ...options\n            });\n\n            // Mark this as the main loader\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            if (loaderInfo) {\n                loaderInfo.isMainLoader = true;\n                loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n            }\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-new' });\n\n            return loaderId;\n        }\n    }\n\n    /**\n     * Show a loading indicator early in the page lifecycle before DiffViewer initialization\n     * This is specifically for components that need to show loaders before the main app initializes\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showEarlyLoader(message = 'Loading...', options = {}) {\n        // If debug is already initialized, use it, otherwise don't log\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Showing early loader', { message }, 2);\n        }\n\n        // Create a loader that will become the main loader\n        const loaderId = this.showLoader(message, {\n            fullscreen: true,\n            className: Selectors.LOADER.MAIN.name(),\n            zIndex: 9999,\n            ...options\n        });\n\n        // Mark this as the main loader\n        const loaderInfo = this.activeLoaders.get(loaderId);\n        if (loaderInfo) {\n            loaderInfo.isMainLoader = true;\n            loaderInfo.isEarlyLoader = true; // Mark as an early loader\n            loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n        }\n\n        // Update tracking\n        this.isMainLoaderActive = true;\n        this.mainLoaderId = loaderId;\n\n        this._logOperation('show', { id: loaderId, message, type: 'early-loader' });\n\n        return loaderId;\n    }\n\n    /**\n     * Convert an early loader to the main loader to ensure continuity\n     * Call this method from enableDiffViewer to take over an existing early loader\n     *\n     * @param {string} message - Optional new message to display\n     * @returns {string} ID of the main loader\n     */\n    adoptEarlyLoader(message = null) {\n        // If there's no active main loader, create one\n        if (!this.isMainLoaderActive || !this.mainLoaderId) {\n            if (Debug.isInitialized) {\n                Debug.log('LoaderManager: No early loader to adopt, creating new main loader', null, 2);\n            }\n            return this.showMainLoader(message);\n        }\n\n        // Update the message if provided\n        if (message) {\n            this.updateLoaderMessage(this.mainLoaderId, message);\n        }\n\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Adopted early loader as main loader', { id: this.mainLoaderId }, 2);\n        }\n\n        return this.mainLoaderId;\n    }\n\n    /**\n     * Hide the main loader\n     *\n     * @param {string} loaderId - Optional ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideMainLoader(loaderId = null) {\n        Debug.log('LoaderManager: Hiding main loader', { loaderId }, 2);\n\n        // Special handling: If this was recently removed, just return success\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Main loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // If main loader isn't active, silently succeed\n        if (!this.isMainLoaderActive) {\n            Debug.log('LoaderManager: Main loader not active, nothing to hide', null, 2);\n            return true;\n        }\n\n        // If loaderId is provided but doesn't match the main loader ID, verify it\n        if (loaderId && loaderId !== this.mainLoaderId) {\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            // If it's not found or not a main loader, use the stored main loader ID\n            if (!loaderInfo?.isMainLoader) {\n                Debug.log('LoaderManager: Using stored main loader ID',\n                    { providedId: loaderId, actualMainId: this.mainLoaderId }, 2);\n                loaderId = this.mainLoaderId;\n            }\n        } else if (!loaderId) {\n            // If no ID provided, use the stored main loader ID\n            loaderId = this.mainLoaderId;\n        }\n\n        // If we couldn't determine a loader ID or it doesn't exist anymore,\n        // try to clean up by element ID\n        if (!loaderId || !this.activeLoaders.has(loaderId)) {\n            const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n            if (mainLoaderElement) {\n                mainLoaderElement.style.display = 'none';\n                if (mainLoaderElement.parentNode) {\n                    mainLoaderElement.parentNode.removeChild(mainLoaderElement);\n                }\n                Debug.log('LoaderManager: Removed main loader by element ID', null, 2);\n            }\n\n            // Reset state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n            return true;\n        }\n\n        // Now hide the specific loader\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader so we don't try to hide it again\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            // Update state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            this._logOperation('hide', { id: loaderId, type: 'main' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Hide all inline loaders (internal method)\n     * @private\n     */\n    _hideAllInlineLoaders() {\n        Debug.log('LoaderManager: Hiding all inline loaders', null, 3);\n\n        // Find all inline loaders\n        const inlineLoaderIds = Array.from(this.activeLoaders.entries())\n            .filter(([_id, info]) => !info.isMainLoader && !info.fullscreen)\n            .map(([id]) => id);\n\n        // Hide each one\n        inlineLoaderIds.forEach(id => {\n            this._hideSpecificLoader(id);\n\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(id);\n\n            this._logOperation('hide', { id, type: 'inline-batch' });\n        });\n\n        // Also look for any inline loaders in the DOM that might not be tracked\n        document.querySelectorAll('.vdm-loader--inline').forEach(loader => {\n            this._removeLoaderElement(loader);\n            this._logOperation('hide', { element: 'untracked-inline', type: 'dom-query' });\n        });\n    }\n\n    /**\n     * Hide a specific loader by ID\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideLoader(loaderId) {\n        // If no loaderId specified, hide all loaders\n        if (!loaderId) {\n            Debug.log('LoaderManager: Hiding all loaders', null, 3);\n            const loaderIds = Array.from(this.activeLoaders.keys());\n            let success = true;\n\n            loaderIds.forEach(id => {\n                if (!this._hideSpecificLoader(id)) {\n                    success = false;\n                }\n\n                // Remember we removed this loader\n                this.recentlyRemovedLoaders.add(id);\n\n                this._logOperation('hide', { id, type: 'all-batch' });\n            });\n\n            // Reset main loader tracking\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            return success;\n        }\n\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // Case: this is the main loader\n        if (loaderId === this.mainLoaderId) {\n            return this.hideMainLoader(loaderId);\n        }\n\n        // Hide a specific loader\n        Debug.log('LoaderManager: Hiding loader', { loaderId }, 3);\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            this._logOperation('hide', { id: loaderId, type: 'specific' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Internal method to hide a specific loader\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     * @private\n     */\n    _hideSpecificLoader(loaderId) {\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed (in _hideSpecificLoader)', { loaderId }, 3);\n            return true;\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            Debug.log('LoaderManager: No loader found to hide', { loaderId }, 2);\n            return false;\n        }\n\n        // Update main loader status if this was a main loader\n        if (loader.isMainLoader) {\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n        }\n\n        // Check if the element still exists in DOM\n        if (!loader.element?.parentNode) {\n            // Element is already removed, just clean up our tracking\n            this.activeLoaders.delete(loaderId);\n            Debug.log('LoaderManager: Loader element was already removed from DOM', { loaderId }, 3);\n            return true;\n        }\n\n        // Remove the loader element with transition\n        this._removeLoaderElement(loader.element);\n        this.activeLoaders.delete(loaderId);\n\n        // Remember we removed this loader\n        this.recentlyRemovedLoaders.add(loaderId);\n\n        return true;\n    }\n\n    /**\n     * Remove a loader element with transition\n     *\n     * @param {HTMLElement} loaderElement - Loader element to remove\n     * @private\n     */\n    _removeLoaderElement(loaderElement) {\n        // First remove the showing class to trigger CSS transitions if any\n        loaderElement.classList.remove('vdm-loader--showing');\n\n        // Wait for transition to complete before removing the element\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.parentNode.removeChild(loaderElement);\n            }\n        }, 300); // Match this timing with CSS transition duration\n    }\n\n    /**\n     * Show a loader in a specific container (useful for buttons, etc.)\n     *\n     * @param {HTMLElement} container - Container element to add the loader to\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showLoaderInContainer(container, message = '', options = {}) {\n        const loaderId = this.showLoader(message, {\n            target: container,\n            container: true,\n            small: true,\n            ...options\n        });\n\n        this._logOperation('show', { id: loaderId, message, type: 'container' });\n\n        return loaderId;\n    }\n\n    /**\n     * Update an existing loader's message\n     *\n     * @param {string} loaderId - ID of the loader to update\n     * @param {string} message - New message to display\n     * @returns {boolean} Success status\n     */\n    updateLoaderMessage(loaderId, message) {\n        // Don't log anything when recently removed IDs are encountered\n        // This eliminates the spam in the console for removed loaders\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            return true; // Silently succeed\n        }\n\n        // If this is a falsy ID and main loader is active, use the main loader\n        if (!loaderId && this.isMainLoaderActive && this.mainLoaderId) {\n            loaderId = this.mainLoaderId;\n            Debug.log('LoaderManager: Using main loader ID for message update', { mainLoaderId: loaderId }, 3);\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            // Only log at level 2 if we're in verbose mode (reduces noise)\n            if (this.verboseLogging) {\n                Debug.log('LoaderManager: No loader found to update message', { loaderId }, 2);\n            }\n            return false;\n        }\n\n        // Check if element still exists in DOM\n        if (!loader.element?.parentNode) {\n            Debug.log('LoaderManager: Loader element was removed from DOM', { loaderId }, 3);\n            this.activeLoaders.delete(loaderId);\n            this.recentlyRemovedLoaders.add(loaderId);\n            return false;\n        }\n\n        const messageElement = loader.element.querySelector('.vdm-loader__message');\n\n        if (messageElement) {\n            messageElement.textContent = message;\n            this._logOperation('update', { id: loaderId, message, type: 'existing-element' });\n            return true;\n        } else if (message) {\n            // Create message element if it doesn't exist but a message is provided\n            const newMessageElement = document.createElement('div');\n            newMessageElement.className = 'vdm-loader__message';\n            newMessageElement.textContent = message;\n            loader.element.appendChild(newMessageElement);\n            this._logOperation('update', { id: loaderId, message, type: 'new-element' });\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a loader with the given ID exists\n     * @param {string} loaderId - Loader ID to check\n     * @returns {boolean} - Whether the loader exists\n     */\n    hasLoader(loaderId) {\n        return this.activeLoaders.has(loaderId) &&\n               !this.recentlyRemovedLoaders.has(loaderId);\n    }\n\n    /**\n     * Clean up old entries in the recentlyRemovedLoaders set to prevent memory leaks\n     * Called periodically by the system\n     */\n    _cleanupOldRemovedLoaders() {\n        // If the set gets too large, clean up old entries\n        if (this.recentlyRemovedLoaders.size > 20) {\n            // Just reset the whole set for simplicity\n            this.recentlyRemovedLoaders.clear();\n        }\n    }\n\n    /**\n     * Get debug information about a specific loader\n     * @param {string} loaderId - Loader ID to check\n     * @returns {Object|null} Loader information\n     */\n    getLoaderInfo(loaderId) {\n        if (!loaderId) return null;\n\n        const loader = this.activeLoaders.get(loaderId);\n        if (!loader) {\n            return {\n                exists: false,\n                wasRemoved: this.recentlyRemovedLoaders.has(loaderId)\n            };\n        }\n\n        return {\n            exists: true,\n            isMain: !!loader.isMainLoader,\n            fullscreen: !!loader.fullscreen,\n            message: loader.element.querySelector('.vdm-loader__message')?.textContent,\n            age: Date.now() - (loader.timestamp || 0), // milliseconds since creation\n            inDom: !!loader.element.parentNode\n        };\n    }\n\n    /**\n     * Debug method to get active loader information\n     * @returns {Object} Information about current loaders\n     */\n    getLoaderStatus() {\n        // Clean up the recently removed list to keep it tidy\n        this._cleanupOldRemovedLoaders();\n\n        return {\n            activeCount: this.activeLoaders.size,\n            recentlyRemovedCount: this.recentlyRemovedLoaders.size,\n            mainLoaderActive: this.isMainLoaderActive,\n            mainLoaderId: this.mainLoaderId,\n            operations: [...this.operationLog],\n            loaders: Array.from(this.activeLoaders.entries()).map(([id, info]) => ({\n                id,\n                isMain: !!info.isMainLoader,\n                fullscreen: !!info.fullscreen,\n                message: info.element.querySelector('.vdm-loader__message')?.textContent,\n                age: Date.now() - (info.timestamp || 0), // milliseconds since creation\n                inDom: !!info.element.parentNode\n            }))\n        };\n    }\n}\n\nexport default LoaderManager;\n","import { StringUtils } from './StringUtils';\nimport { Debug } from './Debug';\n\n/**\n * Formats merge content for various displays\n */\nexport class MergeContentFormatter {\n    /**\n     * Format merged content for preview\n     * @param {string} content - Raw content to format\n     * @param {string} extension - File extension\n     * @param {boolean} withLineNumbers - Whether to add line numbers\n     * @returns {string} Formatted HTML\n     */\n    static formatPreview(content, extension = '', withLineNumbers = true) {\n        // Ensure we have valid content\n        if (!content) {\n            Debug.warn('MergeContentFormatter: Empty content for preview formatting', null, 2);\n            return '<pre><code>No content available</code></pre>';\n        }\n\n        // Store original content for copy operations\n        const originalContent = content;\n\n        // Safely escape content\n        const escapedContent = StringUtils.escapeHtml(content);\n\n        // Map extension to language class for highlight.js\n        const languageClass = MergeContentFormatter.getLanguageClass(extension);\n\n        // Add data attribute for line numbers if requested\n        const lineNumberAttr = withLineNumbers ? 'data-line-numbers=\"true\"' : '';\n\n        // Store original content in a data attribute for reliable copying\n        const result = `<pre ${lineNumberAttr}><code class=\"${languageClass}\" data-original-code=\"${StringUtils.escapeAttribute(originalContent)}\">${escapedContent}</code></pre>`;\n\n        // Replace console.log with Debug utility\n        Debug.log('MergeContentFormatter: Preview HTML generated', { preview: result.substring(0, 150) + '...' }, 2);\n\n        return result;\n    }\n\n    /**\n     * Get language class from file extension\n     * @param {string} extension - File extension\n     * @returns {string} Language class for syntax highlighting\n     */\n    static getLanguageClass(extension = '') {\n        if (!extension) {\n            return '';\n        }\n\n        // Map common extensions to highlight.js language classes\n        const extensionMap = {\n            'js': 'javascript',\n            'ts': 'typescript',\n            'py': 'python',\n            'rb': 'ruby',\n            'java': 'java',\n            'cs': 'csharp',\n            'php': 'php',\n            'html': 'html',\n            'css': 'css',\n            'json': 'json',\n            'xml': 'xml',\n            'yml': 'yaml',\n            'yaml': 'yaml',\n            'md': 'markdown',\n            'sql': 'sql'\n        };\n\n        return extensionMap[extension.toLowerCase()] || extension.toLowerCase();\n    }\n\n    /**\n     * Format count of unresolved conflicts\n     * @param {number} count - Number of unresolved conflicts\n     * @param {Object} translations - Translation strings\n     * @returns {string} Formatted message\n     */\n    static formatUnresolvedCount(count, translations = {}) {\n        if (count === 1) {\n            return (translations.unresolvedChunkSingular || 'There is %COUNT% unresolved chunk remaining.')\n                .replace('%COUNT%', count);\n        } else {\n            return (translations.unresolvedChunksPlural || 'There are %COUNT% unresolved chunks remaining.')\n                .replace('%COUNT%', count);\n        }\n    }\n\n    /**\n     * Prepare code for highlighting\n     * @param {string} code - Code to prepare\n     * @returns {string} Prepared code\n     */\n    static prepareCode(code) {\n        // Clean up line endings\n        const cleanCode = code.replace(/\\r\\n/g, '\\n');\n        return cleanCode;\n    }\n\n    /**\n     * Reset element highlighting state\n     * @param {Element} element - Element to reset\n     * @returns {string|null} Original text content or null\n     */\n    static resetHighlighting(element) {\n        if (!element) return null;\n\n        // Remove data-highlighted attribute\n        if (element.hasAttribute('data-highlighted')) {\n            element.removeAttribute('data-highlighted');\n        }\n\n        // Store the original content\n        const originalText = element.textContent;\n\n        // Reset element content\n        element.textContent = originalText;\n\n        return originalText;\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\n\n/**\n * Navigation-related utility functions\n */\nexport class NavigationUtils {\n    /**\n     * Scroll element into view with smooth behavior\n     * @param {Element} element - Element to scroll to\n     * @param {Element} container - Scrollable container\n     * @returns {boolean} Success status\n     */\n    static scrollElementIntoView(element, container) {\n        if (!element || !container) {\n            Debug.warn('NavigationUtils: Missing element or container for scrolling', null, 2);\n            return false;\n        }\n\n        // Calculate the target scroll position (center element in container)\n        const elementTop = element.offsetTop;\n        const containerHeight = container.clientHeight;\n        const scrollTarget = elementTop - (containerHeight / 2) + (element.offsetHeight / 2);\n\n        // Apply scroll with smooth behavior\n        container.scrollTo({\n            top: scrollTarget,\n            behavior: 'smooth'\n        });\n\n        return true;\n    }\n\n    /**\n     * Add highlight effect to an element\n     * @param {Element} element - Element to highlight\n     * @param {number} duration - Duration in ms\n     */\n    static addHighlightEffect(element, duration = 2000) {\n        if (!element) return;\n\n        element.classList.add(Selectors.NAVIGATION.HIGHLIGHT.name());\n        setTimeout(() => {\n            element.classList.remove(Selectors.NAVIGATION.HIGHLIGHT.name());\n        }, duration);\n    }\n\n    /**\n     * Make an element draggable\n     * @param {Element} element - Element to make draggable\n     * @param {Object} options - Configuration options\n     * @returns {Object} Clean-up functions\n     */\n    static makeDraggable(element, options = {}) {\n        if (!element) return;\n\n        const defaults = {\n            handleSelector: null, // Selector for drag handle (null = entire element)\n            ignoreSelector: '.nav-button, .nav-counter', // Elements that shouldn't trigger drag\n            positionStyle: 'fixed', // 'fixed' or 'absolute'\n            dragClass: 'dragging', // Class to add while dragging\n        };\n\n        const config = {...defaults, ...options};\n        let isDragging = false;\n        let offsetX, offsetY;\n\n        // Mouse down handler\n        const mouseDownHandler = (e) => {\n            // Skip if clicking on ignored elements\n            if (config.ignoreSelector && e.target.matches(config.ignoreSelector)) {\n                return;\n            }\n\n            // Skip if using handle and not clicking on it\n            if (config.handleSelector && !e.target.matches(config.handleSelector)) {\n                return;\n            }\n\n            isDragging = true;\n            element.classList.add(config.dragClass);\n\n            // Calculate offsets differently depending on position style\n            const rect = element.getBoundingClientRect();\n            offsetX = rect.right - e.clientX;\n            offsetY = rect.bottom - e.clientY;\n\n            // Prevent text selection during drag\n            e.preventDefault();\n        };\n\n        // Mouse move handler\n        const mouseMoveHandler = (e) => {\n            if (!isDragging) return;\n\n            // Calculate new position from right and bottom edges\n            const containerRect = element.parentElement.getBoundingClientRect();\n            let newRight = containerRect.right - e.clientX - offsetX;\n            let newBottom = containerRect.bottom - e.clientY - offsetY;\n\n            // Ensure the element stays within the container\n            newRight = Math.max(0, Math.min(newRight, containerRect.width - element.offsetWidth));\n            newBottom = Math.max(0, Math.min(newBottom, containerRect.height - element.offsetHeight));\n\n            // Apply new position using right and bottom\n            element.style.right = `${newRight}px`;\n            element.style.bottom = `${newBottom}px`;\n            element.style.left = 'auto'; // Remove left positioning\n            element.style.top = 'auto'; // Remove top positioning\n        };\n\n        // Mouse up handler\n        const mouseUpHandler = () => {\n            if (isDragging) {\n                isDragging = false;\n                element.classList.remove(config.dragClass);\n            }\n        };\n\n        // Add event listeners\n        element.addEventListener('mousedown', mouseDownHandler);\n        document.addEventListener('mousemove', mouseMoveHandler);\n        document.addEventListener('mouseup', mouseUpHandler);\n\n        // Return clean-up function\n        return {\n            destroy: () => {\n                element.removeEventListener('mousedown', mouseDownHandler);\n                document.removeEventListener('mousemove', mouseMoveHandler);\n                document.removeEventListener('mouseup', mouseUpHandler);\n            }\n        };\n    }\n}\n","import { Debug } from '../utils/Debug';\n\nimport { BaseSingleton } from './BaseSingleton';\n\n// Module-level singleton instance\nlet instance = null;\n\nexport class ResourceLoader extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @returns {ResourceLoader} The singleton instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new ResourceLoader();\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     */\n    constructor() {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        // Initialize instance\n        this.config = null;\n        this.loadedResources = new Set();\n        this.loadedLanguages = new Set();\n        this.loadedThemes = new Set(); // ADD THIS LINE\n        this.CDN_BASE = 'https://cdnjs.cloudflare.com/ajax/libs';\n        this.HLJS_VERSION = '11.11.1';\n        this.LINE_NUMBERS_VERSION = '2.8.0';\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Configure the ResourceLoader\n     * @param {Object} config - Configuration object\n     */\n    configure(config) {\n        Debug.log('ResourceLoader: Configuring', { config }, 2);\n\n        this.config = config;\n        Debug.log('ResourceLoader configured');\n\n        Debug.log('ResourceLoader: Configuration complete', null, 2);\n        return this;\n    }\n\n    /**\n     * Load all dependencies required for the diff viewer\n     */\n    async loadDependencies() {\n        await this.loadSyntaxHighlighterCore();\n        await this.loadLanguage(this.config.language || 'php');\n        // Note: Theme loading is now ThemeManager's responsibility\n        return true;\n    }\n\n    // Split theme loading from core highlighter loading\n    /**\n     * Load syntax highlighter core without theme\n     */\n    async loadSyntaxHighlighterCore() {\n        if (!this.config) {\n            Debug.error('ResourceLoader: Must be configured before loading dependencies', null, 2);\n            throw new Error('ResourceLoader must be configured before loading dependencies');\n        }\n\n        try {\n            Debug.log('ResourceLoader: Loading syntax highlighter core (NO THEME)', null, 2);\n\n            // Check if hljs is already loaded\n            if (window.hljs) {\n                // Changed from level 3 to level 2 - more consistent with other logs\n                Debug.log('ResourceLoader: highlight.js already loaded', null, 2);\n            } else {\n                Debug.log('ResourceLoader: Loading highlight.js from CDN', null, 2);\n                await this.loadScript(`${this.CDN_BASE}/highlight.js/${this.HLJS_VERSION}/highlight.min.js`);\n\n                Debug.log('ResourceLoader: Loading line numbers plugin', null, 2);\n                await this.loadScript(`${this.CDN_BASE}/highlightjs-line-numbers.js/${this.LINE_NUMBERS_VERSION}/highlightjs-line-numbers.min.js`);\n            }\n\n            Debug.log('ResourceLoader: Syntax highlighter core loaded successfully', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ResourceLoader: Failed to load syntax highlighter core:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Load a specific language for syntax highlighting\n     * @param {string} language - The language to load\n     * @returns {Promise} - Resolves when language is loaded\n     */\n    async loadLanguage(language) {\n        // Normalize language name\n        const langMap = {\n            'markup': 'xml',\n            'html': 'xml',\n            'htm': 'xml',\n            'javascript': 'javascript',\n            'js': 'javascript',\n            'typescript': 'typescript',\n            'ts': 'typescript',\n            'jsx': 'javascript',\n            'tsx': 'typescript'\n        };\n\n        // Get the normalized language name\n        const normalizedLang = langMap[language.toLowerCase()] || language.toLowerCase();\n\n        // Check if already loaded\n        if (this.loadedLanguages.has(normalizedLang)) {\n            return true;\n        }\n\n        // Load the language\n        Debug.log(`ResourceLoader: Loading language ${normalizedLang}`, null, 2);\n        try {\n            // Since dynamic imports aren't working well with webpack, let's use CDN directly\n            await this.loadScript(`${this.CDN_BASE}/highlight.js/${this.HLJS_VERSION}/languages/${normalizedLang}.min.js`);\n            this.loadedLanguages.add(normalizedLang);\n            Debug.log(`ResourceLoader: Language ${normalizedLang} loaded from CDN successfully`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.warn(`ResourceLoader: Failed to load language ${normalizedLang}, falling back to built-in languages`, { error }, 2);\n            // Don't throw - highlight.js will use its built-in detection\n            return false;\n        }\n    }\n\n    /**\n     * Cache loaded resources to prevent duplicate requests\n     * @private\n     */\n    _cacheResource(url, loadPromise) {\n        if (!this.resourceCache) {\n            this.resourceCache = new Map();\n        }\n\n        if (!this.resourceCache.has(url)) {\n            this.resourceCache.set(url, loadPromise);\n        }\n\n        return this.resourceCache.get(url);\n    }\n\n    /**\n     * Load a script with caching\n     * @param {string} url - Script URL\n     * @returns {Promise} Loading promise\n     */\n    loadScript(url) {\n        return this._cacheResource(url, new Promise((resolve, reject) => {\n            if (this.loadedResources.has(url)) {\n                // Removed level 3 debug log - too verbose\n                resolve();\n                return;\n            }\n\n            Debug.log(`ResourceLoader: Loading script: ${url}`, null, 2);\n            const script = document.createElement('script');\n            script.src = url;\n            script.async = true;\n            script.onload = () => {\n                this.loadedResources.add(url);\n                // Removed level 3 debug log - covered by level 2 logs\n                resolve();\n            };\n            script.onerror = () => {\n                Debug.error(`ResourceLoader: Failed to load script: ${url}`, null, 2);\n                reject(new Error(`Failed to load script: ${url}`));\n            };\n            document.head.appendChild(script);\n        }));\n    }\n\n    /**\n     * Load a CSS file with Promise support\n     */\n    loadCSS(href) {\n        if (this.loadedThemes.has(href)) {\n            // Removed level 3 debug log - too verbose\n            return Promise.resolve();\n        }\n\n        Debug.log(`ResourceLoader: Loading CSS: ${href}`, null, 2);\n        return new Promise((resolve, reject) => {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = href;\n            link.onload = () => {\n                this.loadedThemes.add(href);\n                // Removed level 3 debug log - covered by level 2 logs\n                resolve();\n            };\n            link.onerror = () => {\n                Debug.error(`ResourceLoader: Failed to load CSS: ${href}`, null, 2);\n                reject(new Error(`Failed to load CSS: ${href}`));\n            };\n            document.head.appendChild(link);\n        });\n    }\n}\n","/**\n * String utility functions for the diff viewer\n */\nexport class StringUtils {\n    /**\n     * Escape HTML special characters to prevent XSS\n     * @param {string} unsafe - The potentially unsafe string to escape\n     * @returns {string} - HTML escaped string\n     */\n    static escapeHtml(unsafe) {\n        if (!unsafe || typeof unsafe !== 'string') return '';\n        return unsafe\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\")\n            .replace(/\\//g, \"&#x2F;\")\n            .replace(/\\\\/g, \"&#x5C;\")\n            .replace(/`/g, \"&#x60;\");\n    }\n\n    /**\n     * Escape a string for use in an HTML attribute\n     * @param {string} str - String to escape\n     * @returns {string} Escaped string\n     */\n    static escapeAttribute(str) {\n        if (!str) return '';\n        return str\n            .replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n}\n","/**\n * Translation Manager\n * Provides centralized access to translations throughout the application\n */\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\n\n/**\n * Singleton class that manages translations across the application\n */\nexport class TranslationManager extends BaseSingleton {\n    /**\n     * @private\n     * Singleton instance\n     */\n    static _instance = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {TranslationManager} The singleton instance\n     */\n    static getInstance() {\n        if (!TranslationManager._instance) {\n            TranslationManager._instance = new TranslationManager();\n            Debug.log('TranslationManager: Instance created', null, 2);\n        }\n        return TranslationManager._instance;\n    }\n\n    /**\n     * Constructor - private, use getInstance()\n     */\n    constructor() {\n        super();\n        this.translations = {};\n        this.lang = 'en';\n        this.initialized = false;\n\n        // IMPORTANT: Initialize immediately with window.diffConfig if available\n        this._initializeFromGlobalConfig();\n    }\n\n    /**\n     * Try to initialize from global config immediately\n     * @private\n     */\n    _initializeFromGlobalConfig() {\n        if (window.diffConfig && window.diffConfig.translations) {\n            Debug.log('TranslationManager: Auto-initializing from window.diffConfig', window.diffConfig.translations, 2);\n            this.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Initialize with language and translations\n     * @param {string} lang - The language code\n     * @param {Object} translations - Translation key-value pairs\n     */\n    initialize(lang = 'en', translations = {}) {\n        this.lang = lang;\n        this.translations = translations;\n        this.initialized = true;\n        Debug.log(`TranslationManager: Initialized with \"${lang}\" language`, this.translations, 2);\n    }\n\n    /**\n     * Get a translation by key\n     * @param {string} key - The translation key\n     * @param {string} defaultValue - Default value if key not found (defaults to key itself)\n     * @returns {string} The translated text or default value\n     */\n    get(key, defaultValue = null) {\n        // If not initialized and window.diffConfig exists, try to initialize from there\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n\n        // Check if we have translations for the current language\n        if (this.translations[this.lang] && this.translations[this.lang][key]) {\n            return this.translations[this.lang][key];\n        }\n\n        // Fallback to English if the key exists there\n        if (this.translations['en'] && this.translations['en'][key]) {\n            Debug.log(`TranslationManager: Key \"${key}\" not found in \"${this.lang}\", using English fallback`, null, 2);\n            return this.translations['en'][key];\n        }\n\n        // Use provided default or key itself\n        return defaultValue !== null ? defaultValue : key;\n    }\n\n    /**\n     * Check if initialization has been completed\n     * @returns {boolean} True if initialized\n     */\n    isInitialized() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.initialized;\n    }\n\n    /**\n     * Get the current language\n     * @returns {string} The current language code\n     */\n    getLanguage() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.lang;\n    }\n\n    /**\n     * Get all translations\n     * @returns {Object} All translations\n     */\n    getAllTranslations() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return {...this.translations};\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DiffViewer } from './components/DiffViewer';\nimport { ResourceLoader } from './utils/ResourceLoader';\nimport availableThemes from './data/highlightjs-themes.json';\nimport { ThemeManager } from './components/ThemeManager';\nimport { Debug } from './utils/Debug';\nimport { ConfigUtils } from './utils/ConfigUtils';\nimport { DOMUtils } from './utils/DOMUtils';\nimport Selectors from './constants/Selectors';\nimport { BrowserUIManager } from './components/viewer/BrowserUIManager';\nimport { EndpointDiscovery } from './utils/EndpointDiscovery';\nimport { LoaderManager } from './utils/LoaderManager';\nimport { TranslationManager } from './utils/TranslationManager';\nimport AlertManager from './utils/AlertManager';\nimport { DiffConfigManager } from './utils/DiffConfigManager';\n\n// Module-level singleton instance\nlet browserUIManagerInstance = null;\n\n// Initialize endpoint discovery early\nconst endpointDiscovery = EndpointDiscovery.getInstance();\n\n// Add copyright link to forms with vdm-form class\nfunction addCopyrightLink() {\n    // Find all forms with the vdm-form class\n    const forms = document.querySelectorAll('.vdm-form');\n\n    forms.forEach(form => {\n        // Check if the copyright link already exists to prevent duplicates\n        const existingLink = form.parentNode.querySelector('.vdm-copyright-link');\n        if (existingLink) return;\n\n        // Create the copyright link element\n        const linkContainer = document.createElement('div');\n        linkContainer.className = 'vdm-copyright-link';\n        linkContainer.style.cssText = 'text-align: right; font-size: 11px; margin-top: 4px; opacity: 0.7;';\n\n        // Create the actual link\n        linkContainer.innerHTML = '<a href=\"https://visual-diff-merge.miglisoft.com/\" rel=\"noopener\" target=\"_blank\" style=\"text-decoration: none; color: inherit;\">Powered by Visual-Diff-Merge</a>';\n\n        // Insert the link after the form\n        form.parentNode.insertBefore(linkContainer, form.nextSibling);\n    });\n}\n\n// Run the function when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', addCopyrightLink);\n\n// Also run it when the window loads (for dynamically created forms)\nwindow.addEventListener('load', addCopyrightLink);\n\nwindow.enableDiffViewer = async function () {\n    // Enhanced config extraction with proper nested structure handling\n    let debug = false;\n    let logLevel = 1;\n\n    // Check multiple possible config structures\n    if (window.diffConfig) {\n        // Direct config properties (most common)\n        if (typeof window.diffConfig.debug !== 'undefined') {\n            debug = window.diffConfig.debug;\n            logLevel = window.diffConfig.logLevel || 1;\n        }\n        // Nested config structure (from DiffConfigManager)\n        else if (window.diffConfig.config && typeof window.diffConfig.config.debug !== 'undefined') {\n            debug = window.diffConfig.config.debug;\n            logLevel = window.diffConfig.config.logLevel || 1;\n        }\n        // Success response structure (from API calls)\n        else if (window.diffConfig.success && window.diffConfig.config) {\n            debug = window.diffConfig.config.debug || false;\n            logLevel = window.diffConfig.config.logLevel || 1;\n        }\n    }\n\n    // Add debug trace to identify the exact structure being used\n    console.log('=== DEBUG CONFIG EXTRACTION ===', {\n        windowDiffConfigExists: !!window.diffConfig,\n        configStructure: window.diffConfig ? Object.keys(window.diffConfig) : 'none',\n        directDebug: window.diffConfig?.debug,\n        nestedDebug: window.diffConfig?.config?.debug,\n        finalDebug: debug,\n        finalLogLevel: logLevel\n    });\n\n    Debug.initialize(debug, '[DiffViewer]', logLevel);\n\n    // Initialize centralized loader management\n    const loaderManager = LoaderManager.getInstance();\n\n    const translationManager = TranslationManager.getInstance();\n\n    // Run the copyright link function again to catch any dynamically added forms\n    addCopyrightLink();\n\n    // Initialize translation manager if needed and if config contains translations\n    if (window.diffConfig?.translations && !translationManager.isInitialized()) {\n        const configLang = window.diffConfig.lang || 'en';\n        Debug.log(`Initializing TranslationManager with language: ${configLang}`, null, 2);\n        translationManager.initialize(configLang, window.diffConfig.translations);\n    }\n\n    // Get loading message from translations or use default\n    const initialMessage = translationManager.get('loadingDiff', 'Loading diff...');\n\n    // Try to adopt any early loader that might exist from URL/file components\n    // This ensures a smooth transition from early loading to main app loading\n    const mainLoaderId = loaderManager.adoptEarlyLoader(initialMessage);\n\n    try {\n        // PHASE 1: PREPARATION - level 1 log (phase boundary)\n        Debug.log('INITIALIZATION - PHASE 1: PREPARATION', null, 1);\n\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingContent', 'Loading content...'));\n\n        // Check for identical files first\n        if (window.diffConfig?.isIdentical) {\n            // Get message from translations\n            const message = translationManager.get('filesIdenticalMessage', 'The files are identical. No differences found.');\n            DOMUtils.showMessage(Selectors.DIFF.CONTENT_WRAPPER.name(), message, 'info');\n\n            // Hide the loader since we're done\n            loaderManager.hideMainLoader(mainLoaderId);\n\n            return;\n        }\n\n        // Make sure serverSaveEnabled is explicitly set in the diffConfig\n        // This ensures the BrowserUIManager can access it before creating UI controls\n        // Note: We delay this check until after UI preparation to allow FileBrowserManager to configure it first\n\n        // Discover API endpoint early in the initialization process\n        try {\n            loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('discoveringEndpoints', 'Discovering API endpoints...'));\n            const apiEndpoint = await endpointDiscovery.getEndpoint();\n            Debug.log('API endpoint discovered', apiEndpoint, 2);\n\n            // Update diffConfig with discovered endpoint\n            if (window.diffConfig && !window.diffConfig.apiEndpoint) {\n                window.diffConfig.apiEndpoint = apiEndpoint;\n            }\n        } catch (error) {\n            Debug.warn('API endpoint discovery failed, using fallbacks', error, 1);\n        }\n\n        // Check for identical files first\n        if (window.diffConfig?.isIdentical) {\n            // Get message from translations\n            const message = translationManager.get('filesIdenticalMessage', 'The files are identical. No differences found.');\n            DOMUtils.showMessage(Selectors.DIFF.CONTENT_WRAPPER.name(), message, 'info');\n\n            // Hide the loader since we're done\n            loaderManager.hideMainLoader(mainLoaderId);\n\n            return;\n        }\n\n        // Check if we already have an active instance and destroy it\n        if (window.diffViewer) {\n            Debug.log('Cleaning up previous instance', null, 1);\n            loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('cleaningUpPrevious', 'Cleaning up previous instance...'));\n\n            if (typeof window.diffViewer.destroy === 'function') {\n                await window.diffViewer.destroy();\n            }\n            window.diffViewer = null;\n        }\n\n        // Clean up UI manager if it exists\n        if (window.vdmBrowserUIManager) {\n            Debug.log('Cleaning up browser UI manager', null, 1);\n            if (typeof window.vdmBrowserUIManager.destroy === 'function') {\n                window.vdmBrowserUIManager.destroy();\n            }\n            window.vdmBrowserUIManager = null;\n        }\n\n        // Level 1 log - overall initialization started\n        Debug.log('INITIALIZATION - STARTING', null, 1);\n\n        // Validate configuration\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('validatingConfig', 'Validating configuration...'));\n        const validationResult = ConfigUtils.validateConfig(window.diffConfig);\n        if (!validationResult.isValid) {\n            Debug.error(validationResult.error);\n            loaderManager.hideMainLoader(mainLoaderId);\n            return;\n        }\n\n        // High-level summary of what we're loading\n        Debug.log('CONFIGURATION SUMMARY', ConfigUtils.getConfigSummary(window.diffConfig), 1);\n\n        // PHASE 2: SERVICES INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 2: SERVICES', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingServices', 'Initializing services...'));\n\n        // Get saved theme preferences\n        const themePrefs = ConfigUtils.getThemePreferences(window.diffConfig);\n\n        // 1. Configure ResourceLoader WITHOUT theme loading\n        const resourceLoader = ResourceLoader.getInstance();\n        resourceLoader.configure({\n            availableThemes: availableThemes,\n            currentTheme: themePrefs.mode,\n            currentThemeFamily: themePrefs.family,\n            language: ConfigUtils.getFileExtension(window.diffConfig.filepath, 'php')\n        });\n\n        // 2. Initialize ThemeManager as the ONLY theme loader\n        const themeManager = ThemeManager.getInstance();\n        themeManager.initialize({\n            theme: window.diffConfig.theme\n        }, resourceLoader);\n\n        // PHASE 2.5: UI PREPARATION - Generate required DOM elements first\n        Debug.log('INITIALIZATION - PHASE 2.5: UI PREPARATION', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('preparingUI', 'Preparing UI elements...'));\n\n        // Detect if we're in file browser mode - container wrapper exists but diff container doesn't\n        const containerWrapper = document.getElementById(Selectors.CONTAINER.WRAPPER.name());\n        const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n        const isFileBrowser = containerWrapper && !diffContainer;\n\n        // If in file browser mode, create UI elements BEFORE initializing DiffViewer\n        if (isFileBrowser) {\n            Debug.log('Creating browser UI elements before DiffViewer initialization', null, 1);\n\n            // Create a temporary BrowserUIManager with config options\n            const tempUIManager = new BrowserUIManager({\n                options: window.diffConfig || {}\n            });\n\n            // Generate UI elements - container wrapper already exists from the PHP template\n            tempUIManager.initialize();\n\n            // Store reference and clean up later\n            browserUIManagerInstance = tempUIManager;\n            window.vdmBrowserUIManager = tempUIManager;\n\n            // Wait a short time to ensure DOM elements are fully created (important!)\n            await new Promise(resolve => setTimeout(resolve, 50));\n        }\n\n        // PHASE 3: COMPONENT INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 3: COMPONENTS', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingComponents', 'Initializing components...'));\n\n        // Now that DOM elements should exist, get the container - checking several times if needed\n        let container = document.querySelector(Selectors.DIFF.VIEWER);\n        let attempts = 0;\n        const maxAttempts = 5;\n\n        // If we're in file browser mode and container isn't found immediately, try a few times\n        if (isFileBrowser) {\n            while (!container && attempts < maxAttempts) {\n                Debug.log(`Container element ${Selectors.DIFF.VIEWER} not found, attempt ${attempts + 1}/${maxAttempts}`, null, 2);\n                await new Promise(resolve => setTimeout(resolve, 100)); // Wait 100ms between attempts\n                container = document.querySelector(Selectors.DIFF.VIEWER);\n                attempts++;\n            }\n        }\n\n        if (!container) {\n            Debug.error(`Container element ${Selectors.DIFF.VIEWER} not found after ${attempts} attempts`);\n            loaderManager.hideMainLoader(mainLoaderId);\n            return;\n        }\n\n        // Show the container (hide loading indicator if it exists)\n        const loadingElement = document.querySelector(Selectors.LOADER.MAIN);\n        if (loadingElement) {\n            loadingElement.style.display = 'none';\n            Debug.log('Loading element hidden', null, 2);\n        }\n\n        if (container) {\n            container.style.display = 'flex'; // Changed from 'block' to 'flex'\n            Debug.log('Container element shown', null, 2);\n        }\n\n        // Make sure serverSaveEnabled is properly set NOW (after UI preparation)\n        // This allows FileBrowserManager to configure it first via DiffConfigManager\n        const diffConfigManager = DiffConfigManager.getInstance();\n\n        // Read serverSaveEnabled from window.diffConfig (via DiffConfigManager interface)\n        const serverSaveEnabled = diffConfigManager.get('serverSaveEnabled', false);\n        Debug.log(`Using serverSaveEnabled=${serverSaveEnabled} from DiffConfigManager`, null, 2);\n\n        // 3. Create DiffViewer with runtime properties and pass the mainLoaderId\n        const diffViewer = new DiffViewer({\n            // Runtime properties - read directly from DiffConfigManager (which uses window.diffConfig)\n            diffData: diffConfigManager.get('diffData'),\n            serverSaveEnabled: serverSaveEnabled,\n            // SECURITY: Use only fileRefId and filenames, not server paths\n            fileRefId: diffConfigManager.get('fileRefId', ''),\n            oldFileRefId: diffConfigManager.get('oldFileRefId', ''),\n            newFileName: diffConfigManager.get('newFileName', ''),\n            oldFileName: diffConfigManager.get('oldFileName', ''),\n            isIdentical: diffConfigManager.get('isIdentical', false),\n            filepath: diffConfigManager.get('filepath'),\n\n            // Dependencies (not config values)\n            resourceLoader: resourceLoader,\n            themeManager: themeManager,\n            endpointDiscovery: endpointDiscovery,\n\n            // Pass the centralized loader management ID\n            mainLoaderId: mainLoaderId\n        });\n\n        // Store reference\n        window.diffViewer = diffViewer;\n\n        // If we created a temporary UI manager, update it with the actual diffViewer instance\n        if (isFileBrowser && browserUIManagerInstance) {\n            browserUIManagerInstance.setDiffViewer(diffViewer);\n            // Set the browserUIManager on the diffViewer to ensure proper bidirectional reference\n            diffViewer.setBrowserUIManager(browserUIManagerInstance);\n        }\n\n        // PHASE 4: RESOURCE LOADING - level 1 log\n        Debug.log('INITIALIZATION - PHASE 4: RESOURCES', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingResources', 'Loading resources...'));\n\n        // 4. Load core dependencies - syntax highlighter ONLY, no theme\n        await resourceLoader.loadSyntaxHighlighterCore();\n\n        // 5. Load theme ONCE through ThemeManager\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingTheme', 'Loading theme...'));\n        await themeManager.loadInitialTheme();\n\n        // PHASE 5: UI INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 5: UI', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingUI', 'Initializing UI...'));\n\n        // 7. Initialize UI after all resources are loaded\n        await diffViewer.initialize();\n\n        // Mark as loaded using DOMUtils\n        const diffContainerElement = document.querySelector(Selectors.DIFF.CONTAINER);\n        if (diffContainerElement) {\n            diffContainerElement.classList.add(Selectors.STATUS.LOADED.name());\n        }\n\n        // PHASE 6: COMPLETION - level 1 log\n        Debug.log('INITIALIZATION - COMPLETE', null, 1);\n\n        // Hide the loader now that initialization is complete\n        loaderManager.hideMainLoader(mainLoaderId);\n\n        return diffViewer;\n    } catch (error) {\n        Debug.error('Error initializing diff viewer:', error);\n        const viewerElement = document.querySelector(Selectors.DIFF.VIEWER);\n        if (viewerElement) {\n            // Use AlertManager for error display\n            const alertManager = AlertManager.getInstance();\n\n            // Get error message from translations if possible\n            const errorTitle = translationManager.get('errorLoadingDiff', 'Error loading diff');\n            const errorMessage = `\n                <h4>${errorTitle}</h4>\n                <p>${error instanceof Error ? error.message : String(error)}</p>\n            `;\n\n            const alertElement = alertManager.showError(errorMessage, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false, // Message is already prepared with translations\n                className: 'vdm-w-100' // Make alert fill the container width\n            });\n\n            // Clear the viewer and add the alert\n            viewerElement.innerHTML = '';\n            viewerElement.appendChild(alertElement);\n            viewerElement.style.display = 'flex';\n        }\n\n        // Always hide the loader on error\n        loaderManager.hideMainLoader(mainLoaderId);\n    }\n};\n\n// Explicitly export the BrowserUIManager to the global window object\n// This ensures it's available to external scripts like file-browser.js\nwindow.BrowserUIManager = BrowserUIManager;\n\n// Export the LoaderManager to the global window object so it can be used\n// by components before the main app initializes\nwindow.LoaderManager = LoaderManager;\n\n// Make TranslationManager available globally\nwindow.TranslationManager = TranslationManager;\n\n// Make AlertManager available globally\nwindow.AlertManager = AlertManager;\n\n// Make DiffConfigManager available globally\nwindow.DiffConfigManager = DiffConfigManager;\n\n// Export components for module bundlers\nexport {\n    DiffViewer,\n    BrowserUIManager,\n    EndpointDiscovery,\n    LoaderManager,\n    DiffConfigManager\n};\n"],"names":["root","factory","exports","module","define","amd","a","i","this","ChunkManager","diffViewer","_classCallCheck","chunks","oldContent","newContent","chunkElements","renderer","ChunkRenderer","selectionHandler","ChunkSelectionHandler","contentGenerator","MergeContentGenerator","SELECTED_STATE","Selectors","DIFF","CHUNK_SELECTED","name","UNSELECTED_STATE","CHUNK_UNSELECTED","_performanceMetrics","initTime","renderTime","chunkCount","Debug","log","key","value","diffData","startTime","performance","now","ChunkUtils","clearCache","old","length","forEach","chunk","conflict","concat","diffNavigator","updateCounter","endTime","toFixed","validateChunkStructure","renderChunks","visualStateManager","initialize","setupChunkSelection","initChunkElements","msPerChunk","Math","max","chunkId","side","state","toggleChunkSelection","selections","getSelections","generateMergedContent","lines","generateFileFromLines","_this","index","elements","getChunkElements","id","sortedElements","sortElementsByLineNumber","warn","initializedCount","filter","Boolean","error","anyChunkElements","document","querySelectorAll","CHUNK","anyChunkIdElements","validChunks","invalidChunks","type","valid","invalid","total","metrics","_objectSpread","getMetrics","cacheStats","getCacheStats","get","DiffNavigator","initializeImmediately","arguments","undefined","currentChunkIndex","chunkManager","navigationCounter","NavigationCounter","uiBuilder","NavigationUIBuilder","conflictNavigator","ConflictNavigator","initNavigation","_this$diffViewer$chun","configChunks","diffConfig","addNavigationButtons","setupKeyboardShortcuts","navigateToFirstConflict","disableButtons","ui","createNavigationUI","setCounterElement","counter","setButtons","prevButton","nextButton","disabled","textContent","addEventListener","event","target","tagName","ctrlKey","metaKey","preventDefault","navigateToNextConflict","navigateToPrevConflict","navigateToChunk","destroy","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","String","Number","_toPrimitive","DiffViewer","_window$diffConfig","_window$diffConfig2","_window$diffConfig3","_window$diffConfig4","_window$diffConfig5","_window$diffConfig6","_window$diffConfig7","_window$diffConfig8","_window$diffConfig9","options","config","ConfigUtils","mergeConfigurations","lang","debug","logLevel","theme","defaultFamily","defaultMode","showSelector","apiEndpoint","window","runtimeProps","serverSaveEnabled","fileRefId","oldFileRefId","newFileName","oldFileName","isIdentical","filepath","demoEnabled","mainLoaderId","translationManager","TranslationManager","getInstance","isInitialized","translations","container","querySelector","VIEWER","_initializeServices","_createComponents","resourceLoader","ResourceLoader","themeManager","ThemeManager","themeSelector","ThemeSelector","modalManager","ModalManager","syntaxHighlighter","SyntaxHighlighter","themeToggle","ThemeToggle","browserUIManager","THEME","TOGGLE","CONTAINER","WRAPPER","mergeHandler","MergeHandler","scrollSynchronizer","ScrollSynchronizer","iconMarkerManager","IconMarkerManager","layoutManager","LayoutManager","_initialize","_callee","_context","_initializeData","_loadResources","_renderUI","_setupUIFeatures","_showDemoModeWarning","initModals","t0","_handleInitializationError","errorText","errorMessage","createElement","className","UTILITY","ALERT_DANGER","innerHTML","message","appendChild","style","display","_initializeData2","_callee2","_this$runtimeProps$di","_this$runtimeProps$di2","_this$runtimeProps$di3","_context2","initChunks","_loadResources2","_callee3","currentTheme","_context3","highlightJsLoaded","loadHighlightJs","getCurrentTheme","applyTheme","family","mode","_renderUI2","_callee4","_this$runtimeProps$di4","_diffContainer$parent","_diffContainer$parent2","containerWrapper","themeSwitcher","diffContainer","_context4","highlightAll","DOMUtils","toggleClass","classList","contains","remove","SWITCHER","parentNode","insertBefore","_setupUIFeatures2","_callee5","diffLoadedEvent","_context5","setupSynchronizedScrolling","initializeIconMarkers","CustomEvent","detail","timestamp","Date","viewer","dispatchEvent","_this$browserUIManage","AlertManager","alertManager","comparisonForm","showAlert","dismissable","translate","targetElement","placement","timeout","newConfig","props","_window$diffConfig10","_window$diffConfig11","_window$diffConfig12","_window$diffConfig13","windowDiffConfig","hasFileRefId","hasOldFileRefId","hasNewFileName","hasOldFileName","_window$diffConfig14","_window$diffConfig15","_window$diffConfig16","_window$diffConfig17","_window$diffConfig18","_window$diffConfig19","isBeautified","_getEndpoint","_callee6","endpointName","endpointDiscovery","endpoint","_this$config","defaultEndpoints","_context6","EndpointDiscovery","getEndpoint","apiEndpoints","_x","setBrowserUIManager","previewManager","MergePreviewManager","uiController","MergeUIController","operationHandler","MergeOperationHandler","getRuntimeProps","setupLocalOnlyControls","handlePreviewClick","mergeType","proceedWithMerge","countUnresolvedConflicts","unresolvedCount","showConflictModal","highlightUnresolvedChunks","resolved","success_message","showSuccess","showWarning","language","setLanguage","_loadHighlightJs","loadSyntaxHighlighterCore","hljs","getElements","LINE_CONTENT","LINE_CONTENT_EMPTY","LINE_PLACEHOLDER","codeElements","Array","from","el","trim","loaderId","loaderManager","LoaderManager","loadingMessage","showLoader","fullscreen","zIndex","processBatch","hideLoader","duration","end","min","highlightElement","progress","round","progressMessage","replace","updateLoaderMessage","requestAnimationFrame","setTimeout","element","withLineNumbers","split","cls","startsWith","add","MergeContentFormatter","resetHighlighting","lineNumbersBlock","_setLanguage","_runtimeProps$diffDat","newLanguage","sourceUsed","extension","includes","toLowerCase","languageMap","loadedLanguages","has","loadLanguage","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","valueOf","Reflect","construct","_getPrototypeOf","bind","_setPrototypeOf","instance","_BaseSingleton","_isFirstInstance","initialized","availableThemes","defaultTheme","listeners","_inherits","savedFamily","localStorage","getItem","savedMode","_this$availableThemes","_this$availableThemes2","fallbackToDefaults","alternateMode","_this$availableThemes3","_this$availableThemes4","getThemeCdnBase","getThemeCdnVersion","_applyTheme","themeUrl","activeTheme","themeLink","getThemeUrl","getAttribute","loadCSS","link","updateContainerThemeClass","setItem","notifyListeners","_x2","getElementById","DARK","LIGHT","MODE_PREFIX","_setThemeMode","_x3","_setThemeFamily","_x4","listener","_this2","_loadInitialTheme","BaseSingleton","selectElement","boundHandleThemeChange","handleThemeChange","_isThemeSelectorEnabled","existingSelector","SELECTOR","updateSelector","removeEventListener","selectorElements","generateThemeSelector","populateSelectorOptions","createSelectorElement","addSelectorToDOM","addListener","_this$diffViewer","_this$diffViewer2","getConfig","selector","_this3","getAvailableThemeFamilies","count","themeKey","createAndAppendElement","attributes","selected","content","formatThemeName","THEME_SELECTOR","MARGIN_END_3","classes","FORM_SELECT","themeName","map","word","toUpperCase","join","themeSwitcherContainer","getElement","firstChild","optionsCount","_this$diffViewer3","_this4","selectedTheme","showThemeLoading","setThemeFamily","hideThemeLoading","toggleElementId","containerId","toggleElement","checked","handleToggle","updateToggle","newMode","setThemeMode","leftHtml","buildDiffPaneHtml","rightHtml","PANES_CONTAINER","PANE","PANE_LEFT","PANE_RIGHT","_step","chunksWithPlaceholders","Set","_iterator","_createForOfIteratorHelper","line","err","html","PANE_CONTENT","TABLE_WRAPPER","CODE","TABLE","_step2","lineCounter","_iterator2","_renderDiffLine","lineNumber","chunkType","find","LINE_NUMBER","hasPlaceholder","_renderPlaceholderLine","_renderContentLine","additionalClass","STATUS","UNRESOLVED","placeholderType","lineContent","isEmpty","_getChunkClass","LINE_EMPTY","displayContent","StringUtils","escapeHtml","styleAttr","LINE_DELETE","LINE_ADD","LINE_REPLACE_LEFT","LINE_REPLACE_RIGHT","ChunkVisualStateManager","SELECTED","UNSELECTED","lastOperationTime","operationCount","_boundClickHandler","_handleClick","_boundCheckAllHandler","_handleCheckAll","setupEventHandlers","removeExisting","styles","cursor","_setupCheckAllButtons","panes","leftPane","rightPane","_createCheckAllButtonHeader","pane","header","PANE_HEADER","langBadge","checkAllButton","BUTTON","BUTTON_EXTRA_SMALL","BUTTON_SECONDARY","CHECK_ALL_BTN","setAttribute","title","alignItems","verticalAlign","iconWrapper","marginRight","height","lineHeight","uncheckIcon","IconRegistry","createIcon","width","textSpan","createTextNode","button","currentTarget","iconState","oppositeButton","_getOppositeButton","_setButtonProcessingState","_toggleButtonIconState","clearAllSelections","selectAllOnSide","_recordPerformanceMetrics","isProcessing","opacity","operationTime","elementHitRatio","elementCacheHits","elementCacheMisses","iconHitRatio","iconMarkerCacheHits","iconMarkerCacheMisses","totalOperations","currentSide","oppositeSide","currentState","newIconState","useBatch","conflictChunks","largeDiff","_syncWithDiffConfig","chunksBySide","Map","updateVisualState","set","applyBatch","_refreshIconStates","RESOLVED","_updateNavigationCounter","onSelectionChange","selectedSide","selectedElements","oppositeElements","firstElement","lineId","dataset","iconMarker","getIconMarker","ICONS","SELECT","SELECT_LEFT","SELECT_RIGHT","row","getParentRow","firstOppositeElement","oppositeLineId","oppositeIconMarker","isPlaceholderType","wasPlaceholder","MARKER_PLACEHOLDER","selectedLineId","selectedElement","selectedHasPlaceholder","selectedIsPlaceholderType","outerHTML","substring","_this$chunkManager$di","chunkSelections","resetVisualState","batch","_this$chunkManager$di2","_this$chunkManager$di3","isChunkResolved","selectedChunks","selectedChunkIds","elementsToUpdate","_this4$chunkManager$d","_chunkId","_this4$chunkManager$d2","_pendingOperations","_isBatching","_metrics","lastBatchSize","lastBatchTime","preloadChunks","_applyStateToElements","_updateIconMarker","_updateOppositeMarker","_notifySelectionChange","_element$dataset","lineIdParts","oppositeMarker","currentClasses","iconMarkers","getChunkIconMarkers","_applyResetToElements","notify","batchSize","updateOperations","resetOperations","operation","_processBatchedResets","_processBatchedUpdates","processingTime","operations","resetOps","updateOps","msPerOperation","allElements","allIconMarkers","_toConsumableArray","elementsByState","firstElementsByState","_elementsByState$stat","entries","_ref","_ref2","_slicedToArray","_ref3","_ref4","chunksMap","_ref5","_ref6","data","body","getBoundingClientRect","removeClasses","addClass","rows","_element$classList","PLACEHOLDER","_row$classList","iconRemoveClasses","_el$classList","_row$classList2","marker","_marker$classList","isPlaceholder","contentArray","linesCount","totalContentLines","sampleLines","totalChunks","generateFileContent","mergedLines","oldChunkLines","newChunkLines","processedChunks","chunkLine","totalMergedLines","_l$line","mergedContent","totalLines","contentLength","_proceedWithMerge","result","resultContainer","alertElement","_resultContainer","_alertManager","_alertElement","_resultContainer2","_alertManager2","_alertElement2","success","applyMerge","scrollToMergeResult","showError","_applyMerge","wasBeautified","formParams","response","JSON","stringify","isContentBeautified","action","fetch","headers","URLSearchParams","json","resultElement","scrollIntoView","behavior","block","setupPreviewButton","previewButton","MERGE","BUTTON_PREVIEW","getMergedResultButton","GET_MERGED_RESULT_BTN","buttonToUse","newBtn","cloneNode","replaceChild","getIconHtml","_this$diffViewer$runt","getMergedContent","formattedContent","formatPreview","setContent","MODAL","PREVIEW_FILENAME","PREVIEW","PREVIEW_CONTENT_ID","controlsContainer","FLEX","JUSTIFY_CONTENT_BETWEEN","MARGIN_TOP_2","PADDING_2","messageArea","ALIGN_ITEMS_CENTER","open","applySyntaxHighlighting","CopyButton","addCopyButtonsToPreview","showPreviewError","_DOMUtils$getElement","preElement","codeElement","escapedError","showMessage","mergeDestination","mergeToggleBtn","mergeToggleIcon","mergeToggleText","initMergeDestinationToggle","setupModalButtons","setupApplyMergeButton","DESTINATION_DROPDOWN","DESTINATION_TOGGLE","populateMergeDestinations","savedDestination","valueExists","selectedIndex","setupMergeToggleEvents","_diffData$new","_runtimeProps$filepat","_diffData$old","filename","newFile","oldFile","newFileWithoutExt","lastIndexOf","oldFileWithoutExt","newFileExt","oldFileExt","newMergedFile","oldMergedFile","saveOptions","saveToOriginal","saveWithSuffix","saveToOld","saveToOldWithSuffix","saveToBoth","saveToBothWithSuffix","optionCount","newToggleBtn","newMergeDestination","dropdownIcon","MARGIN_START_2","stopPropagation","focus","showPicker","clickEvent","MouseEvent","bubbles","cancelable","view","updateMergeToggle","paddingRight","appearance","borderColor","newFileColorClass","newFileBtnClass","BUTTON_PRIMARY","oldFileBtnClass","BUTTON_WARNING","bothFilesBtnClass","BUTTON_INFO","iconHtml","colorClass","buttonClass","iconClasses","MARGIN_END_1","applyButton","BUTTON_APPLY","BUTTON_SUCCESS","BUTTON_DANGER","closest","CONTINUE_BTN","close","CONFLICT_MODAL","previewModalId","MERGE_BTN","getMergeType","registerBeforeOpenCallback","continueBtn","mergeBtn","onclick","mergeControlsActions","CONTROLS_ACTIONS","toString","destinationDropdown","toggleButton","form","justifyContent","destinationContainer","handleApplyMerge","Event","formatUnresolvedCount","MESSAGE","newContinueBtn","newMergeBtn","_this$mergeDestinatio","chunkIndex","indexOf","chunkElement","NavigationUtils","addHighlightEffect","_this5","getMergedResultText","getMergedResultTooltip","getMergedResultBtn","downloadIconHtml","buttonContainer","spacer","flex","modals","activeModal","createModal","CONFIRM","contentId","contentClass","PADDING_3","footerButtons","text","class","MARGIN_END_2","PREVIEW_CONTENT","headerClass","HEADER_FIXED","modalClass","_setupEventListeners","modalId","HEADER","modalHtml","attr","CONTENT","TITLE","CLOSE","FOOTER","isCloseButton","iconName","classNames","some","_appendToBody","isOpen","modalElement","setFullscreenSize","events","_ref7","_ref8","eventName","handler","buttonText","tempContainer","firstElementChild","backdrop","BACKDROP","matches","modal","callback","beforeOpenCallbacks","register","_showModal","displayBefore","overflow","_hideModal","contentSelector","contentType","contentPreview","targetSelector","_container","found","containsPre","hasPreElements","innerHtmlLength","Element","elementType","elementId","FULLSCREEN","headerHeight","offsetHeight","codeText","CODE_COPY","COPY_CONTENT","FIXED_FOOTER","safeText","_escapeHtml","COPY","DIALOG","INSTRUCTIONS","TEXTAREA","TEXTAREA_ELEM","ACTIONS","textarea","copyBtn","select","_navigator$clipboard","navigator","clipboard","writeText","_showCopySuccess","_err","execCommand","_showCopyFailure","_this6","cancelText","confirmText","_defineProperty","click","onConfirm","onCancel","_this7","alertClass","ALERT","ALERT_PREFIX","ALERT_INFO","onClose","alertContent","unresolvedElements","unresolvedChunkIds","_this$_getUnresolvedC","_getUnresolvedChunkInfo","firstUnresolvedIndex","findIndex","currentIndex","_this$_getUnresolvedC2","nextIndex","_findNextChunkIndex","indexMap","_createChunkIndexMap","size","indices","sort","b","_this$_getUnresolvedC3","prevIndex","_findPrevChunkIndex","paneContent","scrollElementIntoView","counterElement","conflictCount","activeConflicts","position","NAVIGATION","_createControls","COUNTER","PREV_BUTTON","NEXT_BUTTON","navChunk","NAV_CHUNK","COUNTER_ELEMENT","BUTTON_FLAT","BUTTON_SMALL","newPrevButton","newNextButton","directElement","querySelectorElement","preElements","pre","ICON","TEXT","codeEl","textToCopy","_sourceCodeElement","hasAttribute","_decodeHTMLEntities","_showManualCopyModal","_showProcessingState","PROCESSING","COPIED","createCopyModal","BrowserUIManager","_this$options","translationsSource","mergeControls","hasWindowConfig","hasOptionsTranslations","getLanguage","getAllTranslations","_this$options2","containerSelector","generateDiffContainer","generateThemeSwitcher","generateMergeControls","themeSwitcherId","themeLoadingId","LOADING_INDICATOR","themeToggleId","cssText","switcherWrapper","THEME_SWITCHER","sunIcon","moonIcon","LABEL","CONTROL","SLIDER","SLIDER_ROUND","loadingContainer","themeLoadingContainer","observer","MutationObserver","mutations","disconnect","containerParent","observe","subtree","childList","attributeFilter","themeSelectorId","selectorContainer","themeSelectorContainer","removeChild","diffContainerId","viewerId","viewerElement","mutation","attributeName","createdViewer","getTranslations","previewButtonId","toggleButtonId","toggleIconId","TOGGLE_ICON","toggleTextId","TOGGLE_TEXT","dropdownId","applyButtonId","MARGIN_Y_2","previewSection","preview","mergeSection","toggleGroup","ALIGN_ITEMS_STRETCH","toggleIcon","toggleText","saveToOriginalTooltip","dropdown","whiteSpace","rect","scrollTop","pageYOffset","documentElement","top","existingThemeSwitcher","existingThemeSelector","existingThemeSelectorContainer","cellHeight","_calculateCellHeight","setProperty","_setupIconColumn","_updateIconColumnHeights","_setupIconHeightUpdater","codeTableWrapper","iconColumn","COLUMN","chunkCells","chunkGroups","cell","parseInt","firstCell","_createIconMarker","tableHeight","scrollHeight","transform","scrollLeft","SCROLLED","passive","MARKER","iconIndex","lineNumberCells","heights","sampleSize","medianHeight","floor","resizeTimer","clearTimeout","currentHeight","abs","paneWidth","updatePaneWidth","setupWidthObserver","newWidth","clientWidth","setCSSVariable","shouldUpdate","isSyncing","leftContent","rightContent","_handleScroll","_updateScrollState","sourceElement","contentElement","wasScrolled","isScrolled","selectorHandler","prop","processSelectors","obj","Proxy","baseSelectors","ROOT","CONTENT_WRAPPER","LOADER","ACTIVE","INDICATOR","INLINE","MAIN","SPINNER","PREVIEW_MODAL","CLOSE_BTN","CONFIRMATION_CONTENT","HIGHLIGHT","LOADED","TOOLTIP","ARROW","defaultUtilitySelectors","BUTTON_LARGE","ALERT_SUCCESS","ALERT_WARNING","FORM_SELECT_SM","FLEX_COLUMN","JUSTIFY_CONTENT_CENTER","MARGIN_2","MARGIN_BOTTOM_2","MARGIN_START_1","MARGIN_X_1","buttonPrimary","buttonSecondary","buttonInfo","buttonSuccess","buttonWarning","buttonDanger","buttonFlat","alert","alertInfo","alertSuccess","alertWarning","alertDanger","getUtilitySelectors","_callSuper","activeAlert","timeoutId","_ensureContainer","left","maxWidth","mergedOptions","useContainer","hasTargetElement","baseAlertClass","typeClass","selectorBase","selectorType","finalMessage","closeButton","hideAlert","nextSibling","_this$activeAlert","instanceVar","_elementCache","_iconMarkerCache","_rowCache","_chunkIndex","_cacheStats","rowCacheHits","rowCacheMisses","byId","byLineId","allChunkIds","allChunkElements","all","right","lineIds","allCacheKey","sideCacheKey","_a$dataset$lineId","_b$dataset$lineId","cacheKey","markers","m","_len","configs","_key","_i","_configs","isArray","isValid","console","diffDataKeys","new","configKeys","oldData","newData","_config$diffData","defaultExtension","_config$theme","_config$theme2","elementCache","buttonId","handlerFn","logName","instanceId","_handlerId","currentValue","toggleBtn","firstOption","secondOption","firstClass","secondClass","firstText","secondText","firstTooltip","secondTooltip","_iconName","_options$className","_options$elementId","_options$keepExisting","keepExisting","iconClass","HAS_ICON","visible","displayMode","containerElement","_options$id","_options$classes","_options$attributes","_options$content","Node","context","contextElement","insertAdjacentHTML","elementOrId","eventType","_options$context","_options$removeExisti","_options$styles","property","getIcon","DebugUtility","enabled","logHistory","maxLogHistory","prefix","current","level","attempted","shouldLog","_addToHistory","maxLevel","entry","args","shift","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","_classPrivateMethodInitSpec","_checkPrivateRedeclaration","_assertClassBrand","_DiffConfigManager_brand","WeakSet","DiffConfigManager","_serverConfigLoaded","_ensureServerConfigLoaded","apiBaseUrl","scripts","scriptSrc","match","configResponse","serverConfig","existingServerSaveEnabled","src","ok","status","_args2","ensureServerConfigLoaded","overrides","partialConfig","_mergeDeep","defaultValue","_instance","_","source","output","_isObject","item","_classPrivateFieldInitSpec","_classPrivateFieldSet","_classPrivateFieldGet","_apiEndpoint","WeakMap","_discoveryPromise","_EndpointDiscovery_brand","_discoverEndpoint","scriptEndpoint","configUrl","_determineEndpointFromScript","_getEndpointConfigUrl","statusText","fileName","baseUrl","discoverEndpoint","endsWith","_getApiUrl","endpointFile","scriptUrl","script","basePath","location","href","_options$width","_options$height","_options$title","_options$ariaHidden","ariaHidden","pathData","_getIconPathData","titleElement","viewBox","paths","svgString","template","activeLoaders","loaderIdCounter","isMainLoaderActive","recentlyRemovedLoaders","operationLog","maxLogEntries","verboseLogging","details","toISOString","translationKey","translatedMessage","loader","inline","small","spinner","messageElement","loaderElement","_createLoaderElement","HTMLElement","getComputedStyle","getPropertyValue","_logOperation","currentId","_hideAllInlineLoaders","mainLoaderElement","newMessageElement","isMainLoader","loaderInfo","isEarlyLoader","showMainLoader","providedId","actualMainId","_hideSpecificLoader","info","_removeLoaderElement","loaderIds","hideMainLoader","_loader$element","_loader$element2","clear","_loader$element$query","exists","isMain","age","inDom","wasRemoved","_cleanupOldRemovedLoaders","activeCount","recentlyRemovedCount","mainLoaderActive","loaders","_info$element$querySe","originalContent","escapedContent","languageClass","getLanguageClass","escapeAttribute","unresolvedChunkSingular","unresolvedChunksPlural","code","removeAttribute","originalText","scrollTarget","offsetTop","clientHeight","scrollTo","offsetX","offsetY","handleSelector","ignoreSelector","positionStyle","dragClass","isDragging","mouseDownHandler","clientX","bottom","clientY","mouseMoveHandler","containerRect","parentElement","newRight","newBottom","offsetWidth","mouseUpHandler","loadedResources","loadedThemes","CDN_BASE","HLJS_VERSION","LINE_NUMBERS_VERSION","_loadDependencies","_loadSyntaxHighlighterCore","loadScript","_loadLanguage","normalizedLang","url","loadPromise","resourceCache","_cacheResource","reject","onload","onerror","head","rel","unsafe","str","_initializeFromGlobalConfig","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","browserUIManagerInstance","addCopyrightLink","linkContainer","enableDiffViewer","configLang","initialMessage","_message","validationResult","themePrefs","isFileBrowser","tempUIManager","attempts","maxAttempts","loadingElement","diffConfigManager","diffContainerElement","errorTitle","windowDiffConfigExists","configStructure","directDebug","nestedDebug","finalDebug","finalLogLevel","adoptEarlyLoader","vdmBrowserUIManager","validateConfig","getConfigSummary","getThemePreferences","configure","currentThemeFamily","getFileExtension","setDiffViewer","loadInitialTheme","t1"],"sourceRoot":""}