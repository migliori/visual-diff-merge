{"version":3,"file":"diff-viewer.min.js","mappings":"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","sources":["webpack://diff-files/webpack/universalModuleDefinition","webpack://diff-files/./src/utils/Debug.js","webpack://diff-files/./src/utils/BaseSingleton.js","webpack://diff-files/./src/utils/ResourceLoader.js","webpack://diff-files/./src/constants/Selectors.js","webpack://diff-files/./src/utils/IconRegistry.js","webpack://diff-files/./src/utils/TranslationManager.js","webpack://diff-files/./src/utils/AlertManager.js","webpack://diff-files/./src/utils/DOMUtils.js","webpack://diff-files/./src/utils/ConfigUtils.js","webpack://diff-files/./src/utils/EndpointDiscovery.js","webpack://diff-files/./src/components/ThemeManager.js","webpack://diff-files/./src/components/ThemeSelector.js","webpack://diff-files/./src/utils/StringUtils.js","webpack://diff-files/./src/utils/MergeContentFormatter.js","webpack://diff-files/./src/utils/LoaderManager.js","webpack://diff-files/./src/components/SyntaxHighlighter.js","webpack://diff-files/./src/utils/ChunkUtils.js","webpack://diff-files/./src/components/chunks/ChunkRenderer.js","webpack://diff-files/./src/components/chunks/ChunkVisualStateManager.js","webpack://diff-files/./src/components/chunks/ChunkSelectionHandler.js","webpack://diff-files/./src/components/chunks/MergeContentGenerator.js","webpack://diff-files/./src/components/ChunkManager.js","webpack://diff-files/./src/components/ThemeToggle.js","webpack://diff-files/./src/components/modal/ModalManager.js","webpack://diff-files/./src/components/syntax/CopyButton.js","webpack://diff-files/./src/components/merge/MergePreviewManager.js","webpack://diff-files/./src/utils/NavigationUtils.js","webpack://diff-files/./src/components/merge/MergeUIController.js","webpack://diff-files/./src/components/merge/MergeOperationHandler.js","webpack://diff-files/./src/components/MergeHandler.js","webpack://diff-files/./src/components/navigator/NavigationCounter.js","webpack://diff-files/./src/components/navigator/NavigationUIBuilder.js","webpack://diff-files/./src/components/navigator/ConflictNavigator.js","webpack://diff-files/./src/components/DiffNavigator.js","webpack://diff-files/./src/components/viewer/ScrollSynchronizer.js","webpack://diff-files/./src/components/viewer/IconMarkerManager.js","webpack://diff-files/./src/components/viewer/LayoutManager.js","webpack://diff-files/./src/components/DiffViewer.js","webpack://diff-files/./src/components/viewer/BrowserUIManager.js","webpack://diff-files/./src/utils/DiffConfigManager.js","webpack://diff-files/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","/**\n * Debug utility for the diff viewer\n * Provides centralized logging with configuration options\n */\n\n/* eslint-disable no-console */\n// Disable console warnings for this file only since this is the official logging utility\n\nclass DebugUtility {\n    constructor() {\n        this.enabled = false;\n        this.logHistory = [];\n        this.maxLogHistory = 100;\n        this.prefix = '[DiffViewer]';\n        this.logLevel = 1; // Default to only high-level logs\n    }\n\n    /**\n     * Initialize debug settings\n     * @param {boolean} enabled - Enable debug output\n     * @param {string} prefix - Prefix for all log messages\n     * @param {number} logLevel - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    initialize (enabled = false, prefix = '[DiffViewer]', logLevel = 1) {\n        // Prevent reinitialization with weaker settings if already properly configured\n        if (this.enabled && this.logLevel > 1 && !enabled) {\n            console.warn(`${this.prefix} Preventing debug reinitialization with weaker settings`, {\n                current: { enabled: this.enabled, level: this.logLevel },\n                attempted: { enabled, level: logLevel }\n            });\n            return;\n        }\n\n        this.enabled = enabled;\n        this.prefix = prefix;\n        this.logLevel = logLevel; // Don't tie logLevel to enabled state\n\n        console.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n        this.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n    }\n\n    /**\n     * Check if a message should be logged at the given level\n     * @param {number} level - The log level of the message\n     * @returns {boolean} - Whether the message should be logged\n     */\n    shouldLog(level = 1) {\n        // Use instance state as primary source of truth\n        // Only fall back to window.diffConfig if not explicitly initialized\n        const debugEnabled = this.enabled || (this.enabled === false && window.diffConfig?.debug);\n        return debugEnabled && level <= this.logLevel;\n    }\n\n    /**\n     * Log an informational message\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    log(message, data = null, level = 1) {\n        if (!this.shouldLog(level)) return;\n\n        if (data !== null) {\n            console.log(`${this.prefix} ${message}`, data);\n            this._addToHistory('log', [message, data], level);\n        } else {\n            console.log(`${this.prefix} ${message}`);\n            this._addToHistory('log', [message], level);\n        }\n    }\n\n    /**\n     * Log a warning message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    warn (message, data = null, level = 1) {\n        // Warnings are always shown regardless of debug setting\n        if (data !== null) {\n            console.warn(`${this.prefix} ${message}`, data);\n            this._addToHistory('warn', [message, data], level);\n        } else {\n            console.warn(`${this.prefix} ${message}`);\n            this._addToHistory('warn', [message], level);\n        }\n    }\n\n    /**\n     * Log an error message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    error(message, data = null, level = 1) {\n        // Errors are always shown regardless of debug setting\n        if (data !== null) {\n            console.error(`${this.prefix} ${message}`, data);\n            this._addToHistory('error', [message, data], level);\n        } else {\n            console.error(`${this.prefix} ${message}`);\n            this._addToHistory('error', [message], level);\n        }\n    }\n\n    /**\n     * Get debug log history\n     * @param {number} maxLevel - Maximum level to include (1=high-level only, 3=all)\n     * @returns {Array} Log history filtered by level\n     */\n    getLogHistory(maxLevel = this.logLevel) {\n        if (maxLevel >= this.logLevel) {\n            return [...this.logHistory];\n        }\n        return this.logHistory.filter(entry => entry.level <= maxLevel);\n    }\n\n    /**\n     * Clear debug log history\n     */\n    clearLogHistory() {\n        this.logHistory = [];\n        this.log('Log history cleared');\n    }\n\n    /**\n     * Add entry to log history\n     * @private\n     * @param {string} type - Log type (log, warn, error)\n     * @param {Array} args - Message arguments\n     * @param {number} level - Log level\n     */\n    _addToHistory(type, args, level) {\n        this.logHistory.push({\n            timestamp: new Date(),\n            type,\n            message: args,\n            level\n        });\n\n        // Prevent excessive memory usage\n        if (this.logHistory.length > this.maxLogHistory) {\n            this.logHistory.shift();\n        }\n    }\n}\n\n// Create singleton instance\nconst Debug = new DebugUtility();\n\n// Export the singleton\nexport { Debug };\n","/**\n * Base singleton implementation to standardize pattern across components\n */\nexport class BaseSingleton {\n    /**\n     * Get the singleton instance - must be implemented by subclasses\n     * @returns {BaseSingleton} The singleton instance\n     */\n    static getInstance() {\n        throw new Error('getInstance() must be implemented by subclass');\n    }\n\n    /**\n     * Check if this instance is already instantiated\n     * @protected\n     * @param {Object} instanceVar - The module-level instance variable\n     * @returns {boolean} True if this is the first initialization\n     */\n    _isFirstInstance(instanceVar) {\n        return !instanceVar;\n    }\n}\n","import { Debug } from '../utils/Debug';\n\nimport { BaseSingleton } from './BaseSingleton';\n\n// Module-level singleton instance\nlet instance = null;\n\nexport class ResourceLoader extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @returns {ResourceLoader} The singleton instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new ResourceLoader();\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     */\n    constructor() {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        // Initialize instance\n        this.config = null;\n        this.loadedResources = new Set();\n        this.loadedLanguages = new Set();\n        this.loadedThemes = new Set(); // ADD THIS LINE\n        this.CDN_BASE = 'https://cdnjs.cloudflare.com/ajax/libs';\n        this.HLJS_VERSION = '11.11.1';\n        this.LINE_NUMBERS_VERSION = '2.8.0';\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Configure the ResourceLoader\n     * @param {Object} config - Configuration object\n     */\n    configure(config) {\n        Debug.log('ResourceLoader: Configuring', { config }, 2);\n\n        this.config = config;\n        Debug.log('ResourceLoader configured');\n\n        Debug.log('ResourceLoader: Configuration complete', null, 2);\n        return this;\n    }\n\n    /**\n     * Load all dependencies required for the diff viewer\n     */\n    async loadDependencies() {\n        await this.loadSyntaxHighlighterCore();\n        await this.loadLanguage(this.config.language || 'php');\n        // Note: Theme loading is now ThemeManager's responsibility\n        return true;\n    }\n\n    // Split theme loading from core highlighter loading\n    /**\n     * Load syntax highlighter core without theme\n     */\n    async loadSyntaxHighlighterCore() {\n        if (!this.config) {\n            Debug.error('ResourceLoader: Must be configured before loading dependencies', null, 2);\n            throw new Error('ResourceLoader must be configured before loading dependencies');\n        }\n\n        try {\n            Debug.log('ResourceLoader: Loading syntax highlighter core (NO THEME)', null, 2);\n\n            // Check if hljs is already loaded\n            if (window.hljs) {\n                // Changed from level 3 to level 2 - more consistent with other logs\n                Debug.log('ResourceLoader: highlight.js already loaded', null, 2);\n            } else {\n                Debug.log('ResourceLoader: Loading highlight.js from CDN', null, 2);\n                await this.loadScript(`${this.CDN_BASE}/highlight.js/${this.HLJS_VERSION}/highlight.min.js`);\n\n                Debug.log('ResourceLoader: Loading line numbers plugin', null, 2);\n                await this.loadScript(`${this.CDN_BASE}/highlightjs-line-numbers.js/${this.LINE_NUMBERS_VERSION}/highlightjs-line-numbers.min.js`);\n            }\n\n            Debug.log('ResourceLoader: Syntax highlighter core loaded successfully', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ResourceLoader: Failed to load syntax highlighter core:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Load a specific language for syntax highlighting\n     * @param {string} language - The language to load\n     * @returns {Promise} - Resolves when language is loaded\n     */\n    async loadLanguage(language) {\n        // Normalize language name\n        const langMap = {\n            'markup': 'xml',\n            'html': 'xml',\n            'htm': 'xml',\n            'javascript': 'javascript',\n            'js': 'javascript',\n            'typescript': 'typescript',\n            'ts': 'typescript',\n            'jsx': 'javascript',\n            'tsx': 'typescript'\n        };\n\n        // Get the normalized language name\n        const normalizedLang = langMap[language.toLowerCase()] || language.toLowerCase();\n\n        // Check if already loaded\n        if (this.loadedLanguages.has(normalizedLang)) {\n            return true;\n        }\n\n        // Load the language\n        Debug.log(`ResourceLoader: Loading language ${normalizedLang}`, null, 2);\n        try {\n            // Since dynamic imports aren't working well with webpack, let's use CDN directly\n            await this.loadScript(`${this.CDN_BASE}/highlight.js/${this.HLJS_VERSION}/languages/${normalizedLang}.min.js`);\n            this.loadedLanguages.add(normalizedLang);\n            Debug.log(`ResourceLoader: Language ${normalizedLang} loaded from CDN successfully`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.warn(`ResourceLoader: Failed to load language ${normalizedLang}, falling back to built-in languages`, { error }, 2);\n            // Don't throw - highlight.js will use its built-in detection\n            return false;\n        }\n    }\n\n    /**\n     * Cache loaded resources to prevent duplicate requests\n     * @private\n     */\n    _cacheResource(url, loadPromise) {\n        if (!this.resourceCache) {\n            this.resourceCache = new Map();\n        }\n\n        if (!this.resourceCache.has(url)) {\n            this.resourceCache.set(url, loadPromise);\n        }\n\n        return this.resourceCache.get(url);\n    }\n\n    /**\n     * Load a script with caching\n     * @param {string} url - Script URL\n     * @returns {Promise} Loading promise\n     */\n    loadScript(url) {\n        return this._cacheResource(url, new Promise((resolve, reject) => {\n            if (this.loadedResources.has(url)) {\n                // Removed level 3 debug log - too verbose\n                resolve();\n                return;\n            }\n\n            Debug.log(`ResourceLoader: Loading script: ${url}`, null, 2);\n            const script = document.createElement('script');\n            script.src = url;\n            script.async = true;\n            script.onload = () => {\n                this.loadedResources.add(url);\n                // Removed level 3 debug log - covered by level 2 logs\n                resolve();\n            };\n            script.onerror = () => {\n                Debug.error(`ResourceLoader: Failed to load script: ${url}`, null, 2);\n                reject(new Error(`Failed to load script: ${url}`));\n            };\n            document.head.appendChild(script);\n        }));\n    }\n\n    /**\n     * Load a CSS file with Promise support\n     */\n    loadCSS(href) {\n        if (this.loadedThemes.has(href)) {\n            // Removed level 3 debug log - too verbose\n            return Promise.resolve();\n        }\n\n        Debug.log(`ResourceLoader: Loading CSS: ${href}`, null, 2);\n        return new Promise((resolve, reject) => {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = href;\n            link.onload = () => {\n                this.loadedThemes.add(href);\n                // Removed level 3 debug log - covered by level 2 logs\n                resolve();\n            };\n            link.onerror = () => {\n                Debug.error(`ResourceLoader: Failed to load CSS: ${href}`, null, 2);\n                reject(new Error(`Failed to load CSS: ${href}`));\n            };\n            document.head.appendChild(link);\n        });\n    }\n}\n","/**\n * Centralized selectors for DOM elements\n * Using this object allows for easier maintenance and refactoring\n * All selectors include their prefix (# for IDs, . for classes)\n */\n\n// Import Debug for warning messages\nimport { Debug } from '../utils/Debug';\n\n// Create a proxy handler to intercept property access\nconst selectorHandler = {\n  get(target, prop) {\n    // Handle the name() method\n    if (prop === 'name') {\n      return function() {\n        if (target.startsWith('#') || target.startsWith('.')) {\n          return target.substring(1);\n        } else {\n          Debug.warn(`Selector '${target}' doesn't start with '.' or '#' but name() was called on it`);\n          return target;\n        }\n      };\n    }\n\n    // Add toString method to allow direct usage in DOM methods\n    if (prop === 'toString' || prop === Symbol.toPrimitive) {\n      return function() {\n        return String(target);\n      };\n    }\n\n    // Return the original property\n    return target[prop];\n  }\n};\n\n// Function to process all selectors with the proxy\nconst processSelectors = (obj) => {\n  const result = {};\n\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      result[key] = processSelectors(obj[key]);\n    } else if (typeof obj[key] === 'string') {\n      // Apply the proxy to each selector string\n      result[key] = new Proxy(Object(String(obj[key])), selectorHandler);\n    } else {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\n// Override utility selectors with values from window.diffConfig.ui if available\nconst getUtilitySelectors = () => {\n  // Default utility selectors\n  const defaultUtilitySelectors = {\n    BUTTON: '.vdm-btn',\n    BUTTON_PRIMARY: '.vdm-btn--primary',\n    BUTTON_SECONDARY: '.vdm-btn--secondary',\n    BUTTON_INFO: '.vdm-btn--info',\n    BUTTON_SUCCESS: '.vdm-btn--success',\n    BUTTON_WARNING: '.vdm-btn--warning',\n    BUTTON_DANGER: '.vdm-btn--danger',\n    BUTTON_FLAT: '.vdm-btn--flat',\n    BUTTON_SMALL: '.vdm-btn-sm',\n    BUTTON_EXTRA_SMALL: '.vdm-btn-xs',\n    BUTTON_LARGE: '.vdm-btn-lg',\n    ALERT: '.vdm-alert',\n    ALERT_PREFIX: '.vdm-alert--',\n    ALERT_INFO: '.vdm-alert--info',\n    ALERT_SUCCESS: '.vdm-alert--success',\n    ALERT_WARNING: '.vdm-alert--warning',\n    ALERT_DANGER: '.vdm-alert--danger',\n    FORM_SELECT: '.vdm-select',\n    FORM_SELECT_SM: '.vdm-select-sm',\n    FLEX: '.vdm-d-flex',\n    FLEX_COLUMN: '.vdm-flex-column',\n    JUSTIFY_CONTENT_BETWEEN: '.vdm-justify-content-between',\n    JUSTIFY_CONTENT_CENTER: '.vdm-justify-content-center',\n    ALIGN_ITEMS_CENTER: '.vdm-align-items-center',\n    ALIGN_ITEMS_STRETCH: '.vdm-align-items-stretch',\n    PADDING_2: '.vdm-p-2',\n    PADDING_3: '.vdm-p-3',\n    MARGIN_2: '.vdm-m-2',\n    MARGIN_TOP_2: '.vdm-mt-2',\n    MARGIN_BOTTOM_2: '.vdm-mb-2',\n    MARGIN_START_1: '.vdm-ms-1',\n    MARGIN_START_2: '.vdm-ms-2',\n    MARGIN_END_2: '.vdm-me-2',\n    MARGIN_END_3: '.vdm-me-3',\n    MARGIN_X_1: '.vdm-mx-1',\n    MARGIN_Y_2: '.vdm-my-2',\n    MARGIN_END_1: '.vdm-me-1'\n  };\n\n  // If window.diffConfig exists and has UI settings, override with those\n  if (window.diffConfig && window.diffConfig.ui) {\n    try {\n      // Map PHP ui settings to our selector format\n      if (window.diffConfig.ui.button) {\n        defaultUtilitySelectors.BUTTON = '.' + window.diffConfig.ui.button;\n      }\n      if (window.diffConfig.ui.buttonPrimary) {\n        defaultUtilitySelectors.BUTTON_PRIMARY = '.' + window.diffConfig.ui.buttonPrimary;\n      }\n      if (window.diffConfig.ui.buttonSecondary) {\n        defaultUtilitySelectors.BUTTON_SECONDARY = '.' + window.diffConfig.ui.buttonSecondary;\n      }\n      if (window.diffConfig.ui.buttonInfo) {\n        defaultUtilitySelectors.BUTTON_INFO = '.' + window.diffConfig.ui.buttonInfo;\n      }\n      if (window.diffConfig.ui.buttonSuccess) {\n        defaultUtilitySelectors.BUTTON_SUCCESS = '.' + window.diffConfig.ui.buttonSuccess;\n      }\n      if (window.diffConfig.ui.buttonWarning) {\n        defaultUtilitySelectors.BUTTON_WARNING = '.' + window.diffConfig.ui.buttonWarning;\n      }\n      if (window.diffConfig.ui.buttonDanger) {\n        defaultUtilitySelectors.BUTTON_DANGER = '.' + window.diffConfig.ui.buttonDanger;\n      }\n      if (window.diffConfig.ui.buttonFlat) {\n        defaultUtilitySelectors.BUTTON_FLAT = '.' + window.diffConfig.ui.buttonFlat;\n      }\n      if (window.diffConfig.ui.alert) {\n        defaultUtilitySelectors.ALERT = '.' + window.diffConfig.ui.alert;\n      }\n      if (window.diffConfig.ui.alertInfo) {\n        defaultUtilitySelectors.ALERT_INFO = '.' + window.diffConfig.ui.alertInfo;\n      }\n      if (window.diffConfig.ui.alertSuccess) {\n        defaultUtilitySelectors.ALERT_SUCCESS = '.' + window.diffConfig.ui.alertSuccess;\n      }\n      if (window.diffConfig.ui.alertWarning) {\n        defaultUtilitySelectors.ALERT_WARNING = '.' + window.diffConfig.ui.alertWarning;\n      }\n      if (window.diffConfig.ui.alertDanger) {\n        defaultUtilitySelectors.ALERT_DANGER = '.' + window.diffConfig.ui.alertDanger;\n      }\n\n      Debug.log('Overriding UI selectors with config values', window.diffConfig.ui, 2);\n    } catch (e) {\n      Debug.error('Error applying UI selector overrides from config', e, 1);\n    }\n  }\n\n  return defaultUtilitySelectors;\n};\n\nconst baseSelectors = {\n    // Code display\n    CODE: {\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_EMPTY: '.vdm-code__line--empty',\n        LINE_NUMBER: '.vdm-code__line-number',\n        TABLE: '.vdm-code__table'\n    },\n\n    // Container elements\n    CONTAINER: {\n        ROOT: '#vdm-container',\n        WRAPPER: '#vdm-container__wrapper'\n    },\n\n    // Copy functionality\n    COPY: {\n        BUTTON: '.vdm-code__copy-btn',\n        COPIED: '.vdm-code__copy--copied',\n        ICON: '.vdm-code__copy-icon',\n        MODAL: {\n            ACTIONS: '.vdm-modal__copy-actions',\n            BUTTON: '.vdm-modal__copy-btn',\n            DIALOG: '.vdm-modal__copy-dialog',\n            INSTRUCTIONS: '.vdm-modal__copy-instructions',\n            TEXTAREA: '.vdm-modal__copy-textarea-container',\n            TEXTAREA_ELEM: '.vdm-modal__copy-textarea'\n        },\n        PROCESSING: '.vdm-code__copy--processing',\n        TEXT: '.vdm-code__copy-text'\n    },\n\n    // Diff viewer elements\n    DIFF: {\n        CHECK_ALL_BTN: '.vdm-check-all-btn',\n        CHUNK: '.vdm-diff__chunk',\n        CHUNK_SELECTED: '.vdm-diff__chunk--selected',\n        CHUNK_UNSELECTED: '.vdm-diff__chunk--unselected',\n        CONTAINER: '#vdm-diff__container',\n        CONTENT_WRAPPER: '#vdm-diff__content-wrapper',\n        LINE_ADD: '.vdm-diff__line--add',\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_CONTENT_EMPTY: '.vdm-code__line-content--empty',\n        LINE_DELETE: '.vdm-diff__line--delete',\n        LINE_PLACEHOLDER: '.vdm-diff__line--placeholder',\n        LINE_REPLACE_LEFT: '.vdm-diff__line--replace-left',\n        LINE_REPLACE_RIGHT: '.vdm-diff__line--replace-right',\n        // LOADING selector removed - use Selectors.LOADER.MAIN instead\n        PANE: '.vdm-diff__pane',\n        PANE_CONTENT: '.vdm-diff__pane-content',\n        PANE_HEADER: '.vdm-pane-header',\n        PANE_LEFT: '#vdm-diff__pane--left',\n        PANE_RIGHT: '#vdm-diff__pane--right',\n        PANES_CONTAINER: '.vdm-diff__panes-container',\n        PLACEHOLDER: '.vdm-diff__placeholder',\n        TABLE_WRAPPER: '.vdm-diff__table-wrapper',\n        VIEWER: '#vdm-diff__viewer'\n    },\n\n    // Icon markers\n    ICONS: {\n        COLUMN: '.vdm-icon__column',\n        MARKER: '.vdm-icon__marker',\n        MARKER_PLACEHOLDER: '.vdm-icon__marker--placeholder',\n        SELECT: '.vdm-icon__select',\n        SELECT_LEFT: '.vdm-icon__select--left',\n        SELECT_RIGHT: '.vdm-icon__select--right'\n    },\n\n    // Loader elements\n    LOADER: {\n        ACTIVE: '.vdm-loader--active',\n        CONTAINER: '.vdm-loader__container',\n        FULLSCREEN: '.vdm-loader--fullscreen',\n        INDICATOR: '#vdm-loader__indicator',\n        INLINE: '.vdm-loader--inline',\n        MAIN: '#vdm-diff__loading', // Main application loader (previously DIFF.LOADING)\n        SPINNER: '.vdm-loader__spinner',\n        TEXT: '.vdm-loader__text',\n        WRAPPER: '.vdm-loader__wrapper'\n    },\n\n    // Merge controls\n    MERGE: {\n        BUTTON_APPLY: '#vdm-merge__button--apply',\n        BUTTON_PREVIEW: '#vdm-merge__button--preview',\n        CONFLICT_MODAL: '#vdm-merge__conflict-modal',\n        CONTROLS_ACTIONS: '.vdm-merge-controls__actions',\n        DESTINATION_DROPDOWN: '#vdm-merge__destination-dropdown',\n        DESTINATION_TOGGLE: '#vdm-merge__destination-toggle',\n        GET_MERGED_RESULT_BTN: '#vdm-merge__get-merged-result-btn',\n        MODAL: '#vdm-merge__modal',\n        PREVIEW_CONTENT: '#vdm-merge__preview-content',\n        PREVIEW_MODAL: '#vdm-merge__preview-modal',\n        TOGGLE_ICON: '#vdm-merge-controls__toggle-icon',\n        TOGGLE_TEXT: '#vdm-merge-controls__toggle-text'\n    },\n\n    // Modal dialogs\n    MODAL: {\n        BACKDROP: '#vdm-modal-backdrop',\n        CLOSE: '.vdm-modal__close',\n        CLOSE_BTN: '.vdm-modal__close', // Changed from ID to class\n        CODE_COPY: '#vdm-modal--code-copy',\n        CONFIRM: '#vdm-modal--confirm',\n        CONFIRMATION_CONTENT: '#vdm-modal__confirmation-content',\n        CONTAINER: '.vdm-modal',\n        CONTENT: '.vdm-modal__content',\n        CONTINUE_BTN: '#vdm-modal__continue-btn',\n        COPY_CONTENT: '#vdm-modal__copy-content',\n        FIXED_FOOTER: '.vdm-modal--fixed-footer',\n        FOOTER: '.vdm-modal__footer',\n        FULLSCREEN: '.vdm-modal--fullscreen',\n        HEADER: '.vdm-modal__header',\n        HEADER_FIXED: '.vdm-modal__header--fixed',\n        MERGE_BTN: '#vdm-modal__merge-btn',\n        MESSAGE: '#vdm-modal__message',\n        PREVIEW: '#vdm-modal--preview',\n        PREVIEW_CONTENT: '.vdm-modal__preview-content',\n        PREVIEW_CONTENT_ID: '#vdm-merge__preview-content',\n        PREVIEW_FILENAME: '#vdm-modal__preview-filename',\n        TITLE: '.vdm-modal__title'\n    },\n\n    // Navigation\n    NAVIGATION: {\n        CONTAINER: '.vdm-nav__controls',\n        COUNTER: '#vdm-nav__counter',\n        COUNTER_ELEMENT: '.vdm-navigator__counter',\n        HIGHLIGHT: '.vdm-highlight',\n        NAV_CHUNK: '.vdm-nav__chunk',\n        NEXT_BUTTON: '#vdm-nav__button--next',\n        PREV_BUTTON: '#vdm-nav__button--prev'\n    },\n\n    // Status indicators\n    STATUS: {\n        LOADED: '.vdm-status__loaded',\n        RESOLVED: '.vdm-status__resolved',\n        SCROLLED: '.vdm-status__scrolled-horizontally',\n        UNRESOLVED: '.vdm-status__unresolved'\n    },\n\n    // Theme and appearance\n    THEME: {\n        DARK: '.vdm-theme--dark',\n        LIGHT: '.vdm-theme--light',\n        LOADING_INDICATOR: '#vdm-theme__loading-indicator',\n        MODE_PREFIX: '.vdm-theme',\n        SELECTOR: '#vdm-theme__selector',\n        SWITCHER: '#vdm-theme-switcher',\n        TOGGLE: '#vdm-theme__toggle'\n    },\n\n    // Theme switcher components\n    THEME_SWITCHER: {\n        CONTROL: '.vdm-theme-switcher__control',\n        LABEL: '.vdm-theme-switcher__label',\n        SLIDER: '.vdm-theme-switcher__slider',\n        SLIDER_ROUND: '.vdm-theme-switcher__slider--round',\n        WRAPPER: '.vdm-theme-switcher__wrapper'\n    },\n\n    // Theme selector components\n    THEME_SELECTOR: {\n        WRAPPER: '.vdm-theme-selector__wrapper'\n    },\n\n    // Tooltips\n    TOOLTIP: {\n        ARROW: '.vdm-tooltip__arrow',\n        CONTAINER: '.vdm-tooltip',\n        CONTENT: '.vdm-tooltip__content'\n    },\n\n    // Utility classes - these can be overridden from PHP config\n    UTILITY: getUtilitySelectors()\n};\n\n// Process the selectors to add the name functionality\nconst Selectors = processSelectors(baseSelectors);\n\nexport default Selectors;\n","/**\n * Central registry for SVG icons\n * This eliminates the need for external icon libraries\n */\nexport class IconRegistry {\n    /**\n     * Get SVG markup for the specified icon\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Additional options for the icon\n     * @returns {string} SVG markup\n     */\n    static getIcon(iconName, options = {}) {\n        const {\n            classes = '',\n            width = 16,\n            height = 16,\n            title = '',\n            ariaHidden = true\n        } = options;\n\n        // Get the SVG path data\n        const pathData = this._getIconPathData(iconName);\n\n        if (!pathData) {\n            console.warn(`Icon not found: ${iconName}`);\n            return '';\n        }\n\n        // Create title element for accessibility if provided\n        const titleElement = title ? `<title>${title}</title>` : '';\n\n        // Generate the SVG with the right attributes\n        return `<svg\n            class=\"vdm-icon ${classes}\"\n            width=\"${width}\"\n            height=\"${height}\"\n            viewBox=\"${pathData.viewBox || '0 0 512 512'}\"\n            ${ariaHidden ? 'aria-hidden=\"true\"' : 'role=\"img\"'}\n            focusable=\"false\"\n        >\n            ${titleElement}\n            ${pathData.paths}\n        </svg>`;\n    }\n\n    /**\n     * Get the path data for an icon\n     * @private\n     * @param {string} iconName - Name of the icon\n     * @returns {Object|null} Icon path data or null if not found\n     */\n    static _getIconPathData(iconName) {\n        // Map of icon names to their SVG path data\n        const icons = {\n            'chevron-up': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z\"/>'\n            },\n            'chevron-down': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z\"/>'\n            },\n            'eye': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z\"/>'\n            },\n            'sun': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM160 256a96 96 0 1 1 192 0 96 96 0 1 1 -192 0zm224 0a128 128 0 1 0 -256 0 128 128 0 1 0 256 0z\"/>'\n            },\n            'moon': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M223.5 32C100 32 0 132.3 0 256S100 480 223.5 480c60.6 0 115.5-24.2 155.8-63.4c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-9.8 1.7-19.8 2.6-30.1 2.6c-96.9 0-175.5-78.8-175.5-176c0-65.8 36-123.1 89.3-153.3c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-6.3-.5-12.6-.8-19-.8z\"/>'\n            },\n            'file': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M0 64C0 28.7 28.7 0 64 0H224V128c0 17.7 14.3 32 32 32H384V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zm384 64H256V0L384 128z\"/>'\n            },\n            'file-circle-plus': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M0 64C0 28.7 28.7 0 64 0H224V128c0 17.7 14.3 32 32 32H384v38.6C310.1 219.5 256 287.4 256 368c0 59.1 29.1 111.3 73.7 143.3c-3.2 .5-6.4 .7-9.7 .7H64c-35.3 0-64-28.7-64-64V64zm384 64H256V0L384 128zM288 368a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-80c-8.8 0-16 7.2-16 16v48H368c-8.8 0-16 7.2-16 16s7.2 16 16 16h48v48c0 8.8 7.2 16 16 16s16-7.2 16-16V384h48c8.8 0 16-7.2 16-16s-7.2-16-16-16H448V304c0-8.8-7.2-16-16-16z\"/>'\n            },\n            'file-lines': {\n                viewBox: '0 0 384 512',\n                paths: '<path d=\"M64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V160H256c-17.7 0-32-14.3-32-32V0H64zM256 0V128H384L256 0zM112 256H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64H272c8.8 0 16 7.2 16 16s-7.2 16-16 16H112c-8.8 0-16-7.2-16-16s7.2-16 16-16z\"/>'\n            },\n            'file-copy': {\n                viewBox: '0 0 576 512',\n                paths: '<path d=\"M384 480h48c20.9 0 38.7-13.4 45.3-32H416c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16h61.3C470.7 157.4 452.9 144 432 144H384V64c0-35.3-28.7-64-64-64H64C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H384zM128 64H320V144H128V64zM400 240V416H144V192H352c26.5 0 48 21.5 48 48zm176-48c0-8.8-7.2-16-16-16H432c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H560c8.8 0 16-7.2 16-16V192z\"/>'\n            },\n            'plus-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM232 344V280H168c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H280v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z\"/>'\n            },\n            'exclamation-triangle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"/>'\n            },\n            'copy': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M272 0H396.1c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9V336c0 26.5-21.5 48-48 48H272c-26.5 0-48-21.5-48-48V48c0-26.5 21.5-48 48-48zM48 128H192v64H64V448H256V416h64v48c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48z\"/>'\n            },\n            // Add more icons as needed\n            'check-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM369 209L241 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L335 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z\"/>'\n            },\n            'chevron-right': {\n                viewBox: '0 0 320 512',\n                paths: '<path d=\"M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z\"/>'\n            },\n            'download': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V274.7l-73.4-73.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l128-128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L288 274.7V32zM64 352c-35.3 0-64 28.7-64 64v32c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V416c0-35.3-28.7-64-64-64H346.5l-45.3 45.3c-25 25-65.5 25-90.5 0L165.5 352H64zm368 56a24 24 0 1 1 0 48 24 24 0 1 1 0-48z\"/>'\n            },\n            'uncheck-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm0-384c13.3 0 24 10.7 24 24v112c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zm-32 224a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/>'\n            },\n            'info-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/>'\n            },\n            'exclamation-circle': {\n                viewBox: '0 0 512 512',\n                paths: '<path d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM256 128c13.3 0 24 10.7 24 24V264c0 13.3-10.7 24-24 24s-24-10.7-24-24V152c0-13.3 10.7-24 24-24zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/>'\n            },\n            'checkbox-unchecked': {\n                viewBox: '0 0 24 24',\n                paths: '<path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/>'\n            },\n            'checkbox-checked': {\n                viewBox: '0 0 24 24',\n                paths: '<path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>'\n            }\n        };\n\n        return icons[iconName] || null;\n    }\n\n    /**\n     * Create DOM element for an icon\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Additional options for the icon\n     * @returns {Element} The created SVG element\n     */\n    static createIcon(iconName, options = {}) {\n        const svgString = this.getIcon(iconName, options);\n        if (!svgString) return null;\n\n        const template = document.createElement('template');\n        template.innerHTML = svgString.trim();\n        return template.content.firstChild;\n    }\n}\n","/**\n * Translation Manager\n * Provides centralized access to translations throughout the application\n */\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\n\n/**\n * Singleton class that manages translations across the application\n */\nexport class TranslationManager extends BaseSingleton {\n    /**\n     * @private\n     * Singleton instance\n     */\n    static _instance = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {TranslationManager} The singleton instance\n     */\n    static getInstance() {\n        if (!TranslationManager._instance) {\n            TranslationManager._instance = new TranslationManager();\n            Debug.log('TranslationManager: Instance created', null, 2);\n        }\n        return TranslationManager._instance;\n    }\n\n    /**\n     * Constructor - private, use getInstance()\n     */\n    constructor() {\n        super();\n        this.translations = {};\n        this.lang = 'en';\n        this.initialized = false;\n\n        // IMPORTANT: Initialize immediately with window.diffConfig if available\n        this._initializeFromGlobalConfig();\n    }\n\n    /**\n     * Try to initialize from global config immediately\n     * @private\n     */\n    _initializeFromGlobalConfig() {\n        if (window.diffConfig && window.diffConfig.translations) {\n            Debug.log('TranslationManager: Auto-initializing from window.diffConfig', window.diffConfig.translations, 2);\n            this.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Initialize with language and translations\n     * @param {string} lang - The language code\n     * @param {Object} translations - Translation key-value pairs\n     */\n    initialize(lang = 'en', translations = {}) {\n        this.lang = lang;\n        this.translations = translations;\n        this.initialized = true;\n        Debug.log(`TranslationManager: Initialized with \"${lang}\" language`, this.translations, 2);\n    }\n\n    /**\n     * Get a translation by key\n     * @param {string} key - The translation key\n     * @param {string} defaultValue - Default value if key not found (defaults to key itself)\n     * @returns {string} The translated text or default value\n     */\n    get(key, defaultValue = null) {\n        // If not initialized and window.diffConfig exists, try to initialize from there\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n\n        // Check if we have translations for the current language\n        if (this.translations[this.lang] && this.translations[this.lang][key]) {\n            return this.translations[this.lang][key];\n        }\n\n        // Fallback to English if the key exists there\n        if (this.translations['en'] && this.translations['en'][key]) {\n            Debug.log(`TranslationManager: Key \"${key}\" not found in \"${this.lang}\", using English fallback`, null, 2);\n            return this.translations['en'][key];\n        }\n\n        // Use provided default or key itself\n        return defaultValue !== null ? defaultValue : key;\n    }\n\n    /**\n     * Check if initialization has been completed\n     * @returns {boolean} True if initialized\n     */\n    isInitialized() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.initialized;\n    }\n\n    /**\n     * Get the current language\n     * @returns {string} The current language code\n     */\n    getLanguage() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.lang;\n    }\n\n    /**\n     * Get all translations\n     * @returns {Object} All translations\n     */\n    getAllTranslations() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return {...this.translations};\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * AlertManager - Centralized utility for managing alert messages\n *\n * This singleton class provides methods to display and hide alert messages\n * throughout the application in a consistent manner. It supports different types\n * of alerts including info, success, warning, and danger.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * AlertManager class\n *\n * Provides methods to display and hide alert messages throughout the application\n */\nexport class AlertManager extends BaseSingleton {\n    /**\n     * Initialize the AlertManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.containerId = 'vdm-alert-container';\n        this.activeAlert = null;\n        this.timeoutId = null;\n\n        // Ensure the alert container exists and store it in this.container\n        this.container = this._ensureContainer();\n\n        // Mark as initialized\n        this.initialized = true;\n\n        Debug.log('AlertManager: Initialized', null, 2);\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {AlertManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new AlertManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Ensure the alert container exists in the DOM\n     * @private\n     */\n    _ensureContainer() {\n        let container = document.getElementById(this.containerId);\n\n        if (!container) {\n            container = document.createElement('div');\n            container.id = this.containerId;\n            container.className = 'vdm-alert-container';\n            container.style.position = 'fixed';\n            container.style.top = '20px';\n            container.style.left = '50%';\n            container.style.transform = 'translateX(-50%)';\n            container.style.zIndex = '9999';\n            container.style.width = 'auto';\n            container.style.maxWidth = '90%';\n\n            document.body.appendChild(container);\n            Debug.log('AlertManager: Created alert container', null, 2);\n        }\n\n        return container;\n    }\n\n    /**\n     * Create and show an alert\n     * @param {string} message - The alert message\n     * @param {string} type - The alert type: 'success', 'info', 'warning', 'error'\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} - The alert element\n     */\n    showAlert(message, type, options = {}) {\n        Debug.log('AlertManager.showAlert called with type', type, 2);\n        Debug.log('AlertManager.showAlert message', message, 3);\n\n        // Default options\n        const defaultOptions = {\n            timeout: 5000,      // Auto-dismiss after 5 seconds (0 = no auto-dismiss)\n            dismissable: true,  // Show close button\n            translate: true,    // Translate message if TranslationManager is available\n            className: '',      // Additional CSS classes\n            container: null,    // Container element (defaults to this.container)\n            targetElement: null, // Target element to place alert relative to\n            placement: 'before' // Placement relative to targetElement ('before' or 'after')\n        };\n\n        const mergedOptions = { ...defaultOptions, ...options };\n\n        // Only use the container if we're not placing relative to a target element\n        const useContainer = !mergedOptions.targetElement && (mergedOptions.container || this.container);\n\n        Debug.log('AlertManager placement options', {\n            hasTargetElement: !!mergedOptions.targetElement,\n            placement: mergedOptions.placement,\n            useContainer: !!useContainer\n        }, 3);\n\n        // Create alert element\n        const alertElement = document.createElement('div');\n\n        // Get the base alert class from Selectors if available\n        const baseAlertClass = Selectors.UTILITY.ALERT ?\n            Selectors.UTILITY.ALERT.toString().substring(1) : // Remove leading '.'\n            'vdm-alert';\n\n        // Start with base class\n        let alertClass = baseAlertClass;\n\n        // Type-specific class - use the proper format with double hyphens\n        if (type) {\n            // Use proper format from Selectors if available\n            const typeClass = type === 'info' && Selectors.UTILITY.ALERT_INFO ?\n                Selectors.UTILITY.ALERT_INFO.toString().substring(1) : // Remove leading '.'\n                `${baseAlertClass}--${type}`; // Use the proper double-hyphen format\n\n            alertClass += ` ${typeClass}`;\n        }\n\n        // Add any custom classes\n        if (mergedOptions.className) {\n            alertClass += ` ${mergedOptions.className}`;\n        }\n\n        alertElement.className = alertClass;\n        Debug.log('Alert classnames', alertElement.className, 3);\n        Debug.log('Alert selector values', {\n            selectorBase: Selectors.UTILITY.ALERT ? Selectors.UTILITY.ALERT.toString() : 'vdm-alert',\n            selectorType: type ? `${baseAlertClass}--${type}` : 'none'\n        }, 3);\n\n        // Translate message if needed\n        let finalMessage = message;\n        if (mergedOptions.translate && typeof TranslationManager !== 'undefined') {\n            const translationManager = TranslationManager.getInstance();\n            if (translationManager && typeof translationManager.get === 'function') {\n                finalMessage = translationManager.get(message, message);\n            }\n        }\n\n        // Set content\n        alertElement.innerHTML = finalMessage;\n\n        // Add close button if dismissable\n        if (mergedOptions.dismissable) {\n            const closeButton = document.createElement('button');\n            // Fix the close button class to match the CSS definition\n            closeButton.className = 'vdm-alert__close';\n            closeButton.innerHTML = '&times;';\n            closeButton.setAttribute('aria-label', 'Close');\n            closeButton.setAttribute('type', 'button');\n            alertElement.appendChild(closeButton);\n\n            // Add click event for close button\n            closeButton.addEventListener('click', () => this.hideAlert(alertElement));\n            Debug.log('Close button', closeButton ? 'found' : 'not found', 3);\n        }\n\n        // Add to container or place relative to target element\n        if (mergedOptions.targetElement) {\n            Debug.log('AlertManager: Placing alert relative to target element', {\n                target: mergedOptions.targetElement,\n                placement: mergedOptions.placement\n            }, 3);\n\n            if (mergedOptions.placement === 'before') {\n                // Insert before the target element\n                mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement);\n            } else if (mergedOptions.placement === 'after') {\n                // Insert after the target element\n                if (mergedOptions.targetElement.nextSibling) {\n                    mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement.nextSibling);\n                } else {\n                    mergedOptions.targetElement.parentNode.appendChild(alertElement);\n                }\n            }\n        } else if (useContainer) {\n            // Regular container append if no target element is specified\n            useContainer.appendChild(alertElement);\n            Debug.log('Alert appended to container', null, 3);\n        } else {\n            // Fallback to body if no container and no target element\n            document.body.appendChild(alertElement);\n            Debug.log('Alert appended to body', null, 3);\n        }\n\n        // Store reference to the active alert\n        this.activeAlert = alertElement;\n\n        // Set up auto-dismiss\n        if (mergedOptions.timeout > 0) {\n            this.timeoutId = setTimeout(() => {\n                this.hideAlert(alertElement);\n            }, mergedOptions.timeout);\n        }\n\n        Debug.log('Returning alert element', alertElement, 3);\n        return alertElement;\n    }\n\n    /**\n     * Hide the current alert if one exists\n     * @param {HTMLElement} alertElement - Optional specific alert element to hide\n     */\n    hideAlert(alertElement = null) {\n        // Clear any existing timeout\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n\n        // If a specific alert element is provided, remove it\n        if (alertElement?.parentNode) {\n            alertElement.parentNode.removeChild(alertElement);\n            Debug.log('AlertManager: Hiding specific alert', null, 3);\n\n            // If this was the active alert, clear the reference\n            if (this.activeAlert === alertElement) {\n                this.activeAlert = null;\n            }\n            return;\n        }\n\n        // Otherwise, remove the active alert if it exists\n        if (this.activeAlert?.parentNode) {\n            this.activeAlert.parentNode.removeChild(this.activeAlert);\n            this.activeAlert = null;\n            Debug.log('AlertManager: Hiding active alert', null, 3);\n        }\n    }\n\n    /**\n     * Show an info alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showInfo(message, options = {}) {\n        return this.showAlert(message, 'info', options);\n    }\n\n    /**\n     * Show a success alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showSuccess(message, options = {}) {\n        return this.showAlert(message, 'success', options);\n    }\n\n    /**\n     * Show a warning alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showWarning(message, options = {}) {\n        return this.showAlert(message, 'warning', options);\n    }\n\n    /**\n     * Show a danger/error alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showError(message, options = {}) {\n        return this.showAlert(message, 'danger', options);\n    }\n}\n\nexport default AlertManager;\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { IconRegistry } from './IconRegistry';\nimport AlertManager from './AlertManager';\n\n// Cache for DOM queries\nconst elementCache = new Map();\n\n/**\n * Reusable DOM manipulation utilities\n */\nexport class DOMUtils {\n    /**\n     * Set up a button handler with proper cleanup\n     * @param {string} buttonId - Button element ID\n     * @param {Function} handlerFn - Event handler function\n     * @param {string} logName - Name for logging\n     * @returns {Object|null} Handler information or null if element not found\n     */\n    static setupButtonHandler(buttonId, handlerFn, logName = '') {\n        const button = document.getElementById(buttonId);\n        if (!button) {\n            Debug.warn(`DOMUtils: Button ${buttonId} not found`, null, 2);\n            return null;\n        }\n\n        const instanceId = Date.now();\n\n        // Clean up if needed\n        if (button._handlerId && button._handlerId !== instanceId) {\n            // Clone to remove all event listeners\n            const newBtn = button.cloneNode(true);\n            if (button.parentNode) {\n                button.parentNode.replaceChild(newBtn, button);\n            }\n            Debug.log(`DOMUtils: Cleaned up previous handler for ${logName || buttonId}`, null, 2);\n            handlerFn(newBtn);\n            newBtn._handlerId = instanceId;\n            return { element: newBtn, id: instanceId };\n        } else {\n            button._handlerId = instanceId;\n            handlerFn(button);\n            return { element: button, id: instanceId };\n        }\n    }\n\n    /**\n     * Get element by ID with error handling\n     * @param {string} id - Element ID\n     * @returns {Element|null} The found element or null\n     */\n    static getElement(id) {\n        if (!id) {\n            Debug.error('DOMUtils.getElement: Empty ID provided', null, 1);\n            return null;\n        }\n\n        // Check cache first\n        if (elementCache.has(id)) {\n            return elementCache.get(id);\n        }\n\n        // Try direct getElementById first\n        let element = document.getElementById(id);\n\n        // If not found and the id doesn't include a #, try with a selector\n        if (!element) {\n            try {\n                if (!id.includes('#') && !id.includes('.')) {\n                    // If just an ID without # prefix, try with # prefix\n                    element = document.querySelector('#' + id);\n                } else {\n                    // Try as selector\n                    element = document.querySelector(id);\n                }\n            } catch (e) {\n                Debug.error(`DOMUtils.getElement: Error with selector: ${e.message}`, null, 1);\n            }\n        }\n\n        if (!element) {\n            Debug.error(`DOMUtils.getElement: Element with ID '${id}' not found`, null, 1);\n        } else {\n            // Cache the found element\n            elementCache.set(id, element);\n        }\n\n        return element;\n    }\n\n    /**\n     * Update toggle button appearance\n     * @param {string} currentValue - Current toggle value\n     * @param {Object} elements - Object containing button, icon, and text elements\n     * @param {Object} options - Configuration options\n     */\n    static updateToggleButton(currentValue, elements, options) {\n        const { toggleBtn, toggleIcon, toggleText } = elements;\n        const {\n            firstOption, secondOption,\n            firstClass, secondClass,\n            firstText, secondText,\n            firstTooltip, secondTooltip\n        } = options;\n\n        if (!toggleBtn || !toggleIcon || !toggleText) {\n            Debug.warn('DOMUtils: Missing elements for toggle button update');\n            return;\n        }\n\n        Debug.log(`DOMUtils: Updating toggle button to ${currentValue}`, null, 2);\n\n        // Set the button class based on current value\n        if (currentValue === firstOption) {\n            toggleIcon.className = firstClass;\n            toggleText.textContent = firstText;\n            toggleBtn.title = firstTooltip || firstText;\n            toggleBtn.setAttribute('data-value', firstOption);\n        } else if (currentValue === secondOption) {\n            toggleIcon.className = secondClass;\n            toggleText.textContent = secondText;\n            toggleBtn.title = secondTooltip || secondText;\n            toggleBtn.setAttribute('data-value', secondOption);\n        } else {\n            Debug.warn(`DOMUtils: Invalid toggle value: ${currentValue}`);\n        }\n    }\n\n    /**\n     * Show a standardized message in a container\n     * @param {string} containerId - Container element ID\n     * @param {string} message - Message content\n     * @param {string} type - Message type: 'info', 'success', 'warning', 'danger'\n     * @param {Object} options - Additional options\n     * @returns {boolean} Success status\n     */\n    static showMessage(containerId, message, type = 'info', options = {}) {\n        const container = document.getElementById(containerId);\n        if (!container) {\n            Debug.warn(`DOMUtils: Container #${containerId} not found for message`, null, 2);\n            return false;\n        }\n\n        // Default options\n        const {\n            _iconName = null,     // Custom icon name (preserved for backwards compatibility)\n            className = 'mt-5',  // Additional CSS classes\n            elementId = '',      // ID for created element\n            keepExisting = false // Whether to append or replace content\n        } = options;\n\n        // Use AlertManager to create the alert\n        const alertManager = AlertManager.getInstance();\n\n        // Clear existing content unless we're keeping it\n        if (!keepExisting) {\n            container.innerHTML = '';\n        }\n\n        // Check if HAS_ICON exists in UTILITY and provide a fallback if it doesn't\n        let iconClass = '';\n        try {\n            if (Selectors.UTILITY && Selectors.UTILITY.HAS_ICON) {\n                iconClass = Selectors.UTILITY.HAS_ICON.name();\n            } else {\n                // Fallback if HAS_ICON is not defined\n                iconClass = 'vdm-has-icon';\n                Debug.log('DOMUtils: Using fallback icon class because Selectors.UTILITY.HAS_ICON is undefined', null, 2);\n            }\n        } catch (e) {\n            // Fallback if any error occurs\n            iconClass = 'vdm-has-icon';\n            Debug.warn('DOMUtils: Error getting icon class, using fallback', e, 2);\n        }\n\n        // Create the alert with AlertManager\n        const alertElement = alertManager.showAlert(message, type, {\n            timeout: 0, // Don't auto-dismiss\n            translate: false, // Don't translate the message\n            className: `${iconClass} ${className}`\n        });\n\n        // Set ID if specified\n        if (elementId) {\n            alertElement.id = elementId;\n        }\n\n        // Append to container\n        container.appendChild(alertElement);\n\n        return true;\n    }\n\n    /**\n     * Toggle element visibility\n     * @param {string} elementId - Element ID\n     * @param {boolean} visible - Whether element should be visible\n     * @param {string} displayMode - Display mode when visible\n     * @returns {boolean} Success status\n     */\n    static toggleVisibility(elementId, visible, displayMode = 'block') {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for visibility toggle`, null, 2);\n            return false;\n        }\n\n        element.style.display = visible ? displayMode : 'none';\n        return true;\n    }\n\n    /**\n     * Add or remove a class from an element\n     * @param {string} elementId - Element ID\n     * @param {string} className - Class name to toggle\n     * @param {boolean} add - Whether to add or remove the class\n     * @returns {boolean} Success status\n     */\n    static toggleClass(elementId, className, add = true) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for class toggle`, null, 2);\n            return false;\n        }\n\n        if (add) {\n            element.classList.add(className);\n        } else {\n            element.classList.remove(className);\n        }\n\n        return true;\n    }\n\n    /**\n     * Create an element with specified attributes\n     * @param {string} tagName - Element tag name\n     * @param {string|null} id - Element ID\n     * @param {string|Array} classes - CSS classes\n     * @param {Object} attributes - Additional attributes\n     * @returns {HTMLElement} Created element\n     */\n    static createElement(tagName = 'div', id = null, classes = [], attributes = {}) {\n        const element = document.createElement(tagName);\n\n        // Set ID if provided\n        if (id) {\n            element.id = id;\n        }\n\n        // Add classes - handle both arrays and space-separated strings\n        if (classes) {\n            let classList;\n            if (Array.isArray(classes)) {\n                classList = classes;\n            } else if (typeof classes === 'string') {\n                classList = classes.split(/\\s+/).filter(Boolean);\n            } else {\n                classList = [];\n            }\n\n            if (classList.length > 0) {\n                element.classList.add(...classList);\n            }\n        }\n\n        // Set attributes\n        Object.entries(attributes).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                element.setAttribute(key, value);\n            }\n        });\n\n        return element;\n    }\n\n    /**\n     * Create and append an element to a container\n     * @param {string} tagName - Element tag name\n     * @param {Element|string} container - Container element or ID\n     * @param {Object} options - Element options\n     * @returns {HTMLElement|null} Created element or null if container not found\n     */\n    static createAndAppendElement(tagName, container, options = {}) {\n        // Get container element if ID was provided\n        const containerElement = typeof container === 'string'\n            ? document.getElementById(container)\n            : container;\n\n        if (!containerElement) {\n            Debug.warn(`DOMUtils: Container not found for createAndAppendElement`, null, 2);\n            return null;\n        }\n\n        // Extract options\n        const { id = null, classes = [], attributes = {}, content = null } = options;\n\n        // Create element\n        const element = DOMUtils.createElement(tagName, id, classes, attributes);\n\n        // Set content if provided\n        if (content !== null) {\n            if (typeof content === 'string') {\n                element.innerHTML = content;\n            } else if (content instanceof Node) {\n                element.appendChild(content);\n            }\n        }\n\n        // Append to container\n        containerElement.appendChild(element);\n\n        return element;\n    }\n\n    /**\n     * Set element content safely\n     * @param {string} elementId - Element ID\n     * @param {string} content - HTML content\n     * @returns {boolean} Success status\n     */\n    static setContent(elementId, content) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for content update`, null, 2);\n            return false;\n        }\n\n        element.innerHTML = content;\n        return true;\n    }\n\n    /**\n     * Get elements by selector\n     * @param {string} selector - CSS selector\n     * @param {Element|Document|string} context - Search context or ID\n     * @returns {NodeList|null} Selected elements or null if context not found\n     */\n    static getElements(selector, context = document) {\n        // Get context element if ID was provided\n        const contextElement = typeof context === 'string'\n            ? document.getElementById(context)\n            : context;\n\n        if (!contextElement) {\n            Debug.warn(`DOMUtils: Context not found for selector: ${selector}`, null, 2);\n            return null;\n        }\n\n        return contextElement.querySelectorAll(selector);\n    }\n\n    /**\n     * Append HTML content to an element\n     * @param {string} elementId - Element ID\n     * @param {string} content - HTML content to append\n     * @returns {boolean} Success status\n     */\n    static appendContent(elementId, content) {\n        const element = document.getElementById(elementId);\n        if (!element) {\n            Debug.warn(`DOMUtils: Element #${elementId} not found for content append`, null, 2);\n            return false;\n        }\n\n        element.insertAdjacentHTML('beforeend', content);\n        return true;\n    }\n\n    /**\n     * Remove an element safely\n     * @param {string|Element} elementOrId - Element or element ID to remove\n     * @returns {boolean} Success status\n     */\n    static removeElement(elementOrId) {\n        const element = typeof elementOrId === 'string'\n            ? document.getElementById(elementOrId)\n            : element;\n\n        if (!element?.parentNode) {\n            Debug.warn(`DOMUtils: Element not found or has no parent for removal`, null, 2);\n            return false;\n        }\n\n        element.parentNode.removeChild(element);\n        return true;\n    }\n\n    /**\n     * Setup event handlers on elements matching a selector\n     * @param {string} selector - CSS selector to match elements\n     * @param {string} eventType - Event type (e.g., 'click', 'change')\n     * @param {function} handler - Event handler function\n     * @param {Object} options - Additional options\n     * @returns {number} Number of elements that received the handler\n     */\n    static setupEventHandlers(selector, eventType, handler, options = {}) {\n        const {\n            context = document,\n            removeExisting = false,\n            styles = null\n        } = options;\n\n        const elements = DOMUtils.getElements(selector, context);\n        if (!elements) return 0;\n\n        // Remove existing handlers if requested\n        if (removeExisting) {\n            elements.forEach(element => {\n                element.removeEventListener(eventType, handler);\n            });\n        }\n\n        // Add new handlers and apply styles\n        elements.forEach(element => {\n            element.addEventListener(eventType, handler);\n\n            // Apply styles if provided\n            if (styles) {\n                Object.entries(styles).forEach(([property, value]) => {\n                    element.style[property] = value;\n                });\n            }\n        });\n\n        return elements.length;\n    }\n\n    /**\n     * Create an icon element\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Icon options\n     * @returns {Element} SVG icon element\n     */\n    static createIcon(iconName, options = {}) {\n        return IconRegistry.createIcon(iconName, options);\n    }\n\n    /**\n     * Get icon HTML string\n     * @param {string} iconName - Name of the icon\n     * @param {Object} options - Icon options\n     * @returns {string} SVG icon HTML\n     */\n    static getIconHtml(iconName, options = {}) {\n        return IconRegistry.getIcon(iconName, options);\n    }\n}\n","/**\n * Configuration management utilities\n */\nexport class ConfigUtils {\n    /**\n     * Recursively merge multiple configurations\n     * @param {...Object} configs - Configurations to merge in order of increasing precedence\n     * @returns {Object} Merged configuration\n     */\n    static mergeConfigurations(...configs) {\n        // Start with an empty object\n        const result = {};\n\n        // Process each config in order\n        for (const config of configs) {\n            if (!config || typeof config !== 'object') {\n                continue;\n            }\n\n            // Merge properties\n            for (const key in config) {\n                if (Object.prototype.hasOwnProperty.call(config, key)) {\n                    // If both values are objects, merge recursively\n                    if (\n                        typeof result[key] === 'object' &&\n                        result[key] !== null &&\n                        !Array.isArray(result[key]) &&\n                        typeof config[key] === 'object' &&\n                        config[key] !== null &&\n                        !Array.isArray(config[key])\n                    ) {\n                        result[key] = this.mergeConfigurations(result[key], config[key]);\n                    } else {\n                        // Otherwise just override\n                        result[key] = config[key];\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Validate required configuration\n     * @param {Object} config - Configuration to validate\n     * @returns {Object} Validation result with isValid and error properties\n     */\n    static validateConfig(config) {\n        const result = {\n            isValid: true,\n            error: null\n        };\n\n        if (!config) {\n            result.isValid = false;\n            result.error = 'No configuration found - window.diffConfig is not defined';\n            return result;\n        }\n\n        if (!config.diffData) {\n            result.isValid = false;\n            result.error = 'No diff data in configuration';\n\n            // Create empty diff data structure to prevent errors\n            config.diffData = {\n                old: [],\n                new: [],\n                chunks: []\n            };\n\n            // Log additional information to help diagnose the issue\n            console.warn('ConfigUtils: Missing diffData in configuration', {\n                configKeys: Object.keys(config),\n                oldData: config.old ? 'present' : 'missing',\n                newData: config.new ? 'present' : 'missing'\n            });\n        } else if (!config.diffData.chunks) {\n            result.isValid = false;\n            result.error = 'Missing chunks in diff data';\n\n            // Initialize empty chunks array to prevent errors\n            config.diffData.chunks = [];\n\n            console.warn('ConfigUtils: Missing chunks in diffData', {\n                diffDataKeys: Object.keys(config.diffData)\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Get configuration summary for logging\n     * @param {Object} config - Configuration object\n     * @returns {Object} Summary of key configuration properties\n     */\n    static getConfigSummary(config) {\n        return {\n            debug: !!config?.debug,\n            chunks: Array.isArray(config?.diffData?.chunks) ?\n                config.diffData.chunks.length : 0\n        };\n    }\n\n    /**\n     * Extract file extension from filepath\n     * @param {string} filepath - Path to extract extension from\n     * @param {string} defaultExtension - Default extension if not found\n     * @returns {string} The extracted extension or default\n     */\n    static getFileExtension(filepath, defaultExtension = 'php') {\n        if (!filepath) return defaultExtension;\n        return filepath.split('.').pop() || defaultExtension;\n    }\n\n    /**\n     * Get stored theme preferences\n     * @param {Object} config - Configuration with default theme settings\n     * @returns {Object} Theme settings object\n     */\n    static getThemePreferences(config) {\n        return {\n            mode: localStorage.getItem('diffViewerTheme') ||\n                  config?.theme?.defaultMode ||\n                  'light',\n            family: localStorage.getItem('diffViewerThemeFamily') ||\n                    config?.theme?.defaultFamily ||\n                    'atom-one'\n        };\n    }\n}\n","import { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\n\n/**\n * Utility for discovering API endpoints\n * Provides centralized access to API endpoints\n */\nexport class EndpointDiscovery extends BaseSingleton {\n    // Singleton instance\n    static #instance = null;\n\n    // Cached endpoint URL\n    #apiEndpoint = null;\n\n    // Promise for ongoing discovery\n    #discoveryPromise = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {EndpointDiscovery} The singleton instance\n     */\n    static getInstance() {\n        if (!EndpointDiscovery.#instance) {\n            EndpointDiscovery.#instance = new EndpointDiscovery();\n        }\n        return EndpointDiscovery.#instance;\n    }\n\n    /**\n     * Discover the API endpoint URL\n     * @returns {Promise<string>} Base API endpoint URL\n     */\n    async discoverEndpoint() {\n        // Return cached endpoint if available\n        if (this.#apiEndpoint) {\n            Debug.log('EndpointDiscovery: Using cached API endpoint', this.#apiEndpoint, 2);\n            return this.#apiEndpoint;\n        }\n\n        try {\n            // First check window.diffConfig.apiEndpoint\n            if (window.diffConfig?.apiEndpoint) {\n                Debug.log('EndpointDiscovery: Using configured API endpoint', window.diffConfig.apiEndpoint, 2);\n                this.#apiEndpoint = window.diffConfig.apiEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Try to determine endpoint based on script location\n            const scriptEndpoint = this.#determineEndpointFromScript();\n            if (scriptEndpoint) {\n                Debug.log('EndpointDiscovery: Determined API endpoint from script location', scriptEndpoint, 2);\n                this.#apiEndpoint = scriptEndpoint;\n                return this.#apiEndpoint;\n            }\n\n            // Fall back to endpoint-config.php discovery\n            Debug.log('EndpointDiscovery: Discovering API endpoint from endpoint-config.php', null, 2);\n\n            // Generate URL to endpoint-config.php\n            const configUrl = this.#getEndpointConfigUrl();\n\n            Debug.log('EndpointDiscovery: Fetching from', configUrl, 2);\n\n            // Fetch endpoint configuration\n            const response = await fetch(configUrl);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch endpoint config: ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            Debug.log('EndpointDiscovery: Endpoint discovery response', data, 2);\n\n            // Check if we have a valid apiEndpoint in the response\n            if (data?.apiEndpoint !== undefined) {\n                this.#apiEndpoint = data.apiEndpoint;\n                Debug.log('EndpointDiscovery: Successfully discovered API endpoint', this.#apiEndpoint, 1);\n                return this.#apiEndpoint;\n            } else {\n                throw new Error('Invalid endpoint config response: apiEndpoint not found');\n            }\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error discovering endpoint', error, 1);\n\n            // Fall back to relative endpoint as a last resort\n            this.#apiEndpoint = './api/';\n            Debug.log('EndpointDiscovery: Using fallback endpoint', this.#apiEndpoint, 1);\n            return this.#apiEndpoint;\n        }\n    }\n\n    /**\n     * Get endpoint URL with efficient caching\n     * @param {string} [endpointName] Optional specific endpoint name (e.g., 'ajaxDiffMerge')\n     * @returns {Promise<string>} API endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        // First get the base endpoint URL\n        if (!this.#apiEndpoint) {\n            // If a discovery is already in progress, return that promise\n            if (this.#discoveryPromise) {\n                await this.#discoveryPromise;\n            } else {\n                // Start a new discovery and cache the promise\n                this.#discoveryPromise = this.discoverEndpoint();\n\n                try {\n                    // Wait for discovery to complete\n                    await this.#discoveryPromise;\n                } finally {\n                    // Clear the discovery promise regardless of outcome\n                    this.#discoveryPromise = null;\n                }\n            }\n        }\n\n        // Now we should have the base endpoint URL\n        if (!endpointName) {\n            // Return the base URL if no specific endpoint requested\n            return this.#apiEndpoint;\n        }\n\n        // For specific endpoints, map the name to the appropriate file\n        const endpointMap = {\n            'ajaxDiffMerge': 'ajax-diff-merge.php',\n            'diffProcessor': 'diff-processor.php',\n            'getFileContent': 'get-file-content.php',\n            'endpointsConfig': 'endpoint-config.php',  // <-- Changed to endpoint-config.php (singular)\n            'endpoints': 'endpoints-config.php'        // <-- Keep original endpoints-config.php mapping\n        };\n\n        // Get the file name for the requested endpoint\n        let fileName = endpointMap[endpointName];\n\n        // If no mapping exists, use a default pattern\n        if (!fileName) {\n            // Convert camelCase to kebab-case with .php extension\n            fileName = endpointName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase() + '.php';\n        }\n\n        // Ensure the base URL ends with a slash\n        const baseUrl = this.#apiEndpoint.endsWith('/') ? this.#apiEndpoint : this.#apiEndpoint + '/';\n\n        Debug.log(`EndpointDiscovery: Resolved ${endpointName} to endpoint`, baseUrl + fileName, 2);\n\n        return baseUrl + fileName;\n    }\n\n    /**\n     * Get a complete API URL for a specific endpoint file\n     * @param {string} endpointFile Filename to append to the base URL\n     * @returns {Promise<string>} Full API URL\n     */\n    async getApiUrl(endpointFile) {\n        const baseUrl = await this.getEndpoint();\n        return `${baseUrl}${endpointFile}`;\n    }\n\n    /**\n     * Attempt to determine API endpoint based on script location\n     * @private\n     * @returns {string|null} Determined endpoint or null\n     */\n    #determineEndpointFromScript() {\n        try {\n            // Find our script tag\n            const scripts = document.querySelectorAll('script');\n            let scriptUrl = null;\n\n            for (const script of scripts) {\n                if (script.src && (\n                    script.src.includes('diff-viewer.js') ||\n                    script.src.includes('diff-viewer.min.js')\n                )) {\n                    scriptUrl = script.src;\n                    break;\n                }\n            }\n\n            if (!scriptUrl) {\n                return null;\n            }\n\n            // Get the directory path by removing the filename\n            let basePath = scriptUrl.substring(0, scriptUrl.lastIndexOf('/') + 1);\n\n            // If it's in a /dist/ directory, adjust to parent\n            if (basePath.endsWith('/dist/')) {\n                basePath = basePath.substring(0, basePath.length - 5);\n            }\n\n            // Append 'api/' to the base path\n            return `${basePath}api/`;\n        } catch (error) {\n            Debug.log('EndpointDiscovery: Error determining endpoint from script', error, 2);\n            return null;\n        }\n    }\n\n    /**\n     * Generate URL to endpoint-config.php\n     * @private\n     * @returns {string} URL to endpoint-config.php\n     */\n    #getEndpointConfigUrl() {\n        // Try to use the base URL of the current page\n        const baseUrl = window.location.href.substring(0, window.location.href.lastIndexOf('/') + 1);\n\n        // Assume endpoint-config.php is in the /api/ directory\n        if (baseUrl.includes('/diff-viewer/')) {\n            // If we're in diff-viewer, go up one level\n            return `${baseUrl.substring(0, baseUrl.lastIndexOf('/diff-viewer/'))}api/endpoint-config.php`;\n        } else {\n            // Default case - look for api in the current directory\n            return `${baseUrl}api/endpoint-config.php`;\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport Selectors from '../constants/Selectors';\n\n// Module-level singleton instance\nlet instance = null;\n\nexport class ThemeManager extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @returns {ThemeManager} The singleton instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new ThemeManager();\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     */\n    constructor() {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        // Initialize instance\n        this.initialized = false;\n        this.availableThemes = null;\n        this.currentTheme = { family: null, mode: null };\n        this.defaultTheme = { family: 'atom-one', mode: 'dark' };\n        this.listeners = [];\n        this.resourceLoader = null;\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize with config and ResourceLoader\n     * @param {Object} config - Configuration object with theme settings\n     * @param {ResourceLoader} resourceLoader - ResourceLoader instance\n     * @returns {boolean} Success status\n     */\n    initialize(config, resourceLoader) {\n        Debug.log('ThemeManager: Initializing', { config }, 2);\n\n        if (this.initialized) return true;\n\n        // Get theme configuration (accepts both legacy and new format)\n        this.config = config?.theme || {};\n        this.resourceLoader = resourceLoader;\n\n        // Get the availableThemes from ResourceLoader\n        this.availableThemes = resourceLoader.config.availableThemes;\n\n        // Set defaults from config or use hardcoded defaults\n        this.defaultTheme.family = this.config.defaultFamily || this.defaultTheme.family;\n        this.defaultTheme.mode = this.config.defaultMode || this.defaultTheme.mode;\n\n        // Get saved preferences\n        const savedFamily = localStorage.getItem('diffViewerThemeFamily') || this.defaultTheme.family;\n        const savedMode = localStorage.getItem('diffViewerTheme') || this.defaultTheme.mode;\n\n        this.currentTheme = {\n            family: savedFamily,\n            mode: savedMode\n        };\n\n        Debug.log(`ThemeManager: Initialized with ${savedFamily} (${savedMode})`, null, 2);\n        this.initialized = true;\n\n        Debug.log('ThemeManager: Successfully initialized', null, 2);\n        return true;\n    }\n\n    /**\n     * Get theme URL for a specific family and mode\n     * @param {string} family - The theme family (e.g., 'atom-one')\n     * @param {string} mode - The theme mode ('light' or 'dark')\n     * @param {boolean} fallbackToDefaults - Whether to fall back to defaults if not found\n     * @returns {string} The theme URL\n     */\n    getThemeUrl(family, mode, fallbackToDefaults = true) {\n        // First check if the requested theme exists\n        if (this.availableThemes?.[family]?.[mode]) {\n            return this.availableThemes[family][mode];\n        }\n\n        // Don't proceed with fallbacks if requested\n        if (!fallbackToDefaults) {\n            return null;\n        }\n\n        // Check if the opposite mode exists for this family\n        const alternateMode = mode === 'dark' ? 'light' : 'dark';\n        if (this.availableThemes?.[family]?.[alternateMode]) {\n            Debug.log(`ThemeManager: Theme ${family} doesn't have ${mode} mode, using ${alternateMode} instead`, null, 2);\n            return this.availableThemes[family][alternateMode];\n        }\n\n        // Fall back to default theme\n        Debug.log(`ThemeManager: Falling back to default theme: ${this.defaultTheme.family} (${mode})`, null, 2);\n        return this.availableThemes[this.defaultTheme.family][mode] ||\n               this.availableThemes[this.defaultTheme.family][alternateMode];\n    }\n\n    /**\n     * Check if a theme exists\n     * @param {string} family - The theme family\n     * @param {string} mode - The theme mode\n     * @returns {boolean} Whether the theme exists\n     */\n    themeExists(family, mode) {\n        return !!this.availableThemes?.[family]?.[mode];\n    }\n\n    /**\n     * Get all available theme families\n     * @returns {string[]} Array of theme family names\n     */\n    getAvailableThemeFamilies() {\n        return Object.keys(this.availableThemes || {});\n    }\n\n    /**\n     * Get available modes for a theme family\n     * @param {string} family - The theme family\n     * @returns {string[]} Available modes ('light', 'dark', or both)\n     */\n    getAvailableModesForFamily(family) {\n        if (!this.availableThemes?.[family]) {\n            return [];\n        }\n        return Object.keys(this.availableThemes[family]);\n    }\n\n    /**\n     * Get theme CDN version - useful for consistent versioning\n     * @returns {string} The CDN version\n     */\n    getThemeCdnVersion() {\n        return '11.11.1'; // Could be made configurable in the future\n    }\n\n    /**\n     * Get theme CDN base URL\n     * @returns {string} The CDN base URL\n     */\n    getThemeCdnBase() {\n        return 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js';\n    }\n\n    /**\n     * Get standard theme URL pattern (for direct generation)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {string} Standard theme URL\n     */\n    getStandardThemeUrl(family, mode) {\n        return `${this.getThemeCdnBase()}/${this.getThemeCdnVersion()}/styles/base16/${family}-${mode}.min.css`;\n    }\n\n    /**\n     * Apply theme (load CSS and update UI)\n     * @param {string} family - Theme family\n     * @param {string} mode - Theme mode\n     * @returns {Promise<boolean>} Success status\n     */\n    async applyTheme(family, mode) {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Use our centralized method to get the URL\n        const themeUrl = this.getThemeUrl(family, mode);\n        if (!themeUrl) {\n            Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n            return false;\n        }\n\n        Debug.log(`ThemeManager: Applying theme ${family}/${mode}`, null, 2);\n\n        // Skip if theme is already active\n        const activeTheme = document.querySelector(\n            'link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])'\n        );\n\n        if (activeTheme && activeTheme.getAttribute('href') === themeUrl) {\n            Debug.log(`ThemeManager: Theme ${family}/${mode} already active`, null, 2);\n            return true;\n        }\n\n        try {\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during theme operation:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Update container theme class based on mode\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     */\n    updateContainerThemeClass(mode) {\n        const container = document.getElementById(Selectors.CONTAINER.WRAPPER.name());\n        if (container) {\n            container.classList.remove(Selectors.THEME.DARK.name(), Selectors.THEME.LIGHT.name());\n            container.classList.add(Selectors.THEME.MODE_PREFIX.name() + '--' + mode);\n        }\n    }\n\n    /**\n     * Set theme mode only (light/dark)\n     * @param {string} mode - Theme mode ('light' or 'dark')\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeMode(mode) {\n        Debug.log(`ThemeManager: Setting theme mode to ${mode}`, null, 2);\n        return this.applyTheme(this.currentTheme.family, mode);\n    }\n\n    /**\n     * Set theme family only (keeps current mode)\n     * @param {string} family - Theme family\n     * @returns {Promise<boolean>} Success status\n     */\n    async setThemeFamily(family) {\n        Debug.log(`ThemeManager: Setting theme family to ${family}`, null, 2);\n        return this.applyTheme(family, this.currentTheme.mode);\n    }\n\n    /**\n     * Add a listener to be notified of theme changes\n     * @param {Function} listener - Listener function\n     */\n    addListener(listener) {\n        if (typeof listener === 'function') {\n            this.listeners.push(listener);\n        }\n    }\n\n    /**\n     * Notify all listeners of theme changes\n     */\n    notifyListeners() {\n        this.listeners.forEach(listener => {\n            try {\n                listener(this.currentTheme);\n            } catch (error) {\n                Debug.error('ThemeManager: Error in theme listener:', error, 2);\n            }\n        });\n    }\n\n    /**\n     * Get current theme information\n     * @returns {Object} Current theme information\n     */\n    getCurrentTheme() {\n        return { ...this.currentTheme };\n    }\n\n    /**\n     * Load initial theme based on current settings\n     * @returns {Promise<boolean>} Success status\n     */\n    async loadInitialTheme() {\n        if (!this.initialized || !this.resourceLoader) {\n            Debug.warn('ThemeManager: Not properly initialized', null, 2);\n            return false;\n        }\n\n        // Get theme from current settings\n        const family = this.currentTheme.family || this.defaultTheme.family;\n        const mode = this.currentTheme.mode || this.defaultTheme.mode;\n\n        Debug.log(`ThemeManager: Loading initial theme ${family}/${mode}`, null, 2);\n\n        try {\n            // Apply the theme\n            const themeUrl = this.getThemeUrl(family, mode);\n            if (!themeUrl) {\n                Debug.error(`ThemeManager: Could not resolve URL for theme ${family}/${mode}`, null, 2);\n                return false;\n            }\n\n            // Load CSS if needed\n            if (!document.querySelector(`link[href=\"${themeUrl}\"]`)) {\n                await this.resourceLoader.loadCSS(themeUrl);\n            }\n\n            // Disable all current theme stylesheets\n            document.querySelectorAll('link[href*=\"highlight.js\"][href*=\"/styles/\"][rel=\"stylesheet\"]:not([disabled])').forEach(link => {\n                link.disabled = true;\n            });\n\n            // Enable the new theme\n            const themeLink = document.querySelector(`link[href=\"${themeUrl}\"]`);\n            if (themeLink) {\n                themeLink.disabled = false;\n                Debug.log(`ThemeManager: Theme applied: ${family} (${mode})`, null, 2);\n            }\n\n            // Update container class for dark/light mode\n            this.updateContainerThemeClass(mode);\n\n            // Update current theme and save to localStorage\n            this.currentTheme = { family, mode };\n            localStorage.setItem('diffViewerThemeFamily', family);\n            localStorage.setItem('diffViewerTheme', mode);\n\n            // Notify all listeners\n            this.notifyListeners();\n\n            Debug.log(`ThemeManager: Initial theme applied successfully: ${family}/${mode}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ThemeManager: Error during initial theme loading:', error, 2);\n            return false;\n        }\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { BaseSingleton } from '../utils/BaseSingleton';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n// Module-level variables\nlet instance = null;\n\n/**\n * Manages theme family selection dropdown\n */\nexport class ThemeSelector extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance (only used during first initialization)\n     * @returns {ThemeSelector} The singleton instance\n     */\n    static getInstance(diffViewer = null) {\n        Debug.log('ThemeSelector: Retrieving or creating instance', null, 3);\n        if (!instance) {\n            instance = new ThemeSelector(diffViewer);\n        } else if (diffViewer && !instance.diffViewer) {\n            // Update diffViewer if it was null previously\n            instance.diffViewer = diffViewer;\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    constructor(diffViewer) {\n        super();\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        Debug.log('ThemeSelector: Instance created', null, 3);\n\n        // Initialize instance\n        this.diffViewer = diffViewer;\n        this.container = null;\n        this.selectElement = null;\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = null;\n        this.boundHandleThemeChange = this.handleThemeChange.bind(this); // Store bound function\n\n        // Store instance\n        instance = this;\n    }\n\n    /**\n     * Initialize the theme selector\n     */\n    initialize() {\n        // Check if theme selector should be enabled using the new config structure\n        if (!this._isThemeSelectorEnabled()) {\n            Debug.log('ThemeSelector: Theme selector disabled in configuration', null, 2);\n            return false;\n        }\n\n        Debug.log('ThemeSelector: Initializing', null, 2);\n\n        // Check if selector already exists in DOM and reuse it\n        const existingSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        if (existingSelector) {\n            Debug.log('ThemeSelector: Reusing existing selector in DOM', null, 2);\n            this.selectElement = existingSelector;\n            this.container = existingSelector.parentNode;\n\n            // Update selector to reflect current theme\n            this.updateSelector();\n\n            // Ensure event listener is attached (remove old one first to avoid duplicates)\n            this.selectElement.removeEventListener('change', this.boundHandleThemeChange);\n            this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n\n            Debug.log('ThemeSelector: Reused existing selector successfully', null, 2);\n            return true;\n        }\n\n        // If BrowserUIManager is available, let it create the selector\n        if (this.browserUIManager) {\n            const selectorElements = this.browserUIManager.generateThemeSelector();\n            if (selectorElements) {\n                Debug.log('ThemeSelector: Using selector created by BrowserUIManager', null, 2);\n                this.container = selectorElements.container;\n                this.selectElement = selectorElements.selectElement;\n\n                // Populate options and set up event handlers\n                const populated = this.populateSelectorOptions();\n                if (!populated) {\n                    // If population failed, try again after a short delay (themes might not be loaded yet)\n                    Debug.log('ThemeSelector: Initial population failed, retrying after delay', null, 2);\n                    setTimeout(() => {\n                        this.populateSelectorOptions();\n                        this.updateSelector();\n                    }, 100);\n                }\n\n                this.updateSelector();\n                this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n\n                Debug.log('ThemeSelector: Initialized with BrowserUIManager selector successfully', null, 2);\n                return true;\n            }\n        }\n\n        // Fallback: Create container for the theme selector (only if doesn't exist)\n        this.createSelectorElement();\n\n        // Add the selector to the DOM\n        this.addSelectorToDOM();\n\n        // Update selector to reflect current theme\n        this.updateSelector();\n\n        // Add listener to ThemeManager to update selector when theme changes\n        this.themeManager.addListener(this.updateSelector.bind(this));\n\n        // Also add a listener to repopulate options if themes become available later\n        this.themeManager.addListener(() => {\n            if (this.selectElement && this.selectElement.options.length === 0) {\n                Debug.log('ThemeSelector: Themes became available, repopulating options', null, 2);\n                this.populateSelectorOptions();\n            }\n        });\n\n        Debug.log('ThemeSelector: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Check if theme selector should be enabled\n     * @private\n     * @returns {boolean} Whether the theme selector should be enabled\n     */\n    _isThemeSelectorEnabled() {\n        // First try the new config structure\n        if (this.diffViewer?.getConfig()?.theme?.selector !== undefined) {\n            return !!this.diffViewer.getConfig().theme.selector;\n        }\n\n        // Then try the old options structure\n        if (this.diffViewer?.options?.themeSelector !== undefined) {\n            return !!this.diffViewer.options.themeSelector;\n        }\n\n        // Finally try the global diffConfig\n        if (window.diffConfig?.theme?.selector !== undefined) {\n            return !!window.diffConfig.theme.selector;\n        }\n\n        // Default to true - always show selector unless explicitly disabled\n        return true;\n    }\n\n    /**\n     * Populate selector options with available themes\n     */\n    populateSelectorOptions() {\n        Debug.log('ThemeSelector: Starting to populate selector options', null, 2);\n\n        if (!this.selectElement) {\n            Debug.warn('ThemeSelector: No select element available for population', null, 2);\n            return false;\n        }\n\n        if (!this.themeManager) {\n            Debug.warn('ThemeSelector: No theme manager available for population', null, 2);\n            return false;\n        }\n\n        const currentTheme = this.themeManager.getCurrentTheme();\n        Debug.log('ThemeSelector: Current theme', currentTheme, 2);\n\n        // Clear existing options first\n        this.selectElement.innerHTML = '';\n\n        // Add options from available themes\n        const availableThemes = this.themeManager.getAvailableThemeFamilies();\n        Debug.log('ThemeSelector: Available themes', { availableThemes, count: availableThemes?.length || 0 }, 2);\n\n        if (!availableThemes || availableThemes.length === 0) {\n            Debug.warn('ThemeSelector: No available themes found', null, 2);\n            return false;\n        }\n\n        availableThemes.forEach(themeKey => {\n            DOMUtils.createAndAppendElement('option', this.selectElement, {\n                attributes: {\n                    value: themeKey,\n                    selected: themeKey === currentTheme.family\n                },\n                content: this.formatThemeName(themeKey)\n            });\n        });\n\n        Debug.log('ThemeSelector: Populated selector with options',\n                  { count: availableThemes.length }, 2);\n        return true;\n    }\n\n    /**\n     * Create the theme selector dropdown\n     */\n    createSelectorElement() {\n        Debug.log('ThemeSelector: Creating new selector element', null, 2);\n\n        // Create the container using DOMUtils with proper array of classes\n        this.container = DOMUtils.createElement('div', null, [Selectors.THEME_SELECTOR.WRAPPER.name(), Selectors.UTILITY.MARGIN_END_3.name()]);\n\n        // Create select element using DOMUtils\n        this.selectElement = DOMUtils.createAndAppendElement('select', this.container, {\n            id: Selectors.THEME.SELECTOR.name(),\n            classes: [Selectors.UTILITY.FORM_SELECT.name(), Selectors.UTILITY.FORM_SELECT.name()]\n        });\n\n        // Populate options using the separate method\n        this.populateSelectorOptions();\n\n        // Add change event handler using stored bound function\n        this.selectElement.addEventListener('change', this.boundHandleThemeChange);\n    }\n\n    /**\n     * Format theme name for display (e.g., \"atom-one\" to \"Atom One\")\n     * @param {string} themeName - Theme name in kebab-case\n     * @returns {string} Formatted theme name\n     */\n    formatThemeName(themeName) {\n        return themeName\n            .split('-')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n\n    /**\n     * Add the selector to the DOM\n     */\n    addSelectorToDOM() {\n        // Find theme switcher container using DOMUtils\n        const themeSwitcherContainer = DOMUtils.getElement(Selectors.THEME.SWITCHER.name());\n        if (!themeSwitcherContainer) {\n            Debug.warn('ThemeSelector: No theme switcher container found', null, 2);\n            return false;\n        }\n\n        // Insert the selector before any existing elements\n        themeSwitcherContainer.insertBefore(this.container, themeSwitcherContainer.firstChild);\n\n        Debug.log('ThemeSelector: Selector added to DOM', null, 2);\n        return true;\n    }\n\n    /**\n     * Update selector to match current theme\n     * @param {Object} theme - Theme object\n     */\n    updateSelector(theme) {\n        if (!this.selectElement) return;\n\n        // If the selector has no options, try to populate them\n        if (this.selectElement.options.length === 0) {\n            Debug.log('ThemeSelector: Selector has no options, attempting to populate', null, 2);\n            this.populateSelectorOptions();\n        }\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        if (this.selectElement.options.length > 0) {\n            this.selectElement.value = currentTheme.family;\n        }\n\n        Debug.log(`ThemeSelector: Selector updated to ${theme?.family || currentTheme.family}`,\n                 { optionsCount: this.selectElement.options.length }, 3);\n    }\n\n    /**\n     * Handle theme change event\n     * @param {Event} event - Change event\n     */\n    handleThemeChange(event) {\n        const selectedTheme = event.target.value;\n\n        // Try to get the BrowserUIManager instance if not already set\n        if (!this.browserUIManager && this.diffViewer?.browserUIManager) {\n            this.browserUIManager = this.diffViewer.browserUIManager;\n        }\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeFamily(selectedTheme)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeSelector: Theme changed to ${selectedTheme}`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeSelector: Error changing theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeSelector: Error changing theme:', error, 2);\n        }\n    }\n\n    /**\n     * Set the BrowserUIManager reference\n     * @param {BrowserUIManager} browserUIManager - The BrowserUIManager instance\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n        Debug.log('ThemeSelector: BrowserUIManager reference set', null, 3);\n    }\n}\n","/**\n * String utility functions for the diff viewer\n */\nexport class StringUtils {\n    /**\n     * Escape HTML special characters to prevent XSS\n     * @param {string} unsafe - The potentially unsafe string to escape\n     * @returns {string} - HTML escaped string\n     */\n    static escapeHtml(unsafe) {\n        if (!unsafe || typeof unsafe !== 'string') return '';\n        return unsafe\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\")\n            .replace(/\\//g, \"&#x2F;\")\n            .replace(/\\\\/g, \"&#x5C;\")\n            .replace(/`/g, \"&#x60;\");\n    }\n\n    /**\n     * Escape a string for use in an HTML attribute\n     * @param {string} str - String to escape\n     * @returns {string} Escaped string\n     */\n    static escapeAttribute(str) {\n        if (!str) return '';\n        return str\n            .replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n}\n","import { StringUtils } from './StringUtils';\nimport { Debug } from './Debug';\n\n/**\n * Formats merge content for various displays\n */\nexport class MergeContentFormatter {\n    /**\n     * Format merged content for preview\n     * @param {string} content - Raw content to format\n     * @param {string} extension - File extension\n     * @param {boolean} withLineNumbers - Whether to add line numbers\n     * @returns {string} Formatted HTML\n     */\n    static formatPreview(content, extension = '', withLineNumbers = true) {\n        // Ensure we have valid content\n        if (!content) {\n            Debug.warn('MergeContentFormatter: Empty content for preview formatting', null, 2);\n            return '<pre><code>No content available</code></pre>';\n        }\n\n        // Store original content for copy operations\n        const originalContent = content;\n\n        // Safely escape content\n        const escapedContent = StringUtils.escapeHtml(content);\n\n        // Map extension to language class for highlight.js\n        const languageClass = MergeContentFormatter.getLanguageClass(extension);\n\n        // Add data attribute for line numbers if requested\n        const lineNumberAttr = withLineNumbers ? 'data-line-numbers=\"true\"' : '';\n\n        // Store original content in a data attribute for reliable copying\n        const result = `<pre ${lineNumberAttr}><code class=\"${languageClass}\" data-original-code=\"${StringUtils.escapeAttribute(originalContent)}\">${escapedContent}</code></pre>`;\n\n        // Replace console.log with Debug utility\n        Debug.log('MergeContentFormatter: Preview HTML generated', { preview: result.substring(0, 150) + '...' }, 2);\n\n        return result;\n    }\n\n    /**\n     * Get language class from file extension\n     * @param {string} extension - File extension\n     * @returns {string} Language class for syntax highlighting\n     */\n    static getLanguageClass(extension = '') {\n        if (!extension) {\n            return '';\n        }\n\n        // Map common extensions to highlight.js language classes\n        const extensionMap = {\n            'js': 'javascript',\n            'ts': 'typescript',\n            'py': 'python',\n            'rb': 'ruby',\n            'java': 'java',\n            'cs': 'csharp',\n            'php': 'php',\n            'html': 'html',\n            'css': 'css',\n            'json': 'json',\n            'xml': 'xml',\n            'yml': 'yaml',\n            'yaml': 'yaml',\n            'md': 'markdown',\n            'sql': 'sql'\n        };\n\n        return extensionMap[extension.toLowerCase()] || extension.toLowerCase();\n    }\n\n    /**\n     * Format count of unresolved conflicts\n     * @param {number} count - Number of unresolved conflicts\n     * @param {Object} translations - Translation strings\n     * @returns {string} Formatted message\n     */\n    static formatUnresolvedCount(count, translations = {}) {\n        if (count === 1) {\n            return (translations.unresolvedChunkSingular || 'There is %COUNT% unresolved chunk remaining.')\n                .replace('%COUNT%', count);\n        } else {\n            return (translations.unresolvedChunksPlural || 'There are %COUNT% unresolved chunks remaining.')\n                .replace('%COUNT%', count);\n        }\n    }\n\n    /**\n     * Prepare code for highlighting\n     * @param {string} code - Code to prepare\n     * @returns {string} Prepared code\n     */\n    static prepareCode(code) {\n        // Clean up line endings\n        const cleanCode = code.replace(/\\r\\n/g, '\\n');\n        return cleanCode;\n    }\n\n    /**\n     * Reset element highlighting state\n     * @param {Element} element - Element to reset\n     * @returns {string|null} Original text content or null\n     */\n    static resetHighlighting(element) {\n        if (!element) return null;\n\n        // Remove data-highlighted attribute\n        if (element.hasAttribute('data-highlighted')) {\n            element.removeAttribute('data-highlighted');\n        }\n\n        // Store the original content\n        const originalText = element.textContent;\n\n        // Reset element content\n        element.textContent = originalText;\n\n        return originalText;\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * LoaderManager - Centralized utility for managing loading indicators\n *\n * This singleton class provides methods to display and hide loading indicators\n * throughout the application in a consistent manner. It supports different styles\n * of loaders including fullscreen, inline, and element-specific indicators.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * LoaderManager class\n *\n * Provides methods to display and hide loading indicators throughout the application\n */\nexport class LoaderManager extends BaseSingleton {\n    /**\n     * Initialize the LoaderManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.activeLoaders = new Map();\n        this.loaderIdCounter = 0;\n        this.isMainLoaderActive = false; // Track if main loader is active\n        this.mainLoaderId = null; // Store the ID of the main loader for reference\n        this.recentlyRemovedLoaders = new Set(); // Track recently removed loaders to prevent errors\n\n        // Track loader operations for debugging\n        this.operationLog = [];\n        this.maxLogEntries = 20;\n\n        // Set flag to remember log level in debug mode\n        this.verboseLogging = Debug.isInitialized ? Debug.logLevel > 2 : false;\n\n        // Mark as initialized\n        this.initialized = true;\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {LoaderManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new LoaderManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Log an operation for debugging\n     * @private\n     */\n    _logOperation(operation, details) {\n        // Keep a short log history for debugging\n        if (this.operationLog.length >= this.maxLogEntries) {\n            this.operationLog.shift(); // Remove oldest entry\n        }\n\n        this.operationLog.push({\n            timestamp: new Date().toISOString(),\n            operation,\n            details\n        });\n    }\n\n    /**\n     * Create a loader element with the given message\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Options for the loader\n     * @returns {HTMLElement} The loader element\n     * @private\n     */\n    _createLoaderElement(message, options = {}) {\n        // Use an early translation if TranslationManager is available\n        if (message && typeof message === 'string' && message.startsWith('$') && TranslationManager.getInstance().isInitialized()) {\n            const translationKey = message.substring(1);\n            const translatedMessage = TranslationManager.getInstance().get(translationKey);\n            if (translatedMessage) {\n                message = translatedMessage;\n            }\n        }\n\n        const loader = document.createElement('div');\n        loader.className = 'vdm-loader';\n\n        if (options.fullscreen) {\n            loader.classList.add('vdm-loader--fullscreen');\n        }\n\n        if (options.inline) {\n            loader.classList.add('vdm-loader--inline');\n        }\n\n        if (options.small) {\n            loader.classList.add('vdm-loader--small');\n        }\n\n        if (options.container) {\n            loader.classList.add('vdm-loader--container');\n        }\n\n        if (options.className) {\n            loader.classList.add(options.className);\n        }\n\n        if (options.zIndex) {\n            loader.style.zIndex = options.zIndex;\n        }\n\n        // Create spinner\n        const spinner = document.createElement('div');\n        spinner.className = 'vdm-loader__spinner';\n        loader.appendChild(spinner);\n\n        // Add message if provided\n        if (message) {\n            const messageElement = document.createElement('div');\n            messageElement.className = 'vdm-loader__message';\n            messageElement.textContent = message;\n            loader.appendChild(messageElement);\n        }\n\n        return loader;\n    }\n\n    /**\n     * Show a loading indicator\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @param {boolean} options.fullscreen - Whether to show a fullscreen loader\n     * @param {boolean} options.inline - Whether to show an inline loader\n     * @param {boolean} options.small - Whether to show a small loader\n     * @param {string} options.className - Additional CSS class to add to the loader\n     * @param {HTMLElement} options.target - Target element to add the loader to\n     * @param {number} options.zIndex - Z-index for the loader\n     * @returns {string} ID of the loader (use this to hide the specific loader)\n     */\n    showLoader(message = 'Loading...', options = {}) {\n        // If main loader is active and we're showing a fullscreen loader,\n        // reuse the main loader with updated message\n        if (this.isMainLoaderActive && this.mainLoaderId && options.fullscreen) {\n            Debug.log('LoaderManager: Reusing main loader for fullscreen request', { message }, 3);\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        Debug.log('LoaderManager: Showing loader', { message, options }, 3);\n\n        const loaderId = `loader-${++this.loaderIdCounter}`;\n        const loaderElement = this._createLoaderElement(message, options);\n        loaderElement.setAttribute('data-loader-id', loaderId);\n\n        // Add loader to the correct target element\n        if (options.target && options.target instanceof HTMLElement) {\n            // If the target has position: static, change to relative for proper positioning\n            const targetPosition = window.getComputedStyle(options.target).getPropertyValue('position');\n            if (targetPosition === 'static') {\n                options.target.style.position = 'relative';\n            }\n            options.target.appendChild(loaderElement);\n        } else {\n            document.body.appendChild(loaderElement);\n        }\n\n        // Store reference to the loader\n        this.activeLoaders.set(loaderId, {\n            element: loaderElement,\n            target: options.target || document.body,\n            fullscreen: !!options.fullscreen,\n            timestamp: Date.now()\n        });\n\n        // Remove from recently removed list if it's there (unlikely but possible with ID reuse)\n        this.recentlyRemovedLoaders.delete(loaderId);\n\n        this._logOperation('show', { id: loaderId, message, type: 'regular' });\n\n        // Add showing class to trigger CSS transitions if any\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.classList.add('vdm-loader--showing');\n            }\n        }, 10);\n\n        return loaderId;\n    }\n\n    /**\n     * Show the main application loader and hide all other loaders\n     *\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Additional options for the loader\n     * @returns {string} ID of the loader\n     */\n    showMainLoader(message = 'Loading...', options = {}) {\n        Debug.log('LoaderManager: Showing main loader', { message }, 2);\n\n        // If main loader is already active, just update the message and return the existing ID\n        if (this.isMainLoaderActive && this.mainLoaderId && this.activeLoaders.has(this.mainLoaderId)) {\n            Debug.log('LoaderManager: Main loader already active, updating message', {\n                currentId: this.mainLoaderId,\n                message\n            }, 2);\n\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        // Hide all other loaders when showing the main one\n        this._hideAllInlineLoaders();\n\n        // Get the main loader element if it exists in the DOM\n        const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n\n        if (mainLoaderElement) {\n            // If the element already exists in the DOM, just show it\n            mainLoaderElement.style.display = 'flex';\n            mainLoaderElement.classList.add(Selectors.LOADER.ACTIVE.name());\n\n            // If it has a message element, update it\n            const messageElement = mainLoaderElement.querySelector('.vdm-loader__message');\n            if (messageElement) {\n                messageElement.textContent = message;\n            } else if (message) {\n                // Create message element if it doesn't exist but message is provided\n                const newMessageElement = document.createElement('div');\n                newMessageElement.className = 'vdm-loader__message';\n                newMessageElement.textContent = message;\n                mainLoaderElement.appendChild(newMessageElement);\n            }\n\n            // Generate an ID for this loader instance\n            const loaderId = `main-loader-${++this.loaderIdCounter}`;\n\n            // Store reference\n            this.activeLoaders.set(loaderId, {\n                element: mainLoaderElement,\n                target: document.body,\n                isMainLoader: true,\n                timestamp: Date.now()\n            });\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            // Remove from recently removed list if it's there\n            this.recentlyRemovedLoaders.delete(loaderId);\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-existing' });\n\n            return loaderId;\n        } else {\n            // If the element doesn't exist, create it using showLoader\n            const loaderId = this.showLoader(message, {\n                fullscreen: true,\n                className: Selectors.LOADER.MAIN.name(),\n                zIndex: 9999,\n                ...options\n            });\n\n            // Mark this as the main loader\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            if (loaderInfo) {\n                loaderInfo.isMainLoader = true;\n                loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n            }\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-new' });\n\n            return loaderId;\n        }\n    }\n\n    /**\n     * Show a loading indicator early in the page lifecycle before DiffViewer initialization\n     * This is specifically for components that need to show loaders before the main app initializes\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showEarlyLoader(message = 'Loading...', options = {}) {\n        // If debug is already initialized, use it, otherwise don't log\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Showing early loader', { message }, 2);\n        }\n\n        // Create a loader that will become the main loader\n        const loaderId = this.showLoader(message, {\n            fullscreen: true,\n            className: Selectors.LOADER.MAIN.name(),\n            zIndex: 9999,\n            ...options\n        });\n\n        // Mark this as the main loader\n        const loaderInfo = this.activeLoaders.get(loaderId);\n        if (loaderInfo) {\n            loaderInfo.isMainLoader = true;\n            loaderInfo.isEarlyLoader = true; // Mark as an early loader\n            loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n        }\n\n        // Update tracking\n        this.isMainLoaderActive = true;\n        this.mainLoaderId = loaderId;\n\n        this._logOperation('show', { id: loaderId, message, type: 'early-loader' });\n\n        return loaderId;\n    }\n\n    /**\n     * Convert an early loader to the main loader to ensure continuity\n     * Call this method from enableDiffViewer to take over an existing early loader\n     *\n     * @param {string} message - Optional new message to display\n     * @returns {string} ID of the main loader\n     */\n    adoptEarlyLoader(message = null) {\n        // If there's no active main loader, create one\n        if (!this.isMainLoaderActive || !this.mainLoaderId) {\n            if (Debug.isInitialized) {\n                Debug.log('LoaderManager: No early loader to adopt, creating new main loader', null, 2);\n            }\n            return this.showMainLoader(message);\n        }\n\n        // Update the message if provided\n        if (message) {\n            this.updateLoaderMessage(this.mainLoaderId, message);\n        }\n\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Adopted early loader as main loader', { id: this.mainLoaderId }, 2);\n        }\n\n        return this.mainLoaderId;\n    }\n\n    /**\n     * Hide the main loader\n     *\n     * @param {string} loaderId - Optional ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideMainLoader(loaderId = null) {\n        Debug.log('LoaderManager: Hiding main loader', { loaderId }, 2);\n\n        // Special handling: If this was recently removed, just return success\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Main loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // If main loader isn't active, silently succeed\n        if (!this.isMainLoaderActive) {\n            Debug.log('LoaderManager: Main loader not active, nothing to hide', null, 2);\n            return true;\n        }\n\n        // If loaderId is provided but doesn't match the main loader ID, verify it\n        if (loaderId && loaderId !== this.mainLoaderId) {\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            // If it's not found or not a main loader, use the stored main loader ID\n            if (!loaderInfo?.isMainLoader) {\n                Debug.log('LoaderManager: Using stored main loader ID',\n                    { providedId: loaderId, actualMainId: this.mainLoaderId }, 2);\n                loaderId = this.mainLoaderId;\n            }\n        } else if (!loaderId) {\n            // If no ID provided, use the stored main loader ID\n            loaderId = this.mainLoaderId;\n        }\n\n        // If we couldn't determine a loader ID or it doesn't exist anymore,\n        // try to clean up by element ID\n        if (!loaderId || !this.activeLoaders.has(loaderId)) {\n            const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n            if (mainLoaderElement) {\n                mainLoaderElement.style.display = 'none';\n                if (mainLoaderElement.parentNode) {\n                    mainLoaderElement.parentNode.removeChild(mainLoaderElement);\n                }\n                Debug.log('LoaderManager: Removed main loader by element ID', null, 2);\n            }\n\n            // Reset state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n            return true;\n        }\n\n        // Now hide the specific loader\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader so we don't try to hide it again\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            // Update state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            this._logOperation('hide', { id: loaderId, type: 'main' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Hide all inline loaders (internal method)\n     * @private\n     */\n    _hideAllInlineLoaders() {\n        Debug.log('LoaderManager: Hiding all inline loaders', null, 3);\n\n        // Find all inline loaders\n        const inlineLoaderIds = Array.from(this.activeLoaders.entries())\n            .filter(([_id, info]) => !info.isMainLoader && !info.fullscreen)\n            .map(([id]) => id);\n\n        // Hide each one\n        inlineLoaderIds.forEach(id => {\n            this._hideSpecificLoader(id);\n\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(id);\n\n            this._logOperation('hide', { id, type: 'inline-batch' });\n        });\n\n        // Also look for any inline loaders in the DOM that might not be tracked\n        document.querySelectorAll('.vdm-loader--inline').forEach(loader => {\n            this._removeLoaderElement(loader);\n            this._logOperation('hide', { element: 'untracked-inline', type: 'dom-query' });\n        });\n    }\n\n    /**\n     * Hide a specific loader by ID\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideLoader(loaderId) {\n        // If no loaderId specified, hide all loaders\n        if (!loaderId) {\n            Debug.log('LoaderManager: Hiding all loaders', null, 3);\n            const loaderIds = Array.from(this.activeLoaders.keys());\n            let success = true;\n\n            loaderIds.forEach(id => {\n                if (!this._hideSpecificLoader(id)) {\n                    success = false;\n                }\n\n                // Remember we removed this loader\n                this.recentlyRemovedLoaders.add(id);\n\n                this._logOperation('hide', { id, type: 'all-batch' });\n            });\n\n            // Reset main loader tracking\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            return success;\n        }\n\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // Case: this is the main loader\n        if (loaderId === this.mainLoaderId) {\n            return this.hideMainLoader(loaderId);\n        }\n\n        // Hide a specific loader\n        Debug.log('LoaderManager: Hiding loader', { loaderId }, 3);\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            this._logOperation('hide', { id: loaderId, type: 'specific' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Internal method to hide a specific loader\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     * @private\n     */\n    _hideSpecificLoader(loaderId) {\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed (in _hideSpecificLoader)', { loaderId }, 3);\n            return true;\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            Debug.log('LoaderManager: No loader found to hide', { loaderId }, 2);\n            return false;\n        }\n\n        // Update main loader status if this was a main loader\n        if (loader.isMainLoader) {\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n        }\n\n        // Check if the element still exists in DOM\n        if (!loader.element?.parentNode) {\n            // Element is already removed, just clean up our tracking\n            this.activeLoaders.delete(loaderId);\n            Debug.log('LoaderManager: Loader element was already removed from DOM', { loaderId }, 3);\n            return true;\n        }\n\n        // Remove the loader element with transition\n        this._removeLoaderElement(loader.element);\n        this.activeLoaders.delete(loaderId);\n\n        // Remember we removed this loader\n        this.recentlyRemovedLoaders.add(loaderId);\n\n        return true;\n    }\n\n    /**\n     * Remove a loader element with transition\n     *\n     * @param {HTMLElement} loaderElement - Loader element to remove\n     * @private\n     */\n    _removeLoaderElement(loaderElement) {\n        // First remove the showing class to trigger CSS transitions if any\n        loaderElement.classList.remove('vdm-loader--showing');\n\n        // Wait for transition to complete before removing the element\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.parentNode.removeChild(loaderElement);\n            }\n        }, 300); // Match this timing with CSS transition duration\n    }\n\n    /**\n     * Show a loader in a specific container (useful for buttons, etc.)\n     *\n     * @param {HTMLElement} container - Container element to add the loader to\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showLoaderInContainer(container, message = '', options = {}) {\n        const loaderId = this.showLoader(message, {\n            target: container,\n            container: true,\n            small: true,\n            ...options\n        });\n\n        this._logOperation('show', { id: loaderId, message, type: 'container' });\n\n        return loaderId;\n    }\n\n    /**\n     * Update an existing loader's message\n     *\n     * @param {string} loaderId - ID of the loader to update\n     * @param {string} message - New message to display\n     * @returns {boolean} Success status\n     */\n    updateLoaderMessage(loaderId, message) {\n        // Don't log anything when recently removed IDs are encountered\n        // This eliminates the spam in the console for removed loaders\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            return true; // Silently succeed\n        }\n\n        // If this is a falsy ID and main loader is active, use the main loader\n        if (!loaderId && this.isMainLoaderActive && this.mainLoaderId) {\n            loaderId = this.mainLoaderId;\n            Debug.log('LoaderManager: Using main loader ID for message update', { mainLoaderId: loaderId }, 3);\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            // Only log at level 2 if we're in verbose mode (reduces noise)\n            if (this.verboseLogging) {\n                Debug.log('LoaderManager: No loader found to update message', { loaderId }, 2);\n            }\n            return false;\n        }\n\n        // Check if element still exists in DOM\n        if (!loader.element?.parentNode) {\n            Debug.log('LoaderManager: Loader element was removed from DOM', { loaderId }, 3);\n            this.activeLoaders.delete(loaderId);\n            this.recentlyRemovedLoaders.add(loaderId);\n            return false;\n        }\n\n        const messageElement = loader.element.querySelector('.vdm-loader__message');\n\n        if (messageElement) {\n            messageElement.textContent = message;\n            this._logOperation('update', { id: loaderId, message, type: 'existing-element' });\n            return true;\n        } else if (message) {\n            // Create message element if it doesn't exist but a message is provided\n            const newMessageElement = document.createElement('div');\n            newMessageElement.className = 'vdm-loader__message';\n            newMessageElement.textContent = message;\n            loader.element.appendChild(newMessageElement);\n            this._logOperation('update', { id: loaderId, message, type: 'new-element' });\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a loader with the given ID exists\n     * @param {string} loaderId - Loader ID to check\n     * @returns {boolean} - Whether the loader exists\n     */\n    hasLoader(loaderId) {\n        return this.activeLoaders.has(loaderId) &&\n               !this.recentlyRemovedLoaders.has(loaderId);\n    }\n\n    /**\n     * Clean up old entries in the recentlyRemovedLoaders set to prevent memory leaks\n     * Called periodically by the system\n     */\n    _cleanupOldRemovedLoaders() {\n        // If the set gets too large, clean up old entries\n        if (this.recentlyRemovedLoaders.size > 20) {\n            // Just reset the whole set for simplicity\n            this.recentlyRemovedLoaders.clear();\n        }\n    }\n\n    /**\n     * Get debug information about a specific loader\n     * @param {string} loaderId - Loader ID to check\n     * @returns {Object|null} Loader information\n     */\n    getLoaderInfo(loaderId) {\n        if (!loaderId) return null;\n\n        const loader = this.activeLoaders.get(loaderId);\n        if (!loader) {\n            return {\n                exists: false,\n                wasRemoved: this.recentlyRemovedLoaders.has(loaderId)\n            };\n        }\n\n        return {\n            exists: true,\n            isMain: !!loader.isMainLoader,\n            fullscreen: !!loader.fullscreen,\n            message: loader.element.querySelector('.vdm-loader__message')?.textContent,\n            age: Date.now() - (loader.timestamp || 0), // milliseconds since creation\n            inDom: !!loader.element.parentNode\n        };\n    }\n\n    /**\n     * Debug method to get active loader information\n     * @returns {Object} Information about current loaders\n     */\n    getLoaderStatus() {\n        // Clean up the recently removed list to keep it tidy\n        this._cleanupOldRemovedLoaders();\n\n        return {\n            activeCount: this.activeLoaders.size,\n            recentlyRemovedCount: this.recentlyRemovedLoaders.size,\n            mainLoaderActive: this.isMainLoaderActive,\n            mainLoaderId: this.mainLoaderId,\n            operations: [...this.operationLog],\n            loaders: Array.from(this.activeLoaders.entries()).map(([id, info]) => ({\n                id,\n                isMain: !!info.isMainLoader,\n                fullscreen: !!info.fullscreen,\n                message: info.element.querySelector('.vdm-loader__message')?.textContent,\n                age: Date.now() - (info.timestamp || 0), // milliseconds since creation\n                inDom: !!info.element.parentNode\n            }))\n        };\n    }\n}\n\nexport default LoaderManager;\n","// SyntaxHighlighter.js - Handles syntax highlighting for code\nimport { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { MergeContentFormatter } from '../utils/MergeContentFormatter';\nimport languageMap from '../data/highlightjs-languages.json';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport Selectors from '../constants/Selectors';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport { LoaderManager } from '../utils/LoaderManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Manages syntax highlighting functionality\n */\nexport class SyntaxHighlighter {\n    /**\n     * @param {DiffViewer} diffViewer - Parent DiffViewer component\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.highlightJsLoaded = false;\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.language = 'plaintext'; // Default language\n\n        // Get theme from ThemeManager instead of localStorage directly\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.theme = currentTheme.mode || 'light';\n\n        Debug.log('SyntaxHighlighter: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize the highlighter with the language\n     */\n    async initialize() {\n        // First, load highlight.js core\n        await this.loadHighlightJs();\n\n        // Only proceed with language setup if highlight.js loaded successfully\n        if (this.highlightJsLoaded) {\n            // Get filepath from runtimeProps\n            const filepath = this.diffViewer.getRuntimeProps().filepath || '';\n\n            // Set initial language using the prioritized logic\n            await this.setLanguage(filepath);\n\n            Debug.log('SyntaxHighlighter: Initialized with language:', this.language, 2);\n        } else {\n            Debug.warn('SyntaxHighlighter: Initialization incomplete - highlight.js failed to load', null, 2);\n        }\n    }\n\n    /**\n     * Load highlightjs and required language components\n     */\n    async loadHighlightJs() {\n        try {\n            Debug.log('SyntaxHighlighter: Loading highlight.js core', null, 2);\n\n            // Use resource loader to load syntax highlighter core\n            await this.diffViewer.resourceLoader.loadSyntaxHighlighterCore();\n\n            this.highlightJsLoaded = true;\n            Debug.log('SyntaxHighlighter: highlight.js loaded successfully', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Failed to load highlight.js:', error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Highlight all code elements in batches\n     * @param {Element|Document} container - Container with code elements\n     */\n    highlightAll(container = document) {\n        if (!this.highlightJsLoaded || !window.hljs) {\n            Debug.warn('SyntaxHighlighter: Cannot highlight code - highlight.js not loaded', null, 2);\n            return;\n        }\n\n        // Use DOMUtils.getElements for consistent element selection with error handling\n        const elements = DOMUtils.getElements(\n            `${Selectors.DIFF.LINE_CONTENT}:not(${Selectors.DIFF.LINE_CONTENT_EMPTY}):not(${Selectors.DIFF.LINE_PLACEHOLDER})`,\n            container\n        );\n\n        if (!elements) {\n            Debug.log('SyntaxHighlighter: No code elements found to highlight', null, 2);\n            return;\n        }\n\n        const codeElements = Array.from(elements).filter(el => el.textContent.trim());\n        Debug.log(`SyntaxHighlighter: Found ${codeElements.length} code elements to highlight`, null, 2);\n\n        // Only show loader for large files (more than 100 elements)\n        let loaderId = null;\n        if (codeElements.length > 100) {\n            // Get translation manager for loading message\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const loadingMessage = translationManager.get('applyingSyntaxHighlighting', 'Applying syntax highlighting...');\n\n            // Show loading indicator\n            loaderId = loaderManager.showLoader(loadingMessage, {\n                fullscreen: true,\n                zIndex: 1000\n            });\n\n            Debug.log('SyntaxHighlighter: Showing loader for large file highlighting', null, 2);\n        }\n\n        // Small batch size for smoother UI updates\n        const batchSize = 30;\n        let index = 0;\n\n        // Performance tracking\n        const startTime = performance.now();\n\n        // Function to process a batch\n        const processBatch = () => {\n            if (index >= codeElements.length) {\n                // Hide loader if shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n\n                    // Log performance metrics\n                    const endTime = performance.now();\n                    const duration = endTime - startTime;\n                    Debug.log(`SyntaxHighlighter: Highlighting complete for ${codeElements.length} elements in ${duration.toFixed(2)}ms`, null, 2);\n                } else {\n                    Debug.log('SyntaxHighlighter: Highlighting complete', null, 2);\n                }\n                return;\n            }\n\n            // Process next batch\n            const end = Math.min(index + batchSize, codeElements.length);\n            for (let i = index; i < end; i++) {\n                this.highlightElement(codeElements[i]);\n            }\n\n            // Update loader message with progress if shown\n            if (loaderId && index % (batchSize * 5) === 0) { // Update every 5 batches\n                const loaderManager = LoaderManager.getInstance();\n                const translationManager = TranslationManager.getInstance();\n                const progress = Math.round((index / codeElements.length) * 100);\n                const progressMessage = translationManager.get('applyingSyntaxHighlightingProgress',\n                    'Applying syntax highlighting ({0}%)').replace('{0}', progress);\n\n                loaderManager.updateLoaderMessage(loaderId, progressMessage);\n            }\n\n            // Move to next batch\n            index = end;\n\n            // Schedule next batch - use requestAnimationFrame for better performance\n            requestAnimationFrame(() => {\n                setTimeout(processBatch, 0);\n            });\n        };\n\n        // Start batch processing\n        processBatch();\n    }\n\n    /**\n     * Apply syntax highlighting to a single element\n     * @param {Element} element - Element to highlight\n     * @param {boolean} withLineNumbers - Whether to add line numbers\n     */\n    highlightElement(element, withLineNumbers = false) {\n        if (!this.highlightJsLoaded || !window.hljs || !element) return;\n\n        try {\n            // Use DOMUtils.toggleClass for consistent class manipulation\n            if (!element.classList.contains(this.language)) {\n                // Remove existing language classes first\n                const languageClasses = element.className.split(' ')\n                    .filter(cls => cls.startsWith('language-'));\n\n                languageClasses.forEach(cls => {\n                    element.classList.remove(cls);\n                });\n\n                // Add the correct language class\n                element.classList.add(this.language);\n            }\n\n            // Use the MergeContentFormatter utility\n            MergeContentFormatter.resetHighlighting(element);\n\n            // Apply highlighting\n            window.hljs.highlightElement(element);\n\n            // Add line numbers if needed\n            if (withLineNumbers && window.hljs.lineNumbersBlock) {\n                window.hljs.lineNumbersBlock(element);\n            }\n        } catch (error) {\n            Debug.error('SyntaxHighlighter: Error highlighting element:', error, 2);\n        }\n    }\n\n    /**\n     * Set the language for syntax highlighting\n     * @param {string} filepath - File path to derive language from\n     */\n    async setLanguage(filepath) {\n        // Get runtime properties\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Try to determine language using the prioritized logic\n        let newLanguage = 'plaintext';\n        let sourceUsed = 'default';\n\n        // 1. Try to guess language from filepath if provided\n        if (filepath && typeof filepath === 'string' && filepath.includes('.')) {\n            const extension = filepath.split('.').pop().toLowerCase();\n            if (extension) {\n                newLanguage = languageMap[extension] || extension;\n                sourceUsed = 'filepath';\n                Debug.log(`SyntaxHighlighter: Language determined from filepath extension: ${extension}`, null, 2);\n            }\n        }\n\n        // 2. If no language determined from filepath, try diffData.language\n        if (newLanguage === 'plaintext' && sourceUsed === 'default' && runtimeProps.diffData?.language) {\n            newLanguage = runtimeProps.diffData.language;\n            sourceUsed = 'diffData';\n            Debug.log(`SyntaxHighlighter: Language determined from diffData: ${newLanguage}`, null, 2);\n        }\n\n        // 3. If still no language, use plaintext as fallback\n        if (newLanguage === 'plaintext' && sourceUsed === 'default') {\n            Debug.log('SyntaxHighlighter: No language could be determined, using plaintext as fallback', null, 2);\n        }\n\n        // Only load if different from current language\n        if (this.language !== newLanguage) {\n            this.language = newLanguage;\n\n            Debug.log(`SyntaxHighlighter: Setting language to ${newLanguage} (source: ${sourceUsed})`, null, 2);\n\n            // Only load if needed and not already loaded\n            if (this.highlightJsLoaded && !this.resourceLoader.loadedLanguages.has(newLanguage)) {\n                Debug.log(`SyntaxHighlighter: Loading language ${newLanguage}`, null, 2);\n\n                // Get translation manager for loading message\n                const translationManager = TranslationManager.getInstance();\n                const loaderManager = LoaderManager.getInstance();\n                const loadingMessage = translationManager.get('loadingLanguage', 'Loading language: {0}')\n                    .replace('{0}', newLanguage);\n\n                // Try to use the main loader ID from diffViewer\n                const mainLoaderId = this.diffViewer.mainLoaderId;\n\n                if (!mainLoaderId) {\n                    Debug.warn('SyntaxHighlighter: No main loader ID available from DiffViewer for language loading', null, 2);\n                }\n\n                try {\n                    // Update the main loader message if available\n                    if (mainLoaderId) {\n                        loaderManager.updateLoaderMessage(mainLoaderId, loadingMessage);\n                    }\n\n                    // Use dynamic import to load the language on demand\n                    await this.resourceLoader.loadLanguage(newLanguage);\n\n                    // No need to hide the main loader as it's managed elsewhere\n                } catch (error) {\n                    Debug.error(`SyntaxHighlighter: Error loading language ${newLanguage}:`, error, 2);\n                }\n            } else {\n                Debug.log(`SyntaxHighlighter: Language ${newLanguage} already loaded`, null, 3);\n            }\n\n            Debug.log(`SyntaxHighlighter: Language set to ${this.language}`, null, 2);\n        } else {\n            Debug.log(`SyntaxHighlighter: Language already set to ${this.language}`, null, 3);\n        }\n    }\n}\n","import Selectors from '../constants/Selectors';\nimport { Debug } from '../utils/Debug';\n\n// Cache for chunk elements to avoid repeated DOM queries\nconst _elementCache = {};\nconst _iconMarkerCache = {};\nconst _rowCache = {};\nlet _chunkIndex = null;\n\n// Cache statistics for diagnostics\nconst _cacheStats = {\n    elementCacheHits: 0,\n    elementCacheMisses: 0,\n    iconMarkerCacheHits: 0,\n    iconMarkerCacheMisses: 0,\n    rowCacheHits: 0,\n    rowCacheMisses: 0\n};\n\n/**\n * Utility functions specific to chunk operations\n */\nexport class ChunkUtils {\n    /**\n     * Clear the element cache\n     * Should be called when the DOM structure changes significantly\n     */\n    static clearCache() {\n        Object.keys(_elementCache).forEach(key => delete _elementCache[key]);\n        Object.keys(_iconMarkerCache).forEach(key => delete _iconMarkerCache[key]);\n        Object.keys(_rowCache).forEach(key => delete _rowCache[key]);\n        _chunkIndex = null;\n        Debug.log('ChunkUtils: Cache cleared', null, 2);\n    }\n\n    /**\n     * Get cache statistics\n     * @returns {Object} Current cache statistics\n     */\n    static getCacheStats() {\n        return {..._cacheStats};\n    }\n\n    /**\n     * Preload all chunk elements into cache\n     * This dramatically improves performance when working with large files\n     * @returns {Object} Index of all chunks and their elements\n     */\n    static preloadChunks() {\n        const startTime = performance.now();\n\n        // Clear existing cache first\n        ChunkUtils.clearCache();\n\n        // Initialize chunk index\n        _chunkIndex = {\n            byId: {},\n            byLineId: {},\n            allChunkIds: new Set()\n        };\n\n        // Get all chunk elements in one query\n        const allChunkElements = document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id]`);\n        Debug.log(`ChunkUtils: Preloading ${allChunkElements.length} chunk elements`, null, 2);\n\n        // Process all chunk elements\n        allChunkElements.forEach(element => {\n            const chunkId = element.getAttribute('data-chunk-id');\n            const side = element.getAttribute('data-side');\n            const lineId = element.getAttribute('data-line-id');\n\n            if (!chunkId) return;\n\n            // Add to chunk index\n            _chunkIndex.allChunkIds.add(chunkId);\n\n            // Initialize chunk in index if needed\n            if (!_chunkIndex.byId[chunkId]) {\n                _chunkIndex.byId[chunkId] = {\n                    elements: {\n                        all: [],\n                        left: [],\n                        right: []\n                    },\n                    lineIds: new Set()\n                };\n            }\n\n            // Add element to appropriate collections\n            _chunkIndex.byId[chunkId].elements.all.push(element);\n            if (side === 'left') {\n                _chunkIndex.byId[chunkId].elements.left.push(element);\n            } else if (side === 'right') {\n                _chunkIndex.byId[chunkId].elements.right.push(element);\n            }\n\n            // Track line ID and add to line index\n            if (lineId) {\n                _chunkIndex.byId[chunkId].lineIds.add(lineId);\n\n                // Add to line index for quick lookup\n                _chunkIndex.byLineId[lineId] = {\n                    chunkId: chunkId,\n                    element: element\n                };\n\n                // Also cache the element's parent row\n                const row = element.closest('tr');\n                if (row) {\n                    _rowCache[element.dataset.lineId] = row;\n                }\n            }\n\n            // Add to element cache directly to avoid later queries\n            // 1. All elements for chunk\n            const allCacheKey = `${chunkId}:both`;\n            if (!_elementCache[allCacheKey]) {\n                _elementCache[allCacheKey] = [];\n            }\n            _elementCache[allCacheKey].push(element);\n\n            // 2. Side-specific elements\n            if (side) {\n                const sideCacheKey = `${chunkId}:${side}`;\n                if (!_elementCache[sideCacheKey]) {\n                    _elementCache[sideCacheKey] = [];\n                }\n                _elementCache[sideCacheKey].push(element);\n            }\n        });\n\n        // Preload all icon markers\n        const allIconMarkers = document.querySelectorAll(`${Selectors.ICONS.MARKER}[data-line-id]`);\n        Debug.log(`ChunkUtils: Preloading ${allIconMarkers.length} icon markers`, null, 2);\n\n        allIconMarkers.forEach(marker => {\n            const lineId = marker.getAttribute('data-line-id');\n            if (lineId) {\n                _iconMarkerCache[lineId] = marker;\n\n                // Also associate with chunk if possible\n                if (_chunkIndex.byLineId[lineId]) {\n                    const chunkId = _chunkIndex.byLineId[lineId].chunkId;\n                    if (!_chunkIndex.byId[chunkId].iconMarkers) {\n                        _chunkIndex.byId[chunkId].iconMarkers = [];\n                    }\n                    _chunkIndex.byId[chunkId].iconMarkers.push(marker);\n                }\n            }\n        });\n\n        const duration = performance.now() - startTime;\n        Debug.log(`ChunkUtils: Preloaded ${Object.keys(_chunkIndex.byId).length} chunks in ${duration.toFixed(2)}ms`, null, 2);\n\n        return _chunkIndex;\n    }\n\n    /**\n     * Get all chunk IDs in the document\n     * @returns {Array} Array of chunk IDs\n     */\n    static getAllChunkIds() {\n        // Ensure index is built\n        if (!_chunkIndex) {\n            ChunkUtils.preloadChunks();\n        }\n\n        return Array.from(_chunkIndex.allChunkIds);\n    }\n\n    /**\n     * Sort elements by line number\n     * @param {Array|NodeList} elements - Elements to sort\n     * @returns {Array} Sorted elements\n     */\n    static sortElementsByLineNumber(elements) {\n        return Array.from(elements).sort((a, b) => {\n            const aLineNum = parseInt(a.dataset.lineId?.split('-').pop() || '0', 10);\n            const bLineNum = parseInt(b.dataset.lineId?.split('-').pop() || '0', 10);\n            return aLineNum - bLineNum;\n        });\n    }\n\n    /**\n     * Find elements by chunk ID\n     * @param {string} chunkId - The chunk ID to find\n     * @param {string} side - Optional side ('left' or 'right')\n     * @returns {Array} Matching elements\n     */\n    static getChunkElements(chunkId, side = null) {\n        if (!chunkId) return [];\n\n        // Create cache key\n        const cacheKey = `${chunkId}:${side || 'both'}`;\n\n        // Use cached elements if available\n        if (_elementCache[cacheKey]) {\n            _cacheStats.elementCacheHits++;\n            return _elementCache[cacheKey];\n        }\n\n        _cacheStats.elementCacheMisses++;\n\n        // Check if we have the chunk index built\n        if (_chunkIndex && _chunkIndex.byId[chunkId]) {\n            let elements;\n            if (side === 'left') {\n                elements = _chunkIndex.byId[chunkId].elements.left;\n            } else if (side === 'right') {\n                elements = _chunkIndex.byId[chunkId].elements.right;\n            } else {\n                elements = _chunkIndex.byId[chunkId].elements.all;\n            }\n\n            // Cache the result\n            _elementCache[cacheKey] = elements;\n            return elements;\n        }\n\n        // Fall back to DOM queries if index not available\n        let elements;\n        if (side) {\n            elements = Array.from(document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id=\"${chunkId}\"][data-side=\"${side}\"]`));\n        } else {\n            elements = Array.from(document.querySelectorAll(`${Selectors.DIFF.CHUNK}[data-chunk-id=\"${chunkId}\"]`));\n        }\n\n        // Cache the result\n        _elementCache[cacheKey] = elements;\n        return elements;\n    }\n\n    /**\n     * Get all icon markers for a chunk ID\n     * @param {string} chunkId - The chunk ID\n     * @returns {Array} Array of icon marker elements\n     */\n    static getChunkIconMarkers(chunkId) {\n        if (!chunkId) return [];\n\n        // Check if we have the chunk index built\n        if (_chunkIndex && _chunkIndex.byId[chunkId]) {\n            return _chunkIndex.byId[chunkId].iconMarkers || [];\n        }\n\n        // If not in index, collect markers by getting line IDs from chunk elements\n        const elements = ChunkUtils.getChunkElements(chunkId);\n        const markers = [];\n\n        elements.forEach(element => {\n            const lineId = element.dataset.lineId;\n            if (lineId) {\n                const marker = ChunkUtils.getIconMarker(lineId);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n        });\n\n        return markers;\n    }\n\n    /**\n     * Get icon markers by chunk ID and line ID\n     * @param {string} lineId - The line ID\n     * @returns {Element|null} Icon marker element or null\n     */\n    static getIconMarker(lineId) {\n        if (!lineId) return null;\n\n        // Use cached marker if available\n        if (_iconMarkerCache[lineId]) {\n            _cacheStats.iconMarkerCacheHits++;\n            return _iconMarkerCache[lineId];\n        }\n\n        _cacheStats.iconMarkerCacheMisses++;\n\n        // If we have the index, check there first\n        if (_chunkIndex && _chunkIndex.byLineId[lineId]) {\n            // Get associated chunk and find marker\n            const chunkId = _chunkIndex.byLineId[lineId].chunkId;\n            if (_chunkIndex.byId[chunkId].iconMarkers) {\n                // Find marker with matching line ID\n                const marker = _chunkIndex.byId[chunkId].iconMarkers.find(m =>\n                    m.getAttribute('data-line-id') === lineId);\n\n                if (marker) {\n                    _iconMarkerCache[lineId] = marker;\n                    return marker;\n                }\n            }\n        }\n\n        // Fall back to DOM query\n        const iconMarker = document.querySelector(`${Selectors.ICONS.MARKER}[data-line-id=\"${lineId}\"]`);\n\n        // Cache the result\n        if (iconMarker) {\n            _iconMarkerCache[lineId] = iconMarker;\n        }\n\n        return iconMarker;\n    }\n\n    /**\n     * Get parent row of an element\n     * @param {Element} element - The element\n     * @returns {Element|null} Parent row element or null\n     */\n    static getParentRow(element) {\n        if (!element) return null;\n\n        const lineId = element.dataset.lineId;\n\n        // Use cached row if available\n        if (lineId && _rowCache[lineId]) {\n            _cacheStats.rowCacheHits++;\n            return _rowCache[lineId];\n        }\n\n        _cacheStats.rowCacheMisses++;\n        const row = element.closest('tr');\n\n        // Cache the result if line ID is available\n        if (lineId && row) {\n            _rowCache[lineId] = row;\n        }\n\n        return row;\n    }\n\n    /**\n     * Generate file content from line objects\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated file content\n     */\n    static generateFileContent(lines) {\n        return lines\n            .filter(line => line.type === 'content')\n            .map(line => line.line)\n            .join('\\n');\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { StringUtils } from '../../utils/StringUtils';\nimport Selectors from '../../constants/Selectors';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n/**\n * Responsible for rendering chunk content\n */\nexport class ChunkRenderer {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n    }\n\n    /**\n     * Render all chunks to container\n     */\n    renderChunks() {\n        Debug.log('ChunkRenderer: Beginning chunk rendering', null, 2);\n\n        // Show loading indicator for large diffs (more than 100 chunks)\n        let loaderId = null;\n        if (this.chunkManager.chunks.length > 100) {\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const loadingMessage = translationManager.get('renderingDiff', 'Rendering diff...');\n\n            loaderId = loaderManager.showLoader(loadingMessage, {\n                fullscreen: true,\n                zIndex: 1000\n            });\n\n            Debug.log('ChunkRenderer: Showing loader for large diff rendering', null, 2);\n        }\n\n        // Performance tracking\n        const startTime = performance.now();\n\n        // Generate HTML for both panes\n        const leftHtml = this.buildDiffPaneHtml(this.chunkManager.oldContent, 'left');\n        const rightHtml = this.buildDiffPaneHtml(this.chunkManager.newContent, 'right');\n\n        // Inject HTML into container - WITHOUT creating empty pane headers\n        // The headers will be added by ChunkSelectionHandler later\n        this.chunkManager.diffViewer.container.innerHTML = `\n            <div class=\"${Selectors.DIFF.PANES_CONTAINER.name()}\">\n                <div class=\"${Selectors.DIFF.PANE.name()}\" id=\"${Selectors.DIFF.PANE_LEFT.name()}\" data-side=\"left\">\n                    ${leftHtml}\n                </div>\n                <div class=\"${Selectors.DIFF.PANE.name()}\" id=\"${Selectors.DIFF.PANE_RIGHT.name()}\" data-side=\"right\">\n                    ${rightHtml}\n                </div>\n            </div>\n        `;\n\n        // Hide loader if shown\n        if (loaderId) {\n            const loaderManager = LoaderManager.getInstance();\n            loaderManager.hideLoader(loaderId);\n\n            // Log performance metrics\n            const endTime = performance.now();\n            const duration = endTime - startTime;\n            Debug.log(`ChunkRenderer: Rendered ${this.chunkManager.chunks.length} chunks in ${duration.toFixed(2)}ms`, null, 2);\n        } else {\n            Debug.log(`ChunkRenderer: Rendered ${this.chunkManager.chunks.length} chunks successfully`, null, 2);\n        }\n    }\n\n    /**\n     * Build HTML for a diff pane\n     * @param {Array} lines - Content lines\n     * @param {string} side - 'left' or 'right'\n     * @returns {string} Generated HTML\n     */\n    buildDiffPaneHtml(lines, side) {\n        // First, identify chunks that have placeholder lines\n        const chunksWithPlaceholders = new Set();\n        for (const line of lines) {\n            if (line.type === 'placeholder' && line.chunkId) {\n                chunksWithPlaceholders.add(line.chunkId);\n            }\n        }\n\n        // Create HTML with nested containers for proper scrolling\n        let html = `<div class=\"${Selectors.DIFF.PANE_CONTENT.name()} hljs\">`; // Add scrolling container\n        html += `<div class=\"${Selectors.DIFF.TABLE_WRAPPER.name()}\">`;\n        html += `<table class=\"${Selectors.CODE.TABLE.name()}\"><tbody>`;\n\n        let lineCounter = 0;\n\n        for (const line of lines) {\n            html += this._renderDiffLine(line, side, ++lineCounter, chunksWithPlaceholders);\n        }\n\n        html += '</tbody></table>';\n        html += '</div>'; // Close table wrapper\n        html += '</div>'; // Close scrolling container\n\n        return html;\n    }\n\n    /**\n     * Render a single diff line\n     * @private\n     */\n    _renderDiffLine(line, side, lineNumber, chunksWithPlaceholders) {\n        let html = '<tr>';\n\n        const chunkId = line.chunkId !== undefined ? line.chunkId : '';\n\n        // Get chunk type if this is a chunk line\n        let chunkType = '';\n        if (chunkId !== '') {\n            const chunk = this.chunkManager.chunks.find(c => c.id === chunkId);\n            chunkType = chunk ? chunk.type : '';\n        }\n\n        // Add line number cell\n        html += `<td class=\"${Selectors.CODE.LINE_NUMBER.name()}\">${lineNumber}</td>`;\n\n        // Check if this chunk has placeholder lines\n        const hasPlaceholder = chunkId !== '' && chunksWithPlaceholders.has(chunkId);\n\n        if (line.type === 'placeholder') {\n            html += this._renderPlaceholderLine(line, chunkId, chunkType, side, lineNumber);\n        } else {\n            html += this._renderContentLine(line, chunkId, chunkType, side, lineNumber, hasPlaceholder);\n        }\n\n        html += '</tr>';\n        return html;\n    }\n\n    /**\n     * Render placeholder line\n     * @private\n     */\n    _renderPlaceholderLine(line, chunkId, chunkType, side, lineNumber) {\n        // Add status class for chunks that can be navigated\n        let additionalClass = '';\n        if (chunkId !== '') {\n            // Add the vdm-diff__chunk class for elements with chunk IDs\n            additionalClass += ` ${Selectors.DIFF.CHUNK.name()}`;\n\n            if (line.conflict || chunkType === 'replace' || chunkType === 'add' || chunkType === 'delete') {\n                additionalClass += ` ${Selectors.STATUS.UNRESOLVED.name()}`;\n            }\n        }\n\n        return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()} ${Selectors.DIFF.LINE_CONTENT_EMPTY.name()} ${Selectors.DIFF.LINE_PLACEHOLDER.name()}${additionalClass}\"\n                   data-chunk-id=\"${chunkId}\"\n                   data-chunk-type=\"${chunkType}\"\n                   data-side=\"${side}\"\n                   data-placeholder-type=\"${line.placeholderType || 'default'}\"\n                   data-line-id=\"${side}-${lineNumber}\"\n                   data-has-placeholder=\"true\">&nbsp;</td>`;\n    }\n\n    /**\n     * Render content line\n     * @private\n     */\n    _renderContentLine(line, chunkId, chunkType, side, lineNumber, hasPlaceholder) {\n        const lineContent = line.line;\n        const isEmpty = !lineContent || lineContent === '\\r' || lineContent === '\\n';\n\n        // Add different classes based on chunk type\n        let additionalClass = '';\n        if (chunkId !== '') {\n            additionalClass = this._getChunkClass(chunkType, side);\n\n            // Add the vdm-diff__chunk class for elements with chunk IDs\n            additionalClass += ` ${Selectors.DIFF.CHUNK.name()}`;\n\n            // Add status class for chunks that can be navigated - include all chunk types that need resolution\n            if (line.conflict || chunkType === 'replace' || chunkType === 'add' || chunkType === 'delete') {\n                additionalClass += ` ${Selectors.STATUS.UNRESOLVED.name()}`;\n            }\n        }\n\n        if (isEmpty) {\n            additionalClass += ` ${Selectors.CODE.LINE_EMPTY.name()}`;\n            return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()}${additionalClass}\"\n                       data-chunk-id=\"${chunkId}\"\n                       data-chunk-type=\"${chunkType}\"\n                       data-side=\"${side}\"\n                       data-line-id=\"${side}-${lineNumber}\"\n                       ${hasPlaceholder ? 'data-has-placeholder=\"true\"' : ''}>&nbsp;</td>`;\n        } else {\n            // Add the line content with proper attributes for chunk handling\n            const displayContent = StringUtils.escapeHtml ?\n                                   StringUtils.escapeHtml(lineContent) :\n                                   lineContent.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n            // Add cursor: pointer to all clickable chunk elements\n            const styleAttr = chunkId !== '' ? ' style=\"cursor: pointer;\"' : '';\n\n            return `<td class=\"${Selectors.CODE.LINE_CONTENT.name()}${additionalClass}\"\n                       data-chunk-id=\"${chunkId}\"\n                       data-chunk-type=\"${chunkType}\"\n                       data-side=\"${side}\"\n                       data-line-id=\"${side}-${lineNumber}\"\n                       ${hasPlaceholder ? 'data-has-placeholder=\"true\"' : ''}${styleAttr}>${displayContent}</td>`;\n        }\n    }\n\n    /**\n     * Get CSS class for a chunk type\n     * @private\n     */\n    _getChunkClass(chunkType, side) {\n        if (chunkType === 'delete' && side === 'left') {\n            return ` ${Selectors.DIFF.LINE_DELETE.name()}`;\n        } else if (chunkType === 'add' && side === 'right') {\n            return ` ${Selectors.DIFF.LINE_ADD.name()}`;\n        } else if (chunkType === 'replace') {\n            let cls = ` ${Selectors.DIFF.LINE_ADD.name()}`;\n            if (side === 'left') {\n                cls += ` ${Selectors.DIFF.LINE_REPLACE_LEFT.name()}`;\n            } else {\n                cls += ` ${Selectors.DIFF.LINE_REPLACE_RIGHT.name()}`;\n            }\n            return cls;\n        }\n        return '';\n    }\n}\n","import { ChunkUtils } from '../../utils/ChunkUtils';\nimport Selectors from '../../constants/Selectors';\nimport { Debug } from '../../utils/Debug';\n\n/**\n * Manages visual state updates for chunk selections\n */\nexport class ChunkVisualStateManager {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n        // Batch operations queue\n        this._pendingOperations = [];\n        // Track whether DOM updates are batched\n        this._isBatching = false;\n        // Performance metrics\n        this._metrics = {\n            lastBatchSize: 0,\n            lastBatchTime: 0\n        };\n        Debug.log('ChunkVisualStateManager: Initialized', null, 3);\n    }\n\n    /**\n     * Initialize the visual state manager\n     * Preloads all chunk data for optimal performance with large files\n     */\n    initialize() {\n        // Preload all chunks into cache for better performance\n        ChunkUtils.preloadChunks();\n        Debug.log('ChunkVisualStateManager: Initialized with preloaded chunks', null, 2);\n    }\n\n    /**\n     * Update visual selection state\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - 'selected' or 'unselected'\n     * @param {boolean} batch - Whether to batch operations (defaults to false for backward compatibility)\n     */\n    updateVisualState(chunkId, side, state, batch = false) {\n        Debug.log(`ChunkVisualStateManager: Updating visual state for chunk ${chunkId}, side ${side}, state ${state}`, null, 3);\n\n        // Get all elements for this chunk side\n        const elements = ChunkUtils.getChunkElements(chunkId, side);\n        Debug.log(`ChunkVisualStateManager: Found ${elements.length} elements for chunk ${chunkId}`, null, 3);\n\n        // Sort by line number (only needed for getting the first element)\n        const sortedElements = ChunkUtils.sortElementsByLineNumber(elements);\n\n        // Get the opposite side to handle placeholder synchronization\n        const oppositeSide = side === 'left' ? 'right' : 'left';\n\n        if (batch) {\n            // Add to batch queue\n            this._pendingOperations.push({\n                type: 'updateState',\n                chunkId,\n                side,\n                elements: elements,\n                firstElement: sortedElements.length > 0 ? sortedElements[0] : null,\n                state: state,\n                oppositeSide: oppositeSide\n            });\n        } else {\n            // Apply immediately (for backward compatibility)\n            this._applyStateToElements(elements, state);\n\n            // Only update the icon for the first element\n            if (sortedElements.length > 0) {\n                Debug.log(`ChunkVisualStateManager: Updating icon marker for first element of chunk ${chunkId}`, null, 3);\n\n                // When setting a state on one side, also update opposite side\n                const firstElement = sortedElements[0];\n                if (firstElement && state === 'selected') {\n                    // First handle the selected side\n                    this._updateIconMarker(firstElement, state);\n\n                    // Then handle the opposite side marker as a placeholder\n                    this._updateOppositeMarker(firstElement, oppositeSide);\n                } else {\n                    // Normal case without special opposite handling\n                    this._updateIconMarker(firstElement, state);\n                }\n            } else {\n                Debug.warn(`ChunkVisualStateManager: No elements found to update icon for chunk ${chunkId}`, null, 3);\n            }\n\n            // Notify about selection change\n            this._notifySelectionChange();\n        }\n    }\n\n    /**\n     * Update the opposite side's marker when a chunk is selected\n     * @private\n     * @param {Element} element - The element being selected\n     * @param {string} oppositeSide - The opposite side ('left' or 'right')\n     */\n    _updateOppositeMarker(element, oppositeSide) {\n        if (!element?.dataset?.lineId) return;\n\n        // Extract line number from lineId (format: \"side-number\")\n        const lineIdParts = element.dataset.lineId.split('-');\n        if (lineIdParts.length !== 2) return;\n\n        const lineNumber = lineIdParts[1];\n        const oppositeLineId = `${oppositeSide}-${lineNumber}`;\n\n        // Find the opposite marker\n        const oppositeMarker = ChunkUtils.getIconMarker(oppositeLineId);\n        if (!oppositeMarker) {\n            Debug.warn(`ChunkVisualStateManager: Could not find opposite marker for ${oppositeLineId}`, null, 3);\n            return;\n        }\n\n        Debug.log(`ChunkVisualStateManager: Updating opposite marker ${oppositeLineId}`, {\n            currentClasses: Array.from(oppositeMarker.classList)\n        }, 3);\n\n        // Remove selection classes\n        oppositeMarker.classList.remove(\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name(),\n            Selectors.ICONS.SELECT.name(),\n            Selectors.ICONS.SELECT_LEFT.name(),\n            Selectors.ICONS.SELECT_RIGHT.name()\n        );\n\n        // CRITICAL DECISION POINT: Determine if the opposite marker should be a placeholder\n        // This is determined by whether the line only exists on one side\n\n        // Only mark as placeholder if it was originally a placeholder\n        const wasPlaceholder = oppositeMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n        if (wasPlaceholder) {\n            // If it was a placeholder, keep it as a placeholder\n            oppositeMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n            Debug.log(`ChunkVisualStateManager: Preserved placeholder status for ${oppositeLineId}`, null, 3);\n        } else {\n            // Otherwise mark it as unselected\n            oppositeMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n            Debug.log(`ChunkVisualStateManager: Set opposite marker ${oppositeLineId} as unselected`, null, 3);\n        }\n    }\n\n    /**\n     * Reset visual state for a chunk\n     * @param {string} chunkId - Chunk ID\n     * @param {boolean} batch - Whether to batch operations (defaults to false for backward compatibility)\n     */\n    resetVisualState(chunkId, batch = false) {\n        Debug.log(`ChunkVisualStateManager: Resetting visual state for chunk ${chunkId}`, null, 3);\n\n        // Get all elements for this chunk (both sides)\n        const elements = ChunkUtils.getChunkElements(chunkId);\n        Debug.log(`ChunkVisualStateManager: Found ${elements.length} elements for chunk ${chunkId}`, null, 3);\n\n        // Get icon markers associated with this chunk more efficiently\n        const iconMarkers = ChunkUtils.getChunkIconMarkers(chunkId);\n\n        if (batch) {\n            // Add to batch queue\n            this._pendingOperations.push({\n                type: 'resetState',\n                chunkId,\n                elements: elements,\n                iconMarkers: iconMarkers\n            });\n        } else {\n            // Apply immediately (for backward compatibility)\n            this._applyResetToElements(elements, iconMarkers);\n\n            Debug.log(`ChunkVisualStateManager: Reset ${iconMarkers.length} icon markers for chunk ${chunkId}`, null, 3);\n\n            // Notify about selection change\n            this._notifySelectionChange();\n        }\n    }\n\n    /**\n     * Process all pending visual updates in a single batch\n     * @param {boolean} notify - Whether to trigger notification after batch (default: true)\n     */\n    applyBatch(notify = true) {\n        if (this._pendingOperations.length === 0) {\n            return;\n        }\n\n        // Set batching state flag\n        this._isBatching = true;\n        const batchSize = this._pendingOperations.length;\n        this._metrics.lastBatchSize = batchSize;\n\n        // Use a single RAF call for better performance\n        requestAnimationFrame(() => {\n            const startTime = performance.now();\n            Debug.log(`ChunkVisualStateManager: Applying batch of ${batchSize} operations`, null, 2);\n\n            try {\n                // Group operations by type for better performance\n                const updateOperations = [];\n                const resetOperations = [];\n\n                // Sort operations into groups\n                this._pendingOperations.forEach(operation => {\n                    if (operation.type === 'updateState') {\n                        updateOperations.push(operation);\n                    } else if (operation.type === 'resetState') {\n                        resetOperations.push(operation);\n                    }\n                });\n\n                // Process reset operations first to ensure clean state\n                if (resetOperations.length > 0) {\n                    this._processBatchedResets(resetOperations);\n                }\n\n                // Then process update operations\n                if (updateOperations.length > 0) {\n                    this._processBatchedUpdates(updateOperations);\n                }\n\n                // Track batch processing time\n                const endTime = performance.now();\n                const processingTime = endTime - startTime;\n                this._metrics.lastBatchTime = processingTime;\n\n                Debug.log(`ChunkVisualStateManager: Batch processing completed in ${processingTime.toFixed(2)}ms`,\n                    {\n                        operations: batchSize,\n                        resetOps: resetOperations.length,\n                        updateOps: updateOperations.length,\n                        msPerOperation: (processingTime / batchSize).toFixed(2)\n                    }, 2);\n            }\n            catch (error) {\n                Debug.error(`Error during batch processing: ${error.message}`, error, 1);\n            }\n            finally {\n                // Clear the queue\n                this._pendingOperations = [];\n\n                // Reset batching state flag\n                this._isBatching = false;\n\n                // Send notification if requested\n                if (notify) {\n                    this._notifySelectionChange();\n                }\n            }\n        });\n    }\n\n    /**\n     * Process a batch of reset operations efficiently\n     * @private\n     */\n    _processBatchedResets(operations) {\n        if (operations.length === 0) return;\n\n        // Group elements and markers by class operations for fewer DOM updates\n        const allElements = [];\n        const allIconMarkers = [];\n\n        // Collect all elements and markers to be reset\n        operations.forEach(operation => {\n            if (operation.elements) {\n                allElements.push(...operation.elements);\n            }\n            if (operation.iconMarkers) {\n                allIconMarkers.push(...operation.iconMarkers);\n            }\n        });\n\n        // Apply resets in bulk\n        this._applyResetToElements(allElements, allIconMarkers);\n    }\n\n    /**\n     * Process a batch of update operations efficiently\n     * @private\n     */\n    _processBatchedUpdates(operations) {\n        if (operations.length === 0) return;\n\n        // Group elements by state for more efficient DOM updates\n        const elementsByState = {\n            'selected': [],\n            'unselected': []\n        };\n\n        // First elements for icon marker updates\n        const firstElementsByState = {\n            'selected': {},  // chunkId -> {element, oppositeSide}\n            'unselected': {} // chunkId -> {element}\n        };\n\n        // Group elements by state\n        operations.forEach(operation => {\n            const { elements, firstElement, state, chunkId, side, oppositeSide } = operation;\n\n            if (elements && elements.length > 0) {\n                if (state === 'selected' || state === 'unselected') {\n                    elementsByState[state].push(...elements);\n                }\n            }\n\n            // Track first element of each chunk for icon marker updates\n            if (firstElement && chunkId) {\n                if (state === 'selected' || state === 'unselected') {\n                    firstElementsByState[state][chunkId] = {\n                        element: firstElement,\n                        side: side,\n                        oppositeSide: oppositeSide\n                    };\n                }\n            }\n        });\n\n        // Apply updates by state\n        Object.entries(elementsByState).forEach(([state, elements]) => {\n            if (elements.length > 0) {\n                this._applyStateToElements(elements, state);\n            }\n        });\n\n        // Update icon markers\n        Object.entries(firstElementsByState).forEach(([state, chunksMap]) => {\n            Object.entries(chunksMap).forEach(([_chunkId, data]) => {\n                // Update the element's marker\n                this._updateIconMarker(data.element, state);\n\n                // For selected elements, also update the opposite marker\n                if (state === 'selected' && data.oppositeSide) {\n                    this._updateOppositeMarker(data.element, data.oppositeSide);\n                }\n            });\n        });\n\n        // Force a DOM layout refresh to ensure styles are applied\n        if (document.body) {\n            document.body.getBoundingClientRect();\n        }\n    }\n\n    /**\n     * Apply state changes to elements using efficient operations\n     * @private\n     */\n    _applyStateToElements(elements, state) {\n        if (!elements || elements.length === 0) return;\n\n        // For better performance, prepare the classes to add/remove\n        const removeClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name()\n        ];\n\n        let addClass = '';\n        if (state === 'selected') {\n            addClass = Selectors.DIFF.CHUNK_SELECTED.name();\n        } else if (state === 'unselected') {\n            addClass = Selectors.DIFF.CHUNK_UNSELECTED.name();\n        } else {\n            // Fallback for backward compatibility\n            addClass = state;\n        }\n\n        // Collect all rows to update at once (reduces layout thrashing)\n        const rows = new Set();\n\n        // Apply to all elements efficiently\n        elements.forEach(element => {\n            // Remove classes\n            element.classList.remove(...removeClasses);\n\n            // Add class\n            element.classList.add(addClass);\n\n            // Add placeholder class if needed\n            if (element.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name())) {\n                element.classList.add(Selectors.DIFF.PLACEHOLDER.name());\n            }\n\n            // Collect parent row for batch update\n            const row = ChunkUtils.getParentRow(element);\n            if (row) {\n                rows.add(row);\n            }\n        });\n\n        // Update all rows at once\n        rows.forEach(row => {\n            row.classList.remove(...removeClasses);\n            row.classList.add(addClass);\n        });\n    }\n\n    /**\n     * Apply reset operations to elements and icon markers efficiently\n     * @private\n     */\n    _applyResetToElements(elements, iconMarkers) {\n        if ((!elements || elements.length === 0) && (!iconMarkers || iconMarkers.length === 0)) return;\n\n        // Pre-compute classes to remove for better performance\n        const removeClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name()\n        ];\n\n        const iconRemoveClasses = [\n            Selectors.DIFF.CHUNK_SELECTED.name(),\n            Selectors.DIFF.CHUNK_UNSELECTED.name(),\n            Selectors.ICONS.SELECT.name(),\n            Selectors.ICONS.SELECT_LEFT.name(),\n            Selectors.ICONS.SELECT_RIGHT.name()\n        ];\n\n        // Collect all rows to update at once (reduces layout thrashing)\n        const rows = new Set();\n\n        // Remove classes from elements efficiently\n        if (elements && elements.length > 0) {\n            elements.forEach(el => {\n                // Skip null or undefined elements\n                if (!el) return;\n\n                // Reset element classes\n                el.classList.remove(...removeClasses);\n\n                // Collect parent row for batch update\n                const row = ChunkUtils.getParentRow(el);\n                if (row) {\n                    rows.add(row);\n                }\n            });\n\n            // Reset all rows at once\n            rows.forEach(row => {\n                row.classList.remove(...removeClasses);\n            });\n        }\n\n        // Reset icon markers efficiently\n        if (iconMarkers && iconMarkers.length > 0) {\n            iconMarkers.forEach(marker => {\n                if (marker) {\n                    // Store placeholder status before removing classes\n                    const isPlaceholder = marker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n                    // Remove selection-related classes\n                    marker.classList.remove(...iconRemoveClasses);\n\n                    // Preserve placeholder status when resetting\n                    if (isPlaceholder) {\n                        marker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Update icon marker for the element\n     * @private\n     */\n    _updateIconMarker(element, state) {\n        if (!element) return;\n\n        const lineId = element.dataset.lineId;\n        if (!lineId) return;\n\n        Debug.log(`ChunkVisualStateManager: Looking for icon marker with lineId ${lineId}`, null, 3);\n        // Find and update the icon marker (use cached version if available)\n        const iconMarker = ChunkUtils.getIconMarker(lineId);\n\n        if (iconMarker) {\n            Debug.log(`ChunkVisualStateManager: Updating icon marker state to ${state}`, {\n                lineId: lineId,\n                currentClasses: Array.from(iconMarker.classList)\n            }, 3);\n\n            // Store the placeholder status before removing classes\n            const isPlaceholder = iconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n            // Only remove selection-related classes, preserve placeholder status\n            iconMarker.classList.remove(\n                Selectors.DIFF.CHUNK_SELECTED.name(),\n                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                Selectors.ICONS.SELECT.name(),\n                Selectors.ICONS.SELECT_LEFT.name(),\n                Selectors.ICONS.SELECT_RIGHT.name()\n            );\n\n            // Add the appropriate class based on state\n            if (state === 'selected') {\n                iconMarker.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                // Add the side-appropriate selection icon class\n                if (element.dataset.side === 'left') {\n                    iconMarker.classList.add(Selectors.ICONS.SELECT_LEFT.name());\n                } else {\n                    iconMarker.classList.add(Selectors.ICONS.SELECT_RIGHT.name());\n                }\n            } else if (state === 'unselected') {\n                iconMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n            } else {\n                // Fallback for backward compatibility\n                iconMarker.classList.add(state);\n            }\n\n            // Preserve placeholder status - don't try to infer it from the element\n            if (isPlaceholder && !iconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name())) {\n                iconMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                Debug.log(`ChunkVisualStateManager: Preserved placeholder marker status`, null, 3);\n            }\n        } else {\n            Debug.warn(`ChunkVisualStateManager: No icon marker found for line ${lineId}`, null, 3);\n        }\n    }\n\n    /**\n     * Notify about selection change\n     * @private\n     */\n    _notifySelectionChange() {\n        Debug.log(`ChunkVisualStateManager: Notifying about selection change`, null, 3);\n        if (typeof this.chunkManager.onSelectionChange === 'function') {\n            this.chunkManager.onSelectionChange();\n        } else {\n            Debug.log(`ChunkVisualStateManager: No onSelectionChange handler defined`, null, 3);\n        }\n    }\n\n    /**\n     * Get performance metrics\n     * @returns {Object} Current metrics\n     */\n    getMetrics() {\n        return {...this._metrics};\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors';\nimport { ChunkUtils } from '../../utils/ChunkUtils';\nimport { IconRegistry } from '../../utils/IconRegistry';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\n\nimport { ChunkVisualStateManager } from './ChunkVisualStateManager';\n\n/**\n * Handles chunk selection operations\n */\nexport class ChunkSelectionHandler {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n        this.selections = {}; // Store selections separately\n        this.visualStateManager = new ChunkVisualStateManager(chunkManager);\n\n        // Define selection state constants to replace hardcoded strings\n        this.SELECTED = Selectors.DIFF.CHUNK_SELECTED.name();\n        this.UNSELECTED = Selectors.DIFF.CHUNK_UNSELECTED.name();\n\n        // Performance tracking metrics\n        this._performanceMetrics = {\n            lastOperationTime: 0,\n            operationCount: 0\n        };\n    }\n\n    /**\n     * Setup chunk selection handlers\n     */\n    setupChunkSelection() {\n        // Store the handler function with proper binding\n        this._boundClickHandler = (event) => this._handleClick(event);\n        this._boundCheckAllHandler = (event) => this._handleCheckAll(event);\n\n        // Clear existing handlers and setup new ones for ALL chunk elements\n        // by targeting data-chunk-id attribute instead of specific classes\n        DOMUtils.setupEventHandlers(\n            '[data-chunk-id]:not([data-chunk-id=\"\"])',\n            'click',\n            this._boundClickHandler,\n            {\n                removeExisting: true,\n                styles: { cursor: 'pointer' }\n            }\n        );\n\n        // Add \"Check All\" buttons to each pane and setup handlers\n        this._setupCheckAllButtons();\n\n        // Clear ChunkUtils cache to ensure fresh state\n        ChunkUtils.clearCache();\n\n        Debug.log('ChunkSelectionHandler: Selection handlers initialized for all chunk elements', null, 2);\n    }\n\n    /**\n     * Set up \"Check All\" buttons\n     * @private\n     */\n    _setupCheckAllButtons() {\n        // Find panes\n        const panes = this.chunkManager.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        if (panes.length !== 2) {\n            Debug.log('ChunkSelectionHandler: Could not find both diff panes for \"Check All\" buttons', null, 2);\n            return;\n        }\n\n        const leftPane = panes[0];\n        const rightPane = panes[1];\n\n        // Create and add the check all buttons to the panes\n        this._createCheckAllButtonHeader(leftPane, 'left');\n        this._createCheckAllButtonHeader(rightPane, 'right');\n    }\n\n    /**\n     * Create a header with a \"Check All\" button for a pane\n     * @private\n     */\n    _createCheckAllButtonHeader(pane, side) {\n        // Get translation manager instance\n        const translationManager = TranslationManager.getInstance();\n\n        // Create header element\n        const header = document.createElement('div');\n        header.className = Selectors.DIFF.PANE_HEADER.name();\n\n        // Make header a flex container\n        header.classList.add('vdm-d-flex', 'vdm-justify-content-between', 'vdm-align-items-center');\n\n        // Get language information from DiffViewer\n        const language = this.chunkManager.diffViewer.runtimeProps.diffData.language || 'Text';\n\n        // Create language badge\n        const langBadge = document.createElement('span');\n        langBadge.className = 'vdm-badge vdm-badge--info';\n        langBadge.textContent = language;\n\n        // Create button element\n        const checkAllButton = document.createElement('button');\n        checkAllButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_EXTRA_SMALL.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()} ${Selectors.DIFF.CHECK_ALL_BTN.name()}`;\n        checkAllButton.setAttribute('data-side', side);\n        checkAllButton.setAttribute('data-icon-state', 'unchecked');\n        checkAllButton.title = `Select all changes from the ${side} pane`;\n        checkAllButton.style.display = 'inline-flex';\n        checkAllButton.style.alignItems = 'center';\n        checkAllButton.style.verticalAlign = 'middle';\n\n        // Create icon wrapper span\n        const iconWrapper = document.createElement('span');\n        iconWrapper.className = 'vdm-icon-wrapper';\n        iconWrapper.style.marginRight = '3px';\n        iconWrapper.style.display = 'inline-flex';\n        iconWrapper.style.alignItems = 'center';\n        iconWrapper.style.verticalAlign = 'middle';\n        iconWrapper.style.height = '14px';\n        iconWrapper.style.lineHeight = '1';\n\n        // Add checkbox-unchecked icon by default\n        const uncheckIcon = IconRegistry.createIcon('checkbox-unchecked', {\n            width: 14,\n            height: 14,\n            classes: 'vdm-icon-checkbox'\n        });\n\n        iconWrapper.appendChild(uncheckIcon);\n\n        // Create text node with a span wrapper for better alignment\n        const textSpan = document.createElement('span');\n        textSpan.style.display = 'inline-block';\n        textSpan.style.verticalAlign = 'middle';\n        textSpan.style.lineHeight = '1';\n        textSpan.appendChild(document.createTextNode(translationManager.get('checkAll')));\n\n        // Add icon and text to button\n        checkAllButton.appendChild(iconWrapper);\n        checkAllButton.appendChild(textSpan);\n\n        // Add language badge and button to header\n        header.appendChild(langBadge);\n        header.appendChild(checkAllButton);\n\n        // Add header as the first child of the pane\n        pane.insertBefore(header, pane.firstChild);\n\n        // Add click event handler\n        checkAllButton.addEventListener('click', this._boundCheckAllHandler);\n    }\n\n    /**\n     * Handle click on \"Check All\" button\n     * @private\n     */\n    _handleCheckAll(event) {\n        const button = event.currentTarget;\n        const side = button.getAttribute('data-side');\n        const iconState = button.getAttribute('data-icon-state');\n        const oppositeButton = this._getOppositeButton(side);\n\n        // Get translation manager and loader manager\n        const translationManager = TranslationManager.getInstance();\n        const loaderManager = LoaderManager.getInstance();\n\n        if (!side) return;\n\n        // Show loading indicator for batch operations\n        const message = translationManager.get('processingChunks') || 'Processing chunks...';\n        const loaderId = loaderManager.showLoader(message, {\n            fullscreen: true,\n            zIndex: 9999\n        });\n\n        // Also update button state for visual feedback\n        this._setButtonProcessingState(button, true);\n\n        // Track performance\n        const startTime = performance.now();\n\n        // Use a small timeout to allow the loader to be shown\n        setTimeout(() => {\n            // If this button is already checked, uncheck everything\n            if (iconState === 'checked') {\n                Debug.log('ChunkSelectionHandler: Unchecking all selections', null, 2);\n\n                // Reset this button\n                this._toggleButtonIconState(button, 'checked');\n\n                // Reset opposite button if it's checked\n                if (oppositeButton && oppositeButton.getAttribute('data-icon-state') === 'checked') {\n                    this._toggleButtonIconState(oppositeButton, 'checked');\n                }\n\n                // Clear all selections\n                this.clearAllSelections(true); // Use optimized batch version\n            }\n            // If opposite button is checked, toggle both sides\n            else if (oppositeButton && oppositeButton.getAttribute('data-icon-state') === 'checked') {\n                // Uncheck the opposite side\n                this._toggleButtonIconState(oppositeButton, 'checked');\n\n                // Check this side\n                this._toggleButtonIconState(button, 'unchecked');\n\n                // Select all on this side\n                this.selectAllOnSide(side, true); // Use optimized batch version\n            }\n            // Default case: check this side\n            else {\n                this._toggleButtonIconState(button, 'unchecked');\n                this.selectAllOnSide(side, true); // Use optimized batch version\n            }\n\n            // Reset button state\n            this._setButtonProcessingState(button, false);\n\n            // Hide loader\n            loaderManager.hideLoader(loaderId);\n\n            // Track performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }, 50);\n    }\n\n    /**\n     * Set button to processing state to give visual feedback during long operations\n     * @private\n     */\n    _setButtonProcessingState(button, isProcessing) {\n        if (isProcessing) {\n            button.classList.add('processing');\n            button.style.opacity = '0.8';\n            button.style.cursor = 'wait';\n        } else {\n            button.classList.remove('processing');\n            button.style.opacity = '';\n            button.style.cursor = '';\n        }\n    }\n\n    /**\n     * Record performance metrics for optimization analysis\n     * @private\n     */\n    _recordPerformanceMetrics(startTime) {\n        const endTime = performance.now();\n        const operationTime = endTime - startTime;\n\n        this._performanceMetrics.lastOperationTime = operationTime;\n        this._performanceMetrics.operationCount++;\n\n        // Log cache statistics to evaluate caching effectiveness\n        const cacheStats = ChunkUtils.getCacheStats();\n        const elementHitRatio = cacheStats.elementCacheHits /\n            (cacheStats.elementCacheHits + cacheStats.elementCacheMisses) * 100 || 0;\n        const iconHitRatio = cacheStats.iconMarkerCacheHits /\n            (cacheStats.iconMarkerCacheHits + cacheStats.iconMarkerCacheMisses) * 100 || 0;\n\n        Debug.log(`ChunkSelectionHandler: Operation completed in ${operationTime.toFixed(2)}ms`,\n            {\n                totalOperations: this._performanceMetrics.operationCount,\n                cacheStats: {\n                    elementCacheHits: cacheStats.elementCacheHits,\n                    elementCacheMisses: cacheStats.elementCacheMisses,\n                    elementHitRatio: `${elementHitRatio.toFixed(1)}%`,\n                    iconMarkerCacheHits: cacheStats.iconMarkerCacheHits,\n                    iconMarkerCacheMisses: cacheStats.iconMarkerCacheMisses,\n                    iconHitRatio: `${iconHitRatio.toFixed(1)}%`\n                }\n            }, 2);\n    }\n\n    /**\n     * Get the button for the opposite side\n     * @private\n     * @param {string} currentSide - Current side ('left' or 'right')\n     * @returns {Element|null} - The opposite side button element or null if not found\n     */\n    _getOppositeButton(currentSide) {\n        const oppositeSide = currentSide === 'left' ? 'right' : 'left';\n        return this.chunkManager.diffViewer.container.querySelector(\n            `.${Selectors.DIFF.CHECK_ALL_BTN.name()}[data-side=\"${oppositeSide}\"]`\n        );\n    }\n\n    /**\n     * Toggle button icon state between checked and unchecked\n     * @private\n     * @param {Element} button - The button element\n     * @param {string} currentState - Current icon state ('checked' or 'unchecked')\n     */\n    _toggleButtonIconState(button, currentState) {\n        const iconWrapper = button.querySelector('.vdm-icon-wrapper');\n        if (!iconWrapper) return;\n\n        // Clear current icon\n        iconWrapper.innerHTML = '';\n\n        // Determine new state based on current state\n        let newIconState;\n        if (currentState === 'unchecked') {\n            newIconState = 'checked';\n            iconWrapper.appendChild(IconRegistry.createIcon('checkbox-checked', {\n                width: 14,\n                height: 14,\n                classes: 'vdm-icon-checkbox'\n            }));\n        } else {\n            newIconState = 'unchecked';\n            iconWrapper.appendChild(IconRegistry.createIcon('checkbox-unchecked', {\n                width: 14,\n                height: 14,\n                classes: 'vdm-icon-checkbox'\n            }));\n        }\n\n        // Update icon state attribute\n        button.setAttribute('data-icon-state', newIconState);\n    }\n\n    /**\n     * Select all chunks on a specific side\n     * @param {string} side - 'left' or 'right'\n     * @param {boolean} useBatch - Whether to use batching for large files (default: false for backward compatibility)\n     */\n    selectAllOnSide(side, useBatch = false) {\n        const oppositeSide = side === 'left' ? 'right' : 'left';\n\n        Debug.log(`ChunkSelectionHandler: Selecting all chunks on ${side} side${useBatch ? ' (batched)' : ''}`, null, 2);\n\n        // Get all chunks that need resolution\n        const conflictChunks = this.chunkManager.chunks.filter(chunk =>\n            chunk.conflict || chunk.type === 'replace' || chunk.type === 'add' || chunk.type === 'delete'\n        );\n\n        // Check if we should use batching based on number of chunks\n        const largeDiff = conflictChunks.length > 20; // Threshold for considering a diff as \"large\"\n        useBatch = useBatch || largeDiff;\n\n        // Show loader for large operations\n        let loaderId = null;\n        if (useBatch && conflictChunks.length > 50) {\n            const translationManager = TranslationManager.getInstance();\n            const loaderManager = LoaderManager.getInstance();\n            const message = translationManager.get('processingChunks') || 'Processing chunks...';\n            loaderId = loaderManager.showLoader(message, {\n                fullscreen: true,\n                zIndex: 9999\n            });\n        }\n\n        // Start tracking performance\n        const startTime = performance.now();\n\n        if (useBatch) {\n            // First update internal state for all chunks\n            conflictChunks.forEach(chunk => {\n                // Update selections object\n                this.selections[chunk.id] = side;\n\n                // Sync with diffConfig for compatibility\n                this._syncWithDiffConfig(chunk.id, side);\n            });\n\n            // Get all chunks by side for efficient batch processing\n            const chunksBySide = new Map();\n\n            // Group all elements by chunk ID and side for batch processing\n            conflictChunks.forEach(chunk => {\n                // Toggle visual state with batching enabled\n                this.visualStateManager.updateVisualState(chunk.id, side, this.SELECTED, true);\n                this.visualStateManager.updateVisualState(chunk.id, oppositeSide, this.UNSELECTED, true);\n\n                // Collect chunk elements for resolved status update\n                if (!chunksBySide.has(chunk.id)) {\n                    const elements = ChunkUtils.getChunkElements(chunk.id);\n                    chunksBySide.set(chunk.id, elements);\n                }\n            });\n\n            // Process visual updates in a single batch\n            this.visualStateManager.applyBatch(false); // Don't notify yet\n\n            // Apply resolved status to all chunks in a separate batch\n            requestAnimationFrame(() => {\n                // Ensure the icon markers are updated by forcing a redraw\n                this._refreshIconStates(side, conflictChunks);\n\n                chunksBySide.forEach((elements) => {\n                    elements.forEach(element => {\n                        element.classList.add(Selectors.STATUS.RESOLVED.name());\n                        element.classList.remove(Selectors.STATUS.UNRESOLVED.name());\n                    });\n                });\n\n                // Update navigation counter after all visual changes\n                this._updateNavigationCounter();\n\n                // Now notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n\n                // Hide loader if it was shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n                }\n\n                // Record performance metrics after all operations\n                this._recordPerformanceMetrics(startTime);\n            });\n        } else {\n            // Legacy approach - process one by one\n            conflictChunks.forEach(chunk => {\n                this.toggleChunkSelection(chunk.id, side, this.SELECTED);\n                this.toggleChunkSelection(chunk.id, oppositeSide, this.UNSELECTED);\n            });\n\n            // Callback to notify of selection change\n            if (typeof this.chunkManager.onSelectionChange === 'function') {\n                this.chunkManager.onSelectionChange();\n            }\n\n            // Record performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }\n    }\n\n    /**\n     * Force refresh icon states for chunks\n     * This ensures icon markers are correctly updated during batch operations\n     * @private\n     */\n    _refreshIconStates(selectedSide, chunks) {\n        const oppositeSide = selectedSide === 'left' ? 'right' : 'left';\n\n        // Force all chunks to properly show their selection state visually\n        chunks.forEach(chunk => {\n            // Get elements for both sides\n            const selectedElements = ChunkUtils.getChunkElements(chunk.id, selectedSide);\n            const oppositeElements = ChunkUtils.getChunkElements(chunk.id, oppositeSide);\n\n            // Handle selected side\n            if (selectedElements.length > 0) {\n                // Sort by line number to get first element for icon marker\n                const sortedElements = ChunkUtils.sortElementsByLineNumber(selectedElements);\n                const firstElement = sortedElements[0];\n\n                if (firstElement) {\n                    const lineId = firstElement.dataset.lineId;\n                    if (lineId) {\n                        // Force direct icon marker update with the correct side\n                        const iconMarker = ChunkUtils.getIconMarker(lineId);\n                        if (iconMarker) {\n                            // Remove all state classes first\n                            iconMarker.classList.remove(\n                                Selectors.DIFF.CHUNK_SELECTED.name(),\n                                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                                Selectors.ICONS.SELECT.name(),\n                                Selectors.ICONS.SELECT_LEFT.name(),\n                                Selectors.ICONS.SELECT_RIGHT.name()\n                            );\n\n                            // Add selected state\n                            iconMarker.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                            // Add the side-specific icon marker\n                            if (selectedSide === 'left') {\n                                iconMarker.classList.add(Selectors.ICONS.SELECT_LEFT.name());\n                            } else {\n                                iconMarker.classList.add(Selectors.ICONS.SELECT_RIGHT.name());\n                            }\n                        }\n                    }\n                }\n\n                // Apply the selected class to all elements for this chunk on the selected side\n                selectedElements.forEach(element => {\n                    // Remove all selection classes first\n                    element.classList.remove(\n                        Selectors.DIFF.CHUNK_SELECTED.name(),\n                        Selectors.DIFF.CHUNK_UNSELECTED.name()\n                    );\n\n                    // Add selected class\n                    element.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n\n                    // Update the parent row too\n                    const row = ChunkUtils.getParentRow(element);\n                    if (row) {\n                        row.classList.remove(\n                            Selectors.DIFF.CHUNK_SELECTED.name(),\n                            Selectors.DIFF.CHUNK_UNSELECTED.name()\n                        );\n                        row.classList.add(Selectors.DIFF.CHUNK_SELECTED.name());\n                    }\n                });\n            }\n\n            // Handle opposite side\n            if (oppositeElements.length > 0) {\n                // Clear any icon markers on the opposite side\n                const sortedOppositeElements = ChunkUtils.sortElementsByLineNumber(oppositeElements);\n                const firstOppositeElement = sortedOppositeElements[0];\n\n                if (firstOppositeElement) {\n                    const oppositeLineId = firstOppositeElement.dataset.lineId;\n                    if (oppositeLineId) {\n                        const oppositeIconMarker = ChunkUtils.getIconMarker(oppositeLineId);\n                        if (oppositeIconMarker) {\n                            // Clear all selection related classes\n                            oppositeIconMarker.classList.remove(\n                                Selectors.DIFF.CHUNK_SELECTED.name(),\n                                Selectors.DIFF.CHUNK_UNSELECTED.name(),\n                                Selectors.ICONS.SELECT.name(),\n                                Selectors.ICONS.SELECT_LEFT.name(),\n                                Selectors.ICONS.SELECT_RIGHT.name()\n                            );\n\n                            // DETERMINE IF THIS SHOULD BE A PLACEHOLDER\n                            // Apply the same placeholder logic used in _updateOppositeMarker\n\n                            // Check if the opposite element has placeholder attributes\n                            const hasPlaceholder = firstOppositeElement.dataset.hasPlaceholder === 'true';\n                            const isPlaceholderType = firstOppositeElement.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name());\n                            const wasPlaceholder = oppositeIconMarker.classList.contains(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n\n                            // Find the corresponding selected element for the same line number\n                            const lineNumber = oppositeLineId.split('-')[1];\n                            const selectedLineId = `${selectedSide}-${lineNumber}`;\n                            const selectedElement = document.querySelector(`[data-line-id=\"${selectedLineId}\"]`);\n\n                            // Check if the selected element indicates this should be a placeholder\n                            const selectedHasPlaceholder = selectedElement?.dataset.hasPlaceholder === 'true';\n                            const selectedIsPlaceholderType = selectedElement?.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name());\n\n                            // If any of these conditions are true, this should be a placeholder\n                            if (hasPlaceholder || isPlaceholderType || wasPlaceholder ||\n                                selectedHasPlaceholder || selectedIsPlaceholderType) {\n                                // Set as placeholder\n                                oppositeIconMarker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n                                Debug.log(`ChunkSelectionHandler: Set opposite marker ${oppositeLineId} as placeholder during batch refresh`, null, 3);\n                            } else {\n                                // Normal unselected state\n                                oppositeIconMarker.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n                            }\n                        }\n                    }\n                }\n\n                // Apply the unselected class to all elements on the opposite side\n                oppositeElements.forEach(element => {\n                    // Remove all selection classes first\n                    element.classList.remove(\n                        Selectors.DIFF.CHUNK_SELECTED.name(),\n                        Selectors.DIFF.CHUNK_UNSELECTED.name()\n                    );\n\n                    // Add unselected class\n                    element.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n\n                    // Update the parent row too\n                    const row = ChunkUtils.getParentRow(element);\n                    if (row) {\n                        row.classList.remove(\n                            Selectors.DIFF.CHUNK_SELECTED.name(),\n                            Selectors.DIFF.CHUNK_UNSELECTED.name()\n                        );\n                        row.classList.add(Selectors.DIFF.CHUNK_UNSELECTED.name());\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Handle click event on chunk\n     * @private\n     */\n    _handleClick(event) {\n        const element = event.currentTarget;\n        const chunkId = element.getAttribute('data-chunk-id');\n        const side = element.getAttribute('data-side');\n\n        Debug.log(`ChunkSelectionHandler: Click detected on side ${side} for chunk ${chunkId}`, {\n            element: element.outerHTML.substring(0, 100) + '...' // Log first 100 chars of HTML\n        }, 3);\n\n        if (chunkId && side) {\n            // Check if the chunk is already selected on this side\n            const isAlreadySelected = this.selections[chunkId] === side &&\n                element.classList.contains(Selectors.DIFF.CHUNK_SELECTED.name());\n\n            if (isAlreadySelected) {\n                // Unselect this chunk\n                Debug.log(`ChunkSelectionHandler: Unselecting chunk ${chunkId} as it was already selected`, null, 3);\n\n                // Remove from selections\n                delete this.selections[chunkId];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId];\n                }\n\n                // Reset visual state for both sides\n                this.visualStateManager.resetVisualState(chunkId);\n\n                // Remove resolved status from all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunkId);\n                chunkElements.forEach(element => {\n                    element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                    element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                });\n\n                // Update navigation counter\n                this._updateNavigationCounter();\n\n                // Notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n            } else {\n                // Get the opposite side\n                const oppositeSide = side === 'left' ? 'right' : 'left';\n\n                // Debug before toggling\n                Debug.log(`ChunkSelectionHandler: Toggling chunk ${chunkId}`, {\n                    selectedSide: side,\n                    oppositeSide: oppositeSide\n                }, 3);\n\n                // Toggle both sides\n                this.toggleChunkSelection(chunkId, side, this.SELECTED);\n                this.toggleChunkSelection(chunkId, oppositeSide, this.UNSELECTED);\n            }\n        }\n    }\n\n    /**\n     * Toggle selection state of a chunk side\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - Selection state constant (SELECTED or UNSELECTED)\n     * @param {boolean} batch - Whether to use batching (default: false for backward compatibility)\n     */\n    toggleChunkSelection(chunkId, side, state, batch = false) {\n        // Update the selections object\n        if (state === this.SELECTED) {\n            this.selections[chunkId] = side;\n\n            // Sync with diffConfig for compatibility\n            this._syncWithDiffConfig(chunkId, side);\n\n            // Update the navigation counter\n            this._updateNavigationCounter();\n\n            if (!batch) {\n                // Add resolved status to all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunkId);\n                chunkElements.forEach(element => {\n                    element.classList.add(Selectors.STATUS.RESOLVED.name());\n                    element.classList.remove(Selectors.STATUS.UNRESOLVED.name());\n                });\n            }\n        }\n\n        // Update visual selection using the specialized component\n        this.visualStateManager.updateVisualState(chunkId, side, state, batch);\n    }\n\n    /**\n     * Sync selection with diffConfig\n     * @private\n     */\n    _syncWithDiffConfig(chunkId, side) {\n        if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n            this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId] = side;\n        }\n    }\n\n    /**\n     * Update navigation counter\n     * @private\n     */\n    _updateNavigationCounter() {\n        if (this.chunkManager.diffViewer?.diffNavigator) {\n            this.chunkManager.diffViewer.diffNavigator.updateCounter();\n        }\n    }\n\n    /**\n     * Get all selections\n     * @returns {Object} Map of chunkId to selected side\n     */\n    getSelections() {\n        return {...this.selections};\n    }\n\n    /**\n     * Check if a chunk is resolved (has selection)\n     * @param {string} chunkId - Chunk ID to check\n     * @returns {boolean} True if resolved\n     */\n    isChunkResolved(chunkId) {\n        return !!this.selections[chunkId];\n    }\n\n    /**\n     * Get unresolved chunk count\n     * @returns {number} Number of unresolved chunks\n     */\n    getUnresolvedCount() {\n        const conflictChunks = this.chunkManager.chunks.filter(c => c.conflict);\n        return conflictChunks.length - Object.keys(this.selections).length;\n    }\n\n    /**\n     * Clear all selections from both sides\n     * @param {boolean} useBatch - Whether to use batching for performance (default: false for backward compatibility)\n     */\n    clearAllSelections(useBatch = false) {\n        // Get all chunks that need resolution\n        const conflictChunks = this.chunkManager.chunks.filter(chunk =>\n            chunk.conflict || chunk.type === 'replace' || chunk.type === 'add' || chunk.type === 'delete'\n        );\n\n        // Check if we should use batching based on number of chunks\n        const largeDiff = conflictChunks.length > 20; // Threshold for considering a diff as \"large\"\n        useBatch = useBatch || largeDiff;\n\n        // Show loader for large operations\n        let loaderId = null;\n        if (useBatch) {\n            const selectedChunks = conflictChunks.filter(chunk => this.isChunkResolved(chunk.id));\n            if (selectedChunks.length > 50) { // Only show loader for large batches\n                const translationManager = TranslationManager.getInstance();\n                const loaderManager = LoaderManager.getInstance();\n                const message = translationManager.get('processingChunks') || 'Processing chunks...';\n                loaderId = loaderManager.showLoader(message, {\n                    fullscreen: true,\n                    zIndex: 9999\n                });\n            }\n        }\n\n        // Start tracking performance\n        const startTime = performance.now();\n\n        if (useBatch) {\n            Debug.log(`ChunkSelectionHandler: Clearing all selections using batch operations`, null, 2);\n\n            // First update internal state\n            const selectedChunks = conflictChunks.filter(chunk => this.isChunkResolved(chunk.id));\n\n            // Use a set for faster lookups\n            const selectedChunkIds = new Set(selectedChunks.map(chunk => chunk.id));\n\n            // Collect all elements that need updating\n            const elementsToUpdate = new Map();\n\n            // Remove from internal objects efficiently\n            selectedChunkIds.forEach(chunkId => {\n                // Remove from selections object\n                delete this.selections[chunkId];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunkId];\n                }\n\n                // Queue visual state reset with batching\n                this.visualStateManager.resetVisualState(chunkId, true);\n\n                // Collect elements for later class updates\n                const elements = ChunkUtils.getChunkElements(chunkId);\n                elementsToUpdate.set(chunkId, elements);\n            });\n\n            // Apply all visual updates in a batch\n            this.visualStateManager.applyBatch(false); // Don't notify yet\n\n            // Update element status classes in a separate batch\n            requestAnimationFrame(() => {\n                elementsToUpdate.forEach((elements, _chunkId) => {\n                    elements.forEach(element => {\n                        element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                        element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                    });\n                });\n\n                // Update navigation counter after all visual changes\n                this._updateNavigationCounter();\n\n                // Now notify about selection change\n                if (typeof this.chunkManager.onSelectionChange === 'function') {\n                    this.chunkManager.onSelectionChange();\n                }\n\n                // Hide loader if it was shown\n                if (loaderId) {\n                    const loaderManager = LoaderManager.getInstance();\n                    loaderManager.hideLoader(loaderId);\n                }\n\n                // Record performance metrics after all operations\n                this._recordPerformanceMetrics(startTime);\n            });\n        } else {\n            // Legacy approach - clear selection for each chunk individually\n            conflictChunks.forEach(chunk => {\n                // Skip chunks that aren't selected\n                if (!this.isChunkResolved(chunk.id)) return;\n\n                // Remove resolved status from all elements with this chunk ID\n                const chunkElements = ChunkUtils.getChunkElements(chunk.id);\n                chunkElements.forEach(element => {\n                    element.classList.remove(Selectors.STATUS.RESOLVED.name());\n                    element.classList.add(Selectors.STATUS.UNRESOLVED.name());\n                });\n\n                // Remove from selections object\n                delete this.selections[chunk.id];\n\n                // Remove from diffConfig if it exists\n                if (this.chunkManager.diffViewer?.diffConfig?.chunkSelections) {\n                    delete this.chunkManager.diffViewer.diffConfig.chunkSelections[chunk.id];\n                }\n\n                // Reset visual state for both sides\n                this.visualStateManager.resetVisualState(chunk.id);\n            });\n\n            // Update navigation counter\n            this._updateNavigationCounter();\n\n            // Callback to notify of selection change\n            if (typeof this.chunkManager.onSelectionChange === 'function') {\n                this.chunkManager.onSelectionChange();\n            }\n\n            // Record performance metrics\n            this._recordPerformanceMetrics(startTime);\n        }\n    }\n}\n","import { ChunkUtils } from '../../utils/ChunkUtils';\nimport { Debug } from '../../utils/Debug';\n\n/**\n * Generates merged content from selections\n */\nexport class MergeContentGenerator {\n    /**\n     * @param {ChunkManager} chunkManager - Parent chunk manager\n     */\n    constructor(chunkManager) {\n        this.chunkManager = chunkManager;\n    }\n\n        /**\n     * Extract lines for a specific chunk and side\n     * @param {string} chunkId - Chunk identifier\n     * @param {string} side - Side to extract ('old' or 'new')\n     * @returns {Array} Array of lines for the chunk\n     */\n    extractChunkLines(chunkId, side) {\n        const chunk = this.chunkManager.chunks.find(c => c.id === chunkId);\n        if (!chunk) {\n            Debug.log(`MergeContentGenerator: Chunk not found: ${chunkId}`, null, 3);\n            return [];\n        }\n\n        // Get the content array based on side (old or new)\n        const contentArray = side === 'old' ? this.chunkManager.oldContent : this.chunkManager.newContent;\n\n        // Filter lines that belong to this chunk\n        const lines = contentArray.filter(line => line.chunkId === chunkId);\n\n        Debug.log(`MergeContentGenerator: Extracted ${lines.length} lines from chunk ${chunkId} (${side})`, {\n            chunkId,\n            side,\n            linesCount: lines.length,\n            totalContentLines: contentArray.length,\n            sampleLines: lines.slice(0, 3)\n        }, 3);\n\n        return lines;\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @param {Object} selections - Map of chunk IDs to selected sides\n     * @returns {string} Merged content\n     */\n    generateMergedContent(selections) {\n        Debug.log('MergeContentGenerator: Starting merge generation', {\n            totalChunks: this.chunkManager.chunks.length,\n            selections: Object.keys(selections).length\n        }, 2);\n\n        // If no selections, return right side content\n        if (Object.keys(selections).length === 0) {\n            Debug.log('MergeContentGenerator: No selections, returning new content', null, 2);\n            return ChunkUtils.generateFileContent(this.chunkManager.newContent);\n        }\n\n        const mergedLines = [];\n\n        // Create a map of chunk lines by chunk ID for faster lookup\n        const oldChunkLines = {};\n        const newChunkLines = {};\n\n        // Group lines by chunk ID\n        this.chunkManager.oldContent.forEach(line => {\n            if (line.chunkId) {\n                if (!oldChunkLines[line.chunkId]) {\n                    oldChunkLines[line.chunkId] = [];\n                }\n                oldChunkLines[line.chunkId].push(line);\n            }\n        });\n\n        this.chunkManager.newContent.forEach(line => {\n            if (line.chunkId) {\n                if (!newChunkLines[line.chunkId]) {\n                    newChunkLines[line.chunkId] = [];\n                }\n                newChunkLines[line.chunkId].push(line);\n            }\n        });\n\n        // Track which chunks we've processed to avoid duplicates\n        const processedChunks = new Set();\n\n        // Process all lines from newContent in order, but replace chunks as needed\n        for (const line of this.chunkManager.newContent) {\n            if (line.chunkId && selections[line.chunkId]) {\n                // This line belongs to a chunk with a selection\n                if (!processedChunks.has(line.chunkId)) {\n                    // First time we encounter this chunk - add all lines from selected side\n                    const selectedSide = selections[line.chunkId];\n\n                    if (selectedSide === 'left') {\n                        // Add all lines from old content for this chunk\n                        const chunkLines = oldChunkLines[line.chunkId] || [];\n                        chunkLines.forEach(chunkLine => {\n                            if (chunkLine.type === 'content') {\n                                mergedLines.push(chunkLine);\n                            }\n                        });\n                    } else {\n                        // Add all lines from new content for this chunk\n                        const chunkLines = newChunkLines[line.chunkId] || [];\n                        chunkLines.forEach(chunkLine => {\n                            if (chunkLine.type === 'content') {\n                                mergedLines.push(chunkLine);\n                            }\n                        });\n                    }\n                    processedChunks.add(line.chunkId);\n                }\n                // Skip this individual line since we've added the whole chunk\n            } else if (!line.chunkId) {\n                // This is common content (not part of any chunk)\n                if (line.type === 'content') {\n                    mergedLines.push(line);\n                }\n            }\n            // Skip lines that belong to chunks without selections\n        }\n\n        Debug.log('MergeContentGenerator: Processing complete', {\n            totalMergedLines: mergedLines.length,\n            processedChunks: Array.from(processedChunks),\n            sampleLines: mergedLines.slice(0, 3).map(l => l.line?.substring(0, 50) + '...' || 'empty')\n        }, 3);\n\n        const mergedContent = ChunkUtils.generateFileContent(mergedLines);\n\n        Debug.log('MergeContentGenerator: Merge generation complete', {\n            totalLines: mergedLines.length,\n            contentLength: mergedContent.length\n        }, 2);\n\n        return mergedContent;\n    }\n\n    /**\n     * Generate file content from lines\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated content\n     */\n    generateFileFromLines(lines) {\n        return ChunkUtils.generateFileContent(lines);\n    }\n}\n","// ChunkManager.js - Manages diff chunks and coordinates chunk components\nimport { Debug } from '../utils/Debug';\nimport { ChunkUtils } from '../utils/ChunkUtils';\nimport Selectors from '../constants/Selectors';\n\nimport { ChunkRenderer } from './chunks/ChunkRenderer';\nimport { ChunkSelectionHandler } from './chunks/ChunkSelectionHandler';\nimport { MergeContentGenerator } from './chunks/MergeContentGenerator';\n\n/**\n * Manages diff chunks and coordinates chunk components\n */\nexport class ChunkManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.chunks = [];\n        this.oldContent = [];\n        this.newContent = [];\n        this.chunkElements = [];\n\n        // Create sub-components\n        this.renderer = new ChunkRenderer(this);\n        this.selectionHandler = new ChunkSelectionHandler(this);\n        this.contentGenerator = new MergeContentGenerator(this);\n\n        // Define selection state constants\n        this.SELECTED_STATE = Selectors.DIFF.CHUNK_SELECTED.name();\n        this.UNSELECTED_STATE = Selectors.DIFF.CHUNK_UNSELECTED.name();\n\n        // Performance tracking\n        this._performanceMetrics = {\n            initTime: 0,\n            renderTime: 0,\n            chunkCount: 0\n        };\n\n        Debug.log('ChunkManager: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize chunks from diff data\n     * @param {Object} diffData - Diff data\n     */\n    initChunks(diffData) {\n        const startTime = performance.now();\n        Debug.log('ChunkManager: Initializing chunks from diff data', null, 2);\n\n        // Clear previous cache state\n        ChunkUtils.clearCache();\n\n        // Save chunks data\n        this.chunks = diffData.chunks || [];\n        this.oldContent = diffData.old || [];\n        this.newContent = diffData.new || [];\n\n        // Track chunk count for performance metrics\n        this._performanceMetrics.chunkCount = this.chunks.length;\n\n        // Mark chunks with type 'replace' as conflicts for navigation\n        this.chunks.forEach(chunk => {\n            chunk.conflict = true;\n        });\n\n        Debug.log(`ChunkManager: ${this.chunks.length} chunks initialized`, null, 3);\n\n        // Update navigation counter if available\n        if (this.diffViewer.diffNavigator) {\n            this.diffViewer.diffNavigator.updateCounter();\n        }\n\n        const endTime = performance.now();\n        this._performanceMetrics.initTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Initialization completed in ${this._performanceMetrics.initTime.toFixed(2)}ms`, null, 2);\n\n        // Validate chunk structure\n        this.validateChunkStructure();\n\n        return this.chunks;\n    }\n\n    /**\n     * Render chunks to container\n     */\n    renderChunks() {\n        const startTime = performance.now();\n\n        // Delegate to renderer component\n        this.renderer.renderChunks();\n\n        // Initialize the visual state manager\n        if (this.selectionHandler.visualStateManager.initialize) {\n            this.selectionHandler.visualStateManager.initialize();\n        }\n\n        // Setup chunk selection after rendering\n        this.setupChunkSelection();\n\n        // Initialize chunk elements for navigation\n        this.initChunkElements();\n\n        const endTime = performance.now();\n        this._performanceMetrics.renderTime = endTime - startTime;\n\n        Debug.log(`ChunkManager: Rendering completed in ${this._performanceMetrics.renderTime.toFixed(2)}ms`,\n            {\n                chunkCount: this._performanceMetrics.chunkCount,\n                msPerChunk: (this._performanceMetrics.renderTime / Math.max(1, this._performanceMetrics.chunkCount)).toFixed(2)\n            }, 2);\n\n        return true;\n    }\n\n    /**\n     * Setup chunk selection handlers\n     */\n    setupChunkSelection() {\n        // Delegate to selection handler\n        this.selectionHandler.setupChunkSelection();\n    }\n\n    /**\n     * Toggle selection state of a chunk\n     * @param {string} chunkId - Chunk ID\n     * @param {string} side - 'left' or 'right'\n     * @param {string} state - Selection state (this.SELECTED_STATE or this.UNSELECTED_STATE)\n     */\n    toggleChunkSelection(chunkId, side, state) {\n        this.selectionHandler.toggleChunkSelection(chunkId, side, state);\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    generateMergedContent() {\n        const selections = this.selectionHandler.getSelections();\n        return this.contentGenerator.generateMergedContent(selections);\n    }\n\n    /**\n     * Generate content from lines array\n     * @param {Array} lines - Array of line objects\n     * @returns {string} Generated file content\n     */\n    generateFileFromLines(lines) {\n        return this.contentGenerator.generateFileFromLines(lines);\n    }\n\n    /**\n     * Initialize chunk elements array for navigation\n     */\n    initChunkElements() {\n        // Create array to hold chunk elements\n        this.chunkElements = [];\n\n        // Debug total available chunks\n        Debug.log(`ChunkManager: Looking for ${this.chunks.length} chunks in DOM`, null, 2);\n\n        this.chunks.forEach((chunk, index) => {\n            // Find elements for this chunk ID (using optimized cache query)\n            const elements = ChunkUtils.getChunkElements(chunk.id);\n            Debug.log(`ChunkManager: Chunk ID ${chunk.id}: Found ${elements.length} elements`, null, 3);\n\n            if (elements.length > 0) {\n                // Sort by line number to get the first element\n                const sortedElements = ChunkUtils.sortElementsByLineNumber(elements);\n\n                // Store the first element for this chunk\n                this.chunkElements[index] = sortedElements[0];\n            } else {\n                Debug.warn(`ChunkManager: No DOM elements found for chunk ID: ${chunk.id}`, null, 2);\n            }\n        });\n\n        const initializedCount = this.chunkElements.filter(Boolean).length;\n        Debug.log(`ChunkManager: Initialized ${initializedCount}/${this.chunks.length} chunk elements for navigation`, null, 2);\n\n        // Log warning if no elements were found\n        if (initializedCount === 0 && this.chunks.length > 0) {\n            Debug.error('ChunkManager: No chunk elements found in DOM. Navigation will not work properly.', null, 1);\n\n            // Check if elements with the expected selector exist at all\n            const anyChunkElements = document.querySelectorAll(Selectors.DIFF.CHUNK);\n            Debug.warn(`ChunkManager: ${anyChunkElements.length} elements match the chunk selector ${Selectors.DIFF.CHUNK}`, null, 2);\n\n            // Check if any elements have data-chunk-id attribute\n            const anyChunkIdElements = document.querySelectorAll('[data-chunk-id]');\n            Debug.warn(`ChunkManager: ${anyChunkIdElements.length} elements have data-chunk-id attribute`, null, 2);\n        }\n    }\n\n    /**\n     * Validate chunk data structure for proper merge operations\n     */\n    validateChunkStructure() {\n        let validChunks = 0;\n        let invalidChunks = 0;\n\n        this.chunks.forEach(chunk => {\n            // Check if chunk has proper old/new content arrays\n            if (!chunk.old && !chunk.new) {\n                Debug.warn(`ChunkManager: Chunk ${chunk.id} missing content arrays`, chunk, 2);\n                invalidChunks++;\n            } else if (chunk.type === 'replace' && (!chunk.old || !chunk.new)) {\n                Debug.warn(`ChunkManager: Replace chunk ${chunk.id} missing old or new content`, chunk, 2);\n                invalidChunks++;\n            } else {\n                validChunks++;\n            }\n        });\n\n        Debug.log(`ChunkManager: Chunk validation complete`, {\n            valid: validChunks,\n            invalid: invalidChunks,\n            total: this.chunks.length\n        }, 2);\n\n        return invalidChunks === 0;\n    }\n\n    /**\n     * Get performance metrics for this component\n     * @returns {Object} Performance metrics\n     */\n    getPerformanceMetrics() {\n        const metrics = {\n            ...this._performanceMetrics\n        };\n\n        // Add metrics from subcomponents\n        if (this.selectionHandler.visualStateManager.getMetrics) {\n            metrics.visualStateManager = this.selectionHandler.visualStateManager.getMetrics();\n        }\n\n        // Add cache stats\n        metrics.cacheStats = ChunkUtils.getCacheStats();\n\n        return metrics;\n    }\n\n    /**\n     * Get selections\n     * @returns {Object} Current selections\n     */\n    get selections() {\n        return this.selectionHandler.getSelections();\n    }\n\n    /**\n     * Handle selection change callback\n     * This maintains compatibility with external code expecting this function\n     */\n    onSelectionChange() {\n        // This can be overridden by DiffViewer\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport Selectors from '../constants/Selectors';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { TranslationManager } from '../utils/TranslationManager';\n\nimport { ThemeManager } from './ThemeManager';\n\n/**\n * Handles theme light/dark toggle functionality\n */\nexport class ThemeToggle {\n    /**\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @param {string} toggleElementId - Toggle element ID\n     * @param {string} containerId - Container element ID\n     */\n    constructor(browserUIManager = null, toggleElementId = Selectors.THEME.TOGGLE.name(), containerId = Selectors.CONTAINER.WRAPPER.name()) {\n        this.toggleElementId = toggleElementId;\n        this.containerId = containerId;\n\n        // Use DOMUtils for element retrieval with consistent error handling\n        this.toggleElement = DOMUtils.getElement(toggleElementId);\n        this.container = DOMUtils.getElement(containerId);\n        this.themeManager = ThemeManager.getInstance();\n        this.translationManager = TranslationManager.getInstance();\n        this.browserUIManager = browserUIManager;\n\n        Debug.log('ThemeToggle: Component created', null, 2);\n    }\n\n    /**\n     * Initialize toggle with event handlers\n     */\n    initialize() {\n        Debug.log('ThemeToggle: Initializing', null, 2);\n\n        if (!this.toggleElement || !this.container) {\n            Debug.warn(`ThemeToggle: Elements not found for initialization - toggle: ${!!this.toggleElement}, container: ${!!this.container}`, null, 2);\n            return false;\n        }\n\n        // Get current theme from ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Apply initial theme class to container using ThemeManager's method\n        this.themeManager.updateContainerThemeClass(currentTheme.mode);\n\n        // Add event listener to toggle element\n        this.toggleElement.addEventListener('change', this.handleToggle.bind(this));\n\n        // Add listener to ThemeManager to update toggle when theme changes from elsewhere\n        this.themeManager.addListener(this.updateToggle.bind(this));\n\n        // Log whether we have a BrowserUIManager instance\n        Debug.log(`ThemeToggle: BrowserUIManager reference ${this.browserUIManager ? 'is available' : 'is not available'}`, null, 2);\n\n        Debug.log('ThemeToggle: Initialized successfully', null, 2);\n        return true;\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {ThemeToggle} - This instance for chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n        Debug.log('ThemeToggle: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n\n    /**\n     * Handle toggle event\n     * @param {Event} event - Change event\n     */\n    handleToggle(event) {\n        const isDark = event.target.checked;\n        const newMode = isDark ? 'dark' : 'light';\n\n        // Show the theme loading indicator\n        if (this.browserUIManager) {\n            this.browserUIManager.showThemeLoading();\n        } else {\n            Debug.log('ThemeToggle: BrowserUIManager not available, no loading indicator will be shown', null, 2);\n        }\n\n        try {\n            // Apply the theme and then hide the loader when complete\n            this.themeManager.setThemeMode(newMode)\n                .then(() => {\n                    // Hide the loader after theme is loaded\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.log(`ThemeToggle: Theme toggled to ${newMode} mode`, null, 2);\n                })\n                .catch(error => {\n                    // Hide loader on error\n                    if (this.browserUIManager) {\n                        this.browserUIManager.hideThemeLoading();\n                    }\n                    Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n                });\n        } catch (error) {\n            // Hide loader on immediate error\n            if (this.browserUIManager) {\n                this.browserUIManager.hideThemeLoading();\n            }\n            Debug.error('ThemeToggle: Error toggling theme:', error, 2);\n        }\n    }\n\n    /**\n     * Update toggle state based on theme\n     * @param {Object} theme - Theme object\n     */\n    updateToggle(theme) {\n        if (!this.toggleElement) return;\n\n        const currentTheme = theme || this.themeManager.getCurrentTheme();\n        this.toggleElement.checked = currentTheme.mode === 'dark';\n\n        // Instead of using our own updateContainerClass method,\n        // leverage the centralized method from ThemeManager\n        if (this.container) {\n            this.themeManager.updateContainerThemeClass(currentTheme.mode);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { BaseSingleton } from '../../utils/BaseSingleton';\nimport Selectors from '../../constants/Selectors';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * Lightweight standalone modal manager without external dependencies\n */\nexport class ModalManager extends BaseSingleton {\n    /**\n     * Get the singleton instance\n     * @param {Object} options - Configuration options (only used during first initialization)\n     * @returns {ModalManager} The singleton instance\n     */\n    static getInstance(options = {}) {\n        if (!instance) {\n            instance = new ModalManager(options);\n        }\n        return instance;\n    }\n\n    /**\n     * Constructor - protected from direct instantiation\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        super();\n\n        // Skip initialization if instance already exists\n        if (!this._isFirstInstance(instance)) {\n            return;\n        }\n\n        this.options = {\n            debug: false,\n            translations: {},\n            ...options\n        };\n\n        this.modals = {};\n        this.activeModal = null;\n        this.initialized = false;\n\n        Debug.log('ModalManager: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize modals by creating the necessary HTML\n     * @returns {boolean} Success status\n     */\n    initModals() {\n        try {\n            if (this.initialized) {\n                Debug.log('ModalManager: Already initialized', null, 2);\n                return true;\n            }\n\n            const translationManager = TranslationManager.getInstance();\n\n            // Create confirm modal\n            this.createModal({\n                id: Selectors.MODAL.CONFIRM.name(),\n                title: translationManager.get('confirmation'),\n                contentId: Selectors.MODAL.MESSAGE.name(),\n                contentClass: Selectors.UTILITY.PADDING_3.name(),\n                footerButtons: [\n                    {\n                        id: Selectors.MODAL.CONTINUE_BTN.name(),\n                        text: translationManager.get('continueResolving'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_PRIMARY.name() + ' ' + Selectors.UTILITY.MARGIN_END_2.name()\n                    },\n                    {\n                        id: Selectors.MODAL.MERGE_BTN.name(),\n                        text: translationManager.get('mergeAnyway'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_WARNING.name()\n                    }\n                ]\n            });\n\n            // Create preview modal\n            this.createModal({\n                id: Selectors.MODAL.PREVIEW.name(),\n                title: '<span id=\"' + Selectors.MODAL.PREVIEW_FILENAME.name() + '\"></span>',\n                contentId: Selectors.MODAL.PREVIEW_CONTENT_ID.name(),\n                contentClass: Selectors.MODAL.PREVIEW_CONTENT.name(),\n                headerClass: Selectors.MODAL.HEADER_FIXED.name(),\n                modalClass: 'vdm-modal--fixed-footer',\n                fullscreen: true\n            });\n\n            // Create conflict modal\n            this.createModal({\n                id: Selectors.MERGE.CONFLICT_MODAL.name(),\n                title: translationManager.get('unresolvedConflicts'),\n                contentId: Selectors.MODAL.MESSAGE.name(),\n                contentClass: Selectors.UTILITY.PADDING_3.name(),\n                footerButtons: [\n                    {\n                        id: Selectors.MODAL.CONTINUE_BTN.name(),\n                        text: translationManager.get('continueResolving'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_PRIMARY.name() + ' ' + Selectors.UTILITY.MARGIN_END_2.name()\n                    },\n                    {\n                        id: Selectors.MODAL.MERGE_BTN.name(),\n                        text: translationManager.get('mergeAnyway'),\n                        class: Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_WARNING.name()\n                    }\n                ]\n            });\n\n            // Add event listeners for close buttons, backdrop clicks, etc.\n            this._setupEventListeners();\n\n            this.initialized = true;\n            Debug.log('ModalManager: Modals initialized', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('ModalManager: Error initializing modals', error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Create a modal with the specified configuration\n     * @param {Object} config - Modal configuration\n     * @param {string} config.id - Modal ID (without # prefix)\n     * @param {string} config.title - Modal title (can include HTML)\n     * @param {string} [config.contentId] - ID for the content container (without # prefix)\n     * @param {string} [config.contentClass] - CSS class for the content container\n     * @param {string} [config.modalClass] - Additional CSS class for the modal\n     * @param {string} [config.headerClass] - CSS class for the header (overrides default)\n     * @param {Array} [config.footerButtons] - Array of button configurations\n     * @param {boolean} [config.fullscreen] - Whether to make the modal fullscreen\n     * @param {Object} [config.events] - Custom event handlers for modal elements\n     * @param {Object} [config.attr] - Additional attributes to add to the modal element\n     * @returns {boolean} Success status\n     */\n    createModal(config) {\n        try {\n            const modalId = config.id;\n\n            // Check if modal already exists in DOM\n            if (document.getElementById(modalId)) {\n                Debug.log(`ModalManager: Modal ${modalId} already exists in DOM`, null, 2);\n                return true;\n            }\n\n            // Use header class from config or default to MODAL.HEADER with prefix removed\n            const headerClass = config.headerClass || Selectors.MODAL.HEADER.name();\n\n            // Start building modal HTML\n            let modalHtml = `\n                <div id=\"${modalId}\" class=\"${Selectors.MODAL.CONTAINER.name()/*remove dot prefix*/}${config.modalClass ? ' ' + config.modalClass : ''}\" style=\"display: none;\"`;\n\n            // Add additional attributes if provided\n            if (config.attr) {\n                Object.entries(config.attr).forEach(([key, value]) => {\n                    modalHtml += ` ${key}=\"${value}\"`;\n                });\n            }\n\n            modalHtml += `>\n                    <div class=\"${Selectors.MODAL.CONTENT.name()}\">\n                        <div class=\"${headerClass}\">\n                            <h5 class=\"${Selectors.MODAL.TITLE.name()}\">${config.title}</h5>\n                            <button class=\"${Selectors.MODAL.CLOSE.name()}\">&times;</button>\n                        </div>`;\n\n            // Add content container\n            if (config.contentId) {\n                modalHtml += `<div id=\"${config.contentId}\" class=\"${config.contentClass || ''}\"></div>`;\n            } else {\n                modalHtml += `<div class=\"${config.contentClass || ''}\"></div>`;\n            }\n\n            // Add footer with buttons if specified\n            if (config.footerButtons && config.footerButtons.length > 0) {\n                modalHtml += `<div class=\"${Selectors.MODAL.FOOTER.name()} ${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.PADDING_3.name()}\">`;\n                config.footerButtons.forEach(button => {\n                    // Check if this is a close button - only buttons with the exact MODAL.CLOSE.name() class should be considered close buttons\n                    const isCloseButton = button?.class.split(' ').includes(Selectors.MODAL.CLOSE.name());\n\n                    // Determine the button type based on class\n                    let iconName = 'chevron-right'; // Default icon\n\n                    if (button.class) {\n                        const classNames = button.class.split(' ');\n\n                        // Determine button type from classes\n                        if (classNames.some(cls => cls.includes('primary'))) {\n                            iconName = 'check-circle';\n                        } else if (classNames.some(cls => cls.includes('success'))) {\n                            iconName = 'check-circle';\n                        } else if (classNames.some(cls => cls.includes('danger'))) {\n                            iconName = 'exclamation-triangle';\n                        } else if (classNames.some(cls => cls.includes('warning'))) {\n                            iconName = 'exclamation-circle';\n                        } else if (classNames.some(cls => cls.includes('info'))) {\n                            iconName = 'info-circle';\n                        }\n                    }\n\n                    // Special case for specific button IDs\n                    if (button.id) {\n                        if (button.id.toLowerCase().includes('copy')) {\n                            iconName = 'copy';\n                        } else if (button.id === Selectors.MODAL.CONTINUE_BTN.name()) {\n                            iconName = 'chevron-right';\n                        } else if (button.id === Selectors.MODAL.MERGE_BTN.name()) {\n                            iconName = 'exclamation-circle';\n                        }\n                    }\n\n                    // Generate icon HTML if this is not a close button\n                    let iconHtml = '';\n                    if (!isCloseButton) {\n                        iconHtml = DOMUtils.getIconHtml(iconName, { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n                    }\n\n                    modalHtml += `<button id=\"${button.id}\" class=\"${button.class || Selectors.UTILITY.BUTTON.name() + ' ' + Selectors.UTILITY.BUTTON_SECONDARY.name()}\"`;\n\n                    // Add data attributes if provided\n                    if (button.data) {\n                        Object.entries(button.data).forEach(([key, value]) => {\n                            modalHtml += ` data-${key}=\"${value}\"`;\n                        });\n                    }\n\n                    // Add the icon before text but only for non-close buttons\n                    if (isCloseButton && !button.text) {\n                        // For close buttons without text, don't add any content (X will be created by CSS)\n                        modalHtml += `></button>`;\n                    } else {\n                        // For other buttons or close buttons with text, add icon + text span\n                        modalHtml += `>${iconHtml}<span>${button.text || ''}</span></button>`;\n                    }\n                });\n                modalHtml += `</div>`;\n            }\n\n            // Close the modal structure\n            modalHtml += `\n                    </div>\n                </div>\n            `;\n\n            this._appendToBody(modalId, modalHtml);\n            this.modals[modalId] = {\n                element: document.getElementById(modalId),\n                isOpen: false,\n                config: config\n            };\n\n            // Apply fullscreen if needed\n            if (config.fullscreen) {\n                const modalElement = document.getElementById(modalId);\n                if (modalElement) {\n                    this.setFullscreenSize(modalElement);\n                }\n            }\n\n            // Attach custom event handlers if provided\n            if (config.events) {\n                const modalElement = document.getElementById(modalId);\n\n                Object.entries(config.events).forEach(([selector, events]) => {\n                    let elements;\n\n                    // Handle special selectors\n                    if (selector === 'modal') {\n                        elements = [modalElement];\n                    } else if (selector === 'close') {\n                        elements = Array.from(modalElement.querySelectorAll(Selectors.MODAL.CLOSE));\n                    } else {\n                        // For regular selectors, query within the modal\n                        elements = Array.from(modalElement.querySelectorAll(selector));\n                    }\n\n                    // Attach events to each matching element\n                    elements.forEach(element => {\n                        if (element) {\n                            Object.entries(events).forEach(([eventName, handler]) => {\n                                element.addEventListener(eventName, handler);\n                                Debug.log(`ModalManager: Attached ${eventName} event to ${selector} in modal ${modalId}`, null, 3);\n                            });\n                        }\n                    });\n                });\n            }\n\n            Debug.log(`ModalManager: Created modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error creating modal - ${config.id}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Determine the appropriate icon for a button based on context\n     * @private\n     * @param {Object} button - The button configuration object\n     * @returns {string} The name of the icon to use\n     */\n    _getIconNameForButton(button) {\n        // First, check the IconRegistry to ensure we use icons that actually exist\n\n        // Icons based on button text (case insensitive)\n        const buttonText = button.text.toLowerCase();\n\n        if (buttonText.includes('continue')) return 'chevron-right';\n        if (buttonText.includes('merge')) return 'check'; // Changed from code-merge to check\n        if (buttonText.includes('close') || buttonText.includes('cancel')) return 'exclamation-circle'; // Changed from times-circle\n        if (buttonText.includes('confirm') || buttonText.includes('ok')) return 'check-circle';\n        if (buttonText.includes('copy')) return 'copy';\n        if (buttonText.includes('download')) return 'file'; // Changed from download\n        if (buttonText.includes('upload')) return 'file-circle-plus'; // Changed from upload\n        if (buttonText.includes('save')) return 'check-circle'; // Changed from save\n        if (buttonText.includes('delete')) return 'exclamation-triangle'; // Changed from trash\n        if (buttonText.includes('edit')) return 'eye'; // Changed from edit\n\n        // Icons based on button class\n        if (button.class) {\n            const buttonClass = button.class.toLowerCase();\n\n            if (buttonClass.includes('primary')) return 'check';\n            if (buttonClass.includes('secondary')) return 'chevron-right';\n            if (buttonClass.includes('success')) return 'check-circle';\n            if (buttonClass.includes('danger')) return 'exclamation-triangle';\n            if (buttonClass.includes('warning')) return 'exclamation-circle';\n            if (buttonClass.includes('info')) return 'info-circle';\n        }\n\n        // Default icon if no matching pattern found\n        return 'chevron-right';\n    }\n\n    /**\n     * Append HTML to body\n     * @private\n     * @param {string} modalId - Modal ID\n     * @param {string} html - HTML to append\n     */\n    _appendToBody(modalId, html) {\n        // Create wrapper div for modals if it doesn't exist\n        let modal = document.getElementById(modalId);\n        if (!modal) {\n            // Convert HTML string to DOM element before appending\n            const tempContainer = document.createElement('div');\n            tempContainer.innerHTML = html;\n            document.body.appendChild(tempContainer.firstElementChild);\n        }\n\n        // Create or update the backdrop element\n        let backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (!backdrop) {\n            backdrop = document.createElement('div');\n            backdrop.id = Selectors.MODAL.BACKDROP.name();\n            backdrop.style.display = 'none';\n            document.body.appendChild(backdrop);\n        }\n    }\n\n    /**\n     * Set up event listeners for modals\n     * @private\n     */\n    _setupEventListeners() {\n        // Use document-level event delegation for close buttons\n        document.addEventListener('click', (event) => {\n            // Check if the clicked element is a close button or has the close class\n            if (event.target.matches(Selectors.MODAL.CLOSE)) {\n                const modal = event.target.closest(Selectors.MODAL.CONTAINER);\n                if (modal?.id) {\n                    this.close(modal.id);\n                }\n            }\n        });\n\n        // Backdrop click to close\n        const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (backdrop) {\n            backdrop.addEventListener('click', () => {\n                if (this.activeModal) {\n                    this.close(this.activeModal);\n                }\n            });\n        }\n\n        // ESC key to close\n        document.addEventListener('keydown', (event) => {\n            if (event.key === 'Escape' && this.activeModal) {\n                this.close(this.activeModal);\n            }\n        });\n    }\n\n    /**\n     * Register a modal instance\n     * @param {string} modalId - ID of the modal element\n     * @param {Object} options - Modal configuration options\n     * @returns {boolean} Success status\n     */\n    register(modalId, options = {}) {\n        try {\n            const element = document.getElementById(modalId);\n            if (!element) {\n                Debug.warn(`ModalManager: Element not found for modal ID ${modalId}`, null, 2);\n                return false;\n            }\n\n            this.modals[modalId] = {\n                element: element,\n                isOpen: false,\n                options: options\n            };\n\n            Debug.log(`ModalManager: Registered modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error registering modal - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Register a callback to be executed before opening a modal\n     * @param {string} modalId - ID of the modal\n     * @param {Function} callback - Function to execute before opening\n     * @returns {boolean} Success status\n     */\n    registerBeforeOpenCallback(modalId, callback) {\n        try {\n            if (!this.modals[modalId]) {\n                this.modals[modalId] = {\n                    element: document.getElementById(modalId),\n                    isOpen: false,\n                    config: {}\n                };\n            }\n\n            if (!this.modals[modalId].beforeOpenCallbacks) {\n                this.modals[modalId].beforeOpenCallbacks = [];\n            }\n\n            this.modals[modalId].beforeOpenCallbacks.push(callback);\n            Debug.log(`ModalManager: Registered before-open callback for modal ${modalId}`, null, 2);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error registering before-open callback for modal ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Open a modal by ID\n     * @param {string} modalId - ID of the modal to open\n     * @returns {boolean} Success status\n     */\n    open(modalId) {\n        try {\n            const modal = this.modals[modalId];\n            if (!modal) {\n                Debug.warn(`ModalManager: Cannot open modal ${modalId} - not registered`, null, 2);\n\n                // Forcefully try to find the modal element even if not registered\n                const element = document.getElementById(modalId);\n                if (element) {\n                    Debug.log(`ModalManager: Found unregistered modal element ${modalId}, registering now`, null, 2);\n                    this.register(modalId, { element });\n                    this._showModal(modalId);\n                    return true;\n                }\n\n                return false;\n            }\n\n            // Execute any registered before-open callbacks\n            if (modal.beforeOpenCallbacks && modal.beforeOpenCallbacks.length > 0) {\n                Debug.log(`ModalManager: Executing ${modal.beforeOpenCallbacks.length} before-open callbacks for modal ${modalId}`, null, 2);\n                modal.beforeOpenCallbacks.forEach(callback => {\n                    try {\n                        callback();\n                    } catch (err) {\n                        Debug.error(`ModalManager: Error in before-open callback for modal ${modalId}`, err, 1);\n                    }\n                });\n            }\n\n            this._showModal(modalId);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error opening modal ${modalId}:`, error, 2);\n            return false;\n        }\n    }\n\n    /**\n     * Show a modal\n     * @private\n     * @param {string} modalId - Modal ID to show\n     */\n    _showModal(modalId) {\n        const modal = this.modals[modalId];\n        if (!modal) {\n            Debug.warn(`ModalManager: Modal ${modalId} not found`, null, 2);\n            return;\n        }\n\n        // Set as active modal - important for proper backdrop handling\n        this.activeModal = modalId;\n\n        // Show backdrop\n        const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n        if (backdrop) {\n            backdrop.style.display = 'block';\n            setTimeout(() => {\n                backdrop.style.opacity = '1';\n            }, 10);\n        }\n\n        // IMPORTANT: Force modal display style using direct manipulation\n        // Show modal with animation - set display IMMEDIATELY\n        modal.element.style.display = 'block';\n        modal.element.style.opacity = '0';\n\n        // Debug logs to help diagnose modal display issues\n        Debug.log(`ModalManager: Setting modal ${modalId} display to block`, {\n            modalElement: modal.element.id,\n            displayBefore: modal.element.style.display\n        }, 2);\n\n        // Apply animation\n        setTimeout(() => {\n            modal.element.style.opacity = '1';\n            Debug.log(`ModalManager: Fading in modal ${modalId}`, null, 3);\n        }, 10);\n\n        modal.isOpen = true;\n\n        // Handle fullscreen if needed\n        if (modalId === Selectors.MODAL.PREVIEW.name()) {\n            this.setFullscreenSize(modal.element);\n        }\n\n        // Prevent body scrolling\n        document.body.style.overflow = 'hidden';\n    }\n\n    /**\n     * Hide a modal\n     * @private\n     * @param {string} modalId - Modal ID to hide\n     */\n    _hideModal(modalId) {\n        const modal = this.modals[modalId];\n        if (!modal) return;\n\n        // Fade out\n        modal.element.style.opacity = '0';\n\n        // After animation completes\n        setTimeout(() => {\n            modal.element.style.display = 'none';\n            modal.isOpen = false;\n\n            // Hide backdrop if this is the currently active modal\n            if (this.activeModal === modalId) {\n                const backdrop = document.getElementById(Selectors.MODAL.BACKDROP.name());\n                if (backdrop) {\n                    backdrop.style.opacity = '0';\n\n                    // Hide backdrop after fade-out animation\n                    setTimeout(() => {\n                        backdrop.style.display = 'none';\n                    }, 150);\n                }\n\n                // Reset body scrolling\n                document.body.style.overflow = '';\n                this.activeModal = null;\n            }\n        }, 250); // Match transition duration\n    }\n\n    /**\n     * Close a modal by ID\n     * @param {string} modalId - ID of the modal to close\n     * @returns {boolean} Success status\n     */\n    close(modalId) {\n        try {\n            if (!this.modals[modalId]) {\n                Debug.warn(`ModalManager: Modal not found - ${modalId}`, null, 2);\n                return false;\n            }\n\n            this._hideModal(modalId);\n\n            Debug.log(`ModalManager: Closed modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error closing modal - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Set content for a modal\n     * @param {string} modalId - ID of the modal\n     * @param {string|Element} content - HTML content or DOM element\n     * @param {string} contentSelector - Selector for content container\n     * @returns {boolean} Success status\n     */\n    setContent(modalId, content, contentSelector = null) {\n        try {\n            Debug.log(`ModalManager: Setting content for modal ${modalId}`, {\n                contentType: typeof content,\n                contentLength: typeof content === 'string' ? content.length : 'Element',\n                contentPreview: typeof content === 'string' ? content.substring(0, 150) + '...' : 'Element object',\n                targetSelector: contentSelector\n            }, 2);\n\n            const modal = this.modals[modalId];\n            if (!modal) {\n                Debug.error(`ModalManager: Modal not found - ${modalId}`, null, 1);\n                return false;\n            }\n\n            // Find the content container\n            let container;\n            if (contentSelector) {\n                Debug.log(`ModalManager: Looking for content container with selector: ${contentSelector}`, null, 2);\n                // Check if contentSelector is an ID without # prefix\n                if (!contentSelector.startsWith('#') && !contentSelector.startsWith('.')) {\n                    container = document.getElementById(contentSelector);\n                    Debug.log(`ModalManager: Tried getElementById with: ${contentSelector}, found: ${!!container}`, null, 2);\n                }\n\n                // If not found or not an ID, try as a selector\n                if (!container) {\n                    container = document.querySelector(contentSelector);\n                    Debug.log(`ModalManager: Tried querySelector with: ${contentSelector}, found: ${!!container}`, null, 2);\n                }\n\n                // Log container details\n                Debug.log(`ModalManager: Container lookup result:`, {\n                    found: !!container,\n                    id: container?.id || 'none',\n                    classList: container ? Array.from(container.classList) : []\n                }, 2);\n            } else {\n                container = modal.element.querySelector(Selectors.MODAL.CONTENT);\n                Debug.log(`ModalManager: Using default content container:`, {\n                    found: !!container,\n                    selector: Selectors.MODAL.CONTENT\n                }, 2);\n\n                if (!container) {\n                    Debug.error(`ModalManager: Content container not found - ${modalId}`, null, 1);\n                    return false;\n                }\n            }\n\n            if (!container) {\n                Debug.error(`ModalManager: Could not find content container with selector: ${contentSelector}`, null, 1);\n                return false;\n            }\n\n            // Set the content\n            if (typeof content === 'string') {\n                Debug.log(`ModalManager: Setting HTML content for modal ${modalId}`, {\n                    contentLength: content.length,\n                    containsPre: content.includes('<pre'),\n                    container: container.id || container.className\n                }, 2);\n\n                container.innerHTML = content;\n\n                // Verify the content was set correctly\n                const hasPreElements = container.querySelectorAll('pre').length > 0;\n                Debug.log(`ModalManager: Content set verification:`, {\n                    hasPreElements,\n                    innerHTML: container.innerHTML.substring(0, 100) + '...'\n                }, 2);\n\n                if (content.includes('<pre') && !hasPreElements) {\n                    Debug.warn(`ModalManager: Content included <pre> tags but none found after setting innerHTML`, {\n                        innerHtmlLength: container.innerHTML.length\n                    }, 1);\n                }\n            } else if (content instanceof Element) {\n                Debug.log(`ModalManager: Setting Element content for modal ${modalId}`, {\n                    elementType: content.tagName,\n                    elementId: content.id || 'none'\n                }, 2);\n                container.innerHTML = '';\n                container.appendChild(content);\n            } else {\n                Debug.error(`ModalManager: Invalid content type - ${typeof content}`, null, 1);\n                return false;\n            }\n\n            Debug.log(`ModalManager: Content set for modal - ${modalId}`, null, 3);\n            return true;\n        } catch (error) {\n            Debug.error(`ModalManager: Error setting content - ${modalId}`, error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Set fullscreen size for modal\n     * @param {Element} modalElement - Modal DOM element\n     * @returns {boolean} Success status\n     */\n    setFullscreenSize(modalElement) {\n        try {\n            if (!modalElement) {\n                Debug.warn('ModalManager: Modal element not provided for fullscreen', null, 2);\n                return false;\n            }\n\n            // Add fullscreen class\n            modalElement.classList.add(Selectors.MODAL.FULLSCREEN.name());\n\n            // Calculate and set the height\n            const headerHeight = modalElement.querySelector(Selectors.MODAL.HEADER) ?\n                modalElement.querySelector(Selectors.MODAL.HEADER).offsetHeight : 0;\n\n            const content = modalElement.querySelector(Selectors.MODAL.CONTENT);\n            if (content) {\n                content.style.height = `calc(100% - ${headerHeight}px)`;\n            }\n\n            Debug.log('ModalManager: Modal set to fullscreen size', null, 3);\n            return true;\n        } catch (error) {\n            Debug.error('ModalManager: Error setting fullscreen size', error, 1);\n            return false;\n        }\n    }\n\n    /**\n     * Creates a code copy modal for displaying and copying code snippets\n     * @param {string} codeText - The code text to display in the modal\n     * @returns {string} Modal ID\n     */\n    createCopyModal(codeText) {\n        const modalId = Selectors.MODAL.CODE_COPY.name();\n        // Get translations\n        const translationManager = TranslationManager.getInstance();\n\n        // Create modal if it doesn't exist yet\n        if (!this.modals[modalId]) {\n            this.createModal({\n                id: modalId,\n                title: translationManager.get('copyCode'),\n                contentId: Selectors.MODAL.COPY_CONTENT.name(),\n                modalClass: Selectors.MODAL.FIXED_FOOTER.name(),\n                headerClass: Selectors.MODAL.HEADER_FIXED.name(),\n                footerButtons: [\n                    {\n                        class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()}`\n                    }\n                ]\n            });\n        }\n\n        // Create content with textarea and copy button\n        const safeText = this._escapeHtml(codeText);\n        const content = `\n            <div class=\"${Selectors.COPY.MODAL.DIALOG.name()}\">\n                <p class=\"${Selectors.COPY.MODAL.INSTRUCTIONS.name()}\">${translationManager.get('copyInstructions')}</p>\n                <div class=\"${Selectors.COPY.MODAL.TEXTAREA.name()}\">\n                    <textarea id=\"${Selectors.COPY.MODAL.TEXTAREA_ELEM.name()}\" class=\"${Selectors.COPY.MODAL.TEXTAREA_ELEM.name()}\">${safeText}</textarea>\n                </div>\n                <div class=\"${Selectors.COPY.MODAL.ACTIONS.name()}\">\n                    <button id=\"${Selectors.COPY.MODAL.BUTTON.name()}\" class=\"${Selectors.COPY.MODAL.BUTTON.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}\">\n                        ${DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() })}\n                        <span>${translationManager.get('copyToClipboard')}</span>\n                    </button>\n                </div>\n            </div>\n        `;\n\n        // Set content\n        this.setContent(modalId, content, Selectors.MODAL.COPY_CONTENT.name());\n\n        // Set up event handlers after a short delay to ensure DOM is ready\n        setTimeout(() => {\n            const textarea = document.getElementById(Selectors.COPY.MODAL.TEXTAREA_ELEM.name());\n            const copyBtn = document.getElementById(Selectors.COPY.MODAL.BUTTON.name());\n\n            if (textarea) {\n                // Select all text when focused\n                textarea.addEventListener('focus', function() {\n                    this.select();\n                });\n\n                // Initial focus and select\n                textarea.select();\n            }\n\n            if (copyBtn && textarea) {\n                copyBtn.addEventListener('click', function() {\n                    // Focus and select the textarea\n                    textarea.select();\n\n                    try {\n                        // Try to copy using clipboard API or fallback to execCommand\n                        let success = false;\n\n                        if (navigator.clipboard?.writeText) {\n                            navigator.clipboard.writeText(textarea.value)\n                                .then(() => {\n                                    this._showCopySuccess(copyBtn);\n                                    Debug.log('ModalManager: Successfully copied using Clipboard API', null, 3);\n                                })\n                                .catch(_err => {\n                                    // Fallback to execCommand\n                                    // @SuppressWarnings(javascript:S1874) - Keeping for browser compatibility\n                                    success = document.execCommand('copy');\n                                    if (success) {\n                                        this._showCopySuccess(copyBtn);\n                                        Debug.log('ModalManager: Successfully copied using execCommand fallback', null, 3);\n                                    } else {\n                                        this._showCopyFailure(copyBtn);\n                                        Debug.warn('ModalManager: Copy failed with execCommand fallback', null, 2);\n                                    }\n                                });\n                        } else {\n                            // Try execCommand directly\n                            // @SuppressWarnings(javascript:S1874) - Keeping for browser compatibility\n                            success = document.execCommand('copy');\n                            if (success) {\n                                this._showCopySuccess(copyBtn);\n                                Debug.log('ModalManager: Successfully copied using execCommand', null, 3);\n                            } else {\n                                this._showCopyFailure(copyBtn);\n                                Debug.warn('ModalManager: Copy failed with execCommand', null, 2);\n                            }\n                        }\n                    } catch (err) {\n                        this._showCopyFailure(copyBtn);\n                        Debug.error('ModalManager: Error during copy operation', err, 2);\n                    }\n                }.bind(this)); // Bind to modal manager for access to helper methods\n            }\n        }, 300);\n\n        return modalId;\n    }\n\n    /**\n     * Show success state on copy button\n     * @param {HTMLElement} button - Button element\n     * @private\n     */\n    _showCopySuccess(button) {\n        const translationManager = TranslationManager.getInstance();\n        button.innerHTML = DOMUtils.getIconHtml('check-circle', { classes: 'vdm-icon--success ' + Selectors.UTILITY.MARGIN_END_2.name() }) +\n            `<span>${translationManager.get('copied')}</span>`;\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_SUCCESS.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) +\n                `<span>${translationManager.get('copyToClipboard')}</span>`;\n            button.classList.remove(Selectors.UTILITY.BUTTON_SUCCESS.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Show failure state on copy button\n     * @param {HTMLElement} button - Button element\n     * @private\n     */\n    _showCopyFailure(button) {\n        const translationManager = TranslationManager.getInstance();\n        button.innerHTML = DOMUtils.getIconHtml('exclamation-triangle', { classes: 'vdm-icon--danger ' + Selectors.UTILITY.MARGIN_END_2.name() }) +\n            `<span>${translationManager.get('copyFailed')}</span>`;\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_DANGER.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) +\n                `<span>${translationManager.get('tryAgain')}</span>`;\n            button.classList.remove(Selectors.UTILITY.BUTTON_DANGER.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Escape HTML entities in a string\n     * @param {string} html - String to escape\n     * @returns {string} Escaped string\n     * @private\n     */\n    _escapeHtml(html) {\n        if (!html) return '';\n\n        return html\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n    }\n\n    /**\n     * Create a modal dynamically with content and open it immediately\n     * @param {Object} config - Modal configuration (see createModal)\n     * @param {string|Element} content - Content to set in the modal\n     * @param {string} [contentSelector] - Optional content container selector\n     * @returns {string} Modal ID\n     */\n    createAndOpenModal(config, content, contentSelector = null) {\n        try {\n            // Generate a unique ID if none provided\n            if (!config.id) {\n                config.id = 'vdm-modal--dynamic-' + Date.now();\n            }\n\n            // Create the modal\n            this.createModal(config);\n\n            // Set the content if provided\n            if (content) {\n                this.setContent(config.id, content, contentSelector || config.contentId);\n            }\n\n            // Open the modal\n            this.open(config.id);\n\n            return config.id;\n        } catch (error) {\n            Debug.error('ModalManager: Error creating and opening modal', error, 1);\n            return null;\n        }\n    }\n\n    /**\n     * Create a simple confirmation modal\n     * @param {Object} options - Confirmation options\n     * @param {string} options.title - Modal title\n     * @param {string} options.message - Confirmation message\n     * @param {string} options.confirmText - Text for confirm button\n     * @param {string} options.cancelText - Text for cancel button\n     * @param {Function} options.onConfirm - Callback for confirm action\n     * @param {Function} options.onCancel - Callback for cancel action\n     * @returns {string} Modal ID\n     */\n    createConfirmationModal(options) {\n        const modalId = 'vdm-modal--confirmation-' + Date.now();\n\n        // Create modal\n        this.createModal({\n            id: modalId,\n            title: options.title || 'Confirmation',\n            contentId: 'vdm-modal__confirmation-content',\n            contentClass: Selectors.UTILITY.PADDING_3.name(),\n            footerButtons: [\n                {\n                    id: `${modalId}-cancel-btn`,\n                    text: options.cancelText || 'Cancel',\n                    class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_SECONDARY.name()} me-2`\n                },\n                {\n                    id: `${modalId}-confirm-btn`,\n                    text: options.confirmText || 'Confirm',\n                    class: `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`\n                }\n            ],\n            events: {\n                [`#${modalId}-confirm-btn`]: {\n                    click: () => {\n                        if (typeof options.onConfirm === 'function') {\n                            options.onConfirm();\n                        }\n                        this.close(modalId);\n                    }\n                },\n                [`#${modalId}-cancel-btn`]: {\n                    click: () => {\n                        if (typeof options.onCancel === 'function') {\n                            options.onCancel();\n                        }\n                        this.close(modalId);\n                    }\n                }\n            }\n        });\n\n        // Set message content\n        this.setContent(modalId, `<p>${options.message || ''}</p>`, 'vdm-modal__confirmation-content');\n\n        // Open the modal\n        this.open(modalId);\n\n        return modalId;\n    }\n\n    /**\n     * Create an alert modal for showing messages\n     * @param {Object} options - Alert options\n     * @param {string} options.title - Modal title\n     * @param {string} options.message - Alert message\n     * @param {string} options.type - Alert type (success, info, warning, danger)\n     * @param {string} options.buttonText - Text for button\n     * @param {Function} options.onClose - Callback for close action\n     * @returns {string} Modal ID\n     */\n    createAlertModal(options) {\n        const modalId = `${Selectors.MODAL.CONTAINER.name()}--alert-${Date.now()}`;\n\n        // Determine alert class based on type\n        const alertClass = options.type ?\n            `${Selectors.UTILITY.ALERT} ${Selectors.UTILITY.ALERT_PREFIX}${options.type}` :\n            `${Selectors.UTILITY.ALERT} ${Selectors.UTILITY.ALERT_INFO}`;\n\n        // Create modal\n        this.createModal({\n            id: modalId,\n            title: options.title || 'Alert',\n            contentId: `${Selectors.MODAL.CONTAINER.name()}__alert-content`,\n            contentClass: Selectors.UTILITY.PADDING_3.name(),\n            footerButtons: [\n                {\n                    id: `${modalId}-ok-btn`,\n                    text: options.buttonText || 'OK',\n                    class: `${Selectors.MODAL.CLOSE.name()} ${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`\n                }\n            ],\n            events: {\n                [`#${modalId}-ok-btn`]: {\n                    click: (e) => {\n                        if (typeof options.onClose === 'function') {\n                            options.onClose(e);\n                        }\n                        this.close(modalId);\n                    }\n                }\n            }\n        });\n\n        // Create alert content\n        const alertContent = `\n            <div class=\"${alertClass} mb-0\">\n                ${options.message || ''}\n            </div>\n        `;\n\n        // Set content\n        this.setContent(modalId, alertContent, `${Selectors.MODAL.CONTAINER.name()}__alert-content`);\n\n        // Open the modal\n        this.open(modalId);\n\n        return modalId;\n    }\n\n    /**\n     * Destroy all modal instances and clean up\n     */\n    destroy() {\n        try {\n            // Close any open modal\n            if (this.activeModal) {\n                this.close(this.activeModal);\n            }\n\n            // Reset all modal references\n            this.modals = {};\n            this.activeModal = null;\n\n            Debug.log('ModalManager: Destroyed', null, 2);\n        } catch (error) {\n            Debug.error('ModalManager: Error during destroy', error, 1);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { ModalManager } from '../modal/ModalManager';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Adds copy buttons to code blocks in the preview modal\n * This implementation uses a fallback strategy for maximum browser compatibility\n */\nexport class CopyButton {\n    /**\n     * Initialize copy buttons for code blocks\n     * @param {string} containerId - ID of the container element\n     * @returns {boolean} Success status\n     */\n    static addCopyButtonsToPreview(containerId = Selectors.MODAL.PREVIEW_CONTENT_ID.name()) {\n        // Get instance of TranslationManager\n        const translationManager = TranslationManager.getInstance();\n\n        const container = DOMUtils.getElement(containerId);\n\n        if (!container) {\n            // Try direct DOM methods too\n            const directElement = document.getElementById(containerId);\n            const querySelectorElement = document.querySelector('#' + containerId);\n\n            Debug.log('CopyButton: Alternative container lookup results', {\n                getElementById: !!directElement,\n                querySelector: !!querySelectorElement\n            }, 2);\n\n            Debug.warn('CopyButton: Preview container not found', null, 2);\n            return false;\n        }\n\n        // Find all code blocks within the container\n        const preElements = container.querySelectorAll('pre');\n\n        if (!preElements || preElements.length === 0) {\n            Debug.log('CopyButton: No code blocks found in preview', null, 3);\n            return false;\n        }\n\n        // Add copy button to each pre element\n        preElements.forEach(pre => {\n            // Check if button already exists\n            if (pre.querySelector(Selectors.COPY.BUTTON)) {\n                return;\n            }\n\n            // Create copy button\n            const button = DOMUtils.createElement('button', null, Selectors.COPY.BUTTON.name(), {\n                type: 'button',\n                title: translationManager.get('copyCode')\n            });\n\n            // Add copy button content\n            button.innerHTML = `<span class=\"${Selectors.COPY.ICON.name()}\"></span><span class=\"${Selectors.COPY.TEXT.name()}\">${translationManager.get('copy')}</span>`;\n\n            // Position the button within the pre element\n            pre.style.position = 'relative';\n\n            // Find code element and insert button before it\n            const codeEl = pre.querySelector('code');\n            if (codeEl) {\n                pre.insertBefore(button, codeEl);\n            } else {\n                // Fallback to appending if no code element found\n                pre.appendChild(button);\n            }\n\n            // Add click event with progressive fallback\n            button.addEventListener('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                const codeEl = pre.querySelector('code');\n                if (!codeEl) return;\n\n                // Store reference to the code element for later use\n                // This is important to maintain context during asynchronous operations\n                CopyButton._sourceCodeElement = codeEl;\n\n                // Get text content - use most reliable method\n                let textToCopy;\n                if (codeEl.hasAttribute('data-original-code')) {\n                    textToCopy = CopyButton._decodeHTMLEntities(codeEl.getAttribute('data-original-code'));\n                    Debug.log('CopyButton: Using original code from attribute', null, 3);\n                } else {\n                    textToCopy = codeEl.textContent || '';\n                    textToCopy = textToCopy.replace(/\\n\\n+/g, '\\n');\n                    Debug.log('CopyButton: Using text content from code element', null, 3);\n                }\n\n                Debug.log('CopyButton: Text length: ' + textToCopy.length, null, 3);\n\n                // Go straight to the most reliable method - manual copy\n                // This ensures consistent behavior across all browsers\n                CopyButton._showManualCopyModal(textToCopy);\n\n                // Show visual feedback that copy operation was initiated\n                CopyButton._showProcessingState(button);\n            });\n        });\n\n        Debug.log(`CopyButton: Added copy buttons to ${preElements.length} code blocks`, null, 2);\n        return true;\n    }\n\n    /**\n     * Show processing state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showProcessingState(button) {\n        button.classList.add(Selectors.COPY.PROCESSING.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Open Copy Dialog...';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.PROCESSING.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 1000);\n    }\n\n    /**\n     * Show copied state on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopiedState(button) {\n        button.classList.add(Selectors.COPY.COPIED.name());\n        const textSpan = button.querySelector(`.${Selectors.COPY.TEXT.name()}`);\n        if (textSpan) {\n            textSpan.textContent = 'Copied!';\n        }\n\n        setTimeout(() => {\n            button.classList.remove(Selectors.COPY.COPIED.name());\n            if (textSpan) {\n                textSpan.textContent = 'Copy';\n            }\n        }, 2000);\n    }\n\n    /**\n     * Show a modal dialog with text for manual copying using ModalManager\n     * @param {string} text - Text to copy\n     * @private\n     */\n    static _showManualCopyModal(text) {\n        // Get singleton instance of ModalManager\n        const modalManager = ModalManager.getInstance();\n\n        // Create the copy modal and get its ID\n        const modalId = modalManager.createCopyModal(text);\n\n        // Open the modal\n        modalManager.open(modalId);\n\n        Debug.log('CopyButton: Showing manual copy modal', null, 2);\n    }\n\n    /**\n     * Show copy failure on button\n     * @param {HTMLElement} button - Button element to update\n     * @private\n     */\n    static _showCopyFailure(button) {\n        button.innerHTML = DOMUtils.getIconHtml('exclamation-triangle', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Copy Failed';\n        button.classList.remove(Selectors.UTILITY.BUTTON_PRIMARY.name(), Selectors.UTILITY.BUTTON_SUCCESS.name());\n        button.classList.add(Selectors.UTILITY.BUTTON_DANGER.name());\n\n        setTimeout(() => {\n            button.innerHTML = DOMUtils.getIconHtml('copy', { classes: Selectors.UTILITY.MARGIN_END_2.name() }) + 'Try Again';\n            button.classList.remove(Selectors.UTILITY.BUTTON_DANGER.name());\n            button.classList.add(Selectors.UTILITY.BUTTON_PRIMARY.name());\n        }, 2000);\n    }\n\n    /**\n     * Decode HTML entities in a string\n     * @param {string} html - String with HTML entities\n     * @returns {string} Decoded string\n     * @private\n     */\n    static _decodeHTMLEntities(html) {\n        if (!html) return '';\n\n        const textarea = document.createElement('textarea');\n        textarea.innerHTML = html;\n        return textarea.value;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { MergeContentFormatter } from '../../utils/MergeContentFormatter';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { CopyButton } from '../syntax/CopyButton';\nimport Selectors from '../../constants/Selectors';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\n\n/**\n * Handles preview functionality for merges\n */\nexport class MergePreviewManager {\n    /**\n     * Initialize preview manager\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n        this.modalManager = mergeHandler.modalManager;\n    }\n\n    /**\n     * Initialize preview button and events\n     * Sets up the preview button click handler\n     */\n    initialize() {\n        // Set up the preview button event handler\n        this.setupPreviewButton();\n        Debug.log('MergePreviewManager: Initialized', null, 2);\n    }\n\n    /**\n     * Set up the preview button with event handler\n     * Recreates button to remove existing handlers\n     */\n    setupPreviewButton() {\n        // Try to find the standard preview button first\n        const previewButton = document.getElementById(Selectors.MERGE.BUTTON_PREVIEW.name());\n\n        // If not found, check for the \"Get merged result\" button (used in local-only mode)\n        const getMergedResultButton = !previewButton ?\n            document.getElementById(Selectors.MERGE.GET_MERGED_RESULT_BTN.name()) : null;\n\n        // Use whichever button is available\n        const buttonToUse = previewButton || getMergedResultButton;\n\n        if (!buttonToUse) {\n            Debug.warn('MergePreviewManager: Preview button not found', null, 2);\n            return;\n        }\n\n        // Remove any existing handlers by cloning\n        const newBtn = buttonToUse.cloneNode(true);\n        if (buttonToUse.parentNode) {\n            buttonToUse.parentNode.replaceChild(newBtn, buttonToUse);\n        }\n\n        // Add the icon and text if needed (only for the regular preview button)\n        if (buttonToUse === previewButton && (!newBtn.innerHTML || newBtn.innerHTML.trim() === '')) {\n            newBtn.innerHTML = DOMUtils.getIconHtml('eye', { classes: 'me-2' }) + 'Preview';\n        }\n\n        // Add handler\n        newBtn.addEventListener('click', this.handlePreviewClick.bind(this));\n        Debug.log(`MergePreviewManager: ${buttonToUse === previewButton ? 'Preview' : 'Get merged result'} button handler set up`, null, 3);\n    }\n\n    /**\n     * Handle preview button click\n     * Generates preview content and shows in modal\n     */\n    handlePreviewClick() {\n        Debug.log('MergePreviewManager: Preview button clicked', null, 2);\n\n        // Get translation manager for loading message\n        const translationManager = TranslationManager.getInstance();\n        const loadingMessage = translationManager.get('loadingContent', 'Generating preview...');\n\n        // Show loading indicator\n        const loaderManager = LoaderManager.getInstance();\n        const loaderId = loaderManager.showLoader(loadingMessage, {\n            fullscreen: true,\n            zIndex: 1000 // Ensure it appears above other UI elements\n        });\n\n        try {\n            // Get the merged content from the content generator\n            const mergedContent = this.mergeHandler.getMergedContent();\n\n            // Get file extension from runtime properties instead of options\n            const fileToMerge = this.diffViewer.runtimeProps?.filepath || '';\n            const extension = fileToMerge.split('.').pop().toLowerCase();\n\n            // Format the content for preview with line numbers\n            const formattedContent = MergeContentFormatter.formatPreview(mergedContent, extension, true);\n\n            // Hide loading indicator now that content is ready\n            loaderManager.hideLoader(loaderId);\n\n            // Set the filename in the preview modal title using DOMUtils\n            DOMUtils.setContent(\n                Selectors.MODAL.PREVIEW_FILENAME.name(),\n                this.diffViewer.runtimeProps.filepath || 'merged-file'\n            );\n\n            // Use ModalManager to set content and open modal\n            this.modalManager.setContent(\n                Selectors.MODAL.PREVIEW.name(),\n                formattedContent,\n                Selectors.MODAL.PREVIEW_CONTENT_ID.name()\n            );\n\n            // Create controls container\n            const controlsContainer = document.createElement('div');\n            controlsContainer.classList.add(Selectors.UTILITY.FLEX.name(),\n                                           Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name(),\n                                           Selectors.UTILITY.MARGIN_TOP_2.name(),\n                                           Selectors.UTILITY.PADDING_2.name());\n\n            // Create message area\n            const messageArea = document.createElement('div');\n            messageArea.id = 'merge-preview-message';\n            messageArea.classList.add(Selectors.UTILITY.FLEX.name(),\n                                     Selectors.UTILITY.ALIGN_ITEMS_CENTER.name());\n            controlsContainer.appendChild(messageArea);\n\n            // Open the modal\n            this.modalManager.open(Selectors.MODAL.PREVIEW.name());\n\n            // Apply syntax highlighting if available\n            this.applySyntaxHighlighting();\n\n            // Add copy buttons to code blocks\n            CopyButton.addCopyButtonsToPreview(Selectors.MODAL.PREVIEW_CONTENT_ID.name());\n\n            Debug.log('MergePreviewManager: Preview opened successfully', null, 2);\n        } catch (error) {\n            // Hide loading indicator in case of error\n            loaderManager.hideLoader(loaderId);\n\n            Debug.error('MergePreviewManager: Error during preview:', error, 2);\n            this.showPreviewError(error);\n        }\n    }\n\n    /**\n     * Apply syntax highlighting to preview content\n     * Uses highlight.js if available\n     */\n    applySyntaxHighlighting() {\n        if (!window.hljs) {\n            Debug.log('MergePreviewManager: Highlight.js not available', null, 3);\n            return;\n        }\n\n        try {\n            // Use DOMUtils to get the preview element\n            const preElement = DOMUtils.getElement(Selectors.MODAL.PREVIEW_CONTENT_ID.name())?.querySelector('pre');\n            const codeElement = preElement?.querySelector('code');\n\n            if (!codeElement) {\n                Debug.warn('MergePreviewManager: No code element found for highlighting', null, 2);\n                return;\n            }\n\n            // Apply syntax highlighting\n            window.hljs.highlightElement(codeElement);\n\n            // Add line numbers if the pre element has the data-line-numbers attribute\n            if (preElement.getAttribute('data-line-numbers') === 'true' && window.hljs.lineNumbersBlock) {\n                window.hljs.lineNumbersBlock(codeElement);\n                Debug.log('MergePreviewManager: Line numbers added to preview', null, 3);\n            }\n\n            Debug.log('MergePreviewManager: Syntax highlighting applied', null, 3);\n        } catch (error) {\n            Debug.warn('MergePreviewManager: Error applying syntax highlighting:', error, 2);\n        }\n    }\n\n    /**\n     * Show error in preview modal\n     * @param {Error} error - Error object\n     */\n    showPreviewError(error) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        const escapedError = StringUtils.escapeHtml(errorMessage);\n\n        // First clear the modal content\n        this.modalManager.setContent(\n            Selectors.MODAL.PREVIEW.name(),\n            '',\n            Selectors.MODAL.PREVIEW_CONTENT_ID.name()\n        );\n\n        // Then use DOMUtils to show the message\n        DOMUtils.showMessage(\n            Selectors.MODAL.PREVIEW_CONTENT_ID.name(),\n            `<h4>Error Generating Preview</h4><p>${escapedError}</p>`,\n            'danger',\n            { className: '' } // No margin in modal\n        );\n\n        this.modalManager.open(Selectors.MODAL.PREVIEW.name());\n    }\n}\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\n\n/**\n * Navigation-related utility functions\n */\nexport class NavigationUtils {\n    /**\n     * Scroll element into view with smooth behavior\n     * @param {Element} element - Element to scroll to\n     * @param {Element} container - Scrollable container\n     * @returns {boolean} Success status\n     */\n    static scrollElementIntoView(element, container) {\n        if (!element || !container) {\n            Debug.warn('NavigationUtils: Missing element or container for scrolling', null, 2);\n            return false;\n        }\n\n        // Calculate the target scroll position (center element in container)\n        const elementTop = element.offsetTop;\n        const containerHeight = container.clientHeight;\n        const scrollTarget = elementTop - (containerHeight / 2) + (element.offsetHeight / 2);\n\n        // Apply scroll with smooth behavior\n        container.scrollTo({\n            top: scrollTarget,\n            behavior: 'smooth'\n        });\n\n        return true;\n    }\n\n    /**\n     * Add highlight effect to an element\n     * @param {Element} element - Element to highlight\n     * @param {number} duration - Duration in ms\n     */\n    static addHighlightEffect(element, duration = 2000) {\n        if (!element) return;\n\n        element.classList.add(Selectors.NAVIGATION.HIGHLIGHT.name());\n        setTimeout(() => {\n            element.classList.remove(Selectors.NAVIGATION.HIGHLIGHT.name());\n        }, duration);\n    }\n\n    /**\n     * Make an element draggable\n     * @param {Element} element - Element to make draggable\n     * @param {Object} options - Configuration options\n     * @returns {Object} Clean-up functions\n     */\n    static makeDraggable(element, options = {}) {\n        if (!element) return;\n\n        const defaults = {\n            handleSelector: null, // Selector for drag handle (null = entire element)\n            ignoreSelector: '.nav-button, .nav-counter', // Elements that shouldn't trigger drag\n            positionStyle: 'fixed', // 'fixed' or 'absolute'\n            dragClass: 'dragging', // Class to add while dragging\n        };\n\n        const config = {...defaults, ...options};\n        let isDragging = false;\n        let offsetX, offsetY;\n\n        // Mouse down handler\n        const mouseDownHandler = (e) => {\n            // Skip if clicking on ignored elements\n            if (config.ignoreSelector && e.target.matches(config.ignoreSelector)) {\n                return;\n            }\n\n            // Skip if using handle and not clicking on it\n            if (config.handleSelector && !e.target.matches(config.handleSelector)) {\n                return;\n            }\n\n            isDragging = true;\n            element.classList.add(config.dragClass);\n\n            // Calculate offsets differently depending on position style\n            const rect = element.getBoundingClientRect();\n            offsetX = rect.right - e.clientX;\n            offsetY = rect.bottom - e.clientY;\n\n            // Prevent text selection during drag\n            e.preventDefault();\n        };\n\n        // Mouse move handler\n        const mouseMoveHandler = (e) => {\n            if (!isDragging) return;\n\n            // Calculate new position from right and bottom edges\n            const containerRect = element.parentElement.getBoundingClientRect();\n            let newRight = containerRect.right - e.clientX - offsetX;\n            let newBottom = containerRect.bottom - e.clientY - offsetY;\n\n            // Ensure the element stays within the container\n            newRight = Math.max(0, Math.min(newRight, containerRect.width - element.offsetWidth));\n            newBottom = Math.max(0, Math.min(newBottom, containerRect.height - element.offsetHeight));\n\n            // Apply new position using right and bottom\n            element.style.right = `${newRight}px`;\n            element.style.bottom = `${newBottom}px`;\n            element.style.left = 'auto'; // Remove left positioning\n            element.style.top = 'auto'; // Remove top positioning\n        };\n\n        // Mouse up handler\n        const mouseUpHandler = () => {\n            if (isDragging) {\n                isDragging = false;\n                element.classList.remove(config.dragClass);\n            }\n        };\n\n        // Add event listeners\n        element.addEventListener('mousedown', mouseDownHandler);\n        document.addEventListener('mousemove', mouseMoveHandler);\n        document.addEventListener('mouseup', mouseUpHandler);\n\n        // Return clean-up function\n        return {\n            destroy: () => {\n                element.removeEventListener('mousedown', mouseDownHandler);\n                document.removeEventListener('mousemove', mouseMoveHandler);\n                document.removeEventListener('mouseup', mouseUpHandler);\n            }\n        };\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { MergeContentFormatter } from '../../utils/MergeContentFormatter';\nimport { NavigationUtils } from '../../utils/NavigationUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Controls merge UI elements and interactions\n */\nexport class MergeUIController {\n    /**\n     * Initialize UI controller\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n        this.modalManager = mergeHandler.modalManager;\n        this.translationManager = TranslationManager.getInstance();\n\n        // UI element references\n        this.mergeDestination = null;\n        this.mergeToggleBtn = null;\n        this.mergeToggleIcon = null;\n        this.mergeToggleText = null;\n    }\n\n    /**\n     * Initialize UI elements and event handlers\n     */\n    initialize() {\n        // Initialize merge destination toggle\n        this.initMergeDestinationToggle();\n\n        // Set up modal buttons\n        this.setupModalButtons();\n\n        // Set up apply merge button\n        this.setupApplyMergeButton();\n\n        Debug.log('MergeUIController: Initialized', null, 2);\n    }\n\n    /**\n     * Initialize merge destination toggle\n     */\n    initMergeDestinationToggle() {\n        // Get the necessary elements\n        this.mergeDestination = DOMUtils.getElement(Selectors.MERGE.DESTINATION_DROPDOWN);\n        this.mergeToggleBtn = DOMUtils.getElement(Selectors.MERGE.DESTINATION_TOGGLE);\n\n        // Get toggle icon and text by proper IDs, not using name()\n        this.mergeToggleIcon = document.getElementById('vdm-merge-controls__toggle-icon');\n        this.mergeToggleText = document.getElementById('vdm-merge-controls__toggle-text');\n\n        if (!this.mergeDestination || !this.mergeToggleBtn) {\n            Debug.warn('MergeUIController: Missing merge destination elements', null, 2);\n            return;\n        }\n\n        // Explicitly set type=\"button\" on toggle button to prevent form submission\n        if (this.mergeToggleBtn) {\n            this.mergeToggleBtn.setAttribute('type', 'button');\n        }\n\n        // ALWAYS populate the dropdown options regardless of current state\n        // This ensures configuration-based options are always used\n        Debug.log('MergeUIController: Populating merge destination options', null, 2);\n        this.populateMergeDestinations();\n\n        // Load saved preference or default to 'new'\n        const savedDestination = localStorage.getItem('preferredMergeDestination') || 'new';\n\n        // Ensure the value exists in the dropdown\n        let valueExists = false;\n        for (let i = 0; i < this.mergeDestination.options.length; i++) {\n            if (this.mergeDestination.options[i].value === savedDestination) {\n                valueExists = true;\n                break;\n            }\n        }\n\n        // Set the value if it exists, otherwise use the first option\n        if (valueExists) {\n            this.mergeDestination.value = savedDestination;\n        } else if (this.mergeDestination.options.length > 0) {\n            this.mergeDestination.selectedIndex = 0;\n        }\n\n        Debug.log(`MergeUIController: Initial merge destination set to ${this.mergeDestination.value}`, null, 2);\n\n        // Set up event handlers\n        this.setupMergeToggleEvents();\n\n        Debug.log('MergeUIController: Merge destination toggle initialized', null, 2);\n    }\n\n    /**\n     * Populate merge destination dropdown\n     */\n    populateMergeDestinations() {\n        // Get runtime properties\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Get diffData which contains file information\n        const diffData = runtimeProps.diffData || {};\n\n        // Get filenames from the appropriate sources using the new pattern (no server paths)\n        // Prefer new secure properties (newFileName, oldFileName) that only contain the filename\n        const newFileName = runtimeProps.newFileName || diffData.new?.filename || runtimeProps.filepath?.split('/').pop() || 'new-file';\n        const oldFileName = runtimeProps.oldFileName || diffData.old?.filename || 'old-file';\n\n        // Clean filenames - ensure we're only using the basename without any path components\n        const newFile = newFileName.split(/[\\/\\\\]/).pop();\n        const oldFile = oldFileName.split(/[\\/\\\\]/).pop();\n\n        Debug.log('MergeUIController: File names for merge destinations', {\n            newFileName,\n            oldFileName,\n            newFile,\n            oldFile\n        }, 3);\n\n        // Create merged filenames\n        const newFileWithoutExt = newFile.substring(0, newFile.lastIndexOf('.')) || newFile;\n        const oldFileWithoutExt = oldFile.substring(0, oldFile.lastIndexOf('.')) || oldFile;\n        const newFileExt = newFile.substring(newFile.lastIndexOf('.')) || '';\n        const oldFileExt = oldFile.substring(oldFile.lastIndexOf('.')) || '';\n\n        const newMergedFile = `${newFileWithoutExt}-merged${newFileExt}`;\n        const oldMergedFile = `${oldFileWithoutExt}-merged${oldFileExt}`;\n\n        // Get configuration for enabled save options\n        const config = this.diffViewer.getConfig();\n        const saveOptions = config?.saveOptions || {\n            saveToOriginal: true,\n            saveWithSuffix: true,\n            saveToOld: true,\n            saveToOldWithSuffix: true,\n            saveToBoth: true,\n            saveToBothWithSuffix: true\n        };\n\n        Debug.log('MergeUIController: Save options configuration', saveOptions, 3);\n\n        // IMPORTANT: Always clear ALL existing options to ensure we start fresh\n        while (this.mergeDestination.options.length > 0) {\n            this.mergeDestination.remove(0);\n        }\n\n        // Alternative method to clear options for cross-browser compatibility\n        this.mergeDestination.innerHTML = '';\n\n        Debug.log('MergeUIController: Cleared existing dropdown options', null, 3);\n\n        let optionCount = 0;\n\n        // Add options based on configuration\n        if (saveOptions.saveToOriginal) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new',\n                    'data-tooltip': this.translationManager.get('saveToOriginalTooltip', 'Replace the current file with merged content')\n                },\n                content: `${newFile} (new)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new-suffix',\n                    'data-tooltip': this.translationManager.get('saveWithSuffixTooltip', 'Save merged content as a new file with -merged suffix')\n                },\n                content: `${newMergedFile} (new)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToOld) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'old',\n                    'data-tooltip': this.translationManager.get('saveToOldTooltip', 'Replace the old file with merged content')\n                },\n                content: `${oldFile} (old)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToOldWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'old-suffix',\n                    'data-tooltip': this.translationManager.get('saveToOldWithSuffixTooltip', 'Save merged content as a new file with -merged suffix in old location')\n                },\n                content: `${oldMergedFile} (old)`\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToBoth) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'both',\n                    'data-tooltip': this.translationManager.get('saveToBothTooltip', 'Replace both old and new files with merged content')\n                },\n                content: this.translationManager.get('saveToBoth', 'Overwrite both files')\n            });\n            optionCount++;\n        }\n\n        if (saveOptions.saveToBothWithSuffix) {\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'both-suffix',\n                    'data-tooltip': this.translationManager.get('saveToBothWithSuffixTooltip', 'Save merged content as new files with -merged suffix in both locations')\n                },\n                content: this.translationManager.get('saveToBothWithSuffix', 'Save to both with suffix')\n            });\n            optionCount++;\n        }\n\n        // If no options were added (all disabled), add at least the default option\n        if (optionCount === 0) {\n            Debug.log('MergeUIController: No save options enabled, adding default option', null, 2);\n            DOMUtils.createAndAppendElement('option', this.mergeDestination, {\n                attributes: {\n                    value: 'new',\n                    'data-tooltip': this.translationManager.get('saveToOriginalTooltip', 'Replace the current file with merged content')\n                },\n                content: `${newFile} (new)`\n            });\n            optionCount = 1;\n        }\n\n        Debug.log(`MergeUIController: Populated merge destinations with ${optionCount} options`, null, 2);\n    }\n\n    /**\n     * Set up merge toggle button events\n     */\n    setupMergeToggleEvents() {\n        // Create event handlers\n        const toggleHandler = (event) => {\n            // Prevent default action and stop propagation\n            event.preventDefault();\n            event.stopPropagation();\n\n            // We need a better approach to open the dropdown - the current method doesn't work in all browsers\n            if (this.mergeDestination) {\n                // Instead of trying to simulate a click, make the dropdown visible\n                // First, directly focus the element to prepare it\n                this.mergeDestination.focus();\n\n                // If the browser supports it, use the showPicker method\n                if (typeof this.mergeDestination.showPicker === 'function') {\n                    try {\n                        this.mergeDestination.showPicker();\n                        Debug.log('MergeUIController: Opened dropdown using showPicker()', null, 3);\n                        return;\n                    } catch (e) {\n                        Debug.log('MergeUIController: showPicker() failed, trying alternative method', e, 2);\n                    }\n                }\n\n                // Alternative: Use a small delay and click to open\n                setTimeout(() => {\n                    try {\n                        // Create and dispatch a mouse event\n                        const clickEvent = new MouseEvent('mousedown', {\n                            bubbles: true,\n                            cancelable: true,\n                            view: window\n                        });\n                        this.mergeDestination.dispatchEvent(clickEvent);\n                    } catch (e) {\n                        Debug.log('MergeUIController: Failed to open dropdown with click event', e, 2);\n                    }\n                }, 10);\n\n                // If all else fails, make the select element very noticeable to prompt user interaction\n                this.mergeDestination.classList.add('vdm-dropdown-highlight');\n                setTimeout(() => {\n                    this.mergeDestination.classList.remove('vdm-dropdown-highlight');\n                }, 1000);\n            }\n\n            Debug.log('MergeUIController: Toggle button clicked, attempting to open dropdown', null, 3);\n        };\n\n        const changeHandler = () => {\n            // Update appearance and save preference\n            this.updateMergeToggle(this.mergeDestination.value);\n            localStorage.setItem('preferredMergeDestination', this.mergeDestination.value);\n\n            Debug.log(`MergeUIController: Selection changed to ${this.mergeDestination.value}`, null, 3);\n        };\n\n        // Remove any existing listeners using cloneNode\n        const newToggleBtn = this.mergeToggleBtn.cloneNode(true);\n        const newMergeDestination = this.mergeDestination.cloneNode(true);\n\n        // Replace elements - Add null checks to prevent errors when elements don't exist in DOM\n        if (this.mergeToggleBtn && this.mergeToggleBtn.parentNode) {\n            this.mergeToggleBtn.parentNode.replaceChild(newToggleBtn, this.mergeToggleBtn);\n        }\n\n        if (this.mergeDestination && this.mergeDestination.parentNode) {\n            this.mergeDestination.parentNode.replaceChild(newMergeDestination, this.mergeDestination);\n        }\n\n        // Update references\n        this.mergeToggleBtn = newToggleBtn;\n        this.mergeDestination = newMergeDestination;\n\n        // Add the icon and text elements if they're now missing\n        if (!this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-icon')) {\n            this.mergeToggleIcon = DOMUtils.createAndAppendElement('i', this.mergeToggleBtn, {\n                id: 'vdm-merge-controls__toggle-icon',\n            });\n            this.mergeToggleBtn.insertBefore(this.mergeToggleIcon, this.mergeToggleBtn.firstChild);\n        } else {\n            this.mergeToggleIcon = this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-icon');\n        }\n\n        if (!this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-text')) {\n            this.mergeToggleText = DOMUtils.createAndAppendElement('span', this.mergeToggleBtn, {\n                id: 'vdm-merge-controls__toggle-text'\n            });\n        } else {\n            this.mergeToggleText = this.mergeToggleBtn.querySelector('#vdm-merge-controls__toggle-text');\n        }\n\n        // Enhance dropdown appearance to make it more visible\n        this.mergeDestination.classList.add('vdm-dropdown-visible');\n        this.mergeDestination.style.cursor = 'pointer';\n\n        // Add a small down arrow icon to the toggle button to indicate it opens a dropdown\n        const dropdownIcon = document.createElement('span');\n        dropdownIcon.className = Selectors.UTILITY.MARGIN_START_2.name(); // Using the correct end start class\n        dropdownIcon.innerHTML = DOMUtils.getIconHtml('chevron-down', { width: 10, height: 10 });\n        this.mergeToggleBtn.appendChild(dropdownIcon);\n\n        // Add event listeners to both the toggle button and dropdown\n        this.mergeToggleBtn.addEventListener('click', toggleHandler);\n        this.mergeDestination.addEventListener('change', changeHandler);\n\n        // Make the dropdown more interactive and visible\n        this.mergeDestination.style.paddingRight = '1.5rem';\n        this.mergeDestination.style.appearance = 'menulist';\n        this.mergeDestination.style.cursor = 'pointer';\n\n        // Add tooltip to the dropdown\n        this.mergeDestination.title = 'Click to select where to save the merged content';\n\n        // Make the dropdown more easily clickable and indicate it's interactive\n        this.mergeDestination.addEventListener('mouseover', () => {\n            this.mergeDestination.style.borderColor = 'var(--vdm-primary, #0d6efd)';\n        });\n        this.mergeDestination.addEventListener('mouseout', () => {\n            this.mergeDestination.style.borderColor = 'var(--vdm-border-color, #495057)';\n        });\n\n        // Re-apply the toggle styling AFTER cloning\n        this.updateMergeToggle(this.mergeDestination.value);\n    }\n\n    /**\n     * Update merge toggle button appearance\n     */\n    updateMergeToggle(value) {\n        // Define color classes for different destination types\n        const newFileColorClass = 'vdm-text-primary'; // Purple for new file destinations\n        const oldFileColorClass = 'vdm-text-warning'; // Amber for old file destinations\n        const bothFilesColorClass = 'vdm-text-info';  // Turquoise for both files destinations\n\n        // Define button style classes that match the color theme\n        const newFileBtnClass = Selectors.UTILITY.BUTTON_PRIMARY.name(); // Purple button\n        const oldFileBtnClass = Selectors.UTILITY.BUTTON_WARNING.name(); // Amber button\n        const bothFilesBtnClass = Selectors.UTILITY.BUTTON_INFO.name();  // Turquoise button\n\n        // Create single SVG icon HTML for each destination state with appropriate color class\n        // Always use a single icon per destination type with color indicating the destination\n        let iconHtml = '';\n        let colorClass = '';\n        let buttonClass = '';\n\n        // Determine icon, color class, and button class based on destination type\n        switch (value) {\n            case 'new':\n            case 'new-suffix':\n                // New file destinations use file icon with primary color\n                iconHtml = 'file';\n                colorClass = newFileColorClass;\n                buttonClass = newFileBtnClass;\n                break;\n\n            case 'old':\n            case 'old-suffix':\n                // Old file destinations use file-lines icon with warning color\n                iconHtml = 'file-lines';\n                colorClass = oldFileColorClass;\n                buttonClass = oldFileBtnClass;\n                break;\n\n            case 'both':\n            case 'both-suffix':\n                // Both files destinations use file-copy icon with info color\n                iconHtml = 'file-copy';\n                colorClass = bothFilesColorClass;\n                buttonClass = bothFilesBtnClass;\n                break;\n\n            default:\n                // Default to new file icon with primary color\n                iconHtml = 'file';\n                colorClass = newFileColorClass;\n                buttonClass = newFileBtnClass;\n                break;\n        }\n\n        // Generate the icon HTML with proper classes\n        const iconClasses = `${Selectors.UTILITY.MARGIN_END_1.name()} ${colorClass}`;\n        this.mergeToggleIcon.innerHTML = DOMUtils.getIconHtml(iconHtml, { classes: iconClasses });\n\n        // Update the Apply Merge button style to match the destination\n        const applyButton = document.getElementById(Selectors.MERGE.BUTTON_APPLY.name());\n        if (applyButton) {\n            // Remove any existing button style classes\n            applyButton.classList.remove(\n                Selectors.UTILITY.BUTTON_PRIMARY.name(),\n                Selectors.UTILITY.BUTTON_WARNING.name(),\n                Selectors.UTILITY.BUTTON_INFO.name(),\n                Selectors.UTILITY.BUTTON_SUCCESS.name(),\n                Selectors.UTILITY.BUTTON_DANGER.name(),\n                Selectors.UTILITY.BUTTON_SECONDARY.name()\n            );\n\n            // Add the appropriate button style class\n            applyButton.classList.add(buttonClass);\n\n            Debug.log(`MergeUIController: Updated apply button style to ${buttonClass}`, null, 3);\n        }\n\n        // Update text content based on the destination value\n        switch (value) {\n            case 'new':\n                // Save to new file (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOriginal', 'Save to original');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOriginalTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new');\n                break;\n\n            case 'new-suffix':\n                // Save to new file with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveWithSuffix', 'Save with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new-suffix');\n                break;\n\n            case 'old':\n                // Save to old file (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOld', 'Save to old file');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOldTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'old');\n                break;\n\n            case 'old-suffix':\n                // Save to old file with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOldWithSuffix', 'Save to old with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOldWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'old-suffix');\n                break;\n\n            case 'both':\n                // Save to both files (overwrite)\n                this.mergeToggleText.textContent = this.translationManager.get('saveToBoth', 'Save to both files');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToBothTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'both');\n                break;\n\n            case 'both-suffix':\n                // Save to both files with suffix\n                this.mergeToggleText.textContent = this.translationManager.get('saveToBothWithSuffix', 'Save to both with suffix');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToBothWithSuffixTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'both-suffix');\n                break;\n\n            default:\n                // Default to 'new' if value is not recognized\n                this.mergeToggleText.textContent = this.translationManager.get('saveToOriginal', 'Save to original');\n                this.mergeToggleBtn.title = this.translationManager.get('saveToOriginalTooltip', '');\n                this.mergeToggleBtn.setAttribute('data-value', 'new');\n                break;\n        }\n\n        Debug.log(`MergeUIController: Toggle updated to ${value}`, null, 3);\n    }\n\n    /**\n     * Set up modal buttons\n     */\n    setupModalButtons() {\n        // Add a direct event listener to the document for clicks on modal buttons\n        document.addEventListener('click', (event) => {\n            // Handle continue merging button\n            if (event.target.closest && event.target.closest(`#${Selectors.MODAL.CONTINUE_BTN.name()}`)) {\n                Debug.log('MergeUIController: Continue merging button clicked via delegation', null, 2);\n                this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                // Also close the preview modal - use MODAL.PREVIEW instead of MERGE.PREVIEW_MODAL\n                const previewModalId = Selectors.MODAL.PREVIEW.name();\n                Debug.log(`MergeUIController: Also closing preview modal (ID: ${previewModalId})`, null, 1);\n                this.modalManager.close(previewModalId);\n\n                setTimeout(() => {\n                    this.highlightUnresolvedChunks();\n                }, 400);\n            }\n\n            // Handle merge anyway button\n            if (event.target.closest && event.target.closest(`#${Selectors.MODAL.MERGE_BTN.name()}`)) {\n                Debug.log('MergeUIController: Merge anyway button clicked via delegation', null, 2);\n                this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                this.mergeHandler.proceedWithMerge(this.getMergeType());\n            }\n        });\n\n        // For compatibility, still register the before-open callback as well\n        if (this.modalManager && typeof this.modalManager.registerBeforeOpenCallback === 'function') {\n            this.modalManager.registerBeforeOpenCallback(Selectors.MERGE.CONFLICT_MODAL.name(), () => {\n                // Log the presence of the buttons when the modal opens\n                const continueBtn = document.getElementById(Selectors.MODAL.CONTINUE_BTN.name());\n                const mergeBtn = document.getElementById(Selectors.MODAL.MERGE_BTN.name());\n\n                Debug.log(`MergeUIController: Modal opened, buttons present: continueBtn=${!!continueBtn}, mergeBtn=${!!mergeBtn}`, null, 2);\n\n                // Add direct click handlers (as a backup)\n                if (continueBtn) {\n                    continueBtn.onclick = () => {\n                        Debug.log('MergeUIController: Continue merging clicked via direct handler', null, 2);\n                        this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                        // Also close the preview modal - use MODAL.PREVIEW instead of MERGE.PREVIEW_MODAL\n                        const previewModalId = Selectors.MODAL.PREVIEW.name();\n                        Debug.log(`MergeUIController: Also closing preview modal (ID: ${previewModalId})`, null, 1);\n                        this.modalManager.close(previewModalId);\n\n                        setTimeout(() => {\n                            this.highlightUnresolvedChunks();\n                        }, 400);\n                        return false; // Prevent default\n                    };\n                }\n\n                if (mergeBtn) {\n                    mergeBtn.onclick = () => {\n                        Debug.log('MergeUIController: Merge anyway clicked via direct handler', null, 2);\n                        this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                        this.mergeHandler.proceedWithMerge(this.getMergeType());\n                        return false; // Prevent default\n                    };\n                }\n            });\n        }\n    }\n\n    /**\n     * Set up apply merge button\n     */\n    setupApplyMergeButton() {\n        // Get the Apply Merge button\n        const applyButton = document.getElementById(Selectors.MERGE.BUTTON_APPLY.name());\n        if (!applyButton) {\n            Debug.warn('MergeUIController: Apply merge button not found', null, 2);\n            return;\n        }\n\n        // Get the merge controls actions container\n        const mergeControlsActions = document.querySelector(Selectors.MERGE.CONTROLS_ACTIONS.toString());\n        if (!mergeControlsActions) {\n            Debug.warn('MergeUIController: Merge controls container not found', null, 2);\n            return;\n        }\n\n        // Get the merge destination dropdown and toggle button\n        const destinationDropdown = document.getElementById(Selectors.MERGE.DESTINATION_DROPDOWN.name());\n        const toggleButton = document.getElementById(Selectors.MERGE.DESTINATION_TOGGLE.name());\n\n        // Create a form element to wrap the merge controls\n        const form = document.createElement('form');\n        form.id = 'vdm-merge__form';\n        form.className = mergeControlsActions.className;\n        form.style.display = 'flex';\n        form.style.justifyContent = 'space-between';\n        form.style.width = '100%';\n\n        // Replace the merge controls actions container with the form\n        if (mergeControlsActions.parentNode) {\n            mergeControlsActions.parentNode.replaceChild(form, mergeControlsActions);\n\n            // Move all content from the original container to the form\n            while (mergeControlsActions.firstChild) {\n                form.appendChild(mergeControlsActions.firstChild);\n            }\n\n            // Make sure the dropdown is inside the form by checking if it exists but is outside\n            if (destinationDropdown && !form.contains(destinationDropdown)) {\n                const destinationContainer = document.querySelector('.vdm-merge-controls__destination');\n                if (destinationContainer) {\n                    form.insertBefore(destinationContainer, form.firstChild);\n                }\n            }\n\n            Debug.log('MergeUIController: Created form wrapper for merge controls', null, 2);\n        }\n\n        // Listen for form submission instead of button click\n        form.addEventListener('submit', (event) => {\n            event.preventDefault();\n            this.handleApplyMerge();\n            Debug.log('MergeUIController: Form submitted', null, 3);\n        });\n\n        // Important: Prevent the toggle button from submitting the form\n        if (toggleButton) {\n            toggleButton.type = 'button'; // Explicitly set type to 'button' to prevent form submission\n\n            // Add a click handler that stops propagation\n            toggleButton.addEventListener('click', (event) => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // The toggle logic is already in setupMergeToggleEvents\n                // This is just to prevent form submission\n                Debug.log('MergeUIController: Toggle button click intercepted to prevent form submission', null, 3);\n            });\n        }\n\n        // For backwards compatibility, also keep the button click handler\n        applyButton.addEventListener('click', (event) => {\n            event.preventDefault();\n            // Validate that the button is inside the form\n            if (applyButton.form) {\n                applyButton.form.dispatchEvent(new Event('submit'));\n            } else {\n                this.handleApplyMerge();\n            }\n            Debug.log('MergeUIController: Apply merge clicked', null, 3);\n        });\n    }\n\n    /**\n     * Handle the apply merge button click\n     */\n    handleApplyMerge() {\n        // Count unresolved conflicts\n        const unresolvedCount = this.countUnresolvedConflicts();\n\n        if (unresolvedCount > 0) {\n            this.showConflictModal(unresolvedCount);\n        } else {\n            // Check if we're in file-browser mode or not by checking for fileRefId\n            const runtimeProps = this.diffViewer.getRuntimeProps();\n            const fileRefId = runtimeProps.fileRefId || '';\n            const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n            // If neither fileRefId exists, we're in a non-file-browser mode\n            // (text-compare, url-compare, file-upload)\n            if (!fileRefId && !oldFileRefId) {\n                // Use 'clipboard' merge type for non-file-browser modes\n                Debug.log('MergeUIController: Using clipboard merge type for non-file-browser mode', null, 2);\n                this.mergeHandler.proceedWithMerge('clipboard');\n            } else {\n                // Use selected merge type for file-browser mode\n                Debug.log('MergeUIController: Using selected merge type for file-browser mode', null, 2);\n                this.mergeHandler.proceedWithMerge(this.getMergeType());\n            }\n        }\n    }\n\n    /**\n     * Count unresolved conflicts\n     * @returns {number} Number of unresolved conflicts\n     */\n    countUnresolvedConflicts() {\n        const conflictChunks = this.diffViewer.chunkManager.chunks.filter(c => c.conflict);\n        const selections = this.diffViewer.chunkManager.selections || {};\n        return conflictChunks.length - Object.keys(selections).length;\n    }\n\n    /**\n     * Show conflict resolution modal\n     * @param {number} unresolvedCount - Number of unresolved conflicts\n     */\n    showConflictModal(unresolvedCount) {\n        // Get translations from config\n        const translations = this.diffViewer.getConfig().translations || {};\n\n        // Set message about unresolved conflicts\n        const message = MergeContentFormatter.formatUnresolvedCount(unresolvedCount, translations);\n\n        // Open the conflict modal\n        this.modalManager.open(Selectors.MERGE.CONFLICT_MODAL.name());\n\n        // Set the message in the modal\n        setTimeout(() => {\n            DOMUtils.showMessage(Selectors.MODAL.MESSAGE.name(), message, 'warning', {\n                className: '' // No extra margin needed in modal\n            });\n            Debug.log('MergeUIController: Showing conflict modal with message', null, 2);\n        }, 50);\n\n        // Attach event handlers to buttons with a small delay to ensure the modal is fully rendered\n        setTimeout(() => {\n            const continueBtn = document.getElementById(Selectors.MODAL.CONTINUE_BTN.name());\n            const mergeBtn = document.getElementById(Selectors.MODAL.MERGE_BTN.name());\n\n            // Handle the Continue button\n            if (continueBtn) {\n                // Remove any existing handlers by cloning\n                const newContinueBtn = continueBtn.cloneNode(true);\n                continueBtn.parentNode.replaceChild(newContinueBtn, continueBtn);\n\n                // Add direct, simplified handler\n                newContinueBtn.addEventListener('click', () => {\n                    Debug.log('MergeUIController: Continue button clicked', null, 2);\n\n                    // First close the conflict modal\n                    this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n\n                    // Then close the preview modal\n                    const previewModalId = Selectors.MODAL.PREVIEW.name();\n                    Debug.log(`MergeUIController: Closing preview modal (ID: ${previewModalId})`, null, 2);\n                    this.modalManager.close(previewModalId);\n\n                    // Highlight any unresolved chunks after a delay\n                    setTimeout(() => {\n                        this.highlightUnresolvedChunks();\n                    }, 400);\n                });\n            }\n\n            // Handle the Merge Anyway button\n            if (mergeBtn) {\n                // Remove any existing handlers by cloning\n                const newMergeBtn = mergeBtn.cloneNode(true);\n                mergeBtn.parentNode.replaceChild(newMergeBtn, mergeBtn);\n\n                // Add direct, simplified handler\n                newMergeBtn.addEventListener('click', () => {\n                    Debug.log('MergeUIController: Merge anyway button clicked', null, 2);\n                    this.modalManager.close(Selectors.MERGE.CONFLICT_MODAL.name());\n                    this.mergeHandler.proceedWithMerge(this.getMergeType());\n                });\n            }\n        }, 50);\n    }\n\n    /**\n     * Get current merge type from UI\n     * @returns {string} Merge type ('original' or 'new')\n     */\n    getMergeType() {\n        return this.mergeDestination?.value || 'original';\n    }\n\n    /**\n     * Highlight unresolved chunks\n     * @returns {boolean} True if any chunk was highlighted\n     */\n    highlightUnresolvedChunks() {\n        Debug.log('MergeUIController: Finding first unresolved conflict', null, 2);\n\n        // Get all chunks and current selections\n        const chunks = this.diffViewer.chunkManager.chunks;\n        const selections = this.diffViewer.chunkManager.selections || {};\n\n        // Find the first unresolved chunk\n        for (const chunk of chunks) {\n            if (chunk.conflict && !selections[chunk.id]) {\n                // Use DiffNavigator to navigate to this chunk\n                const chunkIndex = chunks.indexOf(chunk);\n                if (this.diffViewer.diffNavigator) {\n                    // First navigate to the chunk\n                    this.diffViewer.diffNavigator.navigateToChunk(chunkIndex);\n\n                    // Then highlight the chunk element using imported NavigationUtils\n                    const chunkElement = document.querySelector(`[data-chunk-id=\"${chunk.id}\"]`);\n                    if (chunkElement) {\n                        NavigationUtils.addHighlightEffect(chunkElement, 4000);\n                    }\n\n                    Debug.log(`MergeUIController: Highlighted unresolved chunk ${chunk.id}`, null, 2);\n                    return true;\n                }\n            }\n        }\n\n        Debug.log('MergeUIController: No unresolved conflicts found', null, 2);\n        return false;\n    }\n\n    /**\n     * Setup local-only controls when server save is disabled\n     * This creates a simplified UI with just the \"Get merged result\" button\n     */\n    setupLocalOnlyControls() {\n        Debug.log('MergeUIController: Setting up local-only controls (server save disabled)', null, 2);\n\n        // Get translations using the TranslationManager\n        Debug.log('MergeUIController: Getting translations for local-only controls', this.translationManager, 2);\n        const getMergedResultText = this.translationManager.get('getMergedResult', 'Get Merged Result');\n        const getMergedResultTooltip = this.translationManager.get('getMergedResultTooltip', 'View and download the merged content');\n\n        // Find the merge controls container\n        const mergeControlsActions = document.querySelector(Selectors.MERGE.CONTROLS_ACTIONS.toString());\n\n        if (!mergeControlsActions) {\n            Debug.error('MergeUIController: Could not find merge controls container', null, 1);\n            return;\n        }\n\n        // Clear any existing content from the container to ensure we only have our button\n        mergeControlsActions.innerHTML = '';\n\n        // Create the \"Get merged result\" button\n        const getMergedResultBtn = document.createElement('button');\n        getMergedResultBtn.id = Selectors.MERGE.GET_MERGED_RESULT_BTN.name();\n        getMergedResultBtn.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()}`;\n        getMergedResultBtn.title = getMergedResultTooltip;\n\n        // Add download icon and text using the proper icon system\n        const downloadIconHtml = DOMUtils.getIconHtml('download', { classes: Selectors.UTILITY.MARGIN_END_1.name() });\n        getMergedResultBtn.innerHTML = `${downloadIconHtml} ${getMergedResultText}`;\n\n        // Add to container (align to right)\n        const buttonContainer = document.createElement('div');\n        buttonContainer.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} w-100`;\n        buttonContainer.style.width = '100%';\n\n        // Add a spacer on the left to push the button to the right\n        const spacer = document.createElement('div');\n        spacer.style.flex = '1';\n\n        buttonContainer.appendChild(spacer);\n        buttonContainer.appendChild(getMergedResultBtn);\n        mergeControlsActions.appendChild(buttonContainer);\n\n        // Add event handler to show the preview content when clicked\n        getMergedResultBtn.addEventListener('click', (event) => {\n            event.preventDefault();\n\n            // Use 'clipboard' merge type for non-file-browser modes\n            this.mergeHandler.proceedWithMerge('clipboard');\n\n            Debug.log('MergeUIController: Get merged result button clicked (using clipboard merge type)', null, 2);\n        });\n\n        Debug.log('MergeUIController: Local-only controls setup complete', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport AlertManager from '../../utils/AlertManager';\n\n/**\n * Handles merge operation actions\n */\nexport class MergeOperationHandler {\n    /**\n     * @param {MergeHandler} mergeHandler - Parent merge handler\n     */\n    constructor(mergeHandler) {\n        this.mergeHandler = mergeHandler;\n        this.diffViewer = mergeHandler.diffViewer;\n    }\n\n    /**\n     * Proceed with merge operation - this is the main entry point called from MergeHandler\n     * @param {string} mergeType - Type of merge ('new', 'new-suffix', etc.)\n     * @returns {Promise<Object>} Result object with success status\n     */\n    async proceedWithMerge(mergeType) {\n        Debug.log('MergeOperationHandler: Proceeding with merge', { mergeType }, 2);\n\n        // Get runtime properties to check context\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n        const fileRefId = runtimeProps.fileRefId || '';\n        const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n        // If mergeType requires file references but we don't have them,\n        // automatically switch to clipboard mode\n        if ((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (no fileRefId available)', null, 2);\n            mergeType = 'clipboard';\n        } else if ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (no oldFileRefId available)', null, 2);\n            mergeType = 'clipboard';\n        } else if ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId)) {\n            Debug.log('MergeOperationHandler: Switching to clipboard mode (missing file reference IDs)', null, 2);\n            mergeType = 'clipboard';\n        }\n\n        // Get translation manager for loading message\n        const translationManager = TranslationManager.getInstance();\n        const loadingMessage = translationManager.get('loadingContent', 'Processing merge...');\n\n        // Show loading indicator\n        const loaderManager = LoaderManager.getInstance();\n        const loaderId = loaderManager.showLoader(loadingMessage, {\n            fullscreen: true,\n            zIndex: 1000 // Ensure it appears above other UI elements\n        });\n\n        try {\n            // Generate merged content\n            const mergedContent = this.diffViewer.chunkManager.generateMergedContent();\n\n            // Apply the merge - skip server calls for clipboard type (text-compare, url-compare, file-upload)\n            let result;\n            if (mergeType === 'clipboard') {\n                // For clipboard type, we don't need to save on server, just return success\n                result = {\n                    success: true,\n                    message: translationManager.get('mergeSuccessClipboard', 'Merge completed successfully. The merged content is ready.')\n                };\n            } else {\n                // For file-browser mode, apply the merge on server\n                result = await this.applyMerge(mergedContent, mergeType);\n            }\n\n            // Hide loading indicator\n            loaderManager.hideLoader(loaderId);\n\n            // Show result message\n            if (result.success) {\n                // Get the result container and show success message\n                const resultContainer = document.getElementById('vdm-merge__result');\n                if (resultContainer) {\n                    resultContainer.innerHTML = '';\n                    resultContainer.classList.remove('vdm-d-none');\n\n                    // Use AlertManager to show success message\n                    const alertManager = AlertManager.getInstance();\n                    const alertElement = alertManager.showSuccess(result.message, {\n                        timeout: 0, // Don't auto-dismiss\n                        translate: false // Message is already translated\n                    });\n\n                    resultContainer.appendChild(alertElement);\n\n                    // Scroll to the result container\n                    this.scrollToMergeResult();\n                }\n            } else {\n                // Show error message\n                const resultContainer = document.getElementById('vdm-merge__result');\n                if (resultContainer) {\n                    resultContainer.innerHTML = '';\n                    resultContainer.classList.remove('vdm-d-none');\n\n                    // Use AlertManager to show error message\n                    const alertManager = AlertManager.getInstance();\n                    const alertElement = alertManager.showError(result.message || 'An error occurred during the merge operation.', {\n                        timeout: 0, // Don't auto-dismiss\n                        translate: false // Message is already translated\n                    });\n\n                    resultContainer.appendChild(alertElement);\n\n                    // Scroll to the result container\n                    this.scrollToMergeResult();\n                }\n            }\n\n            return result;\n        } catch (error) {\n            // Hide loading indicator in case of error\n            loaderManager.hideLoader(loaderId);\n\n            Debug.error('MergeOperationHandler: Error in merge operation', error, 1);\n\n            // Show error message in UI\n            const resultContainer = document.getElementById('vdm-merge__result');\n            if (resultContainer) {\n                resultContainer.innerHTML = '';\n                resultContainer.classList.remove('vdm-d-none');\n\n                // Use AlertManager to show error message\n                const alertManager = AlertManager.getInstance();\n                const errorMessage = `Error: ${error.message || 'An unexpected error occurred during merge.'}`;\n                const alertElement = alertManager.showError(errorMessage, {\n                    timeout: 0, // Don't auto-dismiss\n                    translate: false // Error message doesn't need translation\n                });\n\n                resultContainer.appendChild(alertElement);\n            }\n\n            return {\n                success: false,\n                message: error.message || 'An unexpected error occurred during merge'\n            };\n        }\n    }\n\n    /**\n     * Apply merged content to file\n     * @param {string} mergedContent - Merged content\n     * @param {string} mergeType - Merge type (new, new-suffix, old, old-suffix, both, both-suffix)\n     * @returns {Promise<Object>} Result object with success status\n     */\n    async applyMerge(mergedContent, mergeType) {\n        // Get the runtime properties - using only fileRefId, not server paths\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n\n        // Get only the file reference IDs - security improvement\n        const fileRefId = runtimeProps.fileRefId || '';\n        const oldFileRefId = runtimeProps.oldFileRefId || '';\n\n        Debug.log('MergeOperationHandler: File references for merge operation', {\n            fileRefId,\n            oldFileRefId,\n            mergeType\n        }, 2);\n\n        // If no file references are available, automatically fall back to clipboard mode\n        if (((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) ||\n            ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) ||\n            ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId))) {\n\n            Debug.log('MergeOperationHandler: Switching to clipboard mode in applyMerge (missing file references)', null, 2);\n            return {\n                success: true,\n                message: TranslationManager.getInstance().get('mergeSuccessClipboard', 'Merge completed successfully. The merged content is ready.')\n            };\n        }\n\n        // Rest of original validation kept for safety\n        if ((mergeType === 'new' || mergeType === 'new-suffix') && !fileRefId) {\n            Debug.error('MergeOperationHandler: No file reference ID available for new file', null, 1);\n            return {\n                success: false,\n                message: 'No file reference ID available to save changes to new file'\n            };\n        } else if ((mergeType === 'old' || mergeType === 'old-suffix') && !oldFileRefId) {\n            Debug.error('MergeOperationHandler: No file reference ID available for old file', null, 1);\n            return {\n                success: false,\n                message: 'No file reference ID available to save changes to old file'\n            };\n        } else if ((mergeType === 'both' || mergeType === 'both-suffix') && (!fileRefId || !oldFileRefId)) {\n            Debug.error('MergeOperationHandler: Missing file reference IDs for both files', null, 1);\n            return {\n                success: false,\n                message: 'Missing file reference IDs to save changes to both files'\n            };\n        }\n\n        // Get selections and beautification status\n        const selections = JSON.stringify(this.diffViewer.chunkManager.selections);\n        const wasBeautified = this.diffViewer.isContentBeautified() ? 1 : 0;\n\n        try {\n            // SECURITY: Only use fileRefId - never pass server paths\n            const formParams = {\n                action: 'registerMergedContent',\n                content: mergedContent,\n                selections,\n                mergeType,\n                wasBeautified\n            };\n\n            // Add appropriate file reference IDs based on merge type\n            if (mergeType === 'new' || mergeType === 'new-suffix' || mergeType === 'both' || mergeType === 'both-suffix') {\n                formParams.fileRefId = fileRefId;\n            }\n\n            if (mergeType === 'old' || mergeType === 'old-suffix' || mergeType === 'both' || mergeType === 'both-suffix') {\n                formParams.oldFileRefId = oldFileRefId;\n            }\n\n            Debug.log('MergeOperationHandler: Form parameters for save request', formParams, 2);\n\n            // Get API endpoint\n            const endpoint = await this.diffViewer.getEndpoint('ajaxDiffMerge');\n            Debug.log('MergeOperationHandler: Using endpoint', { endpoint }, 2);\n\n            // Send the request\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams(formParams)\n            });\n\n            // Parse response\n            const result = await response.json();\n            Debug.log('MergeOperationHandler: API response', result, 2);\n\n            return result;\n        } catch (error) {\n            Debug.error(\"MergeOperationHandler: Error applying merge:\", error, 1);\n            return {\n                success: false,\n                message: `Error applying merge: ${error.message}`\n            };\n        }\n    }\n\n    /**\n     * Scroll to the merge result container\n     */\n    scrollToMergeResult() {\n        const resultElement = document.getElementById('vdm-merge__result');\n        if (resultElement) {\n            // Scroll the element into view with smooth behavior\n            resultElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            });\n\n            Debug.log('MergeOperationHandler: Scrolled to merge result', null, 2);\n        }\n    }\n}\n","// MergeHandler.js - Handles merging of selected lines\nimport { Debug } from '../utils/Debug';\nimport AlertManager from '../utils/AlertManager';\n\nimport { MergePreviewManager } from './merge/MergePreviewManager';\nimport { MergeUIController } from './merge/MergeUIController';\nimport { MergeOperationHandler } from './merge/MergeOperationHandler';\n\n\n/**\n * Main coordinator for merge operations\n */\nexport class MergeHandler {\n    /**\n     * Initialize merge handler\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n\n        // Use the shared modalManager instance\n        this.modalManager = this.diffViewer.modalManager;\n\n        // Create subcomponents using composition\n        this.previewManager = new MergePreviewManager(this);\n        this.uiController = new MergeUIController(this);\n        this.operationHandler = new MergeOperationHandler(this);\n\n        // Initialize components\n        this.initialize();\n\n        Debug.log('MergeHandler: Component initialized', null, 2);\n    }\n\n    /**\n     * Initialize all subcomponents\n     */\n    initialize() {\n        // Check if we should use server or local controls\n        const runtimeProps = this.diffViewer.getRuntimeProps();\n        const serverSaveEnabled = runtimeProps && runtimeProps.serverSaveEnabled;\n\n        Debug.log(`MergeHandler: Initializing with serverSaveEnabled=${serverSaveEnabled}`, null, 2);\n\n        // Initialize UI controller first\n        this.uiController.initialize();\n\n        // If server save is disabled, set up local-only controls\n        if (serverSaveEnabled === false) {\n            Debug.log('MergeHandler: Server save is disabled, using local-only controls', null, 2);\n            this.uiController.setupLocalOnlyControls();\n        }\n\n        // Then initialize preview manager\n        this.previewManager.initialize();\n\n        Debug.log('MergeHandler: All subcomponents initialized', null, 2);\n    }\n\n    /**\n     * Preview the merged file\n     * Delegates to preview manager\n     */\n    previewMerge() {\n        this.previewManager.handlePreviewClick();\n    }\n\n    /**\n     * Generate merged content based on selections\n     * @returns {string} Merged content\n     */\n    getMergedContent() {\n        return this.diffViewer.chunkManager.generateMergedContent();\n    }\n\n    /**\n     * Proceed with merge operation\n     * Delegates to operation handler\n     * @param {string} mergeType - Type of merge ('original' or 'new')\n     * @returns {Promise} Promise resolving when merge completes\n     */\n    proceedWithMerge(mergeType) {\n        return this.operationHandler.proceedWithMerge(mergeType);\n    }\n\n    /**\n     * Count unresolved conflicts\n     * Delegates to UI controller\n     * @returns {number} Number of unresolved conflicts\n     */\n    countUnresolvedConflicts() {\n        return this.uiController.countUnresolvedConflicts();\n    }\n\n    /**\n     * Show conflict resolution modal\n     * Delegates to UI controller\n     * @param {number} unresolvedCount - Number of unresolved conflicts\n     */\n    showConflictModal(unresolvedCount) {\n        this.uiController.showConflictModal(unresolvedCount);\n    }\n\n    /**\n     * Highlight unresolved chunks\n     * Delegates to UI controller\n     */\n    highlightUnresolvedChunks() {\n        return this.uiController.highlightUnresolvedChunks();\n    }\n\n    /**\n     * Create alert element with proper BEM classes\n     * @param {boolean} resolved - Whether the conflict is resolved\n     * @param {string} success_message - Success message to display\n     * @param {string} message - Warning message to display\n     * @returns {HTMLElement} Alert element\n     */\n    createAlertElement(resolved, success_message, message) {\n        const alertManager = AlertManager.getInstance();\n\n        if (resolved) {\n            return alertManager.showSuccess(success_message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        } else {\n            return alertManager.showWarning(message, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false // Message is already provided\n            });\n        }\n    }\n}\n","\n/**\n * Manages navigation counter display and state\n */\nexport class NavigationCounter {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n        this.counterElement = null;\n        this.prevButton = null;\n        this.nextButton = null;\n    }\n\n    /**\n     * Set counter element reference\n     * @param {Element} element - Counter element\n     */\n    setCounterElement(element) {\n        this.counterElement = element;\n    }\n\n    /**\n     * Set navigation button references\n     * @param {Element} prevButton - Previous button\n     * @param {Element} nextButton - Next button\n     */\n    setButtons(prevButton, nextButton) {\n        this.prevButton = prevButton;\n        this.nextButton = nextButton;\n    }\n\n    /**\n     * Update counter display\n     * @returns {Array} Active conflicts for navigation\n     */\n    updateCounter() {\n        if (!this.counterElement) return [];\n\n        const chunks = this.navigator.diffViewer.chunkManager.chunks;\n        const selections = this.navigator.diffViewer.chunkManager.selections;\n        let conflictCount = 0;\n        let currentIndex = 0;\n        let activeConflicts = [];\n\n        // Count only unresolved conflicts\n        chunks.forEach((chunk, index) => {\n            if (chunk.conflict && !selections[chunk.id]) {\n                // This is an unresolved conflict - no selection made yet\n                activeConflicts.push(index);\n                conflictCount++;\n            }\n        });\n\n        // Find current position in active conflicts\n        if (this.navigator.currentChunkIndex >= 0) {\n            const position = activeConflicts.findIndex(index => index >= this.navigator.currentChunkIndex);\n            if (position !== -1) {\n                currentIndex = position + 1; // 1-based index for display\n            }\n        }\n\n        // Update counter text with different symbol when complete\n        if (conflictCount === 0) {\n            // All conflicts resolved! Show a checkmark\n            this.counterElement.textContent = '✓';\n            this.counterElement.title = 'All conflicts resolved!';\n        } else {\n            this.counterElement.textContent = `${currentIndex || 1}/${conflictCount}`;\n            this.counterElement.title = `${conflictCount} conflicts remaining`;\n        }\n\n        // Enable/disable buttons based on conflict count\n        if (this.prevButton && this.nextButton) {\n            this.prevButton.disabled = conflictCount === 0;\n            this.nextButton.disabled = conflictCount === 0;\n        }\n\n        return activeConflicts;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Builds navigation UI elements\n */\nexport class NavigationUIBuilder {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n    }\n\n    /**\n     * Create navigation UI elements\n     * @returns {Object|null} Object with counter, prev button, and next button elements\n     */\n    createNavigationUI() {\n        Debug.log('NavigationUIBuilder: Creating navigation UI', null, 2);\n\n        // Find container element - first look for an existing one\n        let container = document.querySelector(Selectors.NAVIGATION.CONTAINER);\n\n        // If no container found, create one\n        if (!container) {\n            Debug.log('NavigationUIBuilder: No navigation container found, creating one', null, 2);\n\n            // Get the diff pane contents as parent reference\n            const panes = document.querySelectorAll(Selectors.DIFF.PANE);\n            if (!panes || panes.length === 0) {\n                Debug.warn('NavigationUIBuilder: No diff panes found to append navigation container');\n                return null;\n            }\n\n            // Create container\n            container = document.createElement('div');\n            container.className = Selectors.NAVIGATION.CONTAINER.name();\n\n            // Build controls inside the container\n            this._createControls(container);\n\n            // Append after the first pane\n            if (panes[0].parentNode) {\n                panes[0].parentNode.insertBefore(container, panes[0]);\n            }\n        } else {\n            // Use existing container, but update its contents\n            Debug.log('NavigationUIBuilder: Using existing navigation container', null, 2);\n            container.innerHTML = '';\n            this._createControls(container);\n        }\n\n        // Return references to the elements\n        return {\n            counter: document.getElementById(Selectors.NAVIGATION.COUNTER.name()),\n            prevButton: document.getElementById(Selectors.NAVIGATION.PREV_BUTTON.name()),\n            nextButton: document.getElementById(Selectors.NAVIGATION.NEXT_BUTTON.name())\n        };\n    }\n\n    /**\n     * Create navigation controls\n     * @private\n     * @param {Element} container - Container element\n     */\n    _createControls (container) {\n        // Create nav chunk element\n        const navChunk = document.createElement('div');\n        navChunk.className = Selectors.NAVIGATION.NAV_CHUNK.name();\n\n        // Create counter element\n        const counter = document.createElement('span');\n        counter.id = Selectors.NAVIGATION.COUNTER.name();\n        counter.className = Selectors.NAVIGATION.COUNTER_ELEMENT.name();\n\n        // Create previous button\n        const prevButton = document.createElement('button');\n        prevButton.id = Selectors.NAVIGATION.PREV_BUTTON.name();\n        prevButton.classList.add(\n            Selectors.UTILITY.BUTTON.name(),\n            Selectors.UTILITY.BUTTON_FLAT.name(),\n            Selectors.UTILITY.BUTTON_SMALL.name()\n        );\n        prevButton.innerHTML = DOMUtils.getIconHtml('chevron-up');\n        prevButton.title = 'Previous change';\n        prevButton.addEventListener('click', () => this.navigator.navigateToPrevConflict());\n\n        // Create next button\n        const nextButton = document.createElement('button');\n        nextButton.id = Selectors.NAVIGATION.NEXT_BUTTON.name();\n        nextButton.classList.add(\n            Selectors.UTILITY.BUTTON.name(),\n            Selectors.UTILITY.BUTTON_FLAT.name(),\n            Selectors.UTILITY.BUTTON_SMALL.name()\n        );\n        nextButton.innerHTML = DOMUtils.getIconHtml('chevron-down');\n        nextButton.title = 'Next change';\n        nextButton.addEventListener('click', () => this.navigator.navigateToNextConflict());\n\n        // Add elements to navChunk\n        navChunk.appendChild(prevButton);\n        navChunk.appendChild(counter);\n        navChunk.appendChild(nextButton);\n\n        // Add navChunk to container\n        container.appendChild(navChunk);\n\n        Debug.log('NavigationUIBuilder: Navigation controls created', null, 2);\n    }\n\n    /**\n     * Clean up event handlers\n     */\n    destroy() {\n        // Find navigation buttons\n        const prevButton = document.getElementById(Selectors.NAVIGATION.PREV_BUTTON.name());\n        const nextButton = document.getElementById(Selectors.NAVIGATION.NEXT_BUTTON.name());\n\n        // Remove event listeners by cloning\n        if (prevButton) {\n            const newPrevButton = prevButton.cloneNode(true);\n            prevButton.parentNode.replaceChild(newPrevButton, prevButton);\n        }\n\n        if (nextButton) {\n            const newNextButton = nextButton.cloneNode(true);\n            nextButton.parentNode.replaceChild(newNextButton, nextButton);\n        }\n\n        Debug.log('NavigationUIBuilder: Event handlers removed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { NavigationUtils } from '../../utils/NavigationUtils';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Handles navigation between conflicts\n */\nexport class ConflictNavigator {\n    /**\n     * @param {DiffNavigator} navigator - Parent navigator component\n     */\n    constructor(navigator) {\n        this.navigator = navigator;\n        this.diffViewer = navigator.diffViewer;\n    }\n\n    /**\n     * Find all unresolved chunk IDs in the document\n     * @returns {Object} Object containing unresolvedChunkIds and total count\n     */\n    _getUnresolvedChunkInfo() {\n        // Find elements with unresolved status\n        const unresolvedElements = Array.from(document.querySelectorAll(\n            `[data-chunk-id]:not([data-chunk-id=\"\"])`\n        )).filter(el => el.classList.contains(Selectors.STATUS.UNRESOLVED.name()));\n\n        if (unresolvedElements.length === 0) {\n            Debug.log('ConflictNavigator: No unresolved elements found', null, 2);\n            return { unresolvedChunkIds: [], count: 0 };\n        }\n\n        // Get a unique list of chunk IDs that have unresolved status\n        const unresolvedChunkIds = [...new Set(\n            unresolvedElements.map(el => el.getAttribute('data-chunk-id'))\n        )];\n\n        Debug.log(`ConflictNavigator: Found ${unresolvedChunkIds.length} unresolved chunks`, null, 3);\n\n        return { unresolvedChunkIds, count: unresolvedChunkIds.length };\n    }\n\n    /**\n     * Navigate to first conflict\n     */\n    navigateToFirstConflict() {\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        // Find the first chunk with this ID\n        const chunks = this.diffViewer.chunkManager.chunks;\n        const firstUnresolvedIndex = chunks.findIndex(chunk =>\n            unresolvedChunkIds.includes(String(chunk.id))\n        );\n\n        if (firstUnresolvedIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to first unresolved chunk at index ${firstUnresolvedIndex}`, null, 2);\n            return this.navigator.navigateToChunk(firstUnresolvedIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Navigate to next conflict\n     */\n    navigateToNextConflict() {\n        const currentIndex = this.navigator.currentChunkIndex;\n        Debug.log(`ConflictNavigator: Current chunk index is ${currentIndex}`, null, 3);\n\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        const chunks = this.diffViewer.chunkManager.chunks;\n\n        // Find next chunk or wrap around\n        const nextIndex = this._findNextChunkIndex(chunks, unresolvedChunkIds, currentIndex);\n\n        if (nextIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to next unresolved chunk at index ${nextIndex}`, null, 2);\n            return this.navigator.navigateToChunk(nextIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Find the next chunk index from a starting point\n     * @private\n     */\n    _findNextChunkIndex(chunks, unresolvedChunkIds, currentIndex) {\n        const indexMap = this._createChunkIndexMap(chunks, unresolvedChunkIds);\n\n        // No matching chunks\n        if (indexMap.size === 0) {\n            return -1;\n        }\n\n        // Get all indices in the map\n        const indices = Array.from(indexMap.values()).sort((a, b) => a - b);\n\n        // Find the next index after currentIndex\n        for (const index of indices) {\n            if (index > currentIndex) {\n                return index;\n            }\n        }\n\n        // Wrap around to beginning\n        return indices[0];\n    }\n\n    /**\n     * Navigate to previous conflict\n     */\n    navigateToPrevConflict() {\n        const currentIndex = this.navigator.currentChunkIndex;\n\n        const { unresolvedChunkIds, count } = this._getUnresolvedChunkInfo();\n\n        if (count === 0) {\n            Debug.log('ConflictNavigator: No unresolved chunks found', null, 2);\n            return false;\n        }\n\n        const chunks = this.diffViewer.chunkManager.chunks;\n\n        // Find previous chunk or wrap around\n        const prevIndex = this._findPrevChunkIndex(chunks, unresolvedChunkIds, currentIndex);\n\n        if (prevIndex >= 0) {\n            Debug.log(`ConflictNavigator: Navigating to previous unresolved chunk at index ${prevIndex}`, null, 2);\n            return this.navigator.navigateToChunk(prevIndex);\n        }\n\n        Debug.log('ConflictNavigator: No matching chunk found', null, 2);\n        return false;\n    }\n\n    /**\n     * Find the previous chunk index from a starting point\n     * @private\n     */\n    _findPrevChunkIndex(chunks, unresolvedChunkIds, currentIndex) {\n        const indexMap = this._createChunkIndexMap(chunks, unresolvedChunkIds);\n\n        // No matching chunks\n        if (indexMap.size === 0) {\n            return -1;\n        }\n\n        // Get all indices in the map\n        const indices = Array.from(indexMap.values()).sort((a, b) => a - b);\n\n        // Find the previous index before currentIndex\n        for (let i = indices.length - 1; i >= 0; i--) {\n            if (indices[i] < currentIndex) {\n                return indices[i];\n            }\n        }\n\n        // Wrap around to end\n        return indices[indices.length - 1];\n    }\n\n    /**\n     * Create a map of chunk IDs to their indices for fast lookup\n     * @private\n     */\n    _createChunkIndexMap(chunks, unresolvedChunkIds) {\n        const indexMap = new Map();\n\n        chunks.forEach((chunk, index) => {\n            // Only include chunks that are unresolved\n            if (chunk && chunk.id && unresolvedChunkIds.includes(String(chunk.id))) {\n                indexMap.set(String(chunk.id), index);\n            }\n        });\n\n        return indexMap;\n    }\n\n    /**\n     * Navigate to specific chunk\n     * @param {number} index - Chunk index\n     * @returns {boolean} Success status\n     */\n    navigateToChunk(index) {\n        // Set current chunk\n        this.navigator.currentChunkIndex = index;\n\n        // Get the chunk element\n        const chunkElement = this.diffViewer.chunkManager.chunkElements[index];\n\n        // Scroll to it\n        if (chunkElement) {\n            Debug.log(`ConflictNavigator: Navigating to chunk ${index}`, null, 2);\n\n            // Find the diff-pane-content containing this element\n            const paneContent = chunkElement.closest(Selectors.DIFF.PANE_CONTENT);\n            if (paneContent) {\n                // Use utility to scroll element into view\n                NavigationUtils.scrollElementIntoView(chunkElement, paneContent);\n\n                // Add highlight effect\n                NavigationUtils.addHighlightEffect(chunkElement, 2000);\n            } else {\n                Debug.warn(`ConflictNavigator: Cannot navigate - chunk ${index} parent not found`, null, 2);\n                return false;\n            }\n        } else {\n            Debug.warn(`ConflictNavigator: Cannot scroll - chunk ${index} not found`, null, 2);\n            return false;\n        }\n\n        // Update counter\n        this.navigator.navigationCounter.updateCounter();\n        Debug.log('ConflictNavigator: Navigation complete', null, 2);\n\n        return true;\n    }\n}\n","import { Debug } from '../utils/Debug';\n\nimport { NavigationCounter } from './navigator/NavigationCounter';\nimport { NavigationUIBuilder } from './navigator/NavigationUIBuilder';\nimport { ConflictNavigator } from './navigator/ConflictNavigator';\n\n/**\n * DiffNavigator handles navigation between conflicting chunks\n */\nexport class DiffNavigator {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer component\n     * @param {boolean} initializeImmediately - Whether to initialize navigation immediately\n     */\n    constructor(diffViewer, initializeImmediately = true) {\n        this.diffViewer = diffViewer;\n        this.currentChunkIndex = -1;\n\n        // Validate that the diffViewer has a valid configuration\n        if (!this.diffViewer || !this.diffViewer.chunkManager) {\n            Debug.error('DiffNavigator: Failed to initialize - diffViewer or chunkManager is missing', null, 1);\n            return;\n        }\n\n        // Create subcomponents\n        this.navigationCounter = new NavigationCounter(this);\n        this.uiBuilder = new NavigationUIBuilder(this);\n        this.conflictNavigator = new ConflictNavigator(this);\n\n        // Initialize navigation only if requested\n        if (initializeImmediately) {\n            this.initNavigation();\n        }\n\n        Debug.log('DiffNavigator: Component created', null, 2);\n    }\n\n    /**\n     * Initialize navigation\n     */\n    initNavigation() {\n        Debug.log('DiffNavigator: Initializing', null, 2);\n\n        // Validate that we have chunks before proceeding\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: No diff chunks found in configuration', {\n                configChunks: this.diffViewer.chunkManager.chunks,\n                diffConfig: this.diffViewer.diffConfig\n            }, 1);\n\n            // Add navigation UI anyway for better UX, but disable buttons\n            this.addNavigationButtons(true);\n            return;\n        }\n\n        // Add navigation UI\n        this.addNavigationButtons();\n\n        // Add keyboard shortcuts\n        this.setupKeyboardShortcuts();\n\n        // Navigate to first conflict if any\n        this.navigateToFirstConflict();\n\n        Debug.log('DiffNavigator: Initialized with chunk navigation',\n            { chunks: this.diffViewer.chunkManager.chunks?.length || 0 }, 2);\n    }\n\n    /**\n     * Add navigation buttons to the interface\n     * @param {boolean} disableButtons - Whether to disable navigation buttons\n     */\n    addNavigationButtons(disableButtons = false) {\n        // Create UI elements\n        const ui = this.uiBuilder.createNavigationUI();\n\n        if (!ui) return;\n\n        // Save references to counter and buttons\n        this.navigationCounter.setCounterElement(ui.counter);\n        this.navigationCounter.setButtons(ui.prevButton, ui.nextButton);\n\n        // Disable buttons if requested\n        if (disableButtons) {\n            ui.prevButton.disabled = true;\n            ui.nextButton.disabled = true;\n            ui.counter.textContent = 'No diff data';\n        } else {\n            // Update counter with current count\n            this.updateCounter();\n        }\n    }\n\n    /**\n     * Set up keyboard shortcuts for navigation\n     */\n    setupKeyboardShortcuts() {\n        document.addEventListener('keydown', (event) => {\n            // Only handle if not in input or textarea\n            if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {\n                return;\n            }\n\n            // Check for navigation keys\n            switch (event.key) {\n                case 'ArrowDown':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToNextConflict();\n                    }\n                    break;\n\n                case 'ArrowUp':\n                    if (event.ctrlKey || event.metaKey) {\n                        event.preventDefault();\n                        this.navigateToPrevConflict();\n                    }\n                    break;\n            }\n        });\n    }\n\n    /**\n     * Update navigation counter\n     * @returns {Array} Active conflicts\n     */\n    updateCounter() {\n        return this.navigationCounter.updateCounter();\n    }\n\n    /**\n     * Navigate to the first conflict\n     */\n    navigateToFirstConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToFirstConflict();\n    }\n\n    /**\n     * Navigate to the next conflict\n     */\n    navigateToNextConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToNextConflict();\n    }\n\n    /**\n     * Navigate to the previous conflict\n     */\n    navigateToPrevConflict() {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToPrevConflict();\n    }\n\n    /**\n     * Navigate to a specific chunk\n     * @param {number} index - Chunk index\n     * @returns {boolean} Success status\n     */\n    navigateToChunk(index) {\n        // Verify chunks exist before attempting navigation\n        if (!this.diffViewer.chunkManager.chunks || this.diffViewer.chunkManager.chunks.length === 0) {\n            Debug.warn('DiffNavigator: Cannot navigate - no chunks available', null, 2);\n            return false;\n        }\n\n        return this.conflictNavigator.navigateToChunk(index);\n    }\n\n    /**\n     * Destroy component and clean up event handlers\n     */\n    destroy() {\n        this.uiBuilder.destroy();\n        Debug.log('DiffNavigator: Destroyed', null, 2);\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Handles scroll synchronization between panes\n */\nexport class ScrollSynchronizer {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.isSyncing = false;\n    }\n\n    /**\n     * Set up synchronized scrolling between panes\n     */\n    setupSynchronizedScrolling() {\n        // Find panes\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        if (panes.length !== 2) {\n            Debug.log(`ScrollSynchronizer: Could not find both diff panes. Found: ${panes.length}`, null, 2);\n            return;\n        }\n\n        const leftPane = panes[0];\n        const rightPane = panes[1];\n\n        // Get content elements\n        const leftContent = leftPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        const rightContent = rightPane.querySelector(Selectors.DIFF.PANE_CONTENT);\n\n        if (!leftContent || !rightContent) {\n            Debug.log('ScrollSynchronizer: Could not find all required scrolling elements', null, 2);\n            return;\n        }\n\n        // Store references\n        this.leftContent = leftContent;\n        this.rightContent = rightContent;\n\n        // Sync both vertical AND horizontal scrolling between panes\n        leftContent.addEventListener('scroll', () => this._handleScroll(leftContent, rightContent), { passive: true });\n        rightContent.addEventListener('scroll', () => this._handleScroll(rightContent, leftContent), { passive: true });\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this._updateScrollState(leftContent);\n            this._updateScrollState(rightContent);\n        });\n\n        Debug.log('ScrollSynchronizer: Horizontal and vertical scroll synchronization set up', null, 2);\n    }\n\n    /**\n     * Handle scroll events\n     * @private\n     */\n    _handleScroll(sourceElement, targetElement) {\n        // Only update if not already syncing to avoid loops\n        if (!this.isSyncing) {\n            this.isSyncing = true;\n\n            // Sync vertical scrolling (top position)\n            targetElement.scrollTop = sourceElement.scrollTop;\n\n            // IMPORTANT: Also sync horizontal scrolling\n            targetElement.scrollLeft = sourceElement.scrollLeft;\n\n            this._updateScrollState(sourceElement);\n\n            // Reset syncing flag after a short delay\n            setTimeout(() => {\n                this.isSyncing = false;\n            }, 10);\n        }\n    }\n\n    /**\n     * Update CSS class based on scroll state\n     * @private\n     */\n    _updateScrollState(contentElement) {\n        const wasScrolled = contentElement.classList.contains(Selectors.STATUS.SCROLLED.name());\n        const isScrolled = contentElement.scrollLeft > 0;\n\n        // Only update if the state changed\n        if (wasScrolled !== isScrolled) {\n            if (isScrolled) {\n                contentElement.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                contentElement.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\n\n/**\n * Manages icon marker creation and positioning\n */\nexport class IconMarkerManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n    }\n\n    /**\n     * Initialize icon markers with proper scroll synchronization\n     */\n    initializeIconMarkers() {\n        // Measure actual cell height for accurate positioning\n        const cellHeight = this._calculateCellHeight();\n        document.documentElement.style.setProperty('--cell-height', `${cellHeight}px`);\n\n        // Process each diff pane\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n\n        panes.forEach(pane => {\n            this._setupIconColumn(pane);\n        });\n\n        // Use a dedicated method to handle all height updates\n        this._updateIconColumnHeights();\n\n        // Set up future height updates for window resizing\n        this._setupIconHeightUpdater();\n    }\n\n    /**\n     * Set up icon column for a pane\n     * @private\n     */\n    _setupIconColumn(pane) {\n        // Get the content container (scrollable area)\n        const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n        if (!content) return;\n\n        // Get code table wrapper to match height\n        const codeTableWrapper = content.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n        if (!codeTableWrapper) {\n            Debug.warn('IconMarkerManager: Code table wrapper not found', null, 2);\n            return;\n        }\n\n        // Create or get icon column\n        let iconColumn = pane.querySelector(`:scope > ${Selectors.ICONS.COLUMN}`);\n        if (!iconColumn) {\n            iconColumn = document.createElement('div');\n            iconColumn.className = Selectors.ICONS.COLUMN.name();\n            pane.appendChild(iconColumn);\n        }\n\n        // Get all cells with chunk IDs\n        const chunkCells = content.querySelectorAll(\n            `${Selectors.DIFF.LINE_CONTENT}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_PLACEHOLDER}[data-chunk-id]:not([data-chunk-id=\"\"]), ` +\n            `${Selectors.DIFF.LINE_CONTENT_EMPTY}[data-chunk-id]:not([data-chunk-id=\"\"])`\n        );\n\n        // Organize cells by chunk ID\n        const chunkGroups = {};\n        chunkCells.forEach(cell => {\n            const chunkId = cell.dataset.chunkId;\n            if (!chunkGroups[chunkId]) {\n                chunkGroups[chunkId] = [];\n            }\n            chunkGroups[chunkId].push(cell);\n        });\n\n        // Process only the first cell of each chunk\n        Object.keys(chunkGroups).forEach(chunkId => {\n            // Sort by line number\n            chunkGroups[chunkId].sort((a, b) => {\n                const aLineNum = parseInt(a.dataset.lineId.split('-').pop(), 10);\n                const bLineNum = parseInt(b.dataset.lineId.split('-').pop(), 10);\n                return aLineNum - bLineNum;\n            });\n\n            // Get the first cell in the sorted group\n            const firstCell = chunkGroups[chunkId][0];\n\n            if (firstCell) {\n                this._createIconMarker(firstCell, iconColumn);\n            }\n        });\n\n        // Store table height for later use\n        if (codeTableWrapper) {\n            const tableHeight = codeTableWrapper.scrollHeight;\n            pane.dataset.tableHeight = tableHeight;\n        }\n\n        // Set up scroll synchronization\n        content.addEventListener('scroll', () => {\n            // Sync vertical scroll position with requestAnimationFrame\n            requestAnimationFrame(() => {\n                iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n            });\n\n            // Handle horizontal scroll state\n            if (content.scrollLeft > 0) {\n                pane.classList.add(Selectors.STATUS.SCROLLED.name());\n            } else {\n                pane.classList.remove(Selectors.STATUS.SCROLLED.name());\n            }\n        }, { passive: true });\n\n        // Initial position\n        iconColumn.style.transform = `translateY(-${content.scrollTop}px)`;\n    }\n\n    /**\n     * Create a single icon marker for a cell\n     * @private\n     */\n    _createIconMarker(cell, iconColumn) {\n        const lineId = cell.dataset.lineId;\n        if (!lineId) return;\n\n        // Check if marker already exists\n        let marker = iconColumn.querySelector(`${Selectors.ICONS.MARKER}[data-line-id=\"${lineId}\"]`);\n\n        // Create new marker only if it doesn't exist\n        if (!marker) {\n            marker = document.createElement('div');\n            marker.className = Selectors.ICONS.MARKER.name();\n\n            // Add class for placeholder lines\n            if (cell.classList.contains(Selectors.DIFF.LINE_PLACEHOLDER.name())) {\n                marker.classList.add(Selectors.ICONS.MARKER_PLACEHOLDER.name());\n            }\n\n            // Use line ID for matching\n            marker.dataset.lineId = lineId;\n\n            // Set position index\n            const lineNumber = lineId.split('-').pop();\n            marker.dataset.iconIndex = lineNumber;\n            marker.style.setProperty('--icon-index', lineNumber);\n\n            // DO NOT transfer selection state classes - they will be managed by ChunkVisualStateManager\n            // Selection state and placeholder status are orthogonal concepts and should be managed separately\n\n            // Add to icon column\n            iconColumn.appendChild(marker);\n        }\n    }\n\n    /**\n     * Calculate cell height with maximum precision\n     * @private\n     * @returns {number} Precise cell height in pixels\n     */\n    _calculateCellHeight() {\n        // Get multiple line number cells for better accuracy\n        const lineNumberCells = this.diffViewer.container.querySelectorAll(Selectors.CODE.LINE_NUMBER);\n\n        if (!lineNumberCells || lineNumberCells.length === 0) {\n            Debug.log('IconMarkerManager: No line number cells found, using default height', null, 2);\n            return 20.5; // Fallback height\n        }\n\n        // Take the median height from first few cells (more reliable than just the first)\n        const heights = [];\n        const sampleSize = Math.min(5, lineNumberCells.length);\n\n        for (let i = 0; i < sampleSize; i++) {\n            heights.push(lineNumberCells[i].getBoundingClientRect().height);\n        }\n\n        // Sort heights and take the median (middle) value\n        heights.sort((a, b) => a - b);\n        const medianHeight = heights[Math.floor(heights.length / 2)];\n\n        Debug.log(`IconMarkerManager: Sampled heights: ${heights.join(', ')}, using median: ${medianHeight}px`, null, 3);\n\n        return medianHeight;\n    }\n\n    /**\n     * Set up height updater for window resizing\n     * @private\n     */\n    _setupIconHeightUpdater() {\n        // Debounce to avoid excessive updates\n        let resizeTimer;\n\n        // Add window resize listener\n        window.addEventListener('resize', () => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(() => {\n                this._updateIconColumnHeights();\n            }, 100);\n        });\n\n        // Initial update\n        this._updateIconColumnHeights();\n    }\n\n    /**\n     * Update all icon column heights\n     * @private\n     */\n    _updateIconColumnHeights() {\n        const panes = this.diffViewer.container.querySelectorAll(Selectors.DIFF.PANE);\n        const heights = {}; // Track heights for logging\n\n        panes.forEach(pane => {\n            const content = pane.querySelector(Selectors.DIFF.PANE_CONTENT);\n            const iconColumn = pane.querySelector(Selectors.ICONS.COLUMN);\n            const codeTableWrapper = content?.querySelector(Selectors.DIFF.TABLE_WRAPPER);\n\n            if (iconColumn && codeTableWrapper) {\n                const tableHeight = codeTableWrapper.scrollHeight;\n                const currentHeight = parseInt(iconColumn.style.height) || 0;\n\n                // Only update if height changed significantly\n                if (Math.abs(currentHeight - tableHeight) > 5) {\n                    iconColumn.style.height = `${tableHeight}px`;\n                    heights[pane.dataset.side || 'pane'] = tableHeight;\n                }\n            }\n        });\n\n        // Log all height updates in one message\n        if (Object.keys(heights).length > 0) {\n            Debug.log('IconMarkerManager: Updated icon column heights:', heights, 3);\n        }\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport Selectors from '../../constants/Selectors'; // Add this import\n\n/**\n * Manages layout dimensions and responsive behavior\n */\nexport class LayoutManager {\n    /**\n     * @param {DiffViewer} diffViewer - Parent diff viewer\n     */\n    constructor(diffViewer) {\n        this.diffViewer = diffViewer;\n        this.paneWidth = 0;\n    }\n\n    /**\n     * Initialize layout manager\n     */\n    initialize() {\n        // Initial pane width update\n        this.updatePaneWidth();\n\n        // Listen for window resize\n        window.addEventListener('resize', () => {\n            this.updatePaneWidth();\n        });\n\n        // Set up mutation observer for content changes\n        this.setupWidthObserver();\n\n        Debug.log('LayoutManager: Initialized', null, 2);\n    }\n\n    /**\n     * Update pane width and CSS variables\n     */\n    updatePaneWidth() {\n        // Use DOMUtils.getElements for consistent element selection\n        const panes = DOMUtils.getElements(Selectors.DIFF.PANE, this.diffViewer.container);\n        if (!panes || panes.length === 0) return;\n\n        const pane = panes[0];\n        const newWidth = pane.clientWidth;\n\n        if (newWidth !== this.paneWidth) {\n            this.paneWidth = newWidth;\n\n            // Instead of direct DOM manipulation, use a helper method to set CSS variables\n            this.setCSSVariable('--diff-pane-width', `${this.paneWidth}px`);\n\n            Debug.log(`LayoutManager: Updated pane width: ${this.paneWidth}px`, null, 3);\n        }\n    }\n\n    /**\n     * Set CSS variable consistently\n     * @param {string} name - Variable name\n     * @param {string} value - Variable value\n     */\n    setCSSVariable(name, value) {\n        document.documentElement.style.setProperty(name, value);\n    }\n\n    /**\n     * Set up observer for content changes affecting width\n     */\n    setupWidthObserver() {\n        // Create mutation observer\n        const observer = new MutationObserver((mutations) => {\n            let shouldUpdate = false;\n\n            for (const mutation of mutations) {\n                if (mutation.type === 'childList' ||\n                    (mutation.type === 'attributes' &&\n                     (mutation.attributeName === 'style' || mutation.attributeName === 'class'))) {\n                    shouldUpdate = true;\n                    break;\n                }\n            }\n\n            if (shouldUpdate) {\n                this.updatePaneWidth();\n            }\n        });\n\n        // Start observing the container\n        observer.observe(this.diffViewer.container, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: ['style', 'class']\n        });\n\n        // Store for potential cleanup\n        this.observer = observer;\n\n        Debug.log('LayoutManager: Width observer setup complete', null, 2);\n    }\n\n    /**\n     * Clean up event handlers and observers\n     */\n    destroy() {\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = null;\n        }\n\n        Debug.log('LayoutManager: Destroyed', null, 2);\n    }\n}\n","import { Debug } from '../utils/Debug';\nimport { ResourceLoader } from '../utils/ResourceLoader';\nimport { DOMUtils } from '../utils/DOMUtils';\nimport { ConfigUtils } from '../utils/ConfigUtils';\nimport { EndpointDiscovery } from '../utils/EndpointDiscovery';\nimport { TranslationManager } from '../utils/TranslationManager';\nimport Selectors from '../constants/Selectors';\n\nimport { ThemeManager } from './ThemeManager';\nimport { ThemeSelector } from './ThemeSelector';\nimport { SyntaxHighlighter } from './SyntaxHighlighter';\nimport { ChunkManager } from './ChunkManager';\nimport { ThemeToggle } from './ThemeToggle';\nimport { MergeHandler } from './MergeHandler';\nimport { DiffNavigator } from './DiffNavigator';\nimport { ScrollSynchronizer } from './viewer/ScrollSynchronizer';\nimport { IconMarkerManager } from './viewer/IconMarkerManager';\nimport { LayoutManager } from './viewer/LayoutManager';\nimport { ModalManager } from './modal/ModalManager';\n\n/**\n * Main diff viewer component\n */\nexport class DiffViewer {\n    /**\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        // Default configuration matching PHP javascript section structure\n        const defaultOptions = {\n            // Basic configuration\n            lang: 'en',\n            debug: false,\n            logLevel: 2,\n\n            // Theme settings\n            theme: {\n                defaultFamily: 'atom-one',\n                defaultMode: 'dark',\n                showSelector: true\n            },\n\n            // API endpoint\n            apiEndpoint: null\n\n            // We've removed default translations from here as they'll be handled by TranslationManager\n        };\n\n        // Merge options in priority order\n        // Configuration comes from: defaults < window.diffConfig < constructor options\n        this.config = ConfigUtils.mergeConfigurations(defaultOptions, window.diffConfig || {}, options);\n\n        // Create separate internal runtime properties\n        this.runtimeProps = {\n            diffData: options.diffData || window.diffConfig?.diffData || null,\n            serverSaveEnabled: options.serverSaveEnabled || window.diffConfig?.serverSaveEnabled || false,\n            // SECURITY: Remove server paths and use only secure fileRefIds\n            fileRefId: options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            // Keep safe filename properties (not paths)\n            newFileName: options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: options.filepath || window.diffConfig?.filepath || null,\n            demoEnabled: options.demoEnabled || window.diffConfig?.demoEnabled || false\n        };\n\n        // Store the main loader ID if provided from window.enableDiffViewer\n        this.mainLoaderId = options.mainLoaderId || null;\n\n        // Set debug values early\n        Debug.initialize(this.config.debug, '[DiffViewer]', this.config.logLevel || 2);\n\n        // Initialize TranslationManager with the translations from the config\n        const translationManager = TranslationManager.getInstance();\n        if (!translationManager.isInitialized() && this.config.translations) {\n            Debug.log('DiffViewer: Initializing TranslationManager', {\n                lang: this.config.lang || 'en',\n                translations: this.config.translations\n            }, 2);\n            translationManager.initialize(this.config.lang || 'en', this.config.translations);\n        } else {\n            Debug.log('DiffViewer: TranslationManager already initialized', null, 2);\n        }\n\n        // Get container element - now always using Selectors.DIFF.VIEWER\n        this.container = document.querySelector(Selectors.DIFF.VIEWER);\n\n        if (!this.container) {\n            Debug.error('DiffViewer: Container element not found', null, 2);\n            throw new Error('Container element not found');\n        }\n\n        // Verify diff data\n        if (!this.runtimeProps.diffData) {\n            Debug.error('DiffViewer: No diff data provided', null, 2);\n            throw new Error('No diff data provided');\n        }\n\n        Debug.log('DiffViewer: Initializing component', null, 2);\n\n        // Initialize services (singletons)\n        this._initializeServices();\n\n        // Create components\n        this._createComponents();\n\n        Debug.log('DiffViewer: Component created', null, 2);\n    }\n\n    /**\n     * Initialize service singletons\n     * @private\n     */\n    _initializeServices() {\n        // Get service singletons\n        this.resourceLoader = ResourceLoader.getInstance();\n        this.themeManager = ThemeManager.getInstance();\n        this.themeSelector = ThemeSelector.getInstance(this);\n        this.modalManager = ModalManager.getInstance({\n            debug: this.config.debug,\n            translations: this.config.translations\n        });\n\n        // Initialize ThemeManager with config and ResourceLoader\n        this.themeManager.initialize({\n            theme: this.config.theme\n        }, this.resourceLoader);\n    }\n\n    /**\n     * Create component instances\n     * @private\n     */\n    _createComponents() {\n        // Create core components\n        this.syntaxHighlighter = new SyntaxHighlighter(this);\n        this.chunkManager = new ChunkManager(this);\n\n        // Create UI components - pass browserUIManager to ThemeToggle if available\n        this.themeToggle = new ThemeToggle(\n            this.browserUIManager,\n            Selectors.THEME.TOGGLE.name(),\n            Selectors.CONTAINER.WRAPPER.name()\n        );\n        this.mergeHandler = new MergeHandler(this);\n\n        // Create DiffNavigator but don't initialize it yet - it will be initialized after chunks are loaded\n        this.diffNavigator = new DiffNavigator(this, false);\n\n        // Create layout components\n        this.scrollSynchronizer = new ScrollSynchronizer(this);\n        this.iconMarkerManager = new IconMarkerManager(this);\n        this.layoutManager = new LayoutManager(this);\n    }\n\n    /**\n     * Initialize the diff viewer and render content\n     */\n    async initialize() {\n        Debug.log('DiffViewer: Beginning initialization', null, 2);\n\n        try {\n            // PHASE 1: DATA INITIALIZATION\n            await this._initializeData();\n\n            // PHASE 2: RESOURCE LOADING\n            await this._loadResources();\n\n            // PHASE 3: UI RENDERING\n            await this._renderUI();\n\n            // PHASE 4: UI ENHANCEMENT\n            await this._setupUIFeatures();\n\n            // Display demo mode warning if enabled\n            if (this.runtimeProps.demoEnabled) {\n                this._showDemoModeWarning();\n            }\n\n            // Initialize ModalManager early\n            this.modalManager.initModals();\n\n            Debug.log('DiffViewer: Initialization complete', null, 2);\n            return true;\n        } catch (error) {\n            Debug.error('DiffViewer: Error during initialization:', error, 2);\n            this._handleInitializationError(error);\n            throw error;\n        }\n    }\n\n    /**\n     * Handle initialization error\n     * @private\n     */\n    _handleInitializationError(error) {\n        Debug.error('DiffViewer: Error handling initialization failure', error, 2);\n\n        // Get translation manager for error display\n        const translationManager = TranslationManager.getInstance();\n        const errorText = translationManager.get('errorLoadingDiff') || 'Error Loading Diff Viewer';\n\n        // Display error message in container\n        const errorMessage = document.createElement('div');\n        errorMessage.className = `${Selectors.UTILITY.ALERT_DANGER.name()} vdm-m-3`;\n        errorMessage.innerHTML = `\n            <h4>${errorText}</h4>\n            <p>${error.message || 'An unexpected error occurred.'}</p>\n        `;\n\n        // Add error to container\n        if (this.container) {\n            // Keep existing content, just append the error\n            this.container.appendChild(errorMessage);\n\n            // Make sure container is visible\n            this.container.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Initialize data structures\n     * @private\n     */\n    async _initializeData() {\n        // Initialize chunks from diff data\n        this.chunkManager.initChunks(this.runtimeProps.diffData);\n\n        Debug.log(`DiffViewer: Loaded ${this.runtimeProps.diffData.chunks?.length || 0} chunks and content arrays: old=${this.runtimeProps.diffData.old?.length || 0}, new=${this.runtimeProps.diffData.new?.length || 0}`, null, 2);\n    }\n\n    /**\n     * Load required resources\n     * @private\n     */\n    async _loadResources() {\n        // Load syntax highlighter if not already loaded\n        if (!this.syntaxHighlighter.highlightJsLoaded) {\n            await this.syntaxHighlighter.initialize();\n            await this.syntaxHighlighter.loadHighlightJs();\n        }\n\n        // Load theme through ThemeManager\n        const currentTheme = this.themeManager.getCurrentTheme();\n        await this.themeManager.applyTheme(currentTheme.family, currentTheme.mode);\n    }\n\n    /**\n     * Render UI components\n     * @private\n     */\n    async _renderUI() {\n        // Make sure container is visible\n        if (this.container) {\n            this.container.style.display = 'flex';\n        }\n\n        // Render the diff chunks\n        Debug.log(`DiffViewer: Rendering ${this.runtimeProps.diffData.chunks?.length || 0} chunks`, null, 2);\n        this.chunkManager.renderChunks();\n\n        // Apply syntax highlighting\n        this.syntaxHighlighter.highlightAll(this.container);\n\n        // Initialize theme based on preference\n        this.themeToggle.initialize();\n\n        // Initialize theme selector if enabled\n        if (this.config.theme.showSelector) {\n            this.themeSelector.initialize();\n        }\n\n        // Mark container as loaded using DOMUtils\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', true);\n\n        // Show the content wrapper if needed\n        const containerWrapper = document.querySelector(Selectors.CONTAINER.WRAPPER);\n        if (containerWrapper?.classList.contains('vdm-d-none')) {\n            containerWrapper.classList.remove('vdm-d-none');\n        }\n\n        // Fix theme switcher position - move it above the diff container\n        const themeSwitcher = document.querySelector(Selectors.THEME.SWITCHER);\n        const diffContainer = document.querySelector(Selectors.DIFF.CONTAINER);\n        diffContainer?.parentNode?.insertBefore?.(themeSwitcher, diffContainer);\n        if (themeSwitcher && diffContainer) {\n            Debug.log('DiffViewer: Repositioned theme switcher above diff container', null, 2);\n        }\n    }\n\n    /**\n     * Set up UI features and enhancements\n     * @private\n     */\n    async _setupUIFeatures() {\n        // Set up scroll synchronization\n        this.scrollSynchronizer.setupSynchronizedScrolling();\n\n        // Initialize layout manager\n        this.layoutManager.initialize();\n\n        // Set up icon markers\n        this.iconMarkerManager.initializeIconMarkers();\n\n        // Initialize the DiffNavigator AFTER chunks are loaded and rendered\n        if (this.diffNavigator) {\n            Debug.log('DiffViewer: Initializing navigation with loaded chunks', null, 2);\n            this.diffNavigator.initNavigation();\n        }\n\n        // Dispatch a custom event to notify that the diff viewer has finished loading\n        // This allows other components to know when the diff viewer is ready\n        const diffLoadedEvent = new CustomEvent('vdm-diff-loaded', {\n            detail: {\n                timestamp: new Date(),\n                viewer: this\n            }\n        });\n        document.dispatchEvent(diffLoadedEvent);\n        Debug.log('DiffViewer: Dispatched vdm-diff-loaded event', null, 2);\n\n        Debug.log('DiffViewer: UI features and enhancements set up', null, 2);\n    }\n\n    /**\n     * Display a warning message for demo mode\n     * @private\n     */\n    _showDemoModeWarning() {\n        Debug.log('DiffViewer: Showing demo mode warning', null, 2);\n\n        // Use the AlertManager to show the warning\n        const AlertManager = window.AlertManager || (this.browserUIManager?.AlertManager);\n\n        if (AlertManager) {\n            const alertManager = AlertManager.getInstance();\n\n            // Find the form element to place the alert before\n            const comparisonForm = document.querySelector('#vdm-file-comparison-form');\n\n            // Show warning about demo mode\n            alertManager.showAlert(\n                `<strong>Demo Mode Active</strong> - Merging is disabled on this server and will be simulated.\n                To use the file browser with actual file modifications, please install Visual Diff Merge on your own server.`,\n                'warning',\n                {\n                    dismissable: true,\n                    className: 'vdm-mb-3',\n                    translate: false, // Disable translation\n                    targetElement: comparisonForm, // Place before the form\n                    placement: 'before',\n                    timeout: 0 // Prevent auto-dismiss\n                }\n            );\n\n            Debug.log('DiffViewer: Demo mode warning displayed via AlertManager', null, 2);\n        }\n    }\n\n    /**\n     * Updates configuration with new values\n     * @param {Object} newConfig - New configuration values to apply\n     */\n    updateConfig(newConfig) {\n        if (!newConfig) return;\n\n        // Merge new config with current config\n        this.config = ConfigUtils.mergeConfigurations(this.config, newConfig);\n\n        Debug.log('DiffViewer: Configuration updated', newConfig, 3);\n    }\n\n    /**\n     * Updates runtime properties\n     * @param {Object} props - New runtime properties to apply\n     */\n    updateRuntimeProps(props) {\n        if (!props) return;\n\n        // Merge new runtime properties with current ones\n        this.runtimeProps = {...this.runtimeProps, ...props};\n\n        Debug.log('DiffViewer: Runtime properties updated', props, 3);\n    }\n\n    /**\n     * Get the current configuration\n     * @returns {Object} Current configuration\n     */\n    getConfig() {\n        return {...this.config};\n    }\n\n    /**\n     * Get the current runtime properties\n     * @returns {Object} Current runtime properties\n     */\n    getRuntimeProps() {\n        // DEBUG: Add logging to identify when this method is called and what it returns\n        Debug.log('DiffViewer.getRuntimeProps called', {\n            fileRefId: this.runtimeProps.fileRefId || '(none)',\n            oldFileRefId: this.runtimeProps.oldFileRefId || '(none)',\n            newFileName: this.runtimeProps.newFileName || '(none)',\n            oldFileName: this.runtimeProps.oldFileName || '(none)',\n            // Also check if these properties are in window.diffConfig\n            windowDiffConfig: {\n                hasFileRefId: window.diffConfig && 'fileRefId' in window.diffConfig,\n                fileRefId: window.diffConfig?.fileRefId || '(none)',\n                hasOldFileRefId: window.diffConfig && 'oldFileRefId' in window.diffConfig,\n                oldFileRefId: window.diffConfig?.oldFileRefId || '(none)',\n                hasNewFileName: window.diffConfig && 'newFileName' in window.diffConfig,\n                newFileName: window.diffConfig?.newFileName || '(none)',\n                hasOldFileName: window.diffConfig && 'oldFileName' in window.diffConfig,\n                oldFileName: window.diffConfig?.oldFileName || '(none)'\n            }\n        }, 3);\n\n        return {...this.runtimeProps};\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        // Destroy layout manager\n        if (this.layoutManager) {\n            this.layoutManager.destroy();\n        }\n\n        // Clean up diffNavigator\n        if (this.diffNavigator) {\n            this.diffNavigator.destroy();\n        }\n\n        // Remove loaded class from container\n        DOMUtils.toggleClass(Selectors.DIFF.CONTAINER.name(), 'loaded', false);\n\n        // Additional cleanup as needed\n        Debug.log('DiffViewer: Component destroyed', null, 2);\n    }\n\n    /**\n     * Initialize runtime properties\n     */\n    initializeRuntimeProps() {\n        // Common runtime properties\n        this.runtimeProps = {\n            diffData: this.options.diffData || {},\n            serverSaveEnabled: this.options.serverSaveEnabled || false,\n            // SECURITY: Use only secure fileRefIds and filenames, not server paths\n            fileRefId: this.options.fileRefId || window.diffConfig?.fileRefId || '',\n            oldFileRefId: this.options.oldFileRefId || window.diffConfig?.oldFileRefId || '',\n            newFileName: this.options.newFileName || window.diffConfig?.newFileName || '',\n            oldFileName: this.options.oldFileName || window.diffConfig?.oldFileName || '',\n            isIdentical: this.options.isIdentical || window.diffConfig?.isIdentical || false,\n            filepath: this.options.filepath || window.diffConfig?.filepath || ''\n        };\n\n        Debug.log('DiffViewer: Runtime properties initialized', this.runtimeProps, 3);\n    }\n\n    /**\n     * Check if the content has been beautified\n     * @returns {boolean} True if content has been beautified\n     */\n    isContentBeautified() {\n        // Check if the beautified flag exists in runtime properties\n        // If not defined, default to false\n        return this.runtimeProps.isBeautified || false;\n    }\n\n    /**\n     * Get API endpoint by name\n     * @param {string} endpointName - Name of the endpoint to get\n     * @returns {Promise<string>} The endpoint URL\n     */\n    async getEndpoint(endpointName) {\n        Debug.log(`DiffViewer: Getting endpoint for ${endpointName}`, null, 2);\n\n        try {\n            // Use EndpointDiscovery if available\n            const endpointDiscovery = EndpointDiscovery.getInstance();\n            const endpoint = await endpointDiscovery.getEndpoint(endpointName);\n\n            Debug.log(`DiffViewer: Found endpoint for ${endpointName}`, endpoint, 2);\n            return endpoint;\n        } catch (error) {\n            // Fall back to config or default endpoints\n            Debug.warn(`DiffViewer: Error getting endpoint for ${endpointName}, using fallback`, error, 1);\n\n            // Check if we have endpoints in the config\n            if (this.config?.apiEndpoints[endpointName]) {\n                return this.config.apiEndpoints[endpointName];\n            }\n\n            // Default endpoints as a last resort\n            const defaultEndpoints = {\n                'ajaxDiffMerge': '../api/ajax-diff-merge.php',\n                'diffProcessor': '../api/diff-processor.php'\n            };\n\n            return defaultEndpoints[endpointName] || '../api/' + endpointName + '.php';\n        }\n    }\n\n    /**\n     * Set the BrowserUIManager instance\n     * @param {Object} browserUIManager - BrowserUIManager instance\n     * @returns {DiffViewer} This instance for method chaining\n     */\n    setBrowserUIManager(browserUIManager) {\n        this.browserUIManager = browserUIManager;\n\n        // Update references in components that need the BrowserUIManager\n        if (this.themeToggle) {\n            this.themeToggle.setBrowserUIManager(browserUIManager);\n        }\n\n        if (this.themeSelector) {\n            this.themeSelector.setBrowserUIManager(browserUIManager);\n        }\n\n        Debug.log('DiffViewer: BrowserUIManager reference set', null, 2);\n        return this;\n    }\n}\n","import { Debug } from '../../utils/Debug';\nimport Selectors from '../../constants/Selectors';\nimport { DOMUtils } from '../../utils/DOMUtils';\nimport { TranslationManager } from '../../utils/TranslationManager';\n\n/**\n * Manages browser UI generation for file-browser.php\n * This component handles the dynamic generation of UI elements that were previously\n * hardcoded in the PHP file, ensuring proper use of selectors and translations.\n */\nexport class BrowserUIManager {\n    /**\n     * @param {DiffViewer|Object} diffViewer - Parent diff viewer instance or options object\n     */\n    constructor (diffViewer) {\n        // Handle both DiffViewer instance or options object\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n        } else {\n            this.diffViewer = null;\n            this.options = diffViewer || {};\n        }\n\n        this.container = null;\n        this.elements = {\n            themeSwitcher: null,\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Get the translation manager instance\n        this.translationManager = TranslationManager.getInstance();\n\n        // Log translation state for debugging\n        let translationsSource;\n\n        // Extract nested ternary operations into separate statements\n        const hasWindowConfig = !!window.diffConfig?.translations;\n        const hasOptionsTranslations = !!this.options?.translations;\n\n        if (this.translationManager.isInitialized()) {\n            translationsSource = 'TranslationManager';\n        } else if (hasWindowConfig) {\n            translationsSource = 'window.diffConfig';\n        } else if (hasOptionsTranslations) {\n            translationsSource = 'options';\n        } else {\n            translationsSource = 'none';\n        }\n\n        const lang = this.translationManager.getLanguage();\n\n        Debug.log(`BrowserUIManager: Created with \"${lang}\" translations from ${translationsSource}`,\n                 this.translationManager.getAllTranslations(), 2);\n    }\n\n    /**\n     * Set the DiffViewer instance\n     * @param {DiffViewer} diffViewer - The DiffViewer instance\n     */\n    setDiffViewer(diffViewer) {\n        if (diffViewer && diffViewer.options) {\n            this.diffViewer = diffViewer;\n            this.options = diffViewer.options;\n            Debug.log('BrowserUIManager: Updated DiffViewer reference', null, 3);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Get translations from options\n     * @returns {Object} Translations object\n     */\n    getTranslations() {\n        // First, try to get translations from the TranslationManager\n        if (this.translationManager && this.translationManager.isInitialized()) {\n            Debug.log('BrowserUIManager: Using translations from TranslationManager', this.translationManager.getAllTranslations(), 3);\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Second, try to auto-initialize TranslationManager with window.diffConfig\n        if (window.diffConfig?.translations && typeof window.diffConfig.translations === 'object') {\n            Debug.log('BrowserUIManager: Auto-initializing TranslationManager from window.diffConfig', window.diffConfig.translations, 3);\n            this.translationManager.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return this.translationManager.getAllTranslations();\n        }\n\n        // Fall back to local options if nothing else works\n        if (this.options?.translations && typeof this.options.translations === 'object') {\n            Debug.log('BrowserUIManager: Using translations from local options', this.options.translations, 3);\n            return this.options.translations;\n        }\n\n        Debug.log('BrowserUIManager: No translations found, using empty object', null, 3);\n        return {};\n    }\n\n    /**\n     * Initialize UI components\n     * @param {string} containerSelector - Container element selector\n     */\n    initialize(containerSelector = Selectors.CONTAINER.WRAPPER) {\n        Debug.log('BrowserUIManager: Initializing UI components', null, 2);\n\n        this.container = document.querySelector(containerSelector);\n\n        if (!this.container) {\n            Debug.error('BrowserUIManager: Container element not found', null, 2);\n            return false;\n        }\n\n        // Change the order of generation - create diff container first\n        this.generateDiffContainer();\n        this.generateThemeSwitcher();\n        this.generateThemeSelector();\n        this.generateMergeControls();\n\n        Debug.log('BrowserUIManager: UI components generated', null, 2);\n        return true;\n    }\n\n    /**\n     * Generate theme switcher UI\n     */\n    generateThemeSwitcher() {\n        Debug.log('BrowserUIManager: Generating theme switcher', null, 3);\n\n        // Get the ID without the # prefix for createElement\n        const themeSwitcherId = Selectors.THEME.SWITCHER.name();\n        const themeLoadingId = Selectors.THEME.LOADING_INDICATOR.name();\n        const themeToggleId = Selectors.THEME.TOGGLE.name();\n\n        // Check if theme switcher already exists and if it's still valid to reuse\n        let themeSwitcher = document.getElementById(themeSwitcherId);\n\n        if (themeSwitcher) {\n            // Verify that the theme switcher is in a proper context (not orphaned)\n            // and that the diff UI is being displayed (not in \"identical files\" mode)\n            const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n\n            if (diffContainer || this.container.contains(themeSwitcher)) {\n                Debug.log('BrowserUIManager: Reusing existing theme switcher', themeSwitcherId, 2);\n                // Store reference to existing element\n                this.elements.themeSwitcher = themeSwitcher;\n\n                // Ensure it's properly positioned in the container\n                if (themeSwitcher.parentNode !== this.container) {\n                    this.container.appendChild(themeSwitcher);\n                }\n\n                // Make sure it's visible and properly styled - but don't force display here\n                // as it will be controlled by showThemeElements()/hideThemeElements()\n                themeSwitcher.style.position = 'relative';\n                return;\n            } else {\n                // Theme switcher exists but context is invalid, remove it and create new one\n                Debug.log('BrowserUIManager: Removing orphaned theme switcher', themeSwitcherId, 2);\n                themeSwitcher.remove();\n                themeSwitcher = null;\n            }\n        }\n\n        // Create new theme switcher element\n        Debug.log('BrowserUIManager: Creating new theme switcher', themeSwitcherId, 2);\n        themeSwitcher = document.createElement('div');\n        themeSwitcher.id = themeSwitcherId;\n        themeSwitcher.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n        themeSwitcher.style.cssText = 'display: none !important; position: relative;';\n\n        // Create theme switcher wrapper\n        const switcherWrapper = document.createElement('div');\n        switcherWrapper.className = Selectors.THEME_SWITCHER.WRAPPER.name();\n\n        // Get SVG icons for light/dark mode\n        const sunIcon = DOMUtils.getIconHtml('sun', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n        const moonIcon = DOMUtils.getIconHtml('moon', { classes: Selectors.UTILITY.MARGIN_START_2.name() });\n\n        // Create theme switcher content with toggle\n        switcherWrapper.innerHTML = `\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_END_2.name()}\">${sunIcon}</span>\n            <label class=\"${Selectors.THEME_SWITCHER.CONTROL.name()}\" for=\"${themeToggleId}\">\n                <input type=\"checkbox\" id=\"${themeToggleId}\" checked>\n                <span class=\"${Selectors.THEME_SWITCHER.SLIDER.name()} ${Selectors.THEME_SWITCHER.SLIDER_ROUND.name()}\"></span>\n            </label>\n            <span class=\"${Selectors.THEME_SWITCHER.LABEL.name()} ${Selectors.UTILITY.MARGIN_START_2.name()} \">${moonIcon}</span>\n        `;\n\n        // Append elements to theme switcher\n        themeSwitcher.appendChild(switcherWrapper);\n\n        // Create a separate container for the loader outside the theme switcher hierarchy\n        const loadingContainer = document.createElement('div');\n        loadingContainer.id = themeLoadingId;\n        loadingContainer.style.display = 'none';\n        loadingContainer.style.position = 'absolute';\n        loadingContainer.style.zIndex = '1000';\n\n        // Append theme switcher to container\n        this.container.appendChild(themeSwitcher);\n\n        // Append loading container to body for proper positioning\n        document.body.appendChild(loadingContainer);\n\n        // Store reference\n        this.elements.themeSwitcher = themeSwitcher;\n        this.elements.themeLoadingContainer = loadingContainer;\n\n        // Watch for the vdm-diff__container to have 'loaded' class\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach(() => {\n                const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n                if (diffContainer && diffContainer.classList.contains('loaded')) {\n                    // If the container is loaded, make the theme switcher visible\n                    if (themeSwitcher) {\n                        themeSwitcher.style.cssText = 'display: flex !important; position: relative;';\n                    }\n                    // Disconnect the observer once we've made the change\n                    observer.disconnect();\n                }\n            });\n        });\n\n        // Start observing the container's parent element for child changes\n        const containerParent = this.container || document.body;\n        observer.observe(containerParent, {\n            subtree: true,\n            childList: true,\n            attributes: true,\n            attributeFilter: ['class']\n        });\n    }\n\n    /**\n     * Generate theme selector UI\n     * @returns {Object|null} The theme selector container and select element, or null if creation failed\n     */\n    generateThemeSelector() {\n        Debug.log('BrowserUIManager: Generating theme selector', null, 3);\n\n        // Get the ID without the # prefix for createElement\n        const themeSelectorId = Selectors.THEME.SELECTOR.name();\n        const themeSwitcherId = Selectors.THEME.SWITCHER.name();\n\n        // Check if theme selector already exists and if it's still valid to reuse\n        let existingSelector = document.getElementById(themeSelectorId);\n        let selectorContainer = null;\n\n        if (existingSelector) {\n            selectorContainer = existingSelector.parentNode;\n            // Verify that the theme selector is in a proper context (not orphaned)\n            const themeSwitcher = document.getElementById(themeSwitcherId);\n\n            if (themeSwitcher && themeSwitcher.contains(selectorContainer)) {\n                Debug.log('BrowserUIManager: Reusing existing theme selector', themeSelectorId, 2);\n                // Store reference to existing elements\n                this.elements.themeSelector = existingSelector;\n                this.elements.themeSelectorContainer = selectorContainer;\n                return { container: selectorContainer, selectElement: existingSelector };\n            } else {\n                // Theme selector exists but context is invalid, remove it and create new one\n                Debug.log('BrowserUIManager: Removing orphaned theme selector', themeSelectorId, 2);\n                if (selectorContainer && selectorContainer.parentNode) {\n                    selectorContainer.parentNode.removeChild(selectorContainer);\n                }\n                existingSelector = null;\n                selectorContainer = null;\n            }\n        }\n\n        // Get theme switcher container - theme selector must be inside it\n        const themeSwitcherContainer = document.getElementById(themeSwitcherId);\n        if (!themeSwitcherContainer) {\n            Debug.warn('BrowserUIManager: No theme switcher container found for theme selector', null, 2);\n            return null;\n        }\n\n        // Create new theme selector container and element\n        Debug.log('BrowserUIManager: Creating new theme selector', themeSelectorId, 2);\n\n        // Create the container using utility classes\n        selectorContainer = document.createElement('div');\n        selectorContainer.className = `${Selectors.THEME_SELECTOR.WRAPPER.name()} ${Selectors.UTILITY.MARGIN_END_3.name()}`;\n\n        // Create select element\n        const selectElement = document.createElement('select');\n        selectElement.id = themeSelectorId;\n        selectElement.className = `${Selectors.UTILITY.FORM_SELECT.name()} ${Selectors.UTILITY.FORM_SELECT.name()}`;\n\n        // Append select to container\n        selectorContainer.appendChild(selectElement);\n\n        // Insert the selector container at the beginning of the theme switcher\n        themeSwitcherContainer.insertBefore(selectorContainer, themeSwitcherContainer.firstChild);\n\n        // Store references\n        this.elements.themeSelector = selectElement;\n        this.elements.themeSelectorContainer = selectorContainer;\n\n        Debug.log('BrowserUIManager: Theme selector created and added to DOM', null, 2);\n        return { container: selectorContainer, selectElement: selectElement };\n    }\n\n    /**\n     * Generate diff container UI\n     */\n    generateDiffContainer() {\n        Debug.log('BrowserUIManager: Generating diff container', null, 3);\n\n        // Get IDs without the # prefix for createElement\n        const diffContainerId = Selectors.DIFF.CONTAINER.name();\n        const viewerId = Selectors.DIFF.VIEWER.name();\n\n        // Create diff container\n        const diffContainer = document.createElement('div');\n        diffContainer.id = diffContainerId;\n\n        // Create viewer element\n        const viewerElement = document.createElement('div');\n        viewerElement.id = viewerId;\n        viewerElement.className = Selectors.UTILITY.MARGIN_TOP_2.name();\n        viewerElement.style.display = 'none';\n\n        // Set up a mutation observer to watch for display changes on the viewer element\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.type === 'attributes' &&\n                    mutation.attributeName === 'style' &&\n                    viewerElement.style.display !== 'none') {\n                    // If viewer becomes visible, show the theme switcher\n                    if (this.elements.themeSwitcher) {\n                        this.elements.themeSwitcher.style.display = 'flex';\n                    }\n                }\n            });\n        });\n\n        // Start observing the viewer element for style changes\n        observer.observe(viewerElement, { attributes: true });\n\n        // Append elements to diff container\n        diffContainer.appendChild(viewerElement);\n\n        // Append diff container to container\n        this.container.appendChild(diffContainer);\n\n        // Store reference and log creation\n        this.elements.diffContainer = diffContainer;\n\n        // Verify the element was created\n        const createdViewer = document.getElementById(viewerId);\n        Debug.log(`BrowserUIManager: Viewer element (${viewerId}) created successfully: ${!!createdViewer}`, null, 3);\n    }\n\n    /**\n     * Generate merge controls UI using translations from DiffViewer\n     */\n    generateMergeControls() {\n        Debug.log('BrowserUIManager: Generating merge controls structure only', null, 3);\n\n        // Get translations from options\n        const translations = this.getTranslations();\n\n        // Get IDs without the # prefix for createElement\n        const previewButtonId = Selectors.MERGE.BUTTON_PREVIEW.name();\n        const toggleButtonId = Selectors.MERGE.DESTINATION_TOGGLE.name();\n        const toggleIconId = Selectors.MERGE.TOGGLE_ICON.name();\n        const toggleTextId = Selectors.MERGE.TOGGLE_TEXT.name();\n        const dropdownId = Selectors.MERGE.DESTINATION_DROPDOWN.name();\n        const applyButtonId = Selectors.MERGE.BUTTON_APPLY.name();\n\n        // Create merge controls container\n        const mergeControls = document.createElement('div');\n        mergeControls.className = `${Selectors.MERGE.CONTROLS_ACTIONS.name()} ${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()} ${Selectors.UTILITY.JUSTIFY_CONTENT_BETWEEN.name()} ${Selectors.UTILITY.MARGIN_Y_2.name()} ${Selectors.UTILITY.PADDING_2.name()}`;\n\n        // Create preview button section\n        const previewSection = document.createElement('div');\n\n        const previewButton = document.createElement('button');\n        previewButton.id = previewButtonId;\n        previewButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_INFO.name()}`;\n        previewButton.type = 'button';\n        previewButton.innerHTML = `${DOMUtils.getIconHtml('eye', { classes: Selectors.UTILITY.MARGIN_END_2.name() })}${translations.preview || 'Preview'}`;\n\n        previewSection.appendChild(previewButton);\n\n        // Create merge controls section\n        const mergeSection = document.createElement('div');\n        mergeSection.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_CENTER.name()}`;\n\n        // Create a group for toggle button and dropdown - using input-group styling approach\n        const toggleGroup = document.createElement('div');\n        toggleGroup.className = `${Selectors.UTILITY.FLEX.name()} ${Selectors.UTILITY.ALIGN_ITEMS_STRETCH.name()} ${Selectors.UTILITY.MARGIN_END_3.name()}`;\n        // Add class for styling instead of inline style\n        toggleGroup.classList.add('vdm-input-group');\n\n        // Create destination toggle button\n        const toggleButton = document.createElement('button');\n        toggleButton.id = toggleButtonId;\n        toggleButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_FLAT.name()} vdm-input-group__prepend`;\n        toggleButton.type = 'button'; // Explicitly set type to button\n\n        const toggleIcon = document.createElement('span');\n        toggleIcon.id = toggleIconId;\n        toggleIcon.innerHTML = DOMUtils.getIconHtml('plus-circle', { classes: Selectors.UTILITY.MARGIN_END_2.name() });\n\n        const toggleText = document.createElement('span');\n        toggleText.id = toggleTextId;\n        toggleText.setAttribute('title', translations.saveToOriginalTooltip || 'Replace the current file with merged content');\n        toggleText.textContent = translations.saveToOriginal || 'Save to original';\n\n        toggleButton.appendChild(toggleIcon);\n        toggleButton.appendChild(toggleText);\n\n        // Create empty destination dropdown - IMPORTANT CHANGE: No options added\n        const dropdown = document.createElement('select');\n        dropdown.id = dropdownId;\n        dropdown.className = `${Selectors.UTILITY.FORM_SELECT.name()} vdm-input-group__append vdm-select-auto-width`;\n        // No options are added here - This will be handled by MergeUIController\n\n        // Add toggle button and dropdown to the toggle group with no spacing between them\n        toggleGroup.appendChild(toggleButton);\n        toggleGroup.appendChild(dropdown);\n\n        // Create apply merge button\n        const applyButton = document.createElement('button');\n        applyButton.id = applyButtonId;\n        applyButton.className = `${Selectors.UTILITY.BUTTON.name()} ${Selectors.UTILITY.BUTTON_PRIMARY.name()} vdm-nowrap`;\n        applyButton.type = 'button';\n        applyButton.innerHTML = (translations.applyMerge || 'Apply Merge') + ` ${DOMUtils.getIconHtml('file-circle-plus', { classes: Selectors.UTILITY.MARGIN_START_2.name() })}`;\n        applyButton.style.whiteSpace = 'nowrap';\n        applyButton.style.display = 'inline-flex';\n        applyButton.style.alignItems = 'center';\n\n        // Append toggle group and apply button to merge section\n        mergeSection.appendChild(toggleGroup);\n        mergeSection.appendChild(applyButton);\n\n        // Append sections to merge controls\n        mergeControls.appendChild(previewSection);\n        mergeControls.appendChild(mergeSection);\n\n        // Append merge controls to container\n        this.container.appendChild(mergeControls);\n\n        // Store reference\n        this.elements.mergeControls = mergeControls;\n\n        Debug.log('BrowserUIManager: Created empty merge controls structure (options will be populated by MergeUIController)', null, 2);\n    }\n\n    /**\n     * Show theme loading indicator using the LoaderManager\n     */\n    showThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        const themeSwitcher = this.elements.themeSwitcher;\n\n        if (loadingContainer && themeSwitcher) {\n            // Get the translated message\n            const message = TranslationManager.getInstance().get('loadingTheme', 'Loading theme...');\n\n            // Use proper CSS classes for styling\n            loadingContainer.innerHTML = `\n                <div class=\"vdm-theme__loading-spinner\"></div>\n                <span>${message}</span>\n            `;\n\n            // Add styling for the translucid background and rounded corners\n            loadingContainer.className = 'vdm-theme__loading-indicator';\n\n            // Get the position of the theme switcher\n            const rect = themeSwitcher.getBoundingClientRect();\n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n            // Position the loader just above the theme switcher\n            loadingContainer.style.top = (rect.top + scrollTop - 40) + 'px';\n\n            // Make the loader visible\n            loadingContainer.style.display = 'flex';\n        }\n    }\n\n    /**\n     * Hide theme loading indicator\n     */\n    hideThemeLoading() {\n        const loadingContainer = this.elements.themeLoadingContainer;\n        if (loadingContainer) {\n            loadingContainer.style.display = 'none';\n        }\n    }\n\n    /**\n     * Clean up event handlers and resources\n     */\n    destroy() {\n        Debug.log('BrowserUIManager: Destroying UI components', null, 2);\n\n        // Hide any active theme loader\n        this.hideThemeLoading();\n\n        // Remove generated elements (except theme switcher which should be preserved across instances)\n        // Note: Theme switcher is preserved by FileBrowserManager.clearUI() to maintain user experience\n        // if (this.elements.themeSwitcher && this.elements.themeSwitcher.parentNode) {\n        //     this.elements.themeSwitcher.parentNode.removeChild(this.elements.themeSwitcher);\n        // }\n\n        if (this.elements.diffContainer && this.elements.diffContainer.parentNode) {\n            this.elements.diffContainer.parentNode.removeChild(this.elements.diffContainer);\n        }\n\n        if (this.elements.mergeControls && this.elements.mergeControls.parentNode) {\n            this.elements.mergeControls.parentNode.removeChild(this.elements.mergeControls);\n        }\n\n        // Reset references but keep theme switcher and theme selector references if they still exist in DOM\n        const existingThemeSwitcher = document.getElementById(Selectors.THEME.SWITCHER.name());\n        const existingThemeSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        const existingThemeSelectorContainer = existingThemeSelector ? existingThemeSelector.parentNode : null;\n\n        this.elements = {\n            themeSwitcher: existingThemeSwitcher || null,  // Keep reference if still in DOM\n            themeSelector: existingThemeSelector || null,  // Keep theme selector reference too\n            themeSelectorContainer: existingThemeSelectorContainer || null,  // Keep container reference\n            diffContainer: null,\n            mergeControls: null\n        };\n\n        // Clear DiffViewer reference\n        this.diffViewer = null;\n\n        Debug.log('BrowserUIManager: UI components destroyed', null, 2);\n    }\n\n    /**\n     * Hide theme UI elements when no diff is being displayed (identical files)\n     */\n    hideThemeElements() {\n        Debug.log('BrowserUIManager: Hiding theme elements for identical content', null, 2);\n\n        if (this.elements.themeSwitcher) {\n            // Use important to ensure hiding works\n            this.elements.themeSwitcher.style.cssText = 'display: none !important; position: relative;';\n            Debug.log('BrowserUIManager: Hidden theme switcher', this.elements.themeSwitcher.id, 2);\n        }\n\n        // Also hide any standalone theme selector\n        const themeSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        if (themeSelector) {\n            themeSelector.style.display = 'none';\n            Debug.log('BrowserUIManager: Hidden standalone theme selector', themeSelector.id, 2);\n        }\n    }\n\n    /**\n     * Show theme UI elements when diff is being displayed\n     */\n    showThemeElements() {\n        Debug.log('BrowserUIManager: Showing theme elements for diff content', null, 2);\n\n        if (this.elements.themeSwitcher) {\n            // Use important to override the initial !important hiding\n            this.elements.themeSwitcher.style.cssText = 'display: flex !important; position: relative;';\n            Debug.log('BrowserUIManager: Shown theme switcher', this.elements.themeSwitcher.id, 2);\n        }\n\n        // Also show any standalone theme selector\n        const themeSelector = document.getElementById(Selectors.THEME.SELECTOR.name());\n        if (themeSelector) {\n            themeSelector.style.display = 'block';\n            Debug.log('BrowserUIManager: Shown standalone theme selector', themeSelector.id, 2);\n        }\n    }\n}\n","/**\n * DiffConfigManager.js\n *\n * Singleton utility to centralize management of the diffConfig configuration object.\n * This provides a single source of truth for the diffConfig settings used throughout the application.\n */\n\nimport { Debug } from './Debug';\n\n/**\n * Manages the diffConfig configuration settings as a singleton\n */\nexport class DiffConfigManager {\n    /**\n     * Private instance - follows singleton pattern\n     * @type {DiffConfigManager}\n     * @private\n     */\n    static #instance = null;\n\n    /**\n     * Private constructor - use getInstance() instead\n     * @private\n     */\n    constructor() {\n        // Track if server config has been loaded to avoid multiple loads\n        this._serverConfigLoaded = false;\n\n        // Initialize window.diffConfig if it doesn't exist\n        if (typeof window !== 'undefined' && !window.diffConfig) {\n            Debug.log('DiffConfigManager: Initializing empty window.diffConfig', null, 2);\n            window.diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {}\n            };\n        } else if (typeof window !== 'undefined' && window.diffConfig) {\n            Debug.log('DiffConfigManager: Using existing window.diffConfig', window.diffConfig, 2);\n        }\n    }\n\n    /**\n     * Load configuration from server if needed\n     * @returns {Promise<void>}\n     */\n    async ensureServerConfigLoaded() {\n        // Only load server config once to avoid overriding runtime values\n        if (this._serverConfigLoaded) {\n            Debug.log('DiffConfigManager: Server config already loaded, skipping', null, 2);\n            return;\n        }\n\n        // Check if we already have a server-provided apiBaseUrl\n        if (typeof window !== 'undefined' && window.diffConfig?.apiBaseUrl) {\n            Debug.log('DiffConfigManager: Server config already loaded with apiBaseUrl', window.diffConfig.apiBaseUrl, 2);\n            this._serverConfigLoaded = true;\n            return;\n        }\n\n        try {\n            Debug.log('DiffConfigManager: Loading server configuration...', null, 2);\n\n            // Try to determine the API base URL from script location\n            let apiBaseUrl = '';\n            const scripts = document.querySelectorAll('script[src*=\"visual-diff-merge\"]');\n            if (scripts.length > 0) {\n                const scriptSrc = scripts[0].src;\n                const match = scriptSrc.match(/^(.+\\/visual-diff-merge[^\\/]*)\\//);\n                if (match) {\n                    apiBaseUrl = match[1] + '/api/';\n                }\n            }\n\n            if (!apiBaseUrl) {\n                Debug.log('DiffConfigManager: Could not determine API base URL from script location', null, 2);\n                return;\n            }\n\n            // Fetch configuration from server\n            const configResponse = await fetch(apiBaseUrl + 'endpoint-config.php');\n            if (configResponse.ok) {\n                const serverConfig = await configResponse.json();\n\n                // The endpoint returns the config directly, not nested in a 'javascript' property\n                if (serverConfig && typeof serverConfig === 'object') {\n                    Debug.log('DiffConfigManager: Loaded server configuration', serverConfig, 2);\n                    if (typeof window !== 'undefined') {\n                        // Preserve existing serverSaveEnabled if it's already set\n                        const existingServerSaveEnabled = window.diffConfig?.serverSaveEnabled;\n                        window.diffConfig = { ...(window.diffConfig || {}), ...serverConfig };\n\n                        // Don't override serverSaveEnabled if it was already explicitly set\n                        if (existingServerSaveEnabled !== undefined && !serverConfig.hasOwnProperty('serverSaveEnabled')) {\n                            window.diffConfig.serverSaveEnabled = existingServerSaveEnabled;\n                            Debug.log('DiffConfigManager: Preserved existing serverSaveEnabled', existingServerSaveEnabled, 2);\n                        }\n\n                        // Mark as loaded to prevent future loads\n                        this._serverConfigLoaded = true;\n                    }\n                }\n            } else {\n                Debug.warn('DiffConfigManager: Failed to load server configuration', configResponse.status, 1);\n            }\n        } catch (error) {\n            Debug.warn('DiffConfigManager: Error loading server configuration', error, 1);\n        } finally {\n            // Mark as loaded even if there was an error to prevent retries\n            this._serverConfigLoaded = true;\n        }\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {DiffConfigManager} The singleton instance\n     */\n    static getInstance() {\n        if (!DiffConfigManager.#instance) {\n            DiffConfigManager.#instance = new DiffConfigManager();\n        }\n        return DiffConfigManager.#instance;\n    }\n\n    /**\n     * Initialize with configuration\n     * @param {Object} config - The initial configuration\n     */\n    async initialize(config = {}) {\n        Debug.log('DiffConfigManager: Initializing with config', config, 2);\n\n        // Check if serverSaveEnabled is already set in window.diffConfig\n        const hasRuntimeServerSaveEnabled = typeof window !== 'undefined' &&\n            window.diffConfig &&\n            window.diffConfig.hasOwnProperty('serverSaveEnabled');\n\n        // Only load server config if we don't have runtime values already set\n        if (!hasRuntimeServerSaveEnabled) {\n            await this.ensureServerConfigLoaded();\n        } else {\n            Debug.log('DiffConfigManager: Skipping server config load - serverSaveEnabled already set',\n                window.diffConfig.serverSaveEnabled, 2);\n        }\n\n        // Then apply the provided config\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...(window.diffConfig || {}), ...config };\n        } else {\n            Debug.error('DiffConfigManager: Cannot initialize, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Get the current diffConfig (reference to window.diffConfig)\n     * @returns {Object} The current diffConfig\n     */\n    getDiffConfig() {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn('DiffConfigManager: window.diffConfig is not available', null, 1);\n            return {};\n        }\n        return window.diffConfig;\n    }\n\n    /**\n     * Set a new diffConfig, completely replacing the current one\n     * @param {Object} config - The new configuration to use\n     */\n    setDiffConfig(config = {}) {\n        Debug.log('DiffConfigManager: Setting new diffConfig', config, 2);\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...config };\n        } else {\n            Debug.error('DiffConfigManager: Cannot set config, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Safely set a new diffConfig while preserving critical runtime values\n     * This method preserves fileRefId, oldFileRefId, and other runtime properties\n     * that should not be overwritten by server responses\n     * @param {Object} config - The new configuration to use\n     */\n    setDiffConfigSafe(config = {}) {\n        Debug.log('DiffConfigManager: Setting new diffConfig safely (preserving runtime values)', config, 2);\n        \n        if (typeof window === 'undefined') {\n            Debug.error('DiffConfigManager: Cannot set config, window is not available', null, 1);\n            return;\n        }\n\n        // Define critical runtime properties that should be preserved\n        const criticalRuntimeProps = [\n            'fileRefId',\n            'oldFileRefId', \n            'newFileName',\n            'oldFileName',\n            'serverSaveEnabled'\n        ];\n\n        // Preserve existing critical values\n        const preservedValues = {};\n        criticalRuntimeProps.forEach(prop => {\n            if (window.diffConfig && window.diffConfig[prop] !== undefined && window.diffConfig[prop] !== null && window.diffConfig[prop] !== '') {\n                preservedValues[prop] = window.diffConfig[prop];\n                Debug.log(`DiffConfigManager: Preserving existing ${prop}`, window.diffConfig[prop], 3);\n            }\n        });\n\n        // Set the new config\n        window.diffConfig = { ...config };\n\n        // Restore preserved values (they take precedence over server values)\n        Object.entries(preservedValues).forEach(([key, value]) => {\n            window.diffConfig[key] = value;\n            Debug.log(`DiffConfigManager: Restored critical runtime property ${key}`, value, 3);\n        });\n\n        Debug.log('DiffConfigManager: Safe setDiffConfig completed', {\n            preservedCount: Object.keys(preservedValues).length,\n            preserved: Object.keys(preservedValues)\n        }, 2);\n    }\n\n    /**\n     * Reset the diffConfig to default values, possibly with new overrides\n     * @param {Object} overrides - Optional configuration overrides to apply after reset\n     */\n    reset(overrides = {}) {\n        Debug.log('DiffConfigManager: Resetting diffConfig with overrides', overrides, 2);\n        if (typeof window !== 'undefined') {\n            window.diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {},\n                ...overrides\n            };\n        } else {\n            Debug.error('DiffConfigManager: Cannot reset config, window is not available', null, 1);\n        }\n    }\n\n    /**\n     * Update part of the configuration\n     * @param {Object} partialConfig - The partial configuration to update\n     */\n    update(partialConfig = {}) {\n        Debug.log('DiffConfigManager: Updating diffConfig with', partialConfig, 3);\n\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn('DiffConfigManager: window.diffConfig not available for update', null, 1);\n            return;\n        }\n\n        // Check if the partialConfig has a nested 'config' property\n        if (partialConfig && partialConfig.config && typeof partialConfig.config === 'object') {\n            Debug.log('DiffConfigManager: Extracting nested config property', partialConfig.config, 3);\n            // Use the nested config object instead of the wrapper\n            window.diffConfig = this.#mergeDeep(window.diffConfig, partialConfig.config);\n        } else {\n            // Use the original object if no nested config property\n            window.diffConfig = this.#mergeDeep(window.diffConfig, partialConfig);\n        }\n    }\n\n    /**\n     * Set a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} value - The value to set\n     */\n    set(key, value) {\n        Debug.log(`DiffConfigManager: Setting ${key}`, value, 3);\n        if (typeof window !== 'undefined' && window.diffConfig) {\n            window.diffConfig[key] = value;\n        } else {\n            Debug.error(`DiffConfigManager: Cannot set ${key}, window.diffConfig not available`, null, 1);\n        }\n    }\n\n    /**\n     * Get a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} defaultValue - Default value if the key doesn't exist\n     * @returns {*} The configuration value\n     */\n    get(key, defaultValue = null) {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn(`DiffConfigManager: Cannot get ${key}, window.diffConfig not available`, null, 1);\n            return defaultValue;\n        }\n        return key in window.diffConfig ? window.diffConfig[key] : defaultValue;\n    }\n\n    /**\n     * Check if a configuration key exists\n     * @param {string} key - The configuration key to check\n     * @returns {boolean} True if the key exists\n     */\n    has(key) {\n        if (typeof window === 'undefined' || !window.diffConfig) {\n            Debug.warn(`DiffConfigManager: Cannot check ${key}, window.diffConfig not available`, null, 1);\n            return false;\n        }\n        return key in window.diffConfig;\n    }\n\n    /**\n     * Remove a specific configuration key\n     * @param {string} key - The configuration key to remove\n     */\n    remove(key) {\n        if (typeof window !== 'undefined' && window.diffConfig && key in window.diffConfig) {\n            Debug.log(`DiffConfigManager: Removing ${key}`, null, 3);\n            delete window.diffConfig[key];\n        } else {\n            Debug.warn(`DiffConfigManager: Cannot remove ${key}, not found or window.diffConfig not available`, null, 1);\n        }\n    }\n\n    /**\n     * Deep merge two objects recursively\n     * @param {Object} target - Target object\n     * @param {Object} source - Source object to merge\n     * @returns {Object} The merged object\n     * @private\n     */\n    #mergeDeep(target, source) {\n        const output = { ...target };\n\n        if (this.#isObject(target) && this.#isObject(source)) {\n            Object.keys(source).forEach(key => {\n                if (this.#isObject(source[key])) {\n                    if (!(key in target)) {\n                        output[key] = source[key];\n                    } else {\n                        output[key] = this.#mergeDeep(target[key], source[key]);\n                    }\n                } else {\n                    output[key] = source[key];\n                }\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * Check if a value is an object\n     * @param {*} item - The value to check\n     * @returns {boolean} True if the value is an object\n     * @private\n     */\n    #isObject(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item));\n    }\n}\n\nexport default DiffConfigManager;\n","import { DiffViewer } from './components/DiffViewer';\nimport { ResourceLoader } from './utils/ResourceLoader';\nimport availableThemes from './data/highlightjs-themes.json';\nimport { ThemeManager } from './components/ThemeManager';\nimport { Debug } from './utils/Debug';\nimport { ConfigUtils } from './utils/ConfigUtils';\nimport { DOMUtils } from './utils/DOMUtils';\nimport Selectors from './constants/Selectors';\nimport { BrowserUIManager } from './components/viewer/BrowserUIManager';\nimport { EndpointDiscovery } from './utils/EndpointDiscovery';\nimport { LoaderManager } from './utils/LoaderManager';\nimport { TranslationManager } from './utils/TranslationManager';\nimport AlertManager from './utils/AlertManager';\nimport { DiffConfigManager } from './utils/DiffConfigManager';\n\n// Module-level singleton instance\nlet browserUIManagerInstance = null;\n\n// Initialize endpoint discovery early\nconst endpointDiscovery = EndpointDiscovery.getInstance();\n\n// Add copyright link to forms with vdm-form class\nfunction addCopyrightLink() {\n    // Find all forms with the vdm-form class\n    const forms = document.querySelectorAll('.vdm-form');\n\n    forms.forEach(form => {\n        // Check if the copyright link already exists to prevent duplicates\n        const existingLink = form.parentNode.querySelector('.vdm-copyright-link');\n        if (existingLink) return;\n\n        // Create the copyright link element\n        const linkContainer = document.createElement('div');\n        linkContainer.className = 'vdm-copyright-link';\n        linkContainer.style.cssText = 'text-align: right; font-size: 11px; margin-top: 4px; opacity: 0.7;';\n\n        // Create the actual link\n        linkContainer.innerHTML = '<a href=\"https://visual-diff-merge.miglisoft.com/\" rel=\"noopener\" target=\"_blank\" style=\"text-decoration: none; color: inherit;\">Powered by Visual-Diff-Merge</a>';\n\n        // Insert the link after the form\n        form.parentNode.insertBefore(linkContainer, form.nextSibling);\n    });\n}\n\n// Run the function when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', addCopyrightLink);\n\n// Also run it when the window loads (for dynamically created forms)\nwindow.addEventListener('load', addCopyrightLink);\n\nwindow.enableDiffViewer = async function () {\n    // Enhanced config extraction with proper nested structure handling\n    let debug = false;\n    let logLevel = 1;\n\n    // Check multiple possible config structures\n    if (window.diffConfig) {\n        // Direct config properties (most common)\n        if (typeof window.diffConfig.debug !== 'undefined') {\n            debug = window.diffConfig.debug;\n            logLevel = window.diffConfig.logLevel || 1;\n        }\n        // Nested config structure (from DiffConfigManager)\n        else if (window.diffConfig.config && typeof window.diffConfig.config.debug !== 'undefined') {\n            debug = window.diffConfig.config.debug;\n            logLevel = window.diffConfig.config.logLevel || 1;\n        }\n        // Success response structure (from API calls)\n        else if (window.diffConfig.success && window.diffConfig.config) {\n            debug = window.diffConfig.config.debug || false;\n            logLevel = window.diffConfig.config.logLevel || 1;\n        }\n    }\n\n    // Add debug trace to identify the exact structure being used\n    console.log('=== DEBUG CONFIG EXTRACTION ===', {\n        windowDiffConfigExists: !!window.diffConfig,\n        configStructure: window.diffConfig ? Object.keys(window.diffConfig) : 'none',\n        directDebug: window.diffConfig?.debug,\n        nestedDebug: window.diffConfig?.config?.debug,\n        finalDebug: debug,\n        finalLogLevel: logLevel\n    });\n\n    Debug.initialize(debug, '[DiffViewer]', logLevel);\n\n    // Initialize centralized loader management\n    const loaderManager = LoaderManager.getInstance();\n\n    const translationManager = TranslationManager.getInstance();\n\n    // Run the copyright link function again to catch any dynamically added forms\n    addCopyrightLink();\n\n    // Initialize translation manager if needed and if config contains translations\n    if (window.diffConfig?.translations && !translationManager.isInitialized()) {\n        const configLang = window.diffConfig.lang || 'en';\n        Debug.log(`Initializing TranslationManager with language: ${configLang}`, null, 2);\n        translationManager.initialize(configLang, window.diffConfig.translations);\n    }\n\n    // Get loading message from translations or use default\n    const initialMessage = translationManager.get('loadingDiff', 'Loading diff...');\n\n    // Try to adopt any early loader that might exist from URL/file components\n    // This ensures a smooth transition from early loading to main app loading\n    const mainLoaderId = loaderManager.adoptEarlyLoader(initialMessage);\n\n    try {\n        // PHASE 1: PREPARATION - level 1 log (phase boundary)\n        Debug.log('INITIALIZATION - PHASE 1: PREPARATION', null, 1);\n\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingContent', 'Loading content...'));\n\n        // Check for identical files first\n        if (window.diffConfig?.isIdentical) {\n            // Get message from translations\n            const message = translationManager.get('filesIdenticalMessage', 'The files are identical. No differences found.');\n            DOMUtils.showMessage(Selectors.DIFF.CONTENT_WRAPPER.name(), message, 'info');\n\n            // Hide the loader since we're done\n            loaderManager.hideMainLoader(mainLoaderId);\n\n            return;\n        }\n\n        // Make sure serverSaveEnabled is explicitly set in the diffConfig\n        // This ensures the BrowserUIManager can access it before creating UI controls\n        // Note: We delay this check until after UI preparation to allow FileBrowserManager to configure it first\n\n        // Discover API endpoint early in the initialization process\n        try {\n            loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('discoveringEndpoints', 'Discovering API endpoints...'));\n            const apiEndpoint = await endpointDiscovery.getEndpoint();\n            Debug.log('API endpoint discovered', apiEndpoint, 2);\n\n            // Update diffConfig with discovered endpoint\n            if (window.diffConfig && !window.diffConfig.apiEndpoint) {\n                window.diffConfig.apiEndpoint = apiEndpoint;\n            }\n        } catch (error) {\n            Debug.warn('API endpoint discovery failed, using fallbacks', error, 1);\n        }\n\n        // Check for identical files first\n        if (window.diffConfig?.isIdentical) {\n            // Get message from translations\n            const message = translationManager.get('filesIdenticalMessage', 'The files are identical. No differences found.');\n            DOMUtils.showMessage(Selectors.DIFF.CONTENT_WRAPPER.name(), message, 'info');\n\n            // Hide the loader since we're done\n            loaderManager.hideMainLoader(mainLoaderId);\n\n            return;\n        }\n\n        // Check if we already have an active instance and destroy it\n        if (window.diffViewer) {\n            Debug.log('Cleaning up previous instance', null, 1);\n            loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('cleaningUpPrevious', 'Cleaning up previous instance...'));\n\n            if (typeof window.diffViewer.destroy === 'function') {\n                await window.diffViewer.destroy();\n            }\n            window.diffViewer = null;\n        }\n\n        // Clean up UI manager if it exists\n        if (window.vdmBrowserUIManager) {\n            Debug.log('Cleaning up browser UI manager', null, 1);\n            if (typeof window.vdmBrowserUIManager.destroy === 'function') {\n                window.vdmBrowserUIManager.destroy();\n            }\n            window.vdmBrowserUIManager = null;\n        }\n\n        // Level 1 log - overall initialization started\n        Debug.log('INITIALIZATION - STARTING', null, 1);\n\n        // Validate configuration\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('validatingConfig', 'Validating configuration...'));\n        const validationResult = ConfigUtils.validateConfig(window.diffConfig);\n        if (!validationResult.isValid) {\n            Debug.error(validationResult.error);\n            loaderManager.hideMainLoader(mainLoaderId);\n            return;\n        }\n\n        // High-level summary of what we're loading\n        Debug.log('CONFIGURATION SUMMARY', ConfigUtils.getConfigSummary(window.diffConfig), 1);\n\n        // PHASE 2: SERVICES INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 2: SERVICES', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingServices', 'Initializing services...'));\n\n        // Get saved theme preferences\n        const themePrefs = ConfigUtils.getThemePreferences(window.diffConfig);\n\n        // 1. Configure ResourceLoader WITHOUT theme loading\n        const resourceLoader = ResourceLoader.getInstance();\n        resourceLoader.configure({\n            availableThemes: availableThemes,\n            currentTheme: themePrefs.mode,\n            currentThemeFamily: themePrefs.family,\n            language: ConfigUtils.getFileExtension(window.diffConfig.filepath, 'php')\n        });\n\n        // 2. Initialize ThemeManager as the ONLY theme loader\n        const themeManager = ThemeManager.getInstance();\n        themeManager.initialize({\n            theme: window.diffConfig.theme\n        }, resourceLoader);\n\n        // PHASE 2.5: UI PREPARATION - Generate required DOM elements first\n        Debug.log('INITIALIZATION - PHASE 2.5: UI PREPARATION', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('preparingUI', 'Preparing UI elements...'));\n\n        // Detect if we're in file browser mode - container wrapper exists but diff container doesn't\n        const containerWrapper = document.getElementById(Selectors.CONTAINER.WRAPPER.name());\n        const diffContainer = document.getElementById(Selectors.DIFF.CONTAINER.name());\n        const isFileBrowser = containerWrapper && !diffContainer;\n\n        // If in file browser mode, create UI elements BEFORE initializing DiffViewer\n        if (isFileBrowser) {\n            Debug.log('Creating browser UI elements before DiffViewer initialization', null, 1);\n\n            // Create a temporary BrowserUIManager with config options\n            const tempUIManager = new BrowserUIManager({\n                options: window.diffConfig || {}\n            });\n\n            // Generate UI elements - container wrapper already exists from the PHP template\n            tempUIManager.initialize();\n\n            // Store reference and clean up later\n            browserUIManagerInstance = tempUIManager;\n            window.vdmBrowserUIManager = tempUIManager;\n\n            // Wait a short time to ensure DOM elements are fully created (important!)\n            await new Promise(resolve => setTimeout(resolve, 50));\n        }\n\n        // PHASE 3: COMPONENT INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 3: COMPONENTS', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingComponents', 'Initializing components...'));\n\n        // Now that DOM elements should exist, get the container - checking several times if needed\n        let container = document.querySelector(Selectors.DIFF.VIEWER);\n        let attempts = 0;\n        const maxAttempts = 5;\n\n        // If we're in file browser mode and container isn't found immediately, try a few times\n        if (isFileBrowser) {\n            while (!container && attempts < maxAttempts) {\n                Debug.log(`Container element ${Selectors.DIFF.VIEWER} not found, attempt ${attempts + 1}/${maxAttempts}`, null, 2);\n                await new Promise(resolve => setTimeout(resolve, 100)); // Wait 100ms between attempts\n                container = document.querySelector(Selectors.DIFF.VIEWER);\n                attempts++;\n            }\n        }\n\n        if (!container) {\n            Debug.error(`Container element ${Selectors.DIFF.VIEWER} not found after ${attempts} attempts`);\n            loaderManager.hideMainLoader(mainLoaderId);\n            return;\n        }\n\n        // Show the container (hide loading indicator if it exists)\n        const loadingElement = document.querySelector(Selectors.LOADER.MAIN);\n        if (loadingElement) {\n            loadingElement.style.display = 'none';\n            Debug.log('Loading element hidden', null, 2);\n        }\n\n        if (container) {\n            container.style.display = 'flex'; // Changed from 'block' to 'flex'\n            Debug.log('Container element shown', null, 2);\n        }\n\n        // Make sure serverSaveEnabled is properly set NOW (after UI preparation)\n        // This allows FileBrowserManager to configure it first via DiffConfigManager\n        const diffConfigManager = DiffConfigManager.getInstance();\n\n        // Read serverSaveEnabled from window.diffConfig (via DiffConfigManager interface)\n        const serverSaveEnabled = diffConfigManager.get('serverSaveEnabled', false);\n        Debug.log(`Using serverSaveEnabled=${serverSaveEnabled} from DiffConfigManager`, null, 2);\n\n        // 3. Create DiffViewer with runtime properties and pass the mainLoaderId\n        const diffViewer = new DiffViewer({\n            // Runtime properties - read directly from DiffConfigManager (which uses window.diffConfig)\n            diffData: diffConfigManager.get('diffData'),\n            serverSaveEnabled: serverSaveEnabled,\n            // SECURITY: Use only fileRefId and filenames, not server paths\n            fileRefId: diffConfigManager.get('fileRefId', ''),\n            oldFileRefId: diffConfigManager.get('oldFileRefId', ''),\n            newFileName: diffConfigManager.get('newFileName', ''),\n            oldFileName: diffConfigManager.get('oldFileName', ''),\n            isIdentical: diffConfigManager.get('isIdentical', false),\n            filepath: diffConfigManager.get('filepath'),\n\n            // Dependencies (not config values)\n            resourceLoader: resourceLoader,\n            themeManager: themeManager,\n            endpointDiscovery: endpointDiscovery,\n\n            // Pass the centralized loader management ID\n            mainLoaderId: mainLoaderId\n        });\n\n        // Store reference\n        window.diffViewer = diffViewer;\n\n        // If we created a temporary UI manager, update it with the actual diffViewer instance\n        if (isFileBrowser && browserUIManagerInstance) {\n            browserUIManagerInstance.setDiffViewer(diffViewer);\n            // Set the browserUIManager on the diffViewer to ensure proper bidirectional reference\n            diffViewer.setBrowserUIManager(browserUIManagerInstance);\n        }\n\n        // PHASE 4: RESOURCE LOADING - level 1 log\n        Debug.log('INITIALIZATION - PHASE 4: RESOURCES', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingResources', 'Loading resources...'));\n\n        // 4. Load core dependencies - syntax highlighter ONLY, no theme\n        await resourceLoader.loadSyntaxHighlighterCore();\n\n        // 5. Load theme ONCE through ThemeManager\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('loadingTheme', 'Loading theme...'));\n        await themeManager.loadInitialTheme();\n\n        // PHASE 5: UI INITIALIZATION - level 1 log\n        Debug.log('INITIALIZATION - PHASE 5: UI', null, 1);\n        loaderManager.updateLoaderMessage(mainLoaderId, translationManager.get('initializingUI', 'Initializing UI...'));\n\n        // 7. Initialize UI after all resources are loaded\n        await diffViewer.initialize();\n\n        // Mark as loaded using DOMUtils\n        const diffContainerElement = document.querySelector(Selectors.DIFF.CONTAINER);\n        if (diffContainerElement) {\n            diffContainerElement.classList.add(Selectors.STATUS.LOADED.name());\n        }\n\n        // PHASE 6: COMPLETION - level 1 log\n        Debug.log('INITIALIZATION - COMPLETE', null, 1);\n\n        // Hide the loader now that initialization is complete\n        loaderManager.hideMainLoader(mainLoaderId);\n\n        return diffViewer;\n    } catch (error) {\n        Debug.error('Error initializing diff viewer:', error);\n        const viewerElement = document.querySelector(Selectors.DIFF.VIEWER);\n        if (viewerElement) {\n            // Use AlertManager for error display\n            const alertManager = AlertManager.getInstance();\n\n            // Get error message from translations if possible\n            const errorTitle = translationManager.get('errorLoadingDiff', 'Error loading diff');\n            const errorMessage = `\n                <h4>${errorTitle}</h4>\n                <p>${error instanceof Error ? error.message : String(error)}</p>\n            `;\n\n            const alertElement = alertManager.showError(errorMessage, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false, // Message is already prepared with translations\n                className: 'vdm-w-100' // Make alert fill the container width\n            });\n\n            // Clear the viewer and add the alert\n            viewerElement.innerHTML = '';\n            viewerElement.appendChild(alertElement);\n            viewerElement.style.display = 'flex';\n        }\n\n        // Always hide the loader on error\n        loaderManager.hideMainLoader(mainLoaderId);\n    }\n};\n\n// Explicitly export the BrowserUIManager to the global window object\n// This ensures it's available to external scripts like file-browser.js\nwindow.BrowserUIManager = BrowserUIManager;\n\n// Export the LoaderManager to the global window object so it can be used\n// by components before the main app initializes\nwindow.LoaderManager = LoaderManager;\n\n// Make TranslationManager available globally\nwindow.TranslationManager = TranslationManager;\n\n// Make AlertManager available globally\nwindow.AlertManager = AlertManager;\n\n// Make DiffConfigManager available globally\nwindow.DiffConfigManager = DiffConfigManager;\n\n// Export components for module bundlers\nexport {\n    DiffViewer,\n    BrowserUIManager,\n    EndpointDiscovery,\n    LoaderManager,\n    DiffConfigManager\n};\n"],"names":["root","factory","exports","module","define","amd","a","i","this","Debug","DebugUtility","_classCallCheck","enabled","logHistory","maxLogHistory","prefix","logLevel","key","value","arguments","length","undefined","console","warn","concat","current","level","attempted","log","_window$diffConfig","window","diffConfig","debug","message","data","shouldLog","_addToHistory","error","maxLevel","_toConsumableArray","filter","entry","type","args","push","timestamp","Date","shift","BaseSingleton","Error","instanceVar","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","String","Number","_toPrimitive","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_getPrototypeOf","bind","_setPrototypeOf","instance","ResourceLoader","_BaseSingleton","_this","_isFirstInstance","config","loadedResources","Set","loadedLanguages","loadedThemes","CDN_BASE","HLJS_VERSION","LINE_NUMBERS_VERSION","_inherits","_loadDependencies","_callee","_context","loadSyntaxHighlighterCore","loadLanguage","language","_loadSyntaxHighlighterCore","_callee2","_context2","hljs","loadScript","t0","_loadLanguage","_callee3","normalizedLang","_context3","toLowerCase","has","add","_x","url","loadPromise","resourceCache","Map","set","get","_this2","_cacheResource","reject","script","document","createElement","src","onload","onerror","head","appendChild","href","_this3","link","rel","selectorHandler","target","prop","startsWith","substring","processSelectors","obj","result","Proxy","baseSelectors","CODE","LINE_CONTENT","LINE_EMPTY","LINE_NUMBER","TABLE","CONTAINER","ROOT","WRAPPER","COPY","BUTTON","COPIED","ICON","MODAL","ACTIONS","DIALOG","INSTRUCTIONS","TEXTAREA","TEXTAREA_ELEM","PROCESSING","TEXT","DIFF","CHECK_ALL_BTN","CHUNK","CHUNK_SELECTED","CHUNK_UNSELECTED","CONTENT_WRAPPER","LINE_ADD","LINE_CONTENT_EMPTY","LINE_DELETE","LINE_PLACEHOLDER","LINE_REPLACE_LEFT","LINE_REPLACE_RIGHT","PANE","PANE_CONTENT","PANE_HEADER","PANE_LEFT","PANE_RIGHT","PANES_CONTAINER","PLACEHOLDER","TABLE_WRAPPER","VIEWER","ICONS","COLUMN","MARKER","MARKER_PLACEHOLDER","SELECT","SELECT_LEFT","SELECT_RIGHT","LOADER","ACTIVE","FULLSCREEN","INDICATOR","INLINE","MAIN","SPINNER","MERGE","BUTTON_APPLY","BUTTON_PREVIEW","CONFLICT_MODAL","CONTROLS_ACTIONS","DESTINATION_DROPDOWN","DESTINATION_TOGGLE","GET_MERGED_RESULT_BTN","PREVIEW_CONTENT","PREVIEW_MODAL","TOGGLE_ICON","TOGGLE_TEXT","BACKDROP","CLOSE","CLOSE_BTN","CODE_COPY","CONFIRM","CONFIRMATION_CONTENT","CONTENT","CONTINUE_BTN","COPY_CONTENT","FIXED_FOOTER","FOOTER","HEADER","HEADER_FIXED","MERGE_BTN","MESSAGE","PREVIEW","PREVIEW_CONTENT_ID","PREVIEW_FILENAME","TITLE","NAVIGATION","COUNTER","COUNTER_ELEMENT","HIGHLIGHT","NAV_CHUNK","NEXT_BUTTON","PREV_BUTTON","STATUS","LOADED","RESOLVED","SCROLLED","UNRESOLVED","THEME","DARK","LIGHT","LOADING_INDICATOR","MODE_PREFIX","SELECTOR","SWITCHER","TOGGLE","THEME_SWITCHER","CONTROL","LABEL","SLIDER","SLIDER_ROUND","THEME_SELECTOR","TOOLTIP","ARROW","UTILITY","defaultUtilitySelectors","BUTTON_PRIMARY","BUTTON_SECONDARY","BUTTON_INFO","BUTTON_SUCCESS","BUTTON_WARNING","BUTTON_DANGER","BUTTON_FLAT","BUTTON_SMALL","BUTTON_EXTRA_SMALL","BUTTON_LARGE","ALERT","ALERT_PREFIX","ALERT_INFO","ALERT_SUCCESS","ALERT_WARNING","ALERT_DANGER","FORM_SELECT","FORM_SELECT_SM","FLEX","FLEX_COLUMN","JUSTIFY_CONTENT_BETWEEN","JUSTIFY_CONTENT_CENTER","ALIGN_ITEMS_CENTER","ALIGN_ITEMS_STRETCH","PADDING_2","PADDING_3","MARGIN_2","MARGIN_TOP_2","MARGIN_BOTTOM_2","MARGIN_START_1","MARGIN_START_2","MARGIN_END_2","MARGIN_END_3","MARGIN_X_1","MARGIN_Y_2","MARGIN_END_1","ui","button","buttonPrimary","buttonSecondary","buttonInfo","buttonSuccess","buttonWarning","buttonDanger","buttonFlat","alert","alertInfo","alertSuccess","alertWarning","alertDanger","getUtilitySelectors","IconRegistry","iconName","options","_options$classes","classes","_options$width","width","_options$height","height","_options$title","title","_options$ariaHidden","ariaHidden","pathData","_getIconPathData","titleElement","viewBox","paths","svgString","getIcon","template","innerHTML","trim","content","firstChild","TranslationManager","_callSuper","translations","lang","initialized","_initializeFromGlobalConfig","initialize","defaultValue","_objectSpread","_instance","_defineProperty","AlertManager","containerId","activeAlert","timeoutId","container","_ensureContainer","getElementById","id","className","style","position","top","left","transform","zIndex","maxWidth","body","mergedOptions","timeout","dismissable","translate","targetElement","placement","useContainer","hasTargetElement","alertElement","baseAlertClass","Selectors","toString","alertClass","typeClass","selectorBase","selectorType","finalMessage","translationManager","getInstance","closeButton","setAttribute","addEventListener","hideAlert","parentNode","insertBefore","nextSibling","setTimeout","_this$activeAlert","clearTimeout","removeChild","showAlert","elementCache","DOMUtils","buttonId","handlerFn","logName","instanceId","now","_handlerId","newBtn","cloneNode","replaceChild","element","includes","querySelector","currentValue","elements","toggleBtn","toggleIcon","toggleText","firstOption","secondOption","firstClass","secondClass","firstText","secondText","firstTooltip","secondTooltip","textContent","_iconName","_options$className","_options$elementId","elementId","_options$keepExisting","keepExisting","alertManager","iconClass","HAS_ICON","visible","displayMode","display","classList","remove","_element$classList","tagName","attributes","Array","isArray","split","entries","_ref","_ref2","_slicedToArray","containerElement","_options$id","_options$attributes","_options$content","Node","selector","context","contextElement","querySelectorAll","insertAdjacentHTML","elementOrId","eventType","handler","_options$context","_options$removeExisti","removeExisting","_options$styles","styles","getElements","removeEventListener","_ref3","_ref4","property","createIcon","ConfigUtils","_len","configs","_key","_i","_configs","mergeConfigurations","isValid","diffData","chunks","diffDataKeys","old","new","configKeys","oldData","newData","_config$diffData","filepath","defaultExtension","_config$theme","_config$theme2","mode","localStorage","getItem","theme","defaultMode","family","defaultFamily","_classPrivateFieldInitSpec","_checkPrivateRedeclaration","_classPrivateFieldSet","_assertClassBrand","_classPrivateFieldGet","_apiEndpoint","WeakMap","_discoveryPromise","_EndpointDiscovery_brand","WeakSet","EndpointDiscovery","_discoverEndpoint","scriptEndpoint","configUrl","response","apiEndpoint","_determineEndpointFromScript","_getEndpointConfigUrl","fetch","ok","statusText","json","_getEndpoint","endpointName","fileName","baseUrl","discoverEndpoint","replace","endsWith","_getApiUrl","endpointFile","getEndpoint","_x2","_","_step","scripts","scriptUrl","_iterator","_createForOfIteratorHelper","err","basePath","lastIndexOf","location","ThemeManager","availableThemes","currentTheme","defaultTheme","listeners","resourceLoader","savedFamily","savedMode","_this$availableThemes","_this$availableThemes2","fallbackToDefaults","alternateMode","_this$availableThemes3","_this$availableThemes4","getThemeCdnBase","getThemeCdnVersion","_applyTheme","themeUrl","activeTheme","themeLink","getThemeUrl","getAttribute","loadCSS","disabled","updateContainerThemeClass","setItem","notifyListeners","_setThemeMode","applyTheme","_x3","_setThemeFamily","_x4","listener","_loadInitialTheme","_callee4","_context4","ThemeSelector","diffViewer","selectElement","themeManager","browserUIManager","boundHandleThemeChange","handleThemeChange","_isThemeSelectorEnabled","existingSelector","updateSelector","selectorElements","generateThemeSelector","populateSelectorOptions","createSelectorElement","addSelectorToDOM","addListener","_this$diffViewer","_this$diffViewer2","getConfig","themeSelector","getCurrentTheme","getAvailableThemeFamilies","count","themeKey","createAndAppendElement","selected","formatThemeName","themeName","map","word","toUpperCase","join","themeSwitcherContainer","getElement","optionsCount","event","_this$diffViewer3","_this4","selectedTheme","showThemeLoading","setThemeFamily","hideThemeLoading","StringUtils","unsafe","str","MergeContentFormatter","extension","withLineNumbers","originalContent","escapedContent","escapeHtml","languageClass","getLanguageClass","escapeAttribute","preview","unresolvedChunkSingular","unresolvedChunksPlural","code","hasAttribute","removeAttribute","originalText","LoaderManager","activeLoaders","loaderIdCounter","isMainLoaderActive","mainLoaderId","recentlyRemovedLoaders","operationLog","maxLogEntries","verboseLogging","isInitialized","operation","details","toISOString","translationKey","translatedMessage","loader","fullscreen","inline","small","spinner","messageElement","updateLoaderMessage","loaderId","loaderElement","_createLoaderElement","HTMLElement","getComputedStyle","getPropertyValue","_logOperation","currentId","_hideAllInlineLoaders","mainLoaderElement","newMessageElement","isMainLoader","showLoader","loaderInfo","isEarlyLoader","showMainLoader","providedId","actualMainId","success","_hideSpecificLoader","from","info","_removeLoaderElement","loaderIds","hideMainLoader","_loader$element","_loader$element2","size","clear","_loader$element$query","exists","isMain","age","inDom","wasRemoved","_cleanupOldRemovedLoaders","activeCount","recentlyRemovedCount","mainLoaderActive","operations","loaders","_ref5","_info$element$querySe","_ref6","SyntaxHighlighter","highlightJsLoaded","_initialize","loadHighlightJs","getRuntimeProps","setLanguage","_loadHighlightJs","codeElements","el","loaderManager","loadingMessage","index","startTime","performance","processBatch","hideLoader","duration","toFixed","end","Math","min","highlightElement","progress","round","progressMessage","requestAnimationFrame","contains","cls","resetHighlighting","lineNumbersBlock","_setLanguage","_runtimeProps$diffDat","runtimeProps","newLanguage","sourceUsed","languageMap","_elementCache","_iconMarkerCache","_rowCache","_chunkIndex","_cacheStats","elementCacheHits","elementCacheMisses","iconMarkerCacheHits","iconMarkerCacheMisses","rowCacheHits","rowCacheMisses","ChunkUtils","clearCache","byId","byLineId","allChunkIds","allChunkElements","chunkId","side","lineId","all","right","lineIds","row","closest","dataset","allCacheKey","sideCacheKey","allIconMarkers","marker","iconMarkers","preloadChunks","sort","b","_a$dataset$lineId","_b$dataset$lineId","parseInt","cacheKey","getChunkElements","markers","getIconMarker","find","m","iconMarker","lines","line","ChunkRenderer","chunkManager","leftHtml","buildDiffPaneHtml","oldContent","rightHtml","newContent","chunksWithPlaceholders","html","_step2","lineCounter","_iterator2","_renderDiffLine","lineNumber","chunkType","chunk","hasPlaceholder","_renderPlaceholderLine","_renderContentLine","additionalClass","conflict","placeholderType","lineContent","isEmpty","_getChunkClass","displayContent","styleAttr","ChunkVisualStateManager","_pendingOperations","_isBatching","_metrics","lastBatchSize","lastBatchTime","state","batch","sortedElements","sortElementsByLineNumber","oppositeSide","firstElement","_applyStateToElements","_updateIconMarker","_updateOppositeMarker","_notifySelectionChange","_element$dataset","lineIdParts","oppositeLineId","oppositeMarker","currentClasses","getChunkIconMarkers","_applyResetToElements","notify","batchSize","updateOperations","resetOperations","_processBatchedResets","_processBatchedUpdates","processingTime","resetOps","updateOps","msPerOperation","allElements","elementsByState","firstElementsByState","_elementsByState$stat","chunksMap","getBoundingClientRect","removeClasses","addClass","rows","getParentRow","_row$classList","iconRemoveClasses","_el$classList","_row$classList2","_marker$classList","isPlaceholder","onSelectionChange","ChunkSelectionHandler","selections","visualStateManager","SELECTED","UNSELECTED","_performanceMetrics","lastOperationTime","operationCount","_boundClickHandler","_handleClick","_boundCheckAllHandler","_handleCheckAll","setupEventHandlers","cursor","_setupCheckAllButtons","panes","leftPane","rightPane","_createCheckAllButtonHeader","pane","header","langBadge","checkAllButton","alignItems","verticalAlign","iconWrapper","marginRight","lineHeight","uncheckIcon","textSpan","createTextNode","currentTarget","iconState","oppositeButton","_getOppositeButton","_setButtonProcessingState","_toggleButtonIconState","clearAllSelections","selectAllOnSide","_recordPerformanceMetrics","isProcessing","opacity","operationTime","cacheStats","getCacheStats","elementHitRatio","iconHitRatio","totalOperations","currentSide","currentState","newIconState","useBatch","conflictChunks","largeDiff","_syncWithDiffConfig","chunksBySide","updateVisualState","applyBatch","_refreshIconStates","_updateNavigationCounter","toggleChunkSelection","selectedSide","selectedElements","oppositeElements","firstOppositeElement","oppositeIconMarker","isPlaceholderType","wasPlaceholder","selectedLineId","selectedElement","selectedHasPlaceholder","selectedIsPlaceholderType","outerHTML","_this$chunkManager$di","chunkSelections","resetVisualState","_this$chunkManager$di2","_this$chunkManager$di3","diffNavigator","updateCounter","isChunkResolved","selectedChunks","selectedChunkIds","elementsToUpdate","_this4$chunkManager$d","_chunkId","_this4$chunkManager$d2","MergeContentGenerator","contentArray","linesCount","totalContentLines","sampleLines","totalChunks","generateFileContent","mergedLines","oldChunkLines","newChunkLines","processedChunks","chunkLine","totalMergedLines","_l$line","mergedContent","totalLines","contentLength","ChunkManager","chunkElements","renderer","selectionHandler","contentGenerator","SELECTED_STATE","UNSELECTED_STATE","initTime","renderTime","chunkCount","endTime","validateChunkStructure","renderChunks","setupChunkSelection","initChunkElements","msPerChunk","max","getSelections","generateMergedContent","generateFileFromLines","initializedCount","anyChunkElements","anyChunkIdElements","validChunks","invalidChunks","valid","invalid","total","metrics","getMetrics","ThemeToggle","toggleElementId","toggleElement","checked","handleToggle","updateToggle","newMode","setThemeMode","ModalManager","modals","activeModal","createModal","contentId","contentClass","footerButtons","text","class","headerClass","modalClass","_setupEventListeners","modalId","modalHtml","attr","isCloseButton","classNames","some","iconHtml","getIconHtml","_appendToBody","isOpen","modalElement","setFullscreenSize","events","_ref7","_ref8","eventName","buttonText","buttonClass","tempContainer","firstElementChild","backdrop","matches","modal","close","callback","beforeOpenCallbacks","register","_showModal","displayBefore","overflow","_hideModal","contentSelector","contentType","contentPreview","targetSelector","_container","found","containsPre","hasPreElements","innerHtmlLength","Element","elementType","headerHeight","offsetHeight","codeText","safeText","_escapeHtml","setContent","textarea","copyBtn","select","_this5","_navigator$clipboard","navigator","clipboard","writeText","_showCopySuccess","_err","execCommand","_showCopyFailure","open","_this6","cancelText","confirmText","click","onConfirm","onCancel","_this7","onClose","alertContent","CopyButton","directElement","querySelectorElement","preElements","pre","codeEl","preventDefault","stopPropagation","textToCopy","_sourceCodeElement","_decodeHTMLEntities","_showManualCopyModal","_showProcessingState","modalManager","createCopyModal","MergePreviewManager","mergeHandler","setupPreviewButton","previewButton","getMergedResultButton","buttonToUse","handlePreviewClick","_this$diffViewer$runt","getMergedContent","formattedContent","formatPreview","controlsContainer","messageArea","applySyntaxHighlighting","addCopyButtonsToPreview","showPreviewError","_DOMUtils$getElement","preElement","codeElement","errorMessage","escapedError","showMessage","NavigationUtils","scrollTarget","offsetTop","clientHeight","scrollTo","behavior","offsetX","offsetY","handleSelector","ignoreSelector","positionStyle","dragClass","isDragging","mouseDownHandler","rect","clientX","bottom","clientY","mouseMoveHandler","containerRect","parentElement","newRight","newBottom","offsetWidth","mouseUpHandler","destroy","MergeUIController","mergeDestination","mergeToggleBtn","mergeToggleIcon","mergeToggleText","initMergeDestinationToggle","setupModalButtons","setupApplyMergeButton","populateMergeDestinations","savedDestination","valueExists","selectedIndex","setupMergeToggleEvents","_diffData$new","_runtimeProps$filepat","_diffData$old","newFileName","filename","oldFileName","newFile","oldFile","newFileWithoutExt","oldFileWithoutExt","newFileExt","oldFileExt","newMergedFile","oldMergedFile","saveOptions","saveToOriginal","saveWithSuffix","saveToOld","saveToOldWithSuffix","saveToBoth","saveToBothWithSuffix","optionCount","newToggleBtn","newMergeDestination","dropdownIcon","focus","showPicker","clickEvent","MouseEvent","bubbles","cancelable","view","dispatchEvent","updateMergeToggle","paddingRight","appearance","borderColor","newFileColorClass","newFileBtnClass","oldFileBtnClass","bothFilesBtnClass","colorClass","iconClasses","applyButton","previewModalId","highlightUnresolvedChunks","proceedWithMerge","getMergeType","registerBeforeOpenCallback","continueBtn","mergeBtn","onclick","mergeControlsActions","destinationDropdown","toggleButton","form","justifyContent","destinationContainer","handleApplyMerge","Event","unresolvedCount","countUnresolvedConflicts","showConflictModal","fileRefId","oldFileRefId","formatUnresolvedCount","newContinueBtn","newMergeBtn","_this$mergeDestinatio","chunkIndex","indexOf","navigateToChunk","chunkElement","addHighlightEffect","getMergedResultText","getMergedResultTooltip","getMergedResultBtn","downloadIconHtml","buttonContainer","spacer","flex","MergeOperationHandler","_proceedWithMerge","mergeType","resultContainer","_resultContainer","_alertManager","_alertElement","_resultContainer2","_alertManager2","_alertElement2","applyMerge","showSuccess","scrollToMergeResult","showError","_applyMerge","wasBeautified","formParams","endpoint","JSON","stringify","isContentBeautified","action","headers","URLSearchParams","resultElement","scrollIntoView","block","MergeHandler","previewManager","uiController","operationHandler","serverSaveEnabled","setupLocalOnlyControls","resolved","success_message","showWarning","NavigationCounter","counterElement","prevButton","nextButton","conflictCount","currentIndex","activeConflicts","currentChunkIndex","findIndex","NavigationUIBuilder","_createControls","counter","navChunk","navigateToPrevConflict","navigateToNextConflict","newPrevButton","newNextButton","ConflictNavigator","unresolvedElements","unresolvedChunkIds","_this$_getUnresolvedC","_getUnresolvedChunkInfo","firstUnresolvedIndex","_this$_getUnresolvedC2","nextIndex","_findNextChunkIndex","indexMap","_createChunkIndexMap","indices","_this$_getUnresolvedC3","prevIndex","_findPrevChunkIndex","paneContent","scrollElementIntoView","navigationCounter","DiffNavigator","initializeImmediately","uiBuilder","conflictNavigator","initNavigation","_this$diffViewer$chun","configChunks","addNavigationButtons","setupKeyboardShortcuts","navigateToFirstConflict","disableButtons","createNavigationUI","setCounterElement","setButtons","ctrlKey","metaKey","ScrollSynchronizer","isSyncing","leftContent","rightContent","_handleScroll","passive","_updateScrollState","sourceElement","scrollTop","scrollLeft","contentElement","wasScrolled","isScrolled","IconMarkerManager","cellHeight","_calculateCellHeight","documentElement","setProperty","_setupIconColumn","_updateIconColumnHeights","_setupIconHeightUpdater","codeTableWrapper","iconColumn","chunkCells","chunkGroups","cell","firstCell","_createIconMarker","tableHeight","scrollHeight","iconIndex","lineNumberCells","heights","sampleSize","medianHeight","floor","resizeTimer","currentHeight","abs","LayoutManager","paneWidth","updatePaneWidth","setupWidthObserver","newWidth","clientWidth","setCSSVariable","observer","MutationObserver","mutations","shouldUpdate","mutation","attributeName","observe","childList","subtree","attributeFilter","disconnect","DiffViewer","_window$diffConfig2","_window$diffConfig3","_window$diffConfig4","_window$diffConfig5","_window$diffConfig6","_window$diffConfig7","_window$diffConfig8","_window$diffConfig9","showSelector","isIdentical","demoEnabled","_initializeServices","_createComponents","syntaxHighlighter","themeToggle","scrollSynchronizer","iconMarkerManager","layoutManager","_initializeData","_loadResources","_renderUI","_setupUIFeatures","_showDemoModeWarning","initModals","_handleInitializationError","errorText","_initializeData2","_this$runtimeProps$di","_this$runtimeProps$di2","_this$runtimeProps$di3","initChunks","_loadResources2","_renderUI2","_this$runtimeProps$di4","_diffContainer$parent","_diffContainer$parent2","containerWrapper","themeSwitcher","diffContainer","highlightAll","toggleClass","_setupUIFeatures2","_callee5","diffLoadedEvent","_context5","setupSynchronizedScrolling","initializeIconMarkers","CustomEvent","detail","viewer","_this$browserUIManage","comparisonForm","newConfig","props","_window$diffConfig10","_window$diffConfig11","_window$diffConfig12","_window$diffConfig13","windowDiffConfig","hasFileRefId","hasOldFileRefId","hasNewFileName","hasOldFileName","_window$diffConfig14","_window$diffConfig15","_window$diffConfig16","_window$diffConfig17","_window$diffConfig18","_window$diffConfig19","isBeautified","_callee6","endpointDiscovery","_this$config","defaultEndpoints","_context6","apiEndpoints","setBrowserUIManager","BrowserUIManager","_this$options","translationsSource","mergeControls","hasWindowConfig","hasOptionsTranslations","getLanguage","getAllTranslations","_this$options2","containerSelector","generateDiffContainer","generateThemeSwitcher","generateMergeControls","themeSwitcherId","themeLoadingId","themeToggleId","cssText","switcherWrapper","sunIcon","moonIcon","loadingContainer","themeLoadingContainer","containerParent","themeSelectorId","selectorContainer","themeSelectorContainer","diffContainerId","viewerId","viewerElement","createdViewer","getTranslations","previewButtonId","toggleButtonId","toggleIconId","toggleTextId","dropdownId","applyButtonId","previewSection","mergeSection","toggleGroup","saveToOriginalTooltip","dropdown","whiteSpace","pageYOffset","existingThemeSwitcher","existingThemeSelector","existingThemeSelectorContainer","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","_classPrivateMethodInitSpec","_DiffConfigManager_brand","DiffConfigManager","_serverConfigLoaded","_ensureServerConfigLoaded","apiBaseUrl","scriptSrc","match","configResponse","serverConfig","existingServerSaveEnabled","status","_args2","ensureServerConfigLoaded","preservedValues","preservedCount","preserved","overrides","partialConfig","_mergeDeep","source","output","_isObject","item","browserUIManagerInstance","addCopyrightLink","linkContainer","enableDiffViewer","configLang","initialMessage","_message","validationResult","themePrefs","isFileBrowser","tempUIManager","attempts","maxAttempts","loadingElement","diffConfigManager","diffContainerElement","errorTitle","windowDiffConfigExists","configStructure","directDebug","nestedDebug","finalDebug","finalLogLevel","adoptEarlyLoader","vdmBrowserUIManager","validateConfig","getConfigSummary","getThemePreferences","configure","currentThemeFamily","getFileExtension","setDiffViewer","loadInitialTheme","t1"],"sourceRoot":""}