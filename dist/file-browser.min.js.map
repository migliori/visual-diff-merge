{"version":3,"file":"file-browser.min.js","mappings":"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","sources":["webpack://diff-files/webpack/universalModuleDefinition","webpack://diff-files/./src/components/browser/FileBrowserManager.js","webpack://diff-files/./src/constants/Selectors.js","webpack://diff-files/./src/utils/AlertManager.js","webpack://diff-files/./src/utils/BaseSingleton.js","webpack://diff-files/./src/utils/Debug.js","webpack://diff-files/./src/utils/DiffConfigManager.js","webpack://diff-files/./src/utils/LoaderManager.js","webpack://diff-files/./src/utils/TranslationManager.js","webpack://diff-files/webpack/bootstrap","webpack://diff-files/webpack/runtime/define property getters","webpack://diff-files/webpack/runtime/hasOwnProperty shorthand","webpack://diff-files/webpack/runtime/make namespace object","webpack://diff-files/./src/file-browser.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","/**\n * File Browser Manager\n * Handles file selection, comparison, and diff visualization\n *\n * This component is responsible for the file browser UI in diff-viewer/file-browser.php\n */\n\nimport Selectors from '../../constants/Selectors';\nimport { Debug } from '../../utils/Debug';\nimport { TranslationManager } from '../../utils/TranslationManager';\nimport { LoaderManager } from '../../utils/LoaderManager';\nimport AlertManager from '../../utils/AlertManager';\nimport { DiffConfigManager } from '../../utils/DiffConfigManager';\n\n/**\n * Manages the file browser UI and functionality\n */\nexport class FileBrowserManager {\n    /**\n     * @param {Object} options - Configuration options\n     */\n    constructor(options = {}) {\n        this.oldFileSelect = document.getElementById('old-file');\n        this.newFileSelect = document.getElementById('new-file');\n\n        // Initialize the DiffConfigManager with the options\n        const configManager = DiffConfigManager.getInstance();\n        configManager.initialize({\n            container: 'vdm-diff__viewer',\n            ...options\n        });\n\n        // Initialize loader manager\n        this.loaderManager = LoaderManager.getInstance();\n\n        // Initialize translation manager\n        this.translationManager = TranslationManager.getInstance();\n\n        this.init();\n    }\n\n    /**\n     * Initialize the file browser\n     */\n    init() {\n        Debug.log('FileBrowserManager: Initializing', null, 2);\n\n        // Add event listeners to selectors\n        if (this.oldFileSelect) {\n            this.oldFileSelect.addEventListener('change', () => this.syncFileSelections());\n        } else {\n            Debug.warn('FileBrowserManager: Old file select element not found', null, 1);\n        }\n\n        if (this.newFileSelect) {\n            this.newFileSelect.addEventListener('change', () => {\n                // When user manually selects a new file, we don't sync\n            });\n        } else {\n            Debug.warn('FileBrowserManager: New file select element not found', null, 1);\n        }\n\n        // Form submit handler\n        const form = document.getElementById('vdm-file-comparison-form');\n        if (form) {\n            form.addEventListener('submit', (event) => this.handleComparison(event));\n        } else {\n            Debug.warn('FileBrowserManager: Form element not found', null, 1);\n        }\n\n        // Initial sync\n        this.syncFileSelections();\n\n        Debug.log('FileBrowserManager: Initialization complete', null, 2);\n    }\n\n    /**\n     * Handle file comparison form submission\n     * @param {Event} event - Form submit event\n     */\n    async handleComparison(event) {\n        event.preventDefault();\n        Debug.log('FileBrowserManager: Handling comparison', null, 2);\n\n        // Get the AlertManager instance to clear any existing alerts\n        const alertManager = AlertManager.getInstance();\n        alertManager.hideAlert();\n\n        // Get the container wrapper element\n        const containerWrapper = document.getElementById(Selectors.CONTAINER.WRAPPER.replace('#', ''));\n\n        // Clear any existing content immediately before loading new content\n        this.clearUI();\n\n        // Show the container wrapper if it's hidden\n        if (containerWrapper?.classList.contains('vdm-d-none')) {\n            containerWrapper.classList.remove('vdm-d-none');\n        }\n\n        // Show an early loader before starting the process\n        const loaderId = this.loaderManager.showEarlyLoader(\n            this.translationManager.get('loadingContent', 'Processing content...')\n        );\n\n        try {\n            // Clean up previous instances first\n            this.cleanupPreviousInstance();\n\n            // 1. Gather selected file data\n            const fileData = this.getSelectedFilesData();\n\n            // 2. Fetch file contents\n            this.loaderManager.updateLoaderMessage(loaderId, this.translationManager.get('loadingContent', 'Loading file contents...'));\n            const contents = await this.fetchFileContents(fileData);\n\n            // Check for identical content\n            if (contents.old === contents.new) {\n                Debug.log('FileBrowserManager: File contents are identical', null, 2);\n                this.loaderManager.hideMainLoader(loaderId);\n                this.handleIdenticalContent();\n                return;\n            }\n\n            // 3. Configure diffConfig\n            this.configureDiffData(fileData, contents);\n\n            // 4. Process diff data\n            this.loaderManager.updateLoaderMessage(loaderId, this.translationManager.get('processingChunks', 'Processing diff...'));\n            const result = await this.processDiff();\n\n            // Skip if identical content\n            if (result.identical) {\n                Debug.log('FileBrowserManager: Files contain identical content according to backend', null, 2);\n                this.loaderManager.hideMainLoader(loaderId);\n                this.handleIdenticalContent();\n                return;\n            }\n\n            // 5. Update diffConfig with result\n            DiffConfigManager.getInstance().setDiffConfig(result);\n\n            // 6. Initialize the UI manager\n            this.loaderManager.updateLoaderMessage(loaderId, this.translationManager.get('loadingDiff', 'Initializing viewer...'));\n            await this.initializeUIManager();\n\n            // 7. Initialize diff viewer\n            await this.initializeDiffViewer();\n\n            // Note: We don't hide the loader here since DiffViewer will adopt it\n        } catch (error) {\n            Debug.error('FileBrowserManager: Error during comparison', error, 1);\n            // Hide the loader if there's an error\n            this.loaderManager.hideMainLoader(loaderId);\n\n            // Get elements for error display\n            const viewerElement = document.getElementById('vdm-diff__viewer');\n            this.handleError(error, null, viewerElement);\n        }\n    }\n\n    /**\n     * Clean up previous instances\n     */\n    cleanupPreviousInstance() {\n        // Clean up previous instances if they exist\n        if (window.diffViewer) {\n            try {\n                Debug.log('FileBrowserManager: Cleaning up previous DiffViewer instance', null, 2);\n                window.diffViewer.destroy();\n                window.diffViewer = null;\n            } catch (e) {\n                Debug.warn('FileBrowserManager: Error destroying previous diffViewer', e, 1);\n            }\n        }\n\n        if (window.vdmBrowserUIManager) {\n            try {\n                Debug.log('FileBrowserManager: Cleaning up previous BrowserUIManager instance', null, 2);\n                window.vdmBrowserUIManager.destroy();\n                window.vdmBrowserUIManager = null;\n            } catch (e) {\n                Debug.warn('FileBrowserManager: Error destroying previous BrowserUIManager', e, 1);\n            }\n        }\n    }\n\n    /**\n     * Initialize the UI manager\n     * @returns {Promise<boolean>} Success status\n     */\n    async initializeUIManager() {\n        Debug.log('FileBrowserManager: Initializing UI manager', null, 2);\n\n        // Import the BrowserUIManager if available\n        if (typeof BrowserUIManager !== 'undefined') {\n            // Create new instance with the global window.diffConfig\n            window.vdmBrowserUIManager = new BrowserUIManager(window.diffConfig);\n\n            // Initialize with container\n            return window.vdmBrowserUIManager.initialize(Selectors.CONTAINER.WRAPPER);\n        } else {\n            Debug.warn('FileBrowserManager: BrowserUIManager not available, UI elements must be created manually', null, 1);\n            // Will fall back to manual UI creation\n            return false;\n        }\n    }\n\n    /**\n     * Initialize the diff viewer\n     * @returns {Promise<boolean>} Success status\n     */\n    async initializeDiffViewer() {\n        Debug.log('FileBrowserManager: Initializing diff viewer', null, 2);\n\n        // Check if DiffViewer is available\n        if (typeof DiffViewer !== 'undefined') {\n            const configManager = DiffConfigManager.getInstance();\n\n            // Update container with correct selector ID\n            configManager.set('container', Selectors.DIFF.VIEWER.replace('#', ''));\n\n            // Ensure the runtime properties are set at the top level where DiffViewer expects them\n            if (!window.diffConfig.fileRefId && window.diffConfig.new?.ref_id) {\n                configManager.set('fileRefId', window.diffConfig.new.ref_id);\n                Debug.log('FileBrowserManager: Setting top-level fileRefId from new.ref_id', window.diffConfig.fileRefId, 1);\n            }\n\n            // SECURITY: Use safe filenames and fileRefIds, not server paths\n            if (!window.diffConfig.newFileName && window.diffConfig.new?.filename) {\n                configManager.set('newFileName', window.diffConfig.new.filename);\n                Debug.log('FileBrowserManager: Setting top-level newFileName from new.filename', window.diffConfig.newFileName, 1);\n            }\n\n            // Always explicitly set serverSaveEnabled if we have file references\n            configManager.set('serverSaveEnabled', !!window.diffConfig.fileRefId);\n\n            // DEBUG log the final diffConfig properties before initialization\n            Debug.log('FileBrowserManager: Final diffConfig settings before initialization', {\n                fileRefId: window.diffConfig.fileRefId,\n                oldFileRefId: window.diffConfig.oldFileRefId,\n                newFileName: window.diffConfig.newFileName,\n                oldFileName: window.diffConfig.oldFileName,\n                serverSaveEnabled: window.diffConfig.serverSaveEnabled,\n                demoEnabled: window.diffConfig.demoEnabled\n            }, 1);\n\n            // Validate the diff data before attempting to initialize\n            if (!window.diffConfig.diffData ||\n                !Array.isArray(window.diffConfig.diffData.chunks) ||\n                window.diffConfig.diffData.chunks.length === 0) {\n\n                Debug.warn('FileBrowserManager: No valid diff data found for initialization', {\n                    hasDiffData: !!window.diffConfig.diffData,\n                    diffDataKeys: window.diffConfig.diffData ? Object.keys(window.diffConfig.diffData) : []\n                }, 1);\n\n                // Get container element\n                const viewerContainer = document.getElementById(window.diffConfig.container);\n                if (viewerContainer) {\n                    viewerContainer.innerHTML = `\n                        <div class=\"${Selectors.UTILITY.ALERT_WARNING}\">\n                            <h4>No Differences Found</h4>\n                            <p>The files appear to be identical or the diff engine couldn't process them correctly.</p>\n                            <p>Try selecting different files to compare.</p>\n                        </div>\n                    `;\n                }\n\n                // Return early to prevent initialization errors\n                return false;\n            }\n\n            // Create a new DiffViewer instance\n            window.diffViewer = new DiffViewer(window.diffConfig);\n\n            // Initialize the viewer\n            return window.diffViewer.initialize();\n        } else if (typeof window.enableDiffViewer === 'function') {\n            // Fall back to the global enableDiffViewer function if available\n            Debug.log('FileBrowserManager: DiffViewer not available, falling back to enableDiffViewer', null, 2);\n            return window.enableDiffViewer();\n        } else {\n            Debug.error('FileBrowserManager: DiffViewer not available', null, 1);\n            throw new Error('DiffViewer not available');\n        }\n    }\n\n    /**\n     * Get selected files data\n     * @returns {Object} Selected files data\n     */\n    getSelectedFilesData() {\n        Debug.log('FileBrowserManager: Getting selected files data', null, 3);\n        return {\n            old: {\n                path: this.oldFileSelect.value,\n                // SECURITY: Only retrieve file reference ID, not server path\n                refId: this.oldFileSelect.options[this.oldFileSelect.selectedIndex]\n                    .getAttribute('data-ref-id')\n            },\n            new: {\n                path: this.newFileSelect.value,\n                // SECURITY: Only retrieve file reference ID, not server path\n                refId: this.newFileSelect.options[this.newFileSelect.selectedIndex]\n                    .getAttribute('data-ref-id')\n            }\n        };\n    }\n\n    /**\n     * Fetch file contents\n     * @param {Object} fileData - File data object\n     * @returns {Promise<Object>} File contents\n     */\n    async fetchFileContents(fileData) {\n        Debug.log('FileBrowserManager: Fetching file contents', fileData, 3);\n\n        // Use the API endpoint to safely retrieve file content\n        const fetchFile = async (filePath, refId) => {\n            // SECURITY: Always use fileRefId when available\n            if (refId) {\n                Debug.log('FileBrowserManager: Using reference ID for file', { filePath, refId }, 3);\n                const apiUrl = `../api/get-file-content.php?refId=${encodeURIComponent(refId)}`;\n                const response = await fetch(apiUrl);\n\n                if (!response.ok) {\n                    throw new Error(`Failed to load file: ${filePath} (Status: ${response.status})`);\n                }\n\n                const data = await response.json();\n                return data.content;\n            }\n            // Last resort: try direct fetch of the file path (should be a relative path only)\n            else {\n                Debug.log('FileBrowserManager: Using direct path for file', { filePath }, 3);\n\n                // SECURITY: Ensure the path is not absolute or contains dangerous patterns\n                if (filePath.match(/^(\\/|\\\\|https?:|file:|[a-zA-Z]:\\\\)/i)) {\n                    throw new Error(`Invalid file path format: ${filePath}`);\n                }\n\n                const response = await fetch(filePath);\n\n                if (!response.ok) {\n                    throw new Error(`Failed to load file: ${filePath} (Status: ${response.status})`);\n                }\n\n                return await response.text();\n            }\n        };\n\n        try {\n            const oldContent = await fetchFile(fileData.old.path, fileData.old.refId);\n            const newContent = await fetchFile(fileData.new.path, fileData.new.refId);\n\n            // Check if contents are identical\n            if (oldContent === newContent) {\n                Debug.log('FileBrowserManager: Files contain identical content', null, 2);\n\n                return {\n                    old: oldContent,\n                    new: newContent,\n                    identical: true\n                };\n            }\n\n            return {\n                old: oldContent,\n                new: newContent\n            };\n        } catch (error) {\n            Debug.error('FileBrowserManager: Failed to load one or both files', error, 1);\n            throw error;\n        }\n    }\n\n    /**\n     * Configure diff data\n     * @param {Object} fileData - File data object\n     * @param {Object} contents - File contents\n     */\n    configureDiffData(fileData, contents) {\n        Debug.log('FileBrowserManager: Configuring diff data', fileData, 3);\n\n        // DEBUG: Log file reference data before configuration\n        Debug.log('FileBrowserManager: File reference data before configuration', {\n            old: {\n                refId: fileData.old.refId,\n                path: fileData.old.path\n            },\n            new: {\n                refId: fileData.new.refId,\n                path: fileData.new.path\n            }\n        }, 1);\n\n        // Extract just the filenames (not paths) for security\n        const oldFileName = fileData.old.path.split('/').pop();\n        const newFileName = fileData.new.path.split('/').pop();\n\n        const configManager = DiffConfigManager.getInstance();\n\n        // Set the old file data\n        configManager.update({\n            old: {\n                type: 'file',\n                content: contents.old,\n                path: fileData.old.path,\n                ref_id: fileData.old.refId,\n                filename: oldFileName\n            },\n            new: {\n                type: 'file',\n                content: contents.new,\n                path: fileData.new.path,\n                ref_id: fileData.new.refId,\n                filename: newFileName\n            },\n            filepath: newFileName,\n            fileRefId: fileData.new.refId || '',\n            oldFileRefId: fileData.old.refId || '',\n            newFileName: newFileName,\n            oldFileName: oldFileName,\n            serverSaveEnabled: !!(fileData.new.refId || fileData.old.refId)\n        });\n\n        // DEBUG: Log the configured diffConfig\n        Debug.log('FileBrowserManager: Configured diffConfig file references', {\n            fileRefId: window.diffConfig.fileRefId,\n            oldFileRefId: window.diffConfig.oldFileRefId,\n            newFileName: window.diffConfig.newFileName,\n            oldFileName: window.diffConfig.oldFileName,\n            serverSaveEnabled: window.diffConfig.serverSaveEnabled,\n            old: {\n                ref_id: window.diffConfig.old.ref_id,\n                filename: window.diffConfig.old.filename\n            },\n            new: {\n                ref_id: window.diffConfig.new.ref_id,\n                filename: window.diffConfig.new.filename\n            }\n        }, 1);\n    }\n\n    /**\n     * Process diff with API\n     * @returns {Promise<Object>} API response\n     */\n    async processDiff() {\n        Debug.log('FileBrowserManager: Processing diff with API', null, 2);\n        // Use endpoint discovery if available\n        let diffProcessorEndpoint;\n\n        try {\n            // Try to use the global endpoint discovery instance\n            if (window.vdmEndpointDiscovery) {\n                diffProcessorEndpoint = await window.vdmEndpointDiscovery.getEndpoint('diffProcessor');\n                Debug.log('FileBrowserManager: Endpoint discovery found endpoint', diffProcessorEndpoint, 2);\n            } else {\n                // Fall back to config or default\n                diffProcessorEndpoint = window.diffConfig?.apiEndpoints?.diffProcessor || '../api/diff-processor.php';\n                Debug.log('FileBrowserManager: Using fallback endpoint', diffProcessorEndpoint, 2);\n            }\n        } catch (error) {\n            Debug.warn('FileBrowserManager: Error discovering endpoints', error, 1);\n            // Fall back to config or default\n            diffProcessorEndpoint = window.diffConfig?.apiEndpoints?.diffProcessor || '../api/diff-processor.php';\n        }\n\n        const response = await fetch(diffProcessorEndpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(window.diffConfig)\n        });\n\n        if (!response.ok) {\n            Debug.error('FileBrowserManager: API request failed', {\n                status: response.status,\n                statusText: response.statusText\n            }, 1);\n            throw new Error(`API request failed: ${response.status} ${response.statusText}`);\n        }\n\n        const result = await response.json();\n\n        if (result.error) {\n            Debug.error('FileBrowserManager: API returned error', result.error, 1);\n            throw new Error(result.error);\n        }\n\n        // Initialize TranslationManager with server-provided data\n        const translationManager = TranslationManager.getInstance();\n        if (result.config && result.config.translations) {\n            const lang = result.config.lang || 'en';\n            Debug.log(`FileBrowserManager: Initializing TranslationManager with \"${lang}\" language from server response`, result.config.translations, 2);\n            translationManager.initialize(lang, result.config.translations);\n        }\n\n        // Move all properties from the nested config object to the root level\n        if (result.config && typeof result.config === 'object') {\n            Debug.log('FileBrowserManager: Moving all properties from config to root level', result.config, 2);\n\n            // Loop through all properties in config and move them to the root level\n            Object.keys(result.config).forEach(key => {\n                // Only copy if the property doesn't already exist at root level\n                // or if it does exist but is empty/undefined\n                if (result[key] === undefined ||\n                    (key === 'diffData' && (!result[key]?.chunks || result[key].chunks.length === 0))) {\n                    Debug.log(`FileBrowserManager: Moving ${key} from config to root level`, result.config[key], 3);\n                    result[key] = result.config[key];\n                }\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Update diff config with API response\n     * @param {Object} result - API response\n     */\n    updateDiffConfig(result) {\n        Debug.log('FileBrowserManager: Updating diff config with API response', null, 3);\n        // Make sure we have a valid result\n        if (!result || typeof result !== 'object') {\n            Debug.error('FileBrowserManager: Invalid result from API', result, 1);\n            this.diffConfig.diffData = {\n                old: [],\n                new: [],\n                chunks: []\n            };\n            return;\n        }\n\n        // PRIORITIZE SERVER TRANSLATIONS - Do this first, before anything else\n        if (result.config?.translations) {\n            // Make sure translations are set in window.diffConfig immediately\n            if (!window.diffConfig) {\n                window.diffConfig = {};\n            }\n\n            window.diffConfig.lang = result.config.lang || 'en';\n            window.diffConfig.translations = result.config.translations;\n\n            // Also update this.diffConfig\n            this.diffConfig.lang = result.config.lang || 'en';\n            this.diffConfig.translations = result.config.translations;\n\n            Debug.log('FileBrowserManager: Server translations set in window.diffConfig', {\n                lang: window.diffConfig.lang,\n                translationCount: Object.keys(window.diffConfig.translations).length\n            }, 1);\n        }\n\n        // Add demoEnabled flag from the server response\n        if (result.config && result.config.demoEnabled !== undefined) {\n            this.diffConfig.demoEnabled = result.config.demoEnabled;\n            Debug.log('FileBrowserManager: Demo mode flag set from server', this.diffConfig.demoEnabled, 2);\n        }\n\n        // Handle case where the diffData is directly provided\n        if (result.diffData) {\n            this.diffConfig.diffData = {\n                old: result.diffData.old || [],\n                new: result.diffData.new || [],\n                chunks: result.diffData.chunks || []\n            };\n        }\n        // Handle case where diff components are at the root level\n        else if (result.old || result.new || result.chunks) {\n            this.diffConfig.diffData = {\n                old: result.old?.lines || [],\n                new: result.new?.lines || [],\n                chunks: result.chunks || []\n            };\n        }\n        // Handle case where we have data but in an unexpected format\n        else if (result.success === true && result.config) {\n            // Try to extract diffData from the config\n            if (result.config.diffData) {\n                this.diffConfig.diffData = result.config.diffData;\n            } else {\n                // Create empty structure as fallback\n                this.diffConfig.diffData = {\n                    old: [],\n                    new: [],\n                    chunks: []\n                };\n                Debug.warn('FileBrowserManager: API returned success but no diffData was found in the response', result, 2);\n            }\n        }\n        // Fallback when no recognizable diff data is found\n        else {\n            // Create empty structure as fallback\n            this.diffConfig.diffData = {\n                old: [],\n                new: [],\n                chunks: []\n            };\n            Debug.warn('FileBrowserManager: Could not extract diff data from API response', result, 2);\n        }\n\n        // Additional validations\n        if (!Array.isArray(this.diffConfig.diffData.old)) {\n            this.diffConfig.diffData.old = [];\n            Debug.warn('FileBrowserManager: diffData.old is not an array, using empty array instead', null, 2);\n        }\n\n        if (!Array.isArray(this.diffConfig.diffData.new)) {\n            this.diffConfig.diffData.new = [];\n            Debug.warn('FileBrowserManager: diffData.new is not an array, using empty array instead', null, 2);\n        }\n\n        if (!Array.isArray(this.diffConfig.diffData.chunks)) {\n            this.diffConfig.diffData.chunks = [];\n            Debug.warn('FileBrowserManager: diffData.chunks is not an array, using empty array instead', null, 2);\n        }\n\n        // Retain any other useful configuration from the result\n        if (result.config) {\n            // Extract useful configurations but avoid overriding already set values\n            const { debug, theme, apiEndpoint } = result.config;\n\n            if (debug !== undefined && this.diffConfig.debug === undefined) {\n                this.diffConfig.debug = debug;\n            }\n\n            if (theme && !this.diffConfig.theme) {\n                this.diffConfig.theme = theme;\n            }\n\n            if (apiEndpoint && !this.diffConfig.apiEndpoint) {\n                this.diffConfig.apiEndpoint = apiEndpoint;\n            }\n        }\n\n        // Make diffConfig globally available\n        window.diffConfig = { ...this.diffConfig };\n    }\n\n    /**\n     * Process API response, checking for demo mode\n     * @param {Object} result - API response\n     * @returns {boolean} Whether demo mode was detected and processed\n     */\n    processDemoResponse(result) {\n        // Check if this was a demo response\n        if (result.demo && result.simulated) {\n            Debug.log('FileBrowserManager: Demo mode detected', null, 2);\n\n            // Get the alert manager\n            const alertManager = AlertManager.getInstance();\n\n            // Get translation manager for proper messaging\n            const translationManager = TranslationManager.getInstance();\n            const title = translationManager.get('demoModeTitle', 'Simulation Complete');\n            const message = result.message || translationManager.get('demoModeMessage', 'This is a demonstration only. Files will not be modified.');\n            const simulated = translationManager.get('demoModeSimulated', 'Your merge choices would have been applied successfully in a real environment.');\n\n            // Show demo message using the existing alert manager\n            const demoMessage = `\n                <strong>${title}</strong><br>\n                ${message}<br>\n                ${simulated}\n            `;\n\n            // Use the warning type to make it stand out\n            alertManager.showWarning(demoMessage, {\n                timeout: 0,\n                translate: false\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Handle error\n     * @param {Error} error - Error object\n     * @param {HTMLElement} loadingElement - Loading element\n     * @param {HTMLElement} viewerElement - Viewer element\n     */\n    handleError(error, loadingElement, viewerElement) {\n        Debug.error('FileBrowserManager: Error processing diff', error, 1);\n\n        // Hide loading indicator\n        if (loadingElement) loadingElement.style.display = 'none';\n\n        // Show error in viewer using AlertManager\n        if (viewerElement) {\n            viewerElement.style.display = 'flex';\n            viewerElement.innerHTML = ''; // Clear existing content\n\n            // Use AlertManager to create the alert\n            const alertManager = AlertManager.getInstance();\n            const errorMessage = `\n                <h4>Error Processing Diff</h4>\n                <p>${error.message}</p>\n            `;\n\n            const alertElement = alertManager.showError(errorMessage, {\n                timeout: 0, // Don't auto-dismiss\n                translate: false, // Error message doesn't need translation\n                className: 'm-3' // Add margin for better appearance\n            });\n\n            viewerElement.appendChild(alertElement);\n        }\n    }\n\n    /**\n     * Clear the UI elements before loading new content\n     * This method is called immediately when the form is submitted\n     */\n    clearUI() {\n        Debug.log('FileBrowserManager: Clearing UI', null, 2);\n\n        // Get the container wrapper element\n        const containerWrapper = document.getElementById(Selectors.CONTAINER.WRAPPER.replace('#', ''));\n\n        if (containerWrapper) {\n            // Save any .vdm-user-content elements before clearing\n            const userContentElements = containerWrapper.querySelectorAll('.vdm-user-content');\n            const savedUserContent = [];\n\n            userContentElements.forEach(element => {\n                savedUserContent.push(element.cloneNode(true));\n            });\n\n            // Clear the container content while keeping its structure\n            containerWrapper.innerHTML = '';\n\n            // Restore saved .vdm-user-content elements\n            if (savedUserContent.length > 0) {\n                Debug.log(`FileBrowserManager: Restoring ${savedUserContent.length} user content elements`, null, 2);\n                savedUserContent.forEach(element => {\n                    containerWrapper.appendChild(element);\n                });\n            }\n        }\n\n        // Clear any result messages\n        const resultContainer = document.getElementById('vdm-merge__result');\n        if (resultContainer) {\n            resultContainer.innerHTML = '';\n            resultContainer.classList.add('vdm-d-none');\n        }\n\n        // Clean up any existing dynamic elements\n        const existingViewers = document.querySelectorAll('.vdm-diff__viewer, .vdm-diff-ui');\n        existingViewers.forEach(element => {\n            element.innerHTML = '';\n            // Either remove the element or hide it\n            element.classList.add('vdm-d-none');\n        });\n\n        Debug.log('FileBrowserManager: UI cleared', null, 2);\n    }\n\n    /**\n     * Sync file selections\n     */\n    syncFileSelections() {\n        Debug.log('FileBrowserManager: Syncing file selections', null, 3);\n\n        if (!this.oldFileSelect || !this.newFileSelect) {\n            Debug.warn('FileBrowserManager: Cannot sync file selections - select elements not found', null, 2);\n            return;\n        }\n\n        // Get the filename from the selected old file\n        const oldValue = this.oldFileSelect.value;\n        const oldFileName = oldValue.split('/').pop();\n\n        // Try to find a matching file in the new files dropdown\n        let matchFound = false;\n\n        // First try exact match\n        for (let i = 0; i < this.newFileSelect.options.length; i++) {\n            const newOption = this.newFileSelect.options[i];\n            const newFileName = newOption.value.split('/').pop();\n\n            if (newFileName === oldFileName) {\n                this.newFileSelect.selectedIndex = i;\n                matchFound = true;\n                break;\n            }\n        }\n\n        // If no exact match, try extension match\n        if (!matchFound) {\n            const fileExt = oldFileName.split('.').pop();\n            for (let i = 0; i < this.newFileSelect.options.length; i++) {\n                const newValue = this.newFileSelect.options[i].value;\n                if (newValue.endsWith('.' + fileExt)) {\n                    this.newFileSelect.selectedIndex = i;\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Handle identical content case\n     */\n    handleIdenticalContent() {\n        Debug.log('FileBrowserManager: Files contain identical content', null, 2);\n\n        // Get the container wrapper element\n        const containerWrapper = document.getElementById(Selectors.CONTAINER.WRAPPER.replace('#', ''));\n\n        // Make sure the container wrapper is visible\n        if (containerWrapper) {\n            containerWrapper.classList.remove('vdm-d-none');\n        }\n\n        // Get translation manager and retrieve the message\n        const translationManager = TranslationManager.getInstance();\n        const message = translationManager.get('identicalContentMessage', 'The contents are identical. There\\'s nothing to merge.');\n\n        // Use AlertManager to create the alert\n        const alertManager = AlertManager.getInstance();\n\n        // Create alert container if it doesn't exist\n        let alertContainer = containerWrapper.querySelector('.vdm-alert-container');\n        if (!alertContainer) {\n            alertContainer = document.createElement('div');\n            alertContainer.className = 'vdm-alert-container';\n\n            // Find .vdm-user-content if it exists, otherwise prepend to containerWrapper\n            const userContent = containerWrapper.querySelector('.vdm-user-content');\n            if (userContent) {\n                userContent.after(alertContainer);\n            } else {\n                containerWrapper.prepend(alertContainer);\n            }\n        }\n\n        // Set alert container as the container for the alert\n        alertManager.container = alertContainer;\n\n        // Show the alert in the proper container\n        alertManager.showInfo(message, {\n            timeout: 0, // Don't auto-dismiss\n            translate: false, // Message is already translated\n            className: 'vdm-mb-3', // Add margin bottom for spacing\n            container: alertContainer\n        });\n\n        // Hide the diff viewer elements but keep our alert visible\n        if (containerWrapper) {\n            // Get any existing diffViewer content inside the container and hide it\n            const diffContainer = containerWrapper.querySelector(Selectors.DIFF.CONTAINER);\n            if (diffContainer) {\n                diffContainer.style.display = 'none';\n            }\n\n            Debug.log('FileBrowserManager: Hidden diff container for identical content', null, 2);\n        }\n\n        // Make sure any existing diff viewer instances are destroyed\n        this.cleanupPreviousInstance();\n    }\n}\n\n// Expose to global scope\nif (typeof window !== 'undefined') {\n    // Initialize when DOM is ready\n    document.addEventListener('DOMContentLoaded', function() {\n        window.fileBrowserManager = new FileBrowserManager();\n    });\n}\n","/**\n * Centralized selectors for DOM elements\n * Using this object allows for easier maintenance and refactoring\n * All selectors include their prefix (# for IDs, . for classes)\n */\n\n// Import Debug for warning messages\nimport { Debug } from '../utils/Debug';\n\n// Create a proxy handler to intercept property access\nconst selectorHandler = {\n  get(target, prop) {\n    // Handle the name() method\n    if (prop === 'name') {\n      return function() {\n        if (target.startsWith('#') || target.startsWith('.')) {\n          return target.substring(1);\n        } else {\n          Debug.warn(`Selector '${target}' doesn't start with '.' or '#' but name() was called on it`);\n          return target;\n        }\n      };\n    }\n\n    // Add toString method to allow direct usage in DOM methods\n    if (prop === 'toString' || prop === Symbol.toPrimitive) {\n      return function() {\n        return String(target);\n      };\n    }\n\n    // Return the original property\n    return target[prop];\n  }\n};\n\n// Function to process all selectors with the proxy\nconst processSelectors = (obj) => {\n  const result = {};\n\n  for (const key in obj) {\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      result[key] = processSelectors(obj[key]);\n    } else if (typeof obj[key] === 'string') {\n      // Apply the proxy to each selector string\n      result[key] = new Proxy(Object(String(obj[key])), selectorHandler);\n    } else {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\n// Override utility selectors with values from window.diffConfig.ui if available\nconst getUtilitySelectors = () => {\n  // Default utility selectors\n  const defaultUtilitySelectors = {\n    BUTTON: '.vdm-btn',\n    BUTTON_PRIMARY: '.vdm-btn--primary',\n    BUTTON_SECONDARY: '.vdm-btn--secondary',\n    BUTTON_INFO: '.vdm-btn--info',\n    BUTTON_SUCCESS: '.vdm-btn--success',\n    BUTTON_WARNING: '.vdm-btn--warning',\n    BUTTON_DANGER: '.vdm-btn--danger',\n    BUTTON_FLAT: '.vdm-btn--flat',\n    BUTTON_SMALL: '.vdm-btn-sm',\n    BUTTON_EXTRA_SMALL: '.vdm-btn-xs',\n    BUTTON_LARGE: '.vdm-btn-lg',\n    ALERT: '.vdm-alert',\n    ALERT_PREFIX: '.vdm-alert--',\n    ALERT_INFO: '.vdm-alert--info',\n    ALERT_SUCCESS: '.vdm-alert--success',\n    ALERT_WARNING: '.vdm-alert--warning',\n    ALERT_DANGER: '.vdm-alert--danger',\n    FORM_SELECT: '.vdm-select',\n    FORM_SELECT_SM: '.vdm-select-sm',\n    FLEX: '.vdm-d-flex',\n    FLEX_COLUMN: '.vdm-flex-column',\n    JUSTIFY_CONTENT_BETWEEN: '.vdm-justify-content-between',\n    JUSTIFY_CONTENT_CENTER: '.vdm-justify-content-center',\n    ALIGN_ITEMS_CENTER: '.vdm-align-items-center',\n    ALIGN_ITEMS_STRETCH: '.vdm-align-items-stretch',\n    PADDING_2: '.vdm-p-2',\n    PADDING_3: '.vdm-p-3',\n    MARGIN_2: '.vdm-m-2',\n    MARGIN_TOP_2: '.vdm-mt-2',\n    MARGIN_BOTTOM_2: '.vdm-mb-2',\n    MARGIN_START_1: '.vdm-ms-1',\n    MARGIN_START_2: '.vdm-ms-2',\n    MARGIN_END_2: '.vdm-me-2',\n    MARGIN_END_3: '.vdm-me-3',\n    MARGIN_X_1: '.vdm-mx-1',\n    MARGIN_Y_2: '.vdm-my-2',\n    MARGIN_END_1: '.vdm-me-1'\n  };\n\n  // If window.diffConfig exists and has UI settings, override with those\n  if (window.diffConfig && window.diffConfig.ui) {\n    try {\n      // Map PHP ui settings to our selector format\n      if (window.diffConfig.ui.button) {\n        defaultUtilitySelectors.BUTTON = '.' + window.diffConfig.ui.button;\n      }\n      if (window.diffConfig.ui.buttonPrimary) {\n        defaultUtilitySelectors.BUTTON_PRIMARY = '.' + window.diffConfig.ui.buttonPrimary;\n      }\n      if (window.diffConfig.ui.buttonSecondary) {\n        defaultUtilitySelectors.BUTTON_SECONDARY = '.' + window.diffConfig.ui.buttonSecondary;\n      }\n      if (window.diffConfig.ui.buttonInfo) {\n        defaultUtilitySelectors.BUTTON_INFO = '.' + window.diffConfig.ui.buttonInfo;\n      }\n      if (window.diffConfig.ui.buttonSuccess) {\n        defaultUtilitySelectors.BUTTON_SUCCESS = '.' + window.diffConfig.ui.buttonSuccess;\n      }\n      if (window.diffConfig.ui.buttonWarning) {\n        defaultUtilitySelectors.BUTTON_WARNING = '.' + window.diffConfig.ui.buttonWarning;\n      }\n      if (window.diffConfig.ui.buttonDanger) {\n        defaultUtilitySelectors.BUTTON_DANGER = '.' + window.diffConfig.ui.buttonDanger;\n      }\n      if (window.diffConfig.ui.buttonFlat) {\n        defaultUtilitySelectors.BUTTON_FLAT = '.' + window.diffConfig.ui.buttonFlat;\n      }\n      if (window.diffConfig.ui.alert) {\n        defaultUtilitySelectors.ALERT = '.' + window.diffConfig.ui.alert;\n      }\n      if (window.diffConfig.ui.alertInfo) {\n        defaultUtilitySelectors.ALERT_INFO = '.' + window.diffConfig.ui.alertInfo;\n      }\n      if (window.diffConfig.ui.alertSuccess) {\n        defaultUtilitySelectors.ALERT_SUCCESS = '.' + window.diffConfig.ui.alertSuccess;\n      }\n      if (window.diffConfig.ui.alertWarning) {\n        defaultUtilitySelectors.ALERT_WARNING = '.' + window.diffConfig.ui.alertWarning;\n      }\n      if (window.diffConfig.ui.alertDanger) {\n        defaultUtilitySelectors.ALERT_DANGER = '.' + window.diffConfig.ui.alertDanger;\n      }\n\n      Debug.log('Overriding UI selectors with config values', window.diffConfig.ui, 2);\n    } catch (e) {\n      Debug.error('Error applying UI selector overrides from config', e, 1);\n    }\n  }\n\n  return defaultUtilitySelectors;\n};\n\nconst baseSelectors = {\n    // Code display\n    CODE: {\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_EMPTY: '.vdm-code__line--empty',\n        LINE_NUMBER: '.vdm-code__line-number',\n        TABLE: '.vdm-code__table'\n    },\n\n    // Container elements\n    CONTAINER: {\n        ROOT: '#vdm-container',\n        WRAPPER: '#vdm-container__wrapper'\n    },\n\n    // Copy functionality\n    COPY: {\n        BUTTON: '.vdm-code__copy-btn',\n        COPIED: '.vdm-code__copy--copied',\n        ICON: '.vdm-code__copy-icon',\n        MODAL: {\n            ACTIONS: '.vdm-modal__copy-actions',\n            BUTTON: '.vdm-modal__copy-btn',\n            DIALOG: '.vdm-modal__copy-dialog',\n            INSTRUCTIONS: '.vdm-modal__copy-instructions',\n            TEXTAREA: '.vdm-modal__copy-textarea-container',\n            TEXTAREA_ELEM: '.vdm-modal__copy-textarea'\n        },\n        PROCESSING: '.vdm-code__copy--processing',\n        TEXT: '.vdm-code__copy-text'\n    },\n\n    // Diff viewer elements\n    DIFF: {\n        CHECK_ALL_BTN: '.vdm-check-all-btn',\n        CHUNK: '.vdm-diff__chunk',\n        CHUNK_SELECTED: '.vdm-diff__chunk--selected',\n        CHUNK_UNSELECTED: '.vdm-diff__chunk--unselected',\n        CONTAINER: '#vdm-diff__container',\n        CONTENT_WRAPPER: '#vdm-diff__content-wrapper',\n        LINE_ADD: '.vdm-diff__line--add',\n        LINE_CONTENT: '.vdm-code__line-content',\n        LINE_CONTENT_EMPTY: '.vdm-code__line-content--empty',\n        LINE_DELETE: '.vdm-diff__line--delete',\n        LINE_PLACEHOLDER: '.vdm-diff__line--placeholder',\n        LINE_REPLACE_LEFT: '.vdm-diff__line--replace-left',\n        LINE_REPLACE_RIGHT: '.vdm-diff__line--replace-right',\n        // LOADING selector removed - use Selectors.LOADER.MAIN instead\n        PANE: '.vdm-diff__pane',\n        PANE_CONTENT: '.vdm-diff__pane-content',\n        PANE_HEADER: '.vdm-pane-header',\n        PANE_LEFT: '#vdm-diff__pane--left',\n        PANE_RIGHT: '#vdm-diff__pane--right',\n        PANES_CONTAINER: '.vdm-diff__panes-container',\n        PLACEHOLDER: '.vdm-diff__placeholder',\n        TABLE_WRAPPER: '.vdm-diff__table-wrapper',\n        VIEWER: '#vdm-diff__viewer'\n    },\n\n    // Icon markers\n    ICONS: {\n        COLUMN: '.vdm-icon__column',\n        MARKER: '.vdm-icon__marker',\n        MARKER_PLACEHOLDER: '.vdm-icon__marker--placeholder',\n        SELECT: '.vdm-icon__select',\n        SELECT_LEFT: '.vdm-icon__select--left',\n        SELECT_RIGHT: '.vdm-icon__select--right'\n    },\n\n    // Loader elements\n    LOADER: {\n        ACTIVE: '.vdm-loader--active',\n        CONTAINER: '.vdm-loader__container',\n        FULLSCREEN: '.vdm-loader--fullscreen',\n        INDICATOR: '#vdm-loader__indicator',\n        INLINE: '.vdm-loader--inline',\n        MAIN: '#vdm-diff__loading', // Main application loader (previously DIFF.LOADING)\n        SPINNER: '.vdm-loader__spinner',\n        TEXT: '.vdm-loader__text',\n        WRAPPER: '.vdm-loader__wrapper'\n    },\n\n    // Merge controls\n    MERGE: {\n        BUTTON_APPLY: '#vdm-merge__button--apply',\n        BUTTON_PREVIEW: '#vdm-merge__button--preview',\n        CONFLICT_MODAL: '#vdm-merge__conflict-modal',\n        CONTROLS_ACTIONS: '.vdm-merge-controls__actions',\n        DESTINATION_DROPDOWN: '#vdm-merge__destination-dropdown',\n        DESTINATION_TOGGLE: '#vdm-merge__destination-toggle',\n        GET_MERGED_RESULT_BTN: '#vdm-merge__get-merged-result-btn',\n        MODAL: '#vdm-merge__modal',\n        PREVIEW_CONTENT: '#vdm-merge__preview-content',\n        PREVIEW_MODAL: '#vdm-merge__preview-modal',\n        TOGGLE_ICON: '#vdm-merge-controls__toggle-icon',\n        TOGGLE_TEXT: '#vdm-merge-controls__toggle-text'\n    },\n\n    // Modal dialogs\n    MODAL: {\n        BACKDROP: '#vdm-modal-backdrop',\n        CLOSE: '.vdm-modal__close',\n        CLOSE_BTN: '.vdm-modal__close', // Changed from ID to class\n        CODE_COPY: '#vdm-modal--code-copy',\n        CONFIRM: '#vdm-modal--confirm',\n        CONFIRMATION_CONTENT: '#vdm-modal__confirmation-content',\n        CONTAINER: '.vdm-modal',\n        CONTENT: '.vdm-modal__content',\n        CONTINUE_BTN: '#vdm-modal__continue-btn',\n        COPY_CONTENT: '#vdm-modal__copy-content',\n        FIXED_FOOTER: '.vdm-modal--fixed-footer',\n        FOOTER: '.vdm-modal__footer',\n        FULLSCREEN: '.vdm-modal--fullscreen',\n        HEADER: '.vdm-modal__header',\n        HEADER_FIXED: '.vdm-modal__header--fixed',\n        MERGE_BTN: '#vdm-modal__merge-btn',\n        MESSAGE: '#vdm-modal__message',\n        PREVIEW: '#vdm-modal--preview',\n        PREVIEW_CONTENT: '.vdm-modal__preview-content',\n        PREVIEW_CONTENT_ID: '#vdm-merge__preview-content',\n        PREVIEW_FILENAME: '#vdm-modal__preview-filename',\n        TITLE: '.vdm-modal__title'\n    },\n\n    // Navigation\n    NAVIGATION: {\n        CONTAINER: '.vdm-nav__controls',\n        COUNTER: '#vdm-nav__counter',\n        COUNTER_ELEMENT: '.vdm-navigator__counter',\n        HIGHLIGHT: '.vdm-highlight',\n        NAV_CHUNK: '.vdm-nav__chunk',\n        NEXT_BUTTON: '#vdm-nav__button--next',\n        PREV_BUTTON: '#vdm-nav__button--prev'\n    },\n\n    // Status indicators\n    STATUS: {\n        LOADED: '.vdm-status__loaded',\n        RESOLVED: '.vdm-status__resolved',\n        SCROLLED: '.vdm-status__scrolled-horizontally',\n        UNRESOLVED: '.vdm-status__unresolved'\n    },\n\n    // Theme and appearance\n    THEME: {\n        DARK: '.vdm-theme--dark',\n        LIGHT: '.vdm-theme--light',\n        LOADING_INDICATOR: '#vdm-theme__loading-indicator',\n        MODE_PREFIX: '.vdm-theme',\n        SELECTOR: '#vdm-theme__selector',\n        SWITCHER: '#vdm-theme-switcher',\n        TOGGLE: '#vdm-theme__toggle'\n    },\n\n    // Theme switcher components\n    THEME_SWITCHER: {\n        CONTROL: '.vdm-theme-switcher__control',\n        LABEL: '.vdm-theme-switcher__label',\n        SLIDER: '.vdm-theme-switcher__slider',\n        SLIDER_ROUND: '.vdm-theme-switcher__slider--round',\n        WRAPPER: '.vdm-theme-switcher__wrapper'\n    },\n\n    // Theme selector components\n    THEME_SELECTOR: {\n        WRAPPER: '.vdm-theme-selector__wrapper'\n    },\n\n    // Tooltips\n    TOOLTIP: {\n        ARROW: '.vdm-tooltip__arrow',\n        CONTAINER: '.vdm-tooltip',\n        CONTENT: '.vdm-tooltip__content'\n    },\n\n    // Utility classes - these can be overridden from PHP config\n    UTILITY: getUtilitySelectors()\n};\n\n// Process the selectors to add the name functionality\nconst Selectors = processSelectors(baseSelectors);\n\nexport default Selectors;\n","import Selectors from '../constants/Selectors';\n\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * AlertManager - Centralized utility for managing alert messages\n *\n * This singleton class provides methods to display and hide alert messages\n * throughout the application in a consistent manner. It supports different types\n * of alerts including info, success, warning, and danger.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * AlertManager class\n *\n * Provides methods to display and hide alert messages throughout the application\n */\nexport class AlertManager extends BaseSingleton {\n    /**\n     * Initialize the AlertManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.containerId = 'vdm-alert-container';\n        this.activeAlert = null;\n        this.timeoutId = null;\n\n        // Ensure the alert container exists and store it in this.container\n        this.container = this._ensureContainer();\n\n        // Mark as initialized\n        this.initialized = true;\n\n        Debug.log('AlertManager: Initialized', null, 2);\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {AlertManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new AlertManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Ensure the alert container exists in the DOM\n     * @private\n     */\n    _ensureContainer() {\n        let container = document.getElementById(this.containerId);\n\n        if (!container) {\n            container = document.createElement('div');\n            container.id = this.containerId;\n            container.className = 'vdm-alert-container';\n            container.style.position = 'fixed';\n            container.style.top = '20px';\n            container.style.left = '50%';\n            container.style.transform = 'translateX(-50%)';\n            container.style.zIndex = '9999';\n            container.style.width = 'auto';\n            container.style.maxWidth = '90%';\n\n            document.body.appendChild(container);\n            Debug.log('AlertManager: Created alert container', null, 2);\n        }\n\n        return container;\n    }\n\n    /**\n     * Create and show an alert\n     * @param {string} message - The alert message\n     * @param {string} type - The alert type: 'success', 'info', 'warning', 'error'\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} - The alert element\n     */\n    showAlert(message, type, options = {}) {\n        Debug.log('AlertManager.showAlert called with type', type, 2);\n        Debug.log('AlertManager.showAlert message', message, 3);\n\n        // Default options\n        const defaultOptions = {\n            timeout: 5000,      // Auto-dismiss after 5 seconds (0 = no auto-dismiss)\n            dismissable: true,  // Show close button\n            translate: true,    // Translate message if TranslationManager is available\n            className: '',      // Additional CSS classes\n            container: null,    // Container element (defaults to this.container)\n            targetElement: null, // Target element to place alert relative to\n            placement: 'before' // Placement relative to targetElement ('before' or 'after')\n        };\n\n        const mergedOptions = { ...defaultOptions, ...options };\n\n        // Only use the container if we're not placing relative to a target element\n        const useContainer = !mergedOptions.targetElement && (mergedOptions.container || this.container);\n\n        Debug.log('AlertManager placement options', {\n            hasTargetElement: !!mergedOptions.targetElement,\n            placement: mergedOptions.placement,\n            useContainer: !!useContainer\n        }, 3);\n\n        // Create alert element\n        const alertElement = document.createElement('div');\n\n        // Get the base alert class from Selectors if available\n        const baseAlertClass = Selectors.UTILITY.ALERT ?\n            Selectors.UTILITY.ALERT.toString().substring(1) : // Remove leading '.'\n            'vdm-alert';\n\n        // Start with base class\n        let alertClass = baseAlertClass;\n\n        // Type-specific class - use the proper format with double hyphens\n        if (type) {\n            // Use proper format from Selectors if available\n            const typeClass = type === 'info' && Selectors.UTILITY.ALERT_INFO ?\n                Selectors.UTILITY.ALERT_INFO.toString().substring(1) : // Remove leading '.'\n                `${baseAlertClass}--${type}`; // Use the proper double-hyphen format\n\n            alertClass += ` ${typeClass}`;\n        }\n\n        // Add any custom classes\n        if (mergedOptions.className) {\n            alertClass += ` ${mergedOptions.className}`;\n        }\n\n        alertElement.className = alertClass;\n        Debug.log('Alert classnames', alertElement.className, 3);\n        Debug.log('Alert selector values', {\n            selectorBase: Selectors.UTILITY.ALERT ? Selectors.UTILITY.ALERT.toString() : 'vdm-alert',\n            selectorType: type ? `${baseAlertClass}--${type}` : 'none'\n        }, 3);\n\n        // Translate message if needed\n        let finalMessage = message;\n        if (mergedOptions.translate && typeof TranslationManager !== 'undefined') {\n            const translationManager = TranslationManager.getInstance();\n            if (translationManager && typeof translationManager.get === 'function') {\n                finalMessage = translationManager.get(message, message);\n            }\n        }\n\n        // Set content\n        alertElement.innerHTML = finalMessage;\n\n        // Add close button if dismissable\n        if (mergedOptions.dismissable) {\n            const closeButton = document.createElement('button');\n            // Fix the close button class to match the CSS definition\n            closeButton.className = 'vdm-alert__close';\n            closeButton.innerHTML = '&times;';\n            closeButton.setAttribute('aria-label', 'Close');\n            closeButton.setAttribute('type', 'button');\n            alertElement.appendChild(closeButton);\n\n            // Add click event for close button\n            closeButton.addEventListener('click', () => this.hideAlert(alertElement));\n            Debug.log('Close button', closeButton ? 'found' : 'not found', 3);\n        }\n\n        // Add to container or place relative to target element\n        if (mergedOptions.targetElement) {\n            Debug.log('AlertManager: Placing alert relative to target element', {\n                target: mergedOptions.targetElement,\n                placement: mergedOptions.placement\n            }, 3);\n\n            if (mergedOptions.placement === 'before') {\n                // Insert before the target element\n                mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement);\n            } else if (mergedOptions.placement === 'after') {\n                // Insert after the target element\n                if (mergedOptions.targetElement.nextSibling) {\n                    mergedOptions.targetElement.parentNode.insertBefore(alertElement, mergedOptions.targetElement.nextSibling);\n                } else {\n                    mergedOptions.targetElement.parentNode.appendChild(alertElement);\n                }\n            }\n        } else if (useContainer) {\n            // Regular container append if no target element is specified\n            useContainer.appendChild(alertElement);\n            Debug.log('Alert appended to container', null, 3);\n        } else {\n            // Fallback to body if no container and no target element\n            document.body.appendChild(alertElement);\n            Debug.log('Alert appended to body', null, 3);\n        }\n\n        // Store reference to the active alert\n        this.activeAlert = alertElement;\n\n        // Set up auto-dismiss\n        if (mergedOptions.timeout > 0) {\n            this.timeoutId = setTimeout(() => {\n                this.hideAlert(alertElement);\n            }, mergedOptions.timeout);\n        }\n\n        Debug.log('Returning alert element', alertElement, 3);\n        return alertElement;\n    }\n\n    /**\n     * Hide the current alert if one exists\n     * @param {HTMLElement} alertElement - Optional specific alert element to hide\n     */\n    hideAlert(alertElement = null) {\n        // Clear any existing timeout\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n\n        // If a specific alert element is provided, remove it\n        if (alertElement?.parentNode) {\n            alertElement.parentNode.removeChild(alertElement);\n            Debug.log('AlertManager: Hiding specific alert', null, 3);\n\n            // If this was the active alert, clear the reference\n            if (this.activeAlert === alertElement) {\n                this.activeAlert = null;\n            }\n            return;\n        }\n\n        // Otherwise, remove the active alert if it exists\n        if (this.activeAlert?.parentNode) {\n            this.activeAlert.parentNode.removeChild(this.activeAlert);\n            this.activeAlert = null;\n            Debug.log('AlertManager: Hiding active alert', null, 3);\n        }\n    }\n\n    /**\n     * Show an info alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showInfo(message, options = {}) {\n        return this.showAlert(message, 'info', options);\n    }\n\n    /**\n     * Show a success alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showSuccess(message, options = {}) {\n        return this.showAlert(message, 'success', options);\n    }\n\n    /**\n     * Show a warning alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showWarning(message, options = {}) {\n        return this.showAlert(message, 'warning', options);\n    }\n\n    /**\n     * Show a danger/error alert\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Alert options\n     * @returns {HTMLElement} The alert element\n     */\n    showError(message, options = {}) {\n        return this.showAlert(message, 'danger', options);\n    }\n}\n\nexport default AlertManager;\n","/**\n * Base singleton implementation to standardize pattern across components\n */\nexport class BaseSingleton {\n    /**\n     * Get the singleton instance - must be implemented by subclasses\n     * @returns {BaseSingleton} The singleton instance\n     */\n    static getInstance() {\n        throw new Error('getInstance() must be implemented by subclass');\n    }\n\n    /**\n     * Check if this instance is already instantiated\n     * @protected\n     * @param {Object} instanceVar - The module-level instance variable\n     * @returns {boolean} True if this is the first initialization\n     */\n    _isFirstInstance(instanceVar) {\n        return !instanceVar;\n    }\n}\n","/**\n * Debug utility for the diff viewer\n * Provides centralized logging with configuration options\n */\n\n/* eslint-disable no-console */\n// Disable console warnings for this file only since this is the official logging utility\n\nclass DebugUtility {\n    constructor() {\n        this.enabled = false;\n        this.logHistory = [];\n        this.maxLogHistory = 100;\n        this.prefix = '[DiffViewer]';\n        this.logLevel = 1; // Default to only high-level logs\n    }\n\n    /**\n     * Initialize debug settings\n     * @param {boolean} enabled - Enable debug output\n     * @param {string} prefix - Prefix for all log messages\n     * @param {number} logLevel - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    initialize (enabled = false, prefix = '[DiffViewer]', logLevel = 1) {\n        this.enabled = enabled;\n        this.prefix = prefix;\n        this.logLevel = enabled ? logLevel : 1;\n        console.error('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n        this.log('Debug initialized', { enabled: this.enabled, level: this.logLevel });\n    }\n\n    /**\n     * Check if a message should be logged at the given level\n     * @param {number} level - The log level of the message\n     * @returns {boolean} - Whether the message should be logged\n     */\n    shouldLog(level = 1) {\n        return (window.diffConfig?.debug || this.enabled) && level <= this.logLevel;\n    }\n\n    /**\n     * Log an informational message\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (1=high-level, 2=detailed, 3=verbose)\n     */\n    log(message, data = null, level = 1) {\n        if (!this.shouldLog(level)) return;\n\n        if (data !== null) {\n            console.log(`${this.prefix} ${message}`, data);\n            this._addToHistory('log', [message, data], level);\n        } else {\n            console.log(`${this.prefix} ${message}`);\n            this._addToHistory('log', [message], level);\n        }\n    }\n\n    /**\n     * Log a warning message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    warn (message, data = null, level = 1) {\n        // Warnings are always shown regardless of debug setting\n        if (data !== null) {\n            console.warn(`${this.prefix} ${message}`, data);\n            this._addToHistory('warn', [message, data], level);\n        } else {\n            console.warn(`${this.prefix} ${message}`);\n            this._addToHistory('warn', [message], level);\n        }\n    }\n\n    /**\n     * Log an error message (always shown regardless of debug setting)\n     * @param {string} message - The primary message\n     * @param {any} data - Additional data to log\n     * @param {number} level - Log level (always shown, but stored with level)\n     */\n    error(message, data = null, level = 1) {\n        // Errors are always shown regardless of debug setting\n        if (data !== null) {\n            console.error(`${this.prefix} ${message}`, data);\n            this._addToHistory('error', [message, data], level);\n        } else {\n            console.error(`${this.prefix} ${message}`);\n            this._addToHistory('error', [message], level);\n        }\n    }\n\n    /**\n     * Get debug log history\n     * @param {number} maxLevel - Maximum level to include (1=high-level only, 3=all)\n     * @returns {Array} Log history filtered by level\n     */\n    getLogHistory(maxLevel = this.logLevel) {\n        if (maxLevel >= this.logLevel) {\n            return [...this.logHistory];\n        }\n        return this.logHistory.filter(entry => entry.level <= maxLevel);\n    }\n\n    /**\n     * Clear debug log history\n     */\n    clearLogHistory() {\n        this.logHistory = [];\n        this.log('Log history cleared');\n    }\n\n    /**\n     * Add entry to log history\n     * @private\n     * @param {string} type - Log type (log, warn, error)\n     * @param {Array} args - Message arguments\n     * @param {number} level - Log level\n     */\n    _addToHistory(type, args, level) {\n        this.logHistory.push({\n            timestamp: new Date(),\n            type,\n            message: args,\n            level\n        });\n\n        // Prevent excessive memory usage\n        if (this.logHistory.length > this.maxLogHistory) {\n            this.logHistory.shift();\n        }\n    }\n}\n\n// Create singleton instance\nconst Debug = new DebugUtility();\n\n// Export the singleton\nexport { Debug };\n","/**\n * DiffConfigManager.js\n *\n * Singleton utility to centralize management of the diffConfig configuration object.\n * This provides a single source of truth for the diffConfig settings used throughout the application.\n */\n\nimport { Debug } from './Debug';\n\n/**\n * Manages the diffConfig configuration settings as a singleton\n */\nexport class DiffConfigManager {\n    /**\n     * Private instance - follows singleton pattern\n     * @type {DiffConfigManager}\n     * @private\n     */\n    static #instance = null;\n\n    /**\n     * Centralized diffConfig object\n     * @type {Object}\n     * @private\n     */\n    #diffConfig = {};\n\n    /**\n     * Private constructor - use getInstance() instead\n     * @private\n     */\n    constructor() {\n        // Initialize the diffConfig with any existing window.diffConfig\n        if (typeof window !== 'undefined' && window.diffConfig) {\n            Debug.log('DiffConfigManager: Initializing with existing window.diffConfig', window.diffConfig, 2);\n            this.#diffConfig = { ...window.diffConfig };\n        } else {\n            this.#diffConfig = {\n                debug: false,\n                logLevel: 1,\n                old: {},\n                new: {}\n            };\n        }\n\n        // Make the diffConfig available globally through window.diffConfig\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {DiffConfigManager} The singleton instance\n     */\n    static getInstance() {\n        if (!DiffConfigManager.#instance) {\n            DiffConfigManager.#instance = new DiffConfigManager();\n        }\n        return DiffConfigManager.#instance;\n    }\n\n    /**\n     * Initialize with configuration\n     * @param {Object} config - The initial configuration\n     */\n    initialize(config = {}) {\n        Debug.log('DiffConfigManager: Initializing with config', config, 2);\n        this.#diffConfig = { ...this.#diffConfig, ...config };\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Get the current diffConfig\n     * @returns {Object} The current diffConfig\n     */\n    getDiffConfig() {\n        return this.#diffConfig;\n    }\n\n    /**\n     * Set a new diffConfig, completely replacing the current one\n     * @param {Object} config - The new configuration to use\n     */\n    setDiffConfig(config = {}) {\n        Debug.log('DiffConfigManager: Setting new diffConfig', config, 2);\n        this.#diffConfig = { ...config };\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Reset the diffConfig to default values, possibly with new overrides\n     * @param {Object} overrides - Optional configuration overrides to apply after reset\n     */\n    reset(overrides = {}) {\n        Debug.log('DiffConfigManager: Resetting diffConfig with overrides', overrides, 2);\n        this.#diffConfig = {\n            debug: false,\n            logLevel: 1,\n            old: {},\n            new: {},\n            ...overrides\n        };\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Update part of the configuration\n     * @param {Object} partialConfig - The partial configuration to update\n     */\n    update(partialConfig = {}) {\n        Debug.log('DiffConfigManager: Updating diffConfig with', partialConfig, 3);\n\n        // Check if the partialConfig has a nested 'config' property\n        if (partialConfig && partialConfig.config && typeof partialConfig.config === 'object') {\n            Debug.log('DiffConfigManager: Extracting nested config property', partialConfig.config, 3);\n            // Use the nested config object instead of the wrapper\n            this.#diffConfig = this.#mergeDeep(this.#diffConfig, partialConfig.config);\n        } else {\n            // Use the original object if no nested config property\n            this.#diffConfig = this.#mergeDeep(this.#diffConfig, partialConfig);\n        }\n\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Set a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} value - The value to set\n     */\n    set(key, value) {\n        Debug.log(`DiffConfigManager: Setting ${key}`, value, 3);\n        this.#diffConfig[key] = value;\n        this.#updateGlobalDiffConfig();\n    }\n\n    /**\n     * Get a specific configuration value by key\n     * @param {string} key - The configuration key\n     * @param {*} defaultValue - Default value if the key doesn't exist\n     * @returns {*} The configuration value\n     */\n    get(key, defaultValue = null) {\n        return key in this.#diffConfig ? this.#diffConfig[key] : defaultValue;\n    }\n\n    /**\n     * Remove a specific configuration key\n     * @param {string} key - The configuration key to remove\n     */\n    remove(key) {\n        if (key in this.#diffConfig) {\n            Debug.log(`DiffConfigManager: Removing ${key}`, null, 3);\n            delete this.#diffConfig[key];\n            this.#updateGlobalDiffConfig();\n        }\n    }\n\n    /**\n     * Update the global window.diffConfig object\n     * @private\n     */\n    #updateGlobalDiffConfig() {\n        if (typeof window !== 'undefined') {\n            window.diffConfig = { ...this.#diffConfig };\n        }\n    }\n\n    /**\n     * Deep merge two objects recursively\n     * @param {Object} target - Target object\n     * @param {Object} source - Source object to merge\n     * @returns {Object} The merged object\n     * @private\n     */\n    #mergeDeep(target, source) {\n        const output = { ...target };\n\n        if (this.#isObject(target) && this.#isObject(source)) {\n            Object.keys(source).forEach(key => {\n                if (this.#isObject(source[key])) {\n                    if (!(key in target)) {\n                        output[key] = source[key];\n                    } else {\n                        output[key] = this.#mergeDeep(target[key], source[key]);\n                    }\n                } else {\n                    output[key] = source[key];\n                }\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * Check if a value is an object\n     * @param {*} item - The value to check\n     * @returns {boolean} True if the value is an object\n     * @private\n     */\n    #isObject(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item));\n    }\n}\n\nexport default DiffConfigManager;\n","import Selectors from '../constants/Selectors';\n\nimport { Debug } from './Debug';\nimport { BaseSingleton } from './BaseSingleton';\nimport { TranslationManager } from './TranslationManager';\n\n/**\n * LoaderManager - Centralized utility for managing loading indicators\n *\n * This singleton class provides methods to display and hide loading indicators\n * throughout the application in a consistent manner. It supports different styles\n * of loaders including fullscreen, inline, and element-specific indicators.\n */\n\n// Module-level singleton instance\nlet instance = null;\n\n/**\n * LoaderManager class\n *\n * Provides methods to display and hide loading indicators throughout the application\n */\nexport class LoaderManager extends BaseSingleton {\n    /**\n     * Initialize the LoaderManager\n     */\n    initialize() {\n        // If already initialized, just return\n        if (this.initialized) {\n            return;\n        }\n\n        this.activeLoaders = new Map();\n        this.loaderIdCounter = 0;\n        this.isMainLoaderActive = false; // Track if main loader is active\n        this.mainLoaderId = null; // Store the ID of the main loader for reference\n        this.recentlyRemovedLoaders = new Set(); // Track recently removed loaders to prevent errors\n\n        // Track loader operations for debugging\n        this.operationLog = [];\n        this.maxLogEntries = 20;\n\n        // Set flag to remember log level in debug mode\n        this.verboseLogging = Debug.isInitialized ? Debug.logLevel > 2 : false;\n\n        // Mark as initialized\n        this.initialized = true;\n    }\n\n    /**\n     * Get the singleton instance\n     * @returns {LoaderManager} Instance\n     */\n    static getInstance() {\n        if (!instance) {\n            instance = new LoaderManager();\n            instance.initialize();\n        }\n        return instance;\n    }\n\n    /**\n     * Log an operation for debugging\n     * @private\n     */\n    _logOperation(operation, details) {\n        // Keep a short log history for debugging\n        if (this.operationLog.length >= this.maxLogEntries) {\n            this.operationLog.shift(); // Remove oldest entry\n        }\n\n        this.operationLog.push({\n            timestamp: new Date().toISOString(),\n            operation,\n            details\n        });\n    }\n\n    /**\n     * Create a loader element with the given message\n     *\n     * @param {string} message - Message to display\n     * @param {Object} options - Options for the loader\n     * @returns {HTMLElement} The loader element\n     * @private\n     */\n    _createLoaderElement(message, options = {}) {\n        // Use an early translation if TranslationManager is available\n        if (message && typeof message === 'string' && message.startsWith('$') && TranslationManager.getInstance().isInitialized()) {\n            const translationKey = message.substring(1);\n            const translatedMessage = TranslationManager.getInstance().get(translationKey);\n            if (translatedMessage) {\n                message = translatedMessage;\n            }\n        }\n\n        const loader = document.createElement('div');\n        loader.className = 'vdm-loader';\n\n        if (options.fullscreen) {\n            loader.classList.add('vdm-loader--fullscreen');\n        }\n\n        if (options.inline) {\n            loader.classList.add('vdm-loader--inline');\n        }\n\n        if (options.small) {\n            loader.classList.add('vdm-loader--small');\n        }\n\n        if (options.container) {\n            loader.classList.add('vdm-loader--container');\n        }\n\n        if (options.className) {\n            loader.classList.add(options.className);\n        }\n\n        if (options.zIndex) {\n            loader.style.zIndex = options.zIndex;\n        }\n\n        // Create spinner\n        const spinner = document.createElement('div');\n        spinner.className = 'vdm-loader__spinner';\n        loader.appendChild(spinner);\n\n        // Add message if provided\n        if (message) {\n            const messageElement = document.createElement('div');\n            messageElement.className = 'vdm-loader__message';\n            messageElement.textContent = message;\n            loader.appendChild(messageElement);\n        }\n\n        return loader;\n    }\n\n    /**\n     * Show a loading indicator\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @param {boolean} options.fullscreen - Whether to show a fullscreen loader\n     * @param {boolean} options.inline - Whether to show an inline loader\n     * @param {boolean} options.small - Whether to show a small loader\n     * @param {string} options.className - Additional CSS class to add to the loader\n     * @param {HTMLElement} options.target - Target element to add the loader to\n     * @param {number} options.zIndex - Z-index for the loader\n     * @returns {string} ID of the loader (use this to hide the specific loader)\n     */\n    showLoader(message = 'Loading...', options = {}) {\n        // If main loader is active and we're showing a fullscreen loader,\n        // reuse the main loader with updated message\n        if (this.isMainLoaderActive && this.mainLoaderId && options.fullscreen) {\n            Debug.log('LoaderManager: Reusing main loader for fullscreen request', { message }, 3);\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        Debug.log('LoaderManager: Showing loader', { message, options }, 3);\n\n        const loaderId = `loader-${++this.loaderIdCounter}`;\n        const loaderElement = this._createLoaderElement(message, options);\n        loaderElement.setAttribute('data-loader-id', loaderId);\n\n        // Add loader to the correct target element\n        if (options.target && options.target instanceof HTMLElement) {\n            // If the target has position: static, change to relative for proper positioning\n            const targetPosition = window.getComputedStyle(options.target).getPropertyValue('position');\n            if (targetPosition === 'static') {\n                options.target.style.position = 'relative';\n            }\n            options.target.appendChild(loaderElement);\n        } else {\n            document.body.appendChild(loaderElement);\n        }\n\n        // Store reference to the loader\n        this.activeLoaders.set(loaderId, {\n            element: loaderElement,\n            target: options.target || document.body,\n            fullscreen: !!options.fullscreen,\n            timestamp: Date.now()\n        });\n\n        // Remove from recently removed list if it's there (unlikely but possible with ID reuse)\n        this.recentlyRemovedLoaders.delete(loaderId);\n\n        this._logOperation('show', { id: loaderId, message, type: 'regular' });\n\n        // Add showing class to trigger CSS transitions if any\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.classList.add('vdm-loader--showing');\n            }\n        }, 10);\n\n        return loaderId;\n    }\n\n    /**\n     * Show the main application loader and hide all other loaders\n     *\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Additional options for the loader\n     * @returns {string} ID of the loader\n     */\n    showMainLoader(message = 'Loading...', options = {}) {\n        Debug.log('LoaderManager: Showing main loader', { message }, 2);\n\n        // If main loader is already active, just update the message and return the existing ID\n        if (this.isMainLoaderActive && this.mainLoaderId && this.activeLoaders.has(this.mainLoaderId)) {\n            Debug.log('LoaderManager: Main loader already active, updating message', {\n                currentId: this.mainLoaderId,\n                message\n            }, 2);\n\n            this.updateLoaderMessage(this.mainLoaderId, message);\n            return this.mainLoaderId;\n        }\n\n        // Hide all other loaders when showing the main one\n        this._hideAllInlineLoaders();\n\n        // Get the main loader element if it exists in the DOM\n        const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n\n        if (mainLoaderElement) {\n            // If the element already exists in the DOM, just show it\n            mainLoaderElement.style.display = 'flex';\n            mainLoaderElement.classList.add(Selectors.LOADER.ACTIVE.name());\n\n            // If it has a message element, update it\n            const messageElement = mainLoaderElement.querySelector('.vdm-loader__message');\n            if (messageElement) {\n                messageElement.textContent = message;\n            } else if (message) {\n                // Create message element if it doesn't exist but message is provided\n                const newMessageElement = document.createElement('div');\n                newMessageElement.className = 'vdm-loader__message';\n                newMessageElement.textContent = message;\n                mainLoaderElement.appendChild(newMessageElement);\n            }\n\n            // Generate an ID for this loader instance\n            const loaderId = `main-loader-${++this.loaderIdCounter}`;\n\n            // Store reference\n            this.activeLoaders.set(loaderId, {\n                element: mainLoaderElement,\n                target: document.body,\n                isMainLoader: true,\n                timestamp: Date.now()\n            });\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            // Remove from recently removed list if it's there\n            this.recentlyRemovedLoaders.delete(loaderId);\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-existing' });\n\n            return loaderId;\n        } else {\n            // If the element doesn't exist, create it using showLoader\n            const loaderId = this.showLoader(message, {\n                fullscreen: true,\n                className: Selectors.LOADER.MAIN.name(),\n                zIndex: 9999,\n                ...options\n            });\n\n            // Mark this as the main loader\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            if (loaderInfo) {\n                loaderInfo.isMainLoader = true;\n                loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n            }\n\n            // Update tracking\n            this.isMainLoaderActive = true;\n            this.mainLoaderId = loaderId;\n\n            this._logOperation('show', { id: loaderId, message, type: 'main-new' });\n\n            return loaderId;\n        }\n    }\n\n    /**\n     * Show a loading indicator early in the page lifecycle before DiffViewer initialization\n     * This is specifically for components that need to show loaders before the main app initializes\n     *\n     * @param {string} message - Message to display with the loader\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showEarlyLoader(message = 'Loading...', options = {}) {\n        // If debug is already initialized, use it, otherwise don't log\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Showing early loader', { message }, 2);\n        }\n\n        // Create a loader that will become the main loader\n        const loaderId = this.showLoader(message, {\n            fullscreen: true,\n            className: Selectors.LOADER.MAIN.name(),\n            zIndex: 9999,\n            ...options\n        });\n\n        // Mark this as the main loader\n        const loaderInfo = this.activeLoaders.get(loaderId);\n        if (loaderInfo) {\n            loaderInfo.isMainLoader = true;\n            loaderInfo.isEarlyLoader = true; // Mark as an early loader\n            loaderInfo.element.id = Selectors.LOADER.MAIN.name();\n        }\n\n        // Update tracking\n        this.isMainLoaderActive = true;\n        this.mainLoaderId = loaderId;\n\n        this._logOperation('show', { id: loaderId, message, type: 'early-loader' });\n\n        return loaderId;\n    }\n\n    /**\n     * Convert an early loader to the main loader to ensure continuity\n     * Call this method from enableDiffViewer to take over an existing early loader\n     *\n     * @param {string} message - Optional new message to display\n     * @returns {string} ID of the main loader\n     */\n    adoptEarlyLoader(message = null) {\n        // If there's no active main loader, create one\n        if (!this.isMainLoaderActive || !this.mainLoaderId) {\n            if (Debug.isInitialized) {\n                Debug.log('LoaderManager: No early loader to adopt, creating new main loader', null, 2);\n            }\n            return this.showMainLoader(message);\n        }\n\n        // Update the message if provided\n        if (message) {\n            this.updateLoaderMessage(this.mainLoaderId, message);\n        }\n\n        if (Debug.isInitialized) {\n            Debug.log('LoaderManager: Adopted early loader as main loader', { id: this.mainLoaderId }, 2);\n        }\n\n        return this.mainLoaderId;\n    }\n\n    /**\n     * Hide the main loader\n     *\n     * @param {string} loaderId - Optional ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideMainLoader(loaderId = null) {\n        Debug.log('LoaderManager: Hiding main loader', { loaderId }, 2);\n\n        // Special handling: If this was recently removed, just return success\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Main loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // If main loader isn't active, silently succeed\n        if (!this.isMainLoaderActive) {\n            Debug.log('LoaderManager: Main loader not active, nothing to hide', null, 2);\n            return true;\n        }\n\n        // If loaderId is provided but doesn't match the main loader ID, verify it\n        if (loaderId && loaderId !== this.mainLoaderId) {\n            const loaderInfo = this.activeLoaders.get(loaderId);\n            // If it's not found or not a main loader, use the stored main loader ID\n            if (!loaderInfo?.isMainLoader) {\n                Debug.log('LoaderManager: Using stored main loader ID',\n                    { providedId: loaderId, actualMainId: this.mainLoaderId }, 2);\n                loaderId = this.mainLoaderId;\n            }\n        } else if (!loaderId) {\n            // If no ID provided, use the stored main loader ID\n            loaderId = this.mainLoaderId;\n        }\n\n        // If we couldn't determine a loader ID or it doesn't exist anymore,\n        // try to clean up by element ID\n        if (!loaderId || !this.activeLoaders.has(loaderId)) {\n            const mainLoaderElement = document.getElementById(Selectors.LOADER.MAIN.name());\n            if (mainLoaderElement) {\n                mainLoaderElement.style.display = 'none';\n                if (mainLoaderElement.parentNode) {\n                    mainLoaderElement.parentNode.removeChild(mainLoaderElement);\n                }\n                Debug.log('LoaderManager: Removed main loader by element ID', null, 2);\n            }\n\n            // Reset state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n            return true;\n        }\n\n        // Now hide the specific loader\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader so we don't try to hide it again\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            // Update state\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            this._logOperation('hide', { id: loaderId, type: 'main' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Hide all inline loaders (internal method)\n     * @private\n     */\n    _hideAllInlineLoaders() {\n        Debug.log('LoaderManager: Hiding all inline loaders', null, 3);\n\n        // Find all inline loaders\n        const inlineLoaderIds = Array.from(this.activeLoaders.entries())\n            .filter(([_id, info]) => !info.isMainLoader && !info.fullscreen)\n            .map(([id]) => id);\n\n        // Hide each one\n        inlineLoaderIds.forEach(id => {\n            this._hideSpecificLoader(id);\n\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(id);\n\n            this._logOperation('hide', { id, type: 'inline-batch' });\n        });\n\n        // Also look for any inline loaders in the DOM that might not be tracked\n        document.querySelectorAll('.vdm-loader--inline').forEach(loader => {\n            this._removeLoaderElement(loader);\n            this._logOperation('hide', { element: 'untracked-inline', type: 'dom-query' });\n        });\n    }\n\n    /**\n     * Hide a specific loader by ID\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     */\n    hideLoader(loaderId) {\n        // If no loaderId specified, hide all loaders\n        if (!loaderId) {\n            Debug.log('LoaderManager: Hiding all loaders', null, 3);\n            const loaderIds = Array.from(this.activeLoaders.keys());\n            let success = true;\n\n            loaderIds.forEach(id => {\n                if (!this._hideSpecificLoader(id)) {\n                    success = false;\n                }\n\n                // Remember we removed this loader\n                this.recentlyRemovedLoaders.add(id);\n\n                this._logOperation('hide', { id, type: 'all-batch' });\n            });\n\n            // Reset main loader tracking\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n\n            return success;\n        }\n\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed', { loaderId }, 2);\n            return true;\n        }\n\n        // Case: this is the main loader\n        if (loaderId === this.mainLoaderId) {\n            return this.hideMainLoader(loaderId);\n        }\n\n        // Hide a specific loader\n        Debug.log('LoaderManager: Hiding loader', { loaderId }, 3);\n        const success = this._hideSpecificLoader(loaderId);\n\n        if (success) {\n            // Remember we removed this loader\n            this.recentlyRemovedLoaders.add(loaderId);\n\n            this._logOperation('hide', { id: loaderId, type: 'specific' });\n        }\n\n        return success;\n    }\n\n    /**\n     * Internal method to hide a specific loader\n     *\n     * @param {string} loaderId - ID of the loader to hide\n     * @returns {boolean} Success status\n     * @private\n     */\n    _hideSpecificLoader(loaderId) {\n        // Special handling: If this was recently removed, just return success\n        if (this.recentlyRemovedLoaders.has(loaderId)) {\n            Debug.log('LoaderManager: Loader was recently removed (in _hideSpecificLoader)', { loaderId }, 3);\n            return true;\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            Debug.log('LoaderManager: No loader found to hide', { loaderId }, 2);\n            return false;\n        }\n\n        // Update main loader status if this was a main loader\n        if (loader.isMainLoader) {\n            this.isMainLoaderActive = false;\n            this.mainLoaderId = null;\n        }\n\n        // Check if the element still exists in DOM\n        if (!loader.element?.parentNode) {\n            // Element is already removed, just clean up our tracking\n            this.activeLoaders.delete(loaderId);\n            Debug.log('LoaderManager: Loader element was already removed from DOM', { loaderId }, 3);\n            return true;\n        }\n\n        // Remove the loader element with transition\n        this._removeLoaderElement(loader.element);\n        this.activeLoaders.delete(loaderId);\n\n        // Remember we removed this loader\n        this.recentlyRemovedLoaders.add(loaderId);\n\n        return true;\n    }\n\n    /**\n     * Remove a loader element with transition\n     *\n     * @param {HTMLElement} loaderElement - Loader element to remove\n     * @private\n     */\n    _removeLoaderElement(loaderElement) {\n        // First remove the showing class to trigger CSS transitions if any\n        loaderElement.classList.remove('vdm-loader--showing');\n\n        // Wait for transition to complete before removing the element\n        setTimeout(() => {\n            if (loaderElement.parentNode) {\n                loaderElement.parentNode.removeChild(loaderElement);\n            }\n        }, 300); // Match this timing with CSS transition duration\n    }\n\n    /**\n     * Show a loader in a specific container (useful for buttons, etc.)\n     *\n     * @param {HTMLElement} container - Container element to add the loader to\n     * @param {string} message - Optional message to display\n     * @param {Object} options - Options for the loader\n     * @returns {string} ID of the loader\n     */\n    showLoaderInContainer(container, message = '', options = {}) {\n        const loaderId = this.showLoader(message, {\n            target: container,\n            container: true,\n            small: true,\n            ...options\n        });\n\n        this._logOperation('show', { id: loaderId, message, type: 'container' });\n\n        return loaderId;\n    }\n\n    /**\n     * Update an existing loader's message\n     *\n     * @param {string} loaderId - ID of the loader to update\n     * @param {string} message - New message to display\n     * @returns {boolean} Success status\n     */\n    updateLoaderMessage(loaderId, message) {\n        // Don't log anything when recently removed IDs are encountered\n        // This eliminates the spam in the console for removed loaders\n        if (loaderId && this.recentlyRemovedLoaders.has(loaderId)) {\n            return true; // Silently succeed\n        }\n\n        // If this is a falsy ID and main loader is active, use the main loader\n        if (!loaderId && this.isMainLoaderActive && this.mainLoaderId) {\n            loaderId = this.mainLoaderId;\n            Debug.log('LoaderManager: Using main loader ID for message update', { mainLoaderId: loaderId }, 3);\n        }\n\n        const loader = this.activeLoaders.get(loaderId);\n\n        if (!loader) {\n            // Only log at level 2 if we're in verbose mode (reduces noise)\n            if (this.verboseLogging) {\n                Debug.log('LoaderManager: No loader found to update message', { loaderId }, 2);\n            }\n            return false;\n        }\n\n        // Check if element still exists in DOM\n        if (!loader.element?.parentNode) {\n            Debug.log('LoaderManager: Loader element was removed from DOM', { loaderId }, 3);\n            this.activeLoaders.delete(loaderId);\n            this.recentlyRemovedLoaders.add(loaderId);\n            return false;\n        }\n\n        const messageElement = loader.element.querySelector('.vdm-loader__message');\n\n        if (messageElement) {\n            messageElement.textContent = message;\n            this._logOperation('update', { id: loaderId, message, type: 'existing-element' });\n            return true;\n        } else if (message) {\n            // Create message element if it doesn't exist but a message is provided\n            const newMessageElement = document.createElement('div');\n            newMessageElement.className = 'vdm-loader__message';\n            newMessageElement.textContent = message;\n            loader.element.appendChild(newMessageElement);\n            this._logOperation('update', { id: loaderId, message, type: 'new-element' });\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a loader with the given ID exists\n     * @param {string} loaderId - Loader ID to check\n     * @returns {boolean} - Whether the loader exists\n     */\n    hasLoader(loaderId) {\n        return this.activeLoaders.has(loaderId) &&\n               !this.recentlyRemovedLoaders.has(loaderId);\n    }\n\n    /**\n     * Clean up old entries in the recentlyRemovedLoaders set to prevent memory leaks\n     * Called periodically by the system\n     */\n    _cleanupOldRemovedLoaders() {\n        // If the set gets too large, clean up old entries\n        if (this.recentlyRemovedLoaders.size > 20) {\n            // Just reset the whole set for simplicity\n            this.recentlyRemovedLoaders.clear();\n        }\n    }\n\n    /**\n     * Get debug information about a specific loader\n     * @param {string} loaderId - Loader ID to check\n     * @returns {Object|null} Loader information\n     */\n    getLoaderInfo(loaderId) {\n        if (!loaderId) return null;\n\n        const loader = this.activeLoaders.get(loaderId);\n        if (!loader) {\n            return {\n                exists: false,\n                wasRemoved: this.recentlyRemovedLoaders.has(loaderId)\n            };\n        }\n\n        return {\n            exists: true,\n            isMain: !!loader.isMainLoader,\n            fullscreen: !!loader.fullscreen,\n            message: loader.element.querySelector('.vdm-loader__message')?.textContent,\n            age: Date.now() - (loader.timestamp || 0), // milliseconds since creation\n            inDom: !!loader.element.parentNode\n        };\n    }\n\n    /**\n     * Debug method to get active loader information\n     * @returns {Object} Information about current loaders\n     */\n    getLoaderStatus() {\n        // Clean up the recently removed list to keep it tidy\n        this._cleanupOldRemovedLoaders();\n\n        return {\n            activeCount: this.activeLoaders.size,\n            recentlyRemovedCount: this.recentlyRemovedLoaders.size,\n            mainLoaderActive: this.isMainLoaderActive,\n            mainLoaderId: this.mainLoaderId,\n            operations: [...this.operationLog],\n            loaders: Array.from(this.activeLoaders.entries()).map(([id, info]) => ({\n                id,\n                isMain: !!info.isMainLoader,\n                fullscreen: !!info.fullscreen,\n                message: info.element.querySelector('.vdm-loader__message')?.textContent,\n                age: Date.now() - (info.timestamp || 0), // milliseconds since creation\n                inDom: !!info.element.parentNode\n            }))\n        };\n    }\n}\n\nexport default LoaderManager;\n","/**\n * Translation Manager\n * Provides centralized access to translations throughout the application\n */\nimport { BaseSingleton } from './BaseSingleton';\nimport { Debug } from './Debug';\n\n/**\n * Singleton class that manages translations across the application\n */\nexport class TranslationManager extends BaseSingleton {\n    /**\n     * @private\n     * Singleton instance\n     */\n    static _instance = null;\n\n    /**\n     * Get the singleton instance\n     * @returns {TranslationManager} The singleton instance\n     */\n    static getInstance() {\n        if (!TranslationManager._instance) {\n            TranslationManager._instance = new TranslationManager();\n            Debug.log('TranslationManager: Instance created', null, 2);\n        }\n        return TranslationManager._instance;\n    }\n\n    /**\n     * Constructor - private, use getInstance()\n     */\n    constructor() {\n        super();\n        this.translations = {};\n        this.lang = 'en';\n        this.initialized = false;\n\n        // IMPORTANT: Initialize immediately with window.diffConfig if available\n        this._initializeFromGlobalConfig();\n    }\n\n    /**\n     * Try to initialize from global config immediately\n     * @private\n     */\n    _initializeFromGlobalConfig() {\n        if (window.diffConfig && window.diffConfig.translations) {\n            Debug.log('TranslationManager: Auto-initializing from window.diffConfig', window.diffConfig.translations, 2);\n            this.initialize(\n                window.diffConfig.lang || 'en',\n                window.diffConfig.translations\n            );\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Initialize with language and translations\n     * @param {string} lang - The language code\n     * @param {Object} translations - Translation key-value pairs\n     */\n    initialize(lang = 'en', translations = {}) {\n        this.lang = lang;\n        this.translations = translations;\n        this.initialized = true;\n        Debug.log(`TranslationManager: Initialized with \"${lang}\" language`, this.translations, 2);\n    }\n\n    /**\n     * Get a translation by key\n     * @param {string} key - The translation key\n     * @param {string} defaultValue - Default value if key not found (defaults to key itself)\n     * @returns {string} The translated text or default value\n     */\n    get(key, defaultValue = null) {\n        // If not initialized and window.diffConfig exists, try to initialize from there\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n\n        // Check if we have translations for the current language\n        if (this.translations[this.lang] && this.translations[this.lang][key]) {\n            return this.translations[this.lang][key];\n        }\n\n        // Fallback to English if the key exists there\n        if (this.translations['en'] && this.translations['en'][key]) {\n            Debug.log(`TranslationManager: Key \"${key}\" not found in \"${this.lang}\", using English fallback`, null, 2);\n            return this.translations['en'][key];\n        }\n\n        // Use provided default or key itself\n        return defaultValue !== null ? defaultValue : key;\n    }\n\n    /**\n     * Check if initialization has been completed\n     * @returns {boolean} True if initialized\n     */\n    isInitialized() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.initialized;\n    }\n\n    /**\n     * Get the current language\n     * @returns {string} The current language code\n     */\n    getLanguage() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return this.lang;\n    }\n\n    /**\n     * Get all translations\n     * @returns {Object} All translations\n     */\n    getAllTranslations() {\n        // Try to initialize if not already done\n        if (!this.initialized) {\n            this._initializeFromGlobalConfig();\n        }\n        return {...this.translations};\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * File Browser entry point\n * Exports the FileBrowserManager for use in the file browser example\n */\n\nimport { FileBrowserManager } from './components/browser/FileBrowserManager';\n\n// Export the FileBrowserManager class for direct use\nexport { FileBrowserManager };\n\n// Also expose to window object for backwards compatibility\nif (typeof window !== 'undefined') {\n    window.FileBrowserManager = FileBrowserManager;\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","this","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","key","toPrimitive","String","Number","_toPrimitive","FileBrowserManager","options","undefined","_classCallCheck","oldFileSelect","document","getElementById","newFileSelect","DiffConfigManager","getInstance","initialize","container","loaderManager","LoaderManager","translationManager","TranslationManager","init","_this","Debug","log","addEventListener","syncFileSelections","warn","form","event","handleComparison","_handleComparison","_callee","containerWrapper","loaderId","fileData","contents","result","viewerElement","_context","preventDefault","AlertManager","hideAlert","Selectors","CONTAINER","WRAPPER","replace","clearUI","classList","contains","remove","showEarlyLoader","get","cleanupPreviousInstance","getSelectedFilesData","updateLoaderMessage","fetchFileContents","old","hideMainLoader","handleIdenticalContent","configureDiffData","processDiff","identical","setDiffConfig","initializeUIManager","initializeDiffViewer","t0","error","handleError","_x","window","diffViewer","destroy","vdmBrowserUIManager","_initializeUIManager","_callee2","_context2","BrowserUIManager","diffConfig","_initializeDiffViewer","_callee3","_window$diffConfig$ne","_window$diffConfig$ne2","configManager","viewerContainer","_context3","DiffViewer","set","DIFF","VIEWER","fileRefId","ref_id","newFileName","filename","oldFileRefId","oldFileName","serverSaveEnabled","demoEnabled","diffData","Array","isArray","chunks","hasDiffData","diffDataKeys","innerHTML","concat","UTILITY","ALERT_WARNING","enableDiffViewer","path","refId","selectedIndex","getAttribute","new","_fetchFileContents","_callee5","fetchFile","oldContent","newContent","_context5","_ref","_callee4","filePath","apiUrl","response","data","_response","_context4","encodeURIComponent","fetch","ok","status","json","content","match","text","_x3","_x4","_x2","split","update","filepath","_processDiff","_callee6","diffProcessorEndpoint","_window$diffConfig","_window$diffConfig2","lang","_context6","vdmEndpointDiscovery","getEndpoint","apiEndpoints","diffProcessor","headers","body","JSON","stringify","statusText","config","translations","_result$key","_result$config","translationCount","_result$old","_result$new","lines","success","_result$config2","debug","theme","apiEndpoint","demo","simulated","alertManager","title","message","demoMessage","showWarning","timeout","translate","loadingElement","style","display","errorMessage","alertElement","showError","className","appendChild","userContentElements","querySelectorAll","savedUserContent","element","cloneNode","resultContainer","add","matchFound","fileExt","endsWith","alertContainer","querySelector","createElement","userContent","after","prepend","showInfo","diffContainer","fileBrowserManager","selectorHandler","target","prop","startsWith","substring","processSelectors","obj","Proxy","baseSelectors","CODE","LINE_CONTENT","LINE_EMPTY","LINE_NUMBER","TABLE","ROOT","COPY","BUTTON","COPIED","ICON","MODAL","ACTIONS","DIALOG","INSTRUCTIONS","TEXTAREA","TEXTAREA_ELEM","PROCESSING","TEXT","CHECK_ALL_BTN","CHUNK","CHUNK_SELECTED","CHUNK_UNSELECTED","CONTENT_WRAPPER","LINE_ADD","LINE_CONTENT_EMPTY","LINE_DELETE","LINE_PLACEHOLDER","LINE_REPLACE_LEFT","LINE_REPLACE_RIGHT","PANE","PANE_CONTENT","PANE_HEADER","PANE_LEFT","PANE_RIGHT","PANES_CONTAINER","PLACEHOLDER","TABLE_WRAPPER","ICONS","COLUMN","MARKER","MARKER_PLACEHOLDER","SELECT","SELECT_LEFT","SELECT_RIGHT","LOADER","ACTIVE","FULLSCREEN","INDICATOR","INLINE","MAIN","SPINNER","MERGE","BUTTON_APPLY","BUTTON_PREVIEW","CONFLICT_MODAL","CONTROLS_ACTIONS","DESTINATION_DROPDOWN","DESTINATION_TOGGLE","GET_MERGED_RESULT_BTN","PREVIEW_CONTENT","PREVIEW_MODAL","TOGGLE_ICON","TOGGLE_TEXT","BACKDROP","CLOSE","CLOSE_BTN","CODE_COPY","CONFIRM","CONFIRMATION_CONTENT","CONTENT","CONTINUE_BTN","COPY_CONTENT","FIXED_FOOTER","FOOTER","HEADER","HEADER_FIXED","MERGE_BTN","MESSAGE","PREVIEW","PREVIEW_CONTENT_ID","PREVIEW_FILENAME","TITLE","NAVIGATION","COUNTER","COUNTER_ELEMENT","HIGHLIGHT","NAV_CHUNK","NEXT_BUTTON","PREV_BUTTON","STATUS","LOADED","RESOLVED","SCROLLED","UNRESOLVED","THEME","DARK","LIGHT","LOADING_INDICATOR","MODE_PREFIX","SELECTOR","SWITCHER","TOGGLE","THEME_SWITCHER","CONTROL","LABEL","SLIDER","SLIDER_ROUND","THEME_SELECTOR","TOOLTIP","ARROW","defaultUtilitySelectors","BUTTON_PRIMARY","BUTTON_SECONDARY","BUTTON_INFO","BUTTON_SUCCESS","BUTTON_WARNING","BUTTON_DANGER","BUTTON_FLAT","BUTTON_SMALL","BUTTON_EXTRA_SMALL","BUTTON_LARGE","ALERT","ALERT_PREFIX","ALERT_INFO","ALERT_SUCCESS","ALERT_DANGER","FORM_SELECT","FORM_SELECT_SM","FLEX","FLEX_COLUMN","JUSTIFY_CONTENT_BETWEEN","JUSTIFY_CONTENT_CENTER","ALIGN_ITEMS_CENTER","ALIGN_ITEMS_STRETCH","PADDING_2","PADDING_3","MARGIN_2","MARGIN_TOP_2","MARGIN_BOTTOM_2","MARGIN_START_1","MARGIN_START_2","MARGIN_END_2","MARGIN_END_3","MARGIN_X_1","MARGIN_Y_2","MARGIN_END_1","ui","button","buttonPrimary","buttonSecondary","buttonInfo","buttonSuccess","buttonWarning","buttonDanger","buttonFlat","alert","alertInfo","alertSuccess","alertWarning","alertDanger","getUtilitySelectors","instance","_BaseSingleton","_callSuper","_inherits","initialized","containerId","activeAlert","timeoutId","_ensureContainer","id","position","top","left","transform","zIndex","width","maxWidth","mergedOptions","dismissable","targetElement","placement","useContainer","hasTargetElement","baseAlertClass","toString","alertClass","typeClass","selectorBase","selectorType","finalMessage","closeButton","setAttribute","parentNode","insertBefore","nextSibling","setTimeout","_this$activeAlert","clearTimeout","removeChild","showAlert","BaseSingleton","instanceVar","DebugUtility","enabled","logHistory","maxLogHistory","prefix","logLevel","console","level","shouldLog","_addToHistory","maxLevel","_toConsumableArray","entry","args","timestamp","Date","shift","_diffConfig","WeakMap","_DiffConfigManager_brand","WeakSet","_classPrivateFieldInitSpec","_classPrivateFieldSet","_assertClassBrand","_updateGlobalDiffConfig","_classPrivateFieldGet","overrides","partialConfig","_mergeDeep","defaultValue","_instance","_","source","output","_isObject","item","activeLoaders","Map","loaderIdCounter","isMainLoaderActive","mainLoaderId","recentlyRemovedLoaders","Set","operationLog","maxLogEntries","verboseLogging","isInitialized","operation","details","toISOString","translationKey","translatedMessage","loader","fullscreen","inline","small","spinner","messageElement","textContent","loaderElement","_createLoaderElement","HTMLElement","getComputedStyle","getPropertyValue","now","_logOperation","has","currentId","_hideAllInlineLoaders","mainLoaderElement","newMessageElement","isMainLoader","showLoader","loaderInfo","isEarlyLoader","showMainLoader","providedId","actualMainId","_hideSpecificLoader","from","entries","_ref2","_slicedToArray","info","map","_ref3","_removeLoaderElement","_this2","loaderIds","_loader$element","_loader$element2","size","clear","_loader$element$query","exists","isMain","age","inDom","wasRemoved","_cleanupOldRemovedLoaders","activeCount","recentlyRemovedCount","mainLoaderActive","operations","loaders","_ref5","_info$element$querySe","_ref6","_initializeFromGlobalConfig","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition"],"sourceRoot":""}